<?xml version="1.0" encoding="utf-8"?>
<doc>
  <member name="D2D1_COMPOSITE_PROP">
    <summary>
      <para>Identifiers for properties of the Composite effect.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1effects/ne-d2d1effects-d2d1_composite_prop" /></para>
    </summary>
  </member>
  <member name="D2D1_COMPOSITE_PROP::D2D1_COMPOSITE_PROP_MODE">
    <summary>The mode used for the effect.
            

Type is D2D1_COMPOSITE_MODE.

Default value is D2D1_COMPOSITE_MODE_SOURCE_OVER</summary>
  </member>
  <member name="D2D1_ALPHA_MODE">
    <summary>
      <para>Specifies how the alpha value of a bitmap or render target should be treated.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//dcommon/ne-dcommon-d2d1_alpha_mode" /></para>
    </summary>
  </member>
  <member name="D2D1_ALPHA_MODE::D2D1_ALPHA_MODE_UNKNOWN">
    <summary>The alpha value might not be meaningful.</summary>
  </member>
  <member name="D2D1_ALPHA_MODE::D2D1_ALPHA_MODE_PREMULTIPLIED">
    <summary>The alpha value has been premultiplied. Each color is first scaled by the alpha value. The alpha value itself is the same in both straight and premultiplied alpha. Typically, no color channel value is greater than the alpha channel value.  If a color channel value in a premultiplied format is greater than the alpha channel, the standard source-over blending math results in an additive blend.</summary>
  </member>
  <member name="D2D1_ALPHA_MODE::D2D1_ALPHA_MODE_STRAIGHT">
    <summary>The alpha value has not been premultiplied. The alpha channel indicates the transparency of the color.</summary>
  </member>
  <member name="D2D1_ALPHA_MODE::D2D1_ALPHA_MODE_IGNORE">
    <summary>The alpha value is ignored.</summary>
  </member>
  <member name="ID2D1Device2::FlushDeviceContexts">
    <summary>
      <para>Flush all device contexts that reference a given bitmap.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1_3/nf-d2d1_3-id2d1device2-flushdevicecontexts" /></para>
      <param name="bitmap">The bitmap, created on this device, for which all referencing device contexts will be flushed.</param>
    </summary>
  </member>
  <member name="ID2D1CommandSink5::BlendImage">
    <summary>
      <para>Draws an image to the device context using the specified blend mode. Results are equivalent to using Direct2D's built-in Blend effect.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1_3/nf-d2d1_3-id2d1commandsink5-blendimage" /></para>
      <param name="image">The image to be drawn to the device context.</param>
      <param name="blendMode">The blend mode to be used. See <a href="https://docs.microsoft.com/windows/desktop/Direct2D/blend">Blend modes</a> for more info.</param>
      <param name="targetOffset">The offset in the destination space that the image will be rendered to. 
            The entire logical extent of the image will be rendered to the corresponding destination. 
            If not specified, the destination origin will be (0, 0). The top-left corner of the image will be mapped to the target offset. 
            This will not necessarily be the origin. The default value is NULL.</param>
      <param name="imageRectangle">The corresponding rectangle in the image space will be mapped to the given origins when processing the image. The default value is NULL.</param>
      <param name="interpolationMode">The interpolation mode that will be used to scale the image if necessary. The default value is D2D1_INTERPOLATION_MODE_LINEAR.</param>
    </summary>
  </member>
  <member name="ID2D1Device4::CreateDeviceContext">
    <summary>
      <para>Creates a new ID2D1DeviceContext4 from this Direct2D device.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1_3/nf-d2d1_3-id2d1device4-createdevicecontext" /></para>
      <param name="options">The options to be applied to the created device context.</param>
      <param name="deviceContext4">When this method returns, contains a pointer to the new device context.</param>
    </summary>
  </member>
  <member name="ID2D1SvgPathData::UpdateCommands">
    <summary>
      <para>Updates the commands array. Existing commands not updated by this method are preserved. The array is resized larger if necessary to accomodate the new commands.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1svg/nf-d2d1svg-id2d1svgpathdata-updatecommands" /></para>
      <param name="commands">The commands array.</param>
      <param name="commandsCount">The number of commands to update.</param>
      <param name="startIndex">The index at which to begin updating commands. Must be less than or equal to the size of the commands array.</param>
    </summary>
  </member>
  <member name="D2D1_STROKE_TRANSFORM_TYPE">
    <summary>
      <para>Defines how the world transform, dots per inch (dpi), and stroke width affect the shape of the pen used to stroke a primitive.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1_1/ne-d2d1_1-d2d1_stroke_transform_type" /></para>
    </summary>
  </member>
  <member name="D2D1_STROKE_TRANSFORM_TYPE::D2D1_STROKE_TRANSFORM_TYPE_NORMAL">
    <summary>The stroke respects the currently set world transform, the dpi, and the stroke width.</summary>
  </member>
  <member name="D2D1_STROKE_TRANSFORM_TYPE::D2D1_STROKE_TRANSFORM_TYPE_FIXED">
    <summary>The stroke does not respect the world transform but it does respect the dpi and stroke width.</summary>
  </member>
  <member name="D2D1_STROKE_TRANSFORM_TYPE::D2D1_STROKE_TRANSFORM_TYPE_HAIRLINE">
    <summary>The stroke is forced to 1 pixel wide (in device space) and does not respect the world transform, the dpi, or the stroke width.</summary>
  </member>
  <member name="D2D1_EXPOSURE_PROP">
    <summary>
      <para>Identifiers for properties of the Exposure effect.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1effects_2/ne-d2d1effects_2-d2d1_exposure_prop" /></para>
    </summary>
  </member>
  <member name="D2D1_EXPOSURE_PROP::D2D1_EXPOSURE_PROP_EXPOSURE_VALUE">
    <summary>The D2D1_EXPOSURE_PROP_EXPOSURE_VALUE property is a float value that specifies how much to increase or decrease the exposure of the image. The allowed range is -2.0 to 2.0. The default value is 0.0 (no change).</summary>
  </member>
  <member name="ID2D1SourceTransform::SetRenderInfo">
    <summary>
      <para>Sets the render information for the transform.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1effectauthor/nf-d2d1effectauthor-id2d1sourcetransform-setrenderinfo" /></para>
      <param name="renderInfo">The interface supplied to the transform to allow specifying the CPU based transform pass.</param>
    </summary>
  </member>
  <member name="ID2D1ComputeTransform">
    <summary>
      <para>Defines a transform that uses a compute shader.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1effectauthor/nn-d2d1effectauthor-id2d1computetransform" /></para>
    </summary>
  </member>
  <member name="ID2D1SvgElement::GetParent">
    <summary>
      <para>Gets the parent element.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1svg/nf-d2d1svg-id2d1svgelement-getparent" /></para>
      <param name="parent">Outputs the parent element.</param>
    </summary>
  </member>
  <member name="D2D1_SVG_ASPECT_SCALING">
    <summary>
      <para>The meetOrSlice portion of the SVG preserveAspectRatio attribute.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1svg/ne-d2d1svg-d2d1_svg_aspect_scaling" /></para>
    </summary>
  </member>
  <member name="D2D1_SVG_ASPECT_SCALING::D2D1_SVG_ASPECT_SCALING_MEET">
    <summary>Scale the viewBox up as much as possible such that the entire viewBox is visible within the viewport.</summary>
  </member>
  <member name="D2D1_SVG_ASPECT_SCALING::D2D1_SVG_ASPECT_SCALING_SLICE">
    <summary>Scale the viewBox down as much as possible such that the entire viewport is
          covered by the viewBox.</summary>
  </member>
  <member name="D2D1_VERTEX_USAGE">
    <summary>
      <para>Indicates whether the vertex buffer changes infrequently or frequently.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1effectauthor/ne-d2d1effectauthor-d2d1_vertex_usage" /></para>
    </summary>
  </member>
  <member name="D2D1_VERTEX_USAGE::D2D1_VERTEX_USAGE_STATIC">
    <summary>The created vertex buffer is updated infrequently.</summary>
  </member>
  <member name="D2D1_VERTEX_USAGE::D2D1_VERTEX_USAGE_DYNAMIC">
    <summary>The created vertex buffer is changed frequently.</summary>
  </member>
  <member name="D2D1_INPUT_ELEMENT_DESC">
    <summary>
      <para>A description of a single element to the vertex layout.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1effectauthor/ns-d2d1effectauthor-d2d1_input_element_desc" /></para>
    </summary>
  </member>
  <member name="D2D1_INPUT_ELEMENT_DESC::semanticName">
    <summary>The <a href="https://docs.microsoft.com/windows/desktop/direct3dhlsl/dx-graphics-hlsl-semantics">HLSL semantic</a> associated with this element in a <a href="https://docs.microsoft.com/windows/desktop/direct3dhlsl/dx-graphics-hlsl-signatures">shader input-signature</a>.</summary>
  </member>
  <member name="D2D1_INPUT_ELEMENT_DESC::semanticIndex">
    <summary>The semantic index for the element. A semantic index modifies a semantic, with an integer index number. A semantic index is only needed in a case where there is more than one element with the same semantic. For example, a 4x4 matrix would have four components each with the semantic name matrix; however, each of the four components would have different semantic indices (0, 1, 2, and 3).</summary>
  </member>
  <member name="D2D1_INPUT_ELEMENT_DESC::format">
    <summary>The data type of the element data.</summary>
  </member>
  <member name="D2D1_INPUT_ELEMENT_DESC::inputSlot">
    <summary>An integer value that identifies the input-assembler. Valid values are between 0 and 15.</summary>
  </member>
  <member name="D2D1_INPUT_ELEMENT_DESC::alignedByteOffset">
    <summary>The offset in bytes between each element.</summary>
  </member>
  <member name="ID2D1DeviceContext4::CreateSvgGlyphStyle">
    <summary>
      <para>Creates an SVG glyph style object.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1_3/nf-d2d1_3-id2d1devicecontext4-createsvgglyphstyle" /></para>
      <param name="svgGlyphStyle">On completion points to the created <a href="https://docs.microsoft.com/windows/desktop/api/d2d1_3/nn-d2d1_3-id2d1svgglyphstyle">ID2D1SvgGlyphStyle</a> object.</param>
    </summary>
  </member>
  <member name="ID2D1CommandSink::FillOpacityMask">
    <summary>
      <para>Fills an opacity mask on the command sink.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1_1/nf-d2d1_1-id2d1commandsink-fillopacitymask" /></para>
      <param name="opacityMask">The bitmap whose alpha channel will be sampled to define the opacity mask.</param>
      <param name="brush">The brush with which to fill the mask.</param>
      <param name="destinationRectangle">The destination rectangle in which to fill the mask. If not specified, this is the origin.</param>
      <param name="sourceRectangle">The source rectangle within the opacity mask. If not specified, this is the entire mask.</param>
    </summary>
  </member>
  <member name="ID2D1SvgElement::GetTextValueLength">
    <summary>
      <para>Gets the length of the text content value.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1svg/nf-d2d1svg-id2d1svgelement-gettextvaluelength" /></para>
    </summary>
  </member>
  <member name="ID2D1TransformGraph::AddNode">
    <summary>
      <para>Adds the provided node to the transform graph.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1effectauthor/nf-d2d1effectauthor-id2d1transformgraph-addnode" /></para>
      <param name="node">The node that will be added to the transform graph.</param>
    </summary>
  </member>
  <member name="ID2D1GradientStopCollection::GetColorInterpolationGamma">
    <summary>
      <para>Indicates the gamma space in which the gradient stops are interpolated.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1/nf-d2d1-id2d1gradientstopcollection-getcolorinterpolationgamma" /></para>
    </summary>
  </member>
  <member name="D2D1_BUFFER_PRECISION">
    <summary>
      <para>Represents the bit depth of the imaging pipeline in Direct2D.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1_1/ne-d2d1_1-d2d1_buffer_precision" /></para>
    </summary>
  </member>
  <member name="D2D1_BUFFER_PRECISION::D2D1_BUFFER_PRECISION_UNKNOWN">
    <summary>The buffer precision is not specified.</summary>
  </member>
  <member name="D2D1_BUFFER_PRECISION::D2D1_BUFFER_PRECISION_8BPC_UNORM">
    <summary>Use 8-bit normalized integer per channel.</summary>
  </member>
  <member name="D2D1_BUFFER_PRECISION::D2D1_BUFFER_PRECISION_8BPC_UNORM_SRGB">
    <summary>Use 8-bit normalized integer standard RGB data per channel.</summary>
  </member>
  <member name="D2D1_BUFFER_PRECISION::D2D1_BUFFER_PRECISION_16BPC_UNORM">
    <summary>Use 16-bit normalized integer per channel.</summary>
  </member>
  <member name="D2D1_BUFFER_PRECISION::D2D1_BUFFER_PRECISION_16BPC_FLOAT">
    <summary>Use 16-bit floats per channel.</summary>
  </member>
  <member name="D2D1_BUFFER_PRECISION::D2D1_BUFFER_PRECISION_32BPC_FLOAT">
    <summary>Use 32-bit floats per channel.</summary>
  </member>
  <member name="D2D1_BUFFER_PRECISION::D2D1_BUFFER_PRECISION_FORCE_DWORD">
    <summary>Forces this enumeration to compile to 32 bits in size. Without this value, some compilers would allow this enumeration to compile to a size other than 32 bits.

Do not use this value.</summary>
  </member>
  <member name="ID2D1SvgPathData::GetCommands">
    <summary>
      <para>Gets commands from the commands array.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1svg/nf-d2d1svg-id2d1svgpathdata-getcommands" /></para>
      <param name="commands">Buffer to contain the commands.</param>
      <param name="commandsCount">The element count of the buffer.</param>
      <param name="startIndex">The index of the first commands to retrieve.</param>
    </summary>
  </member>
  <member name="D2D1_RENDERING_PRIORITY">
    <summary>
      <para>The rendering priority affects the extent to which Direct2D will throttle its rendering workload.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1_2/ne-d2d1_2-d2d1_rendering_priority" /></para>
    </summary>
  </member>
  <member name="D2D1_RENDERING_PRIORITY::D2D1_RENDERING_PRIORITY_NORMAL">
    <summary>No change in rendering workload priority.</summary>
  </member>
  <member name="D2D1_RENDERING_PRIORITY::D2D1_RENDERING_PRIORITY_LOW">
    <summary>The device and its associated device contexts are given a lower priority than others.</summary>
  </member>
  <member name="ID2D1VertexBuffer">
    <summary>
      <para>Defines a mappable single-dimensional vertex buffer.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1effectauthor/nn-d2d1effectauthor-id2d1vertexbuffer" /></para>
    </summary>
  </member>
  <member name="D2D1_INK_NIB_SHAPE">
    <summary>
      <para>Specifies the appearance of the ink nib (pen tip) as part of an D2D1_INK_STYLE_PROPERTIES structure.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1_3/ne-d2d1_3-d2d1_ink_nib_shape" /></para>
    </summary>
  </member>
  <member name="D2D1_INK_NIB_SHAPE::D2D1_INK_NIB_SHAPE_ROUND">
    <summary>The pen tip is circular.</summary>
  </member>
  <member name="D2D1_INK_NIB_SHAPE::D2D1_INK_NIB_SHAPE_SQUARE">
    <summary>The pen tip is square.</summary>
  </member>
  <member name="D2D1_UNIT_MODE">
    <summary>
      <para>Specifies how units in Direct2D will be interpreted.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1_1/ne-d2d1_1-d2d1_unit_mode" /></para>
    </summary>
  </member>
  <member name="D2D1_UNIT_MODE::D2D1_UNIT_MODE_DIPS">
    <summary>Units will be interpreted as device-independent pixels (1/96").</summary>
  </member>
  <member name="D2D1_UNIT_MODE::D2D1_UNIT_MODE_PIXELS">
    <summary>Units will be interpreted as pixels.</summary>
  </member>
  <member name="ID2D1BorderTransform">
    <summary>
      <para>Extends the input rectangle to infinity using the specified extend modes.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1effectauthor/nn-d2d1effectauthor-id2d1bordertransform" /></para>
    </summary>
  </member>
  <member name="D2D1_PIXEL_OPTIONS">
    <summary>
      <para>Indicates how pixel shader sampling will be restricted.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1effectauthor/ne-d2d1effectauthor-d2d1_pixel_options" /></para>
    </summary>
  </member>
  <member name="D2D1_PIXEL_OPTIONS::D2D1_PIXEL_OPTIONS_NONE">
    <summary>The pixel shader is not restricted in its sampling.</summary>
  </member>
  <member name="D2D1_PIXEL_OPTIONS::D2D1_PIXEL_OPTIONS_TRIVIAL_SAMPLING">
    <summary>The pixel shader samples inputs only at the same scene coordinate as the output pixel and returns transparent black whenever the input pixels are also transparent black.</summary>
  </member>
  <member name="D2D1_PROPERTY_TYPE">
    <summary>
      <para>Specifies the types of properties supported by the Direct2D property interface.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1_1/ne-d2d1_1-d2d1_property_type" /></para>
    </summary>
  </member>
  <member name="D2D1_PROPERTY_TYPE::D2D1_PROPERTY_TYPE_UNKNOWN">
    <summary>An unknown property.</summary>
  </member>
  <member name="D2D1_PROPERTY_TYPE::D2D1_PROPERTY_TYPE_STRING">
    <summary>An arbitrary-length string.</summary>
  </member>
  <member name="D2D1_PROPERTY_TYPE::D2D1_PROPERTY_TYPE_BOOL">
    <summary>A 32-bit integer value constrained to be either 0 or 1.</summary>
  </member>
  <member name="D2D1_PROPERTY_TYPE::D2D1_PROPERTY_TYPE_UINT32">
    <summary>An unsigned 32-bit integer.</summary>
  </member>
  <member name="D2D1_PROPERTY_TYPE::D2D1_PROPERTY_TYPE_INT32">
    <summary>A signed 32-bit integer.</summary>
  </member>
  <member name="D2D1_PROPERTY_TYPE::D2D1_PROPERTY_TYPE_FLOAT">
    <summary>A 32-bit float.</summary>
  </member>
  <member name="D2D1_PROPERTY_TYPE::D2D1_PROPERTY_TYPE_VECTOR2">
    <summary>Two 32-bit float values.</summary>
  </member>
  <member name="D2D1_PROPERTY_TYPE::D2D1_PROPERTY_TYPE_VECTOR3">
    <summary>Three 32-bit float values.</summary>
  </member>
  <member name="D2D1_PROPERTY_TYPE::D2D1_PROPERTY_TYPE_VECTOR4">
    <summary>Four 32-bit float values.</summary>
  </member>
  <member name="D2D1_PROPERTY_TYPE::D2D1_PROPERTY_TYPE_BLOB">
    <summary>An arbitrary number of bytes.</summary>
  </member>
  <member name="D2D1_PROPERTY_TYPE::D2D1_PROPERTY_TYPE_IUNKNOWN">
    <summary>A returned COM or nano-COM interface.</summary>
  </member>
  <member name="D2D1_PROPERTY_TYPE::D2D1_PROPERTY_TYPE_ENUM">
    <summary>An enumeration. The value should be treated as a <b>UINT32</b> with a defined array of fields to specify the bindings to human-readable strings.</summary>
  </member>
  <member name="D2D1_PROPERTY_TYPE::D2D1_PROPERTY_TYPE_ARRAY">
    <summary>An enumeration. The value is the count of sub-properties in the array. The set of array elements will be contained in the sub-property.</summary>
  </member>
  <member name="D2D1_PROPERTY_TYPE::D2D1_PROPERTY_TYPE_CLSID">
    <summary>A CLSID.</summary>
  </member>
  <member name="D2D1_PROPERTY_TYPE::D2D1_PROPERTY_TYPE_MATRIX_3X2">
    <summary>A 3x2 matrix of  float values.</summary>
  </member>
  <member name="D2D1_PROPERTY_TYPE::D2D1_PROPERTY_TYPE_MATRIX_4X3">
    <summary>A 4x2 matrix of  float values.</summary>
  </member>
  <member name="D2D1_PROPERTY_TYPE::D2D1_PROPERTY_TYPE_MATRIX_4X4">
    <summary>A 4x4 matrix of  float values.</summary>
  </member>
  <member name="D2D1_PROPERTY_TYPE::D2D1_PROPERTY_TYPE_MATRIX_5X4">
    <summary>A 5x4 matrix of  float values.</summary>
  </member>
  <member name="D2D1_PROPERTY_TYPE::D2D1_PROPERTY_TYPE_COLOR_CONTEXT">
    <summary>A nano-COM color context interface pointer.</summary>
  </member>
  <member name="ID2D1RenderTarget::DrawTextLayout">
    <summary>
      <para>Draws the formatted text described by the specified IDWriteTextLayout object.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1/nf-d2d1-id2d1rendertarget-drawtextlayout" /></para>
      <param name="origin">The point, described in device-independent pixels, at which the upper-left corner of the text described by <i>textLayout</i> is drawn.</param>
      <param name="textLayout">The formatted text to draw. Any drawing effects that do not inherit from <a href="https://docs.microsoft.com/windows/win32/api/d2d1/nn-d2d1-id2d1resource">ID2D1Resource</a> are ignored. If there are drawing effects that inherit from <b>ID2D1Resource</b> that are not brushes, this method fails and the render target is put in an error state.</param>
      <param name="defaultFillBrush">The brush used to paint any text in <i>textLayout</i> that does not already have a brush associated with it as a drawing effect (specified by the <a href="https://docs.microsoft.com/windows/win32/api/dwrite/nf-dwrite-idwritetextlayout-setdrawingeffect">IDWriteTextLayout::SetDrawingEffect</a> method).</param>
      <param name="options">A value that indicates whether the text should be snapped to pixel boundaries and whether the text should be clipped to the layout rectangle. The default value is <a href="https://docs.microsoft.com/windows/win32/api/d2d1/ne-d2d1-d2d1_draw_text_options">D2D1_DRAW_TEXT_OPTIONS_NONE</a>, which indicates that text should be snapped to pixel boundaries and it should not be clipped to the layout rectangle.</param>
    </summary>
  </member>
  <member name="ID2D1SvgElement::RemoveAttribute">
    <summary>
      <para>Removes the attribute from this element.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1svg/nf-d2d1svg-id2d1svgelement-removeattribute" /></para>
      <param name="name">The name of the attribute to remove.</param>
    </summary>
  </member>
  <member name="D2D1_ORIENTATION">
    <summary>
      <para>Specifies the flip and rotation at which an image appears.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1_3/ne-d2d1_3-d2d1_orientation" /></para>
    </summary>
  </member>
  <member name="D2D1_ORIENTATION::D2D1_ORIENTATION_DEFAULT">
    <summary>The orientation is unchanged.</summary>
  </member>
  <member name="D2D1_ORIENTATION::D2D1_ORIENTATION_FLIP_HORIZONTAL">
    <summary>The image is flipped horizontally.</summary>
  </member>
  <member name="D2D1_ORIENTATION::D2D1_ORIENTATION_ROTATE_CLOCKWISE180">
    <summary>The image is rotated clockwise 180 degrees.</summary>
  </member>
  <member name="D2D1_ORIENTATION::D2D1_ORIENTATION_ROTATE_CLOCKWISE180_FLIP_HORIZONTAL">
    <summary>The image is rotated clockwise 180 degrees, then flipped horizontally.</summary>
  </member>
  <member name="D2D1_ORIENTATION::D2D1_ORIENTATION_ROTATE_CLOCKWISE90_FLIP_HORIZONTAL">
    <summary>The image is rotated clockwise 90 degrees, then flipped horizontally.</summary>
  </member>
  <member name="D2D1_ORIENTATION::D2D1_ORIENTATION_ROTATE_CLOCKWISE270">
    <summary>The image is rotated clockwise 270 degrees.</summary>
  </member>
  <member name="D2D1_ORIENTATION::D2D1_ORIENTATION_ROTATE_CLOCKWISE270_FLIP_HORIZONTAL">
    <summary>The image is rotated clockwise 270 degrees, then flipped horizontally.</summary>
  </member>
  <member name="D2D1_ORIENTATION::D2D1_ORIENTATION_ROTATE_CLOCKWISE90">
    <summary>The image is rotated clockwise 90 degrees.</summary>
  </member>
  <member name="ID2D1RenderInfo">
    <summary>
      <para>Describes the render information common to all of the various transform implementations.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1effectauthor/nn-d2d1effectauthor-id2d1renderinfo" /></para>
    </summary>
  </member>
  <member name="ID2D1BitmapRenderTarget">
    <summary>
      <para>Renders to an intermediate texture created by the CreateCompatibleRenderTarget method.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1/nn-d2d1-id2d1bitmaprendertarget" /></para>
    </summary>
  </member>
  <member name="D2D1_COLORMANAGEMENT_PROP">
    <summary>
      <para>Identifiers for the properties of the Color management effect.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1effects/ne-d2d1effects-d2d1_colormanagement_prop" /></para>
    </summary>
  </member>
  <member name="D2D1_COLORMANAGEMENT_PROP::D2D1_COLORMANAGEMENT_PROP_SOURCE_COLOR_CONTEXT">
    <summary>The source color space information. 
          

The type is <a href="https://docs.microsoft.com/windows/desktop/api/d2d1_1/nn-d2d1_1-id2d1colorcontext">ID2D1ColorContext</a>.

The default value is NULL.</summary>
  </member>
  <member name="D2D1_COLORMANAGEMENT_PROP::D2D1_COLORMANAGEMENT_PROP_SOURCE_RENDERING_INTENT">
    <summary>Which ICC rendering intent to use. 
          

The type is <a href="https://docs.microsoft.com/windows/desktop/api/d2d1effects/ne-d2d1effects-d2d1_colormanagement_rendering_intent">D2D1_COLORMANAGEMENT_RENDERING_INTENT</a>.

The default value is D2D1_COLORMANAGEMENT_RENDERING_INTENT_PERCEPTUAL.</summary>
  </member>
  <member name="D2D1_COLORMANAGEMENT_PROP::D2D1_COLORMANAGEMENT_PROP_DESTINATION_COLOR_CONTEXT">
    <summary>The destination color space information. 
          

The type is <a href="https://docs.microsoft.com/windows/desktop/api/d2d1_1/nn-d2d1_1-id2d1colorcontext">ID2D1ColorContext</a>.

The default value is NULL.</summary>
  </member>
  <member name="D2D1_COLORMANAGEMENT_PROP::D2D1_COLORMANAGEMENT_PROP_DESTINATION_RENDERING_INTENT">
    <summary>Which ICC rendering intent to use. 
          

The type is <a href="https://docs.microsoft.com/windows/desktop/api/d2d1effects/ne-d2d1effects-d2d1_colormanagement_rendering_intent">D2D1_COLORMANAGEMENT_RENDERING_INTENT</a>.

The default value is D2D1_COLORMANAGEMENT_RENDERING_INTENT_PERCEPTUAL.</summary>
  </member>
  <member name="D2D1_COLORMANAGEMENT_PROP::D2D1_COLORMANAGEMENT_PROP_ALPHA_MODE">
    <summary>How to interpret alpha data that is contained in the input image. 
          

The type is <a href="https://docs.microsoft.com/windows/desktop/api/d2d1effects/ne-d2d1effects-d2d1_colormanagement_alpha_mode">D2D1_COLORMANAGEMENT_ALPHA_MODE</a>.

The default value is D2D1_COLORMANAGEMENT_ALPHA_MODE_PREMULTIPLIED.</summary>
  </member>
  <member name="D2D1_COLORMANAGEMENT_PROP::D2D1_COLORMANAGEMENT_PROP_QUALITY">
    <summary>The quality level of the transform. 
          

The type is <a href="https://docs.microsoft.com/windows/desktop/api/d2d1effects/ne-d2d1effects-d2d1_colormanagement_quality">D2D1_COLORMANAGEMENT_QUALITY</a>.

The default value is D2D1_COLORMANAGEMENT_QUALITY_NORMAL.</summary>
  </member>
  <member name="D2D1_CAP_STYLE">
    <summary>
      <para>Describes the shape at the end of a line or segment.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1/ne-d2d1-d2d1_cap_style" /></para>
    </summary>
  </member>
  <member name="D2D1_CAP_STYLE::D2D1_CAP_STYLE_FLAT">
    <summary>A cap that does not extend past the last point of the line. Comparable to cap used for objects other than lines.</summary>
  </member>
  <member name="D2D1_CAP_STYLE::D2D1_CAP_STYLE_SQUARE">
    <summary>Half of a square that has a length equal to the line thickness.</summary>
  </member>
  <member name="D2D1_CAP_STYLE::D2D1_CAP_STYLE_ROUND">
    <summary>A semicircle that has a diameter equal to the line thickness.</summary>
  </member>
  <member name="D2D1_CAP_STYLE::D2D1_CAP_STYLE_TRIANGLE">
    <summary>An isosceles right triangle whose hypotenuse is equal in length to the thickness of the line.</summary>
  </member>
  <member name="ID2D1RenderTarget::GetTextAntialiasMode">
    <summary>
      <para>Gets the current antialiasing mode for text and glyph drawing operations.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1/nf-d2d1-id2d1rendertarget-gettextantialiasmode" /></para>
    </summary>
  </member>
  <member name="ID2D1DeviceContext::SetPrimitiveBlend">
    <summary>
      <para>Changes the primitive blend mode that is used for all rendering operations in the device context.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1_1/nf-d2d1_1-id2d1devicecontext-setprimitiveblend" /></para>
      <param name="primitiveBlend">The primitive blend to use.</param>
    </summary>
  </member>
  <member name="ID2D1EffectContext::CreateColorContext">
    <summary>
      <para>Creates a color context from a color space.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1effectauthor/nf-d2d1effectauthor-id2d1effectcontext-createcolorcontext" /></para>
      <param name="space">The space  of color context to create.</param>
      <param name="profile">A buffer containing the ICC profile bytes used to initialize the color context when <i>space</i> is <a href="https://docs.microsoft.com/windows/desktop/api/d2d1_1/ne-d2d1_1-d2d1_color_space">D2D1_COLOR_SPACE_CUSTOM</a>.  For other types, the parameter is ignored and should be set to <b>NULL</b>.</param>
      <param name="profileSize">The size in bytes of <i>Profile</i>.</param>
      <param name="colorContext">When this method returns, contains the address of a pointer to a new color context object.</param>
    </summary>
  </member>
  <member name="ID2D1DeviceContext::GetUnitMode">
    <summary>
      <para>Gets the mode that is being used to interpret values by the device context.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1_1/nf-d2d1_1-id2d1devicecontext-getunitmode" /></para>
    </summary>
  </member>
  <member name="ID2D1Factory1">
    <summary>
      <para>Creates Direct2D resources.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1_1/nn-d2d1_1-id2d1factory1" /></para>
    </summary>
  </member>
  <member name="ID2D1SvgDocument::Serialize">
    <summary>
      <para>Serializes an element and its subtree to XML. The output XML is encoded as UTF-8.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1svg/nf-d2d1svg-id2d1svgdocument-serialize" /></para>
      <param name="outputXmlStream">An output stream to contain the SVG XML subtree.</param>
      <param name="subtree">The root of the subtree. If null, the entire document is serialized.</param>
    </summary>
  </member>
  <member name="ID2D1TransformedImageSource::GetProperties">
    <summary>
      <para>Retrieves the properties specified when the transformed image source was created.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1_3/nf-d2d1_3-id2d1transformedimagesource-getproperties" /></para>
      <param name="properties">the properties specified when the transformed image source was created.</param>
    </summary>
  </member>
  <member name="ID2D1TransformGraph::ConnectNode">
    <summary>
      <para>Connects two nodes inside the transform graph.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1effectauthor/nf-d2d1effectauthor-id2d1transformgraph-connectnode" /></para>
      <param name="fromNode">The node from which the connection will be made.</param>
      <param name="toNode">The node to which the connection will be made.</param>
      <param name="toNodeInputIndex">The node input that will be connected.</param>
    </summary>
  </member>
  <member name="ID2D1SvgAttribute::GetElement">
    <summary>
      <para>Returns the element on which this attribute is set. Returns null if the attribute is not set on any element.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1svg/nf-d2d1svg-id2d1svgattribute-getelement" /></para>
      <param name="element">When this method completes, this will contain a pointer to the element on which this attribute is set.</param>
    </summary>
  </member>
  <member name="ID2D1SvgPathData::GetSegmentData">
    <summary>
      <para>Gets data from the segment data array.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1svg/nf-d2d1svg-id2d1svgpathdata-getsegmentdata" /></para>
      <param name="data">Buffer to contain the segment data array.</param>
      <param name="dataCount">The element count of the buffer.</param>
      <param name="startIndex">The index of the first segment data to retrieve.</param>
    </summary>
  </member>
  <member name="ID2D1SpriteBatch">
    <summary>
      <para>Represents a single group of sprites with their associated drawing properties.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1_3/nn-d2d1_3-id2d1spritebatch" /></para>
    </summary>
  </member>
  <member name="D2D1_CHANNEL_DEPTH">
    <summary>
      <para>Allows a caller to control the channel depth of a stage in the rendering pipeline.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1effectauthor/ne-d2d1effectauthor-d2d1_channel_depth" /></para>
    </summary>
  </member>
  <member name="D2D1_CHANNEL_DEPTH::D2D1_CHANNEL_DEPTH_DEFAULT">
    <summary>The channel depth is the default. It is inherited from the inputs.</summary>
  </member>
  <member name="D2D1_CHANNEL_DEPTH::D2D1_CHANNEL_DEPTH_1">
    <summary>The channel depth is 1.</summary>
  </member>
  <member name="D2D1_CHANNEL_DEPTH::D2D1_CHANNEL_DEPTH_4">
    <summary>The channel depth is 4.</summary>
  </member>
  <member name="ID2D1SvgElement::GetNextChild">
    <summary>
      <para>Gets the next sibling of the referenceChild element.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1svg/nf-d2d1svg-id2d1svgelement-getnextchild" /></para>
      <param name="referenceChild">The referenceChild must be an immediate child of this element.</param>
      <param name="nextChild">The output nextChild element will be non-null if the referenceChild has a next sibling. If the referenceChild is the last child, the output is null.</param>
    </summary>
  </member>
  <member name="ID2D1Transform::MapInputRectsToOutputRect">
    <summary>
      <para>Performs the inverse mapping to MapOutputRectToInputRects.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1effectauthor/nf-d2d1effectauthor-id2d1transform-mapinputrectstooutputrect" /></para>
      <param name="inputRects">An array of input rectangles to be mapped to the output rectangle.  The <i>inputRects</i> parameter is always equal to the input bounds.</param>
      <param name="inputOpaqueSubRects">An array of input rectangles to be mapped to the opaque output rectangle.</param>
      <param name="inputRectCount">The number of inputs specified. The implementation guarantees that this is equal to the number of inputs specified on the transform.</param>
      <param name="outputRect">The output rectangle that maps to the corresponding input rectangle.</param>
      <param name="outputOpaqueSubRect">The output rectangle that maps to the corresponding opaque input rectangle.</param>
    </summary>
  </member>
  <member name="ID2D1GdiInteropRenderTarget::GetDC">
    <summary>
      <para>Retrieves the device context associated with this render target.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1/nf-d2d1-id2d1gdiinteroprendertarget-getdc" /></para>
      <param name="mode">A value that specifies whether the device context should be cleared.</param>
      <param name="hdc">When this method returns, contains the device context associated with this render target. You must allocate storage for this parameter.</param>
    </summary>
  </member>
  <member name="ID2D1SvgElement::InsertChildBefore">
    <summary>
      <para>Inserts newChild as a child of this element, before the referenceChild element.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1svg/nf-d2d1svg-id2d1svgelement-insertchildbefore" /></para>
      <param name="newChild">The element to be inserted.</param>
      <param name="referenceChild">The element that the child should be inserted before.
            If referenceChild is null, the newChild is placed as the last child.
            If referenceChild is non-null, it must be an immediate child of this element.</param>
    </summary>
  </member>
  <member name="ID2D1SvgPaint::SetId">
    <summary>
      <para>Sets the element id which acts as the paint server. This id is used if the paint type is D2D1_SVG_PAINT_TYPE_URI.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1svg/nf-d2d1svg-id2d1svgpaint-setid" /></para>
      <param name="id">The element id which acts as the paint server. This id is used if the paint type is D2D1_SVG_PAINT_TYPE_URI.</param>
    </summary>
  </member>
  <member name="ID2D1LinearGradientBrush::GetStartPoint">
    <summary>
      <para>Retrieves the starting coordinates of the linear gradient.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1/nf-d2d1-id2d1lineargradientbrush-getstartpoint" /></para>
    </summary>
  </member>
  <member name="D2D1_3DTRANSFORM_INTERPOLATION_MODE">
    <summary>
      <para>The interpolation mode the 3D transform effect uses on the image. There are 5 scale modes that range in quality and speed.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1effects/ne-d2d1effects-d2d1_3dtransform_interpolation_mode" /></para>
    </summary>
  </member>
  <member name="D2D1_3DTRANSFORM_INTERPOLATION_MODE::D2D1_3DTRANSFORM_INTERPOLATION_MODE_NEAREST_NEIGHBOR">
    <summary>Samples the nearest single point and uses that. This mode uses less processing time, but outputs the lowest quality image.</summary>
  </member>
  <member name="D2D1_3DTRANSFORM_INTERPOLATION_MODE::D2D1_3DTRANSFORM_INTERPOLATION_MODE_LINEAR">
    <summary>Uses a four point sample and linear interpolation. This mode uses more processing time than the nearest neighbor mode, but outputs a higher quality image.</summary>
  </member>
  <member name="D2D1_3DTRANSFORM_INTERPOLATION_MODE::D2D1_3DTRANSFORM_INTERPOLATION_MODE_CUBIC">
    <summary>Uses a 16 sample cubic kernel for interpolation. This mode uses the most processing time, but outputs a higher quality image.</summary>
  </member>
  <member name="D2D1_3DTRANSFORM_INTERPOLATION_MODE::D2D1_3DTRANSFORM_INTERPOLATION_MODE_MULTI_SAMPLE_LINEAR">
    <summary>Uses 4 linear samples within a single pixel for good edge anti-aliasing. This mode is good for scaling down by small amounts on images with few pixels.</summary>
  </member>
  <member name="D2D1_3DTRANSFORM_INTERPOLATION_MODE::D2D1_3DTRANSFORM_INTERPOLATION_MODE_ANISOTROPIC">
    <summary>Uses anisotropic filtering to sample a pattern according to the transformed shape of the bitmap.</summary>
  </member>
  <member name="ID2D1Multithread::Leave">
    <summary>
      <para>Leaves the Direct2D API critical section, if it exists.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1_1/nf-d2d1_1-id2d1multithread-leave" /></para>
    </summary>
  </member>
  <member name="ID2D1PathGeometry1">
    <summary>
      <para>The ID2D1PathGeometry1 interface adds functionality to ID2D1PathGeometry. In particular, it provides the path geometry-specific ComputePointAndSegmentAtLength method.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1_1/nn-d2d1_1-id2d1pathgeometry1" /></para>
    </summary>
  </member>
  <member name="D2D1_YCBCR_PROP">
    <summary>
      <para>Identifiers for properties of the YCbCr effect.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1effects_1/ne-d2d1effects_1-d2d1_ycbcr_prop" /></para>
    </summary>
  </member>
  <member name="D2D1_YCBCR_PROP::D2D1_YCBCR_PROP_CHROMA_SUBSAMPLING">
    <summary>Specifies the chroma subsampling of the input chroma image.
            

The type is <a href="https://docs.microsoft.com/windows/desktop/api/d2d1effects_1/ne-d2d1effects_1-d2d1_ycbcr_chroma_subsampling">D2D1_YCBCR_CHROMA_SUBSAMPLING</a>.

The default value is D2D1_YCBCR_CHROMA_SUBSAMPLING_AUTO.</summary>
  </member>
  <member name="D2D1_YCBCR_PROP::D2D1_YCBCR_PROP_TRANSFORM_MATRIX">
    <summary>A 3x2 Matrix specifying the axis-aligned affine transform of the image. Axis aligned transforms include Scale, Flips, and 90 degree rotations.
            

The type is <a href="https://docs.microsoft.com/windows/desktop/Direct2D/d2d1-matrix-3x2-f">D2D1_MATRIX_3X2_F</a>.

The default value is Matrix3x2F::Identity().</summary>
  </member>
  <member name="D2D1_YCBCR_PROP::D2D1_YCBCR_PROP_INTERPOLATION_MODE">
    <summary>The interpolation mode.
            

The type is <a href="https://docs.microsoft.com/windows/desktop/api/d2d1effects_1/ne-d2d1effects_1-d2d1_ycbcr_interpolation_mode">D2D1_YCBCR_INTERPOLATION_MODE</a>.</summary>
  </member>
  <member name="ID2D1BlendTransform::GetDescription">
    <summary>
      <para>Gets the blend description of the corresponding blend transform object.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1effectauthor/nf-d2d1effectauthor-id2d1blendtransform-getdescription" /></para>
      <param name="description">When this method returns, contains the blend description specified for the blend transform.</param>
    </summary>
  </member>
  <member name="ID2D1GradientStopCollection1::GetPostInterpolationSpace">
    <summary>
      <para>Gets the color space after interpolation has occurred.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1_1/nf-d2d1_1-id2d1gradientstopcollection1-getpostinterpolationspace" /></para>
    </summary>
  </member>
  <member name="ID2D1Geometry">
    <summary>
      <para>Represents a geometry resource and defines a set of helper methods for manipulating and measuring geometric shapes. Interfaces that inherit from ID2D1Geometry define specific shapes.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1/nn-d2d1-id2d1geometry" /></para>
    </summary>
  </member>
  <member name="ID2D1ImageBrush::GetSourceRectangle">
    <summary>
      <para>Gets the rectangle that will be used as the bounds of the image when drawn as an image brush.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1_1/nf-d2d1_1-id2d1imagebrush-getsourcerectangle" /></para>
      <param name="sourceRectangle">When this method returns, contains the address of the output source rectangle.</param>
    </summary>
  </member>
  <member name="ID2D1Factory1::RegisterEffectFromStream">
    <summary>
      <para>Registers an effect within the factory instance with the property XML specified as a stream.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1_1/nf-d2d1_1-id2d1factory1-registereffectfromstream" /></para>
      <param name="classId">The identifier of the effect to be registered.</param>
      <param name="propertyXml">A list of the effect properties, types, and metadata.</param>
      <param name="bindings">An array of properties and methods.

This binds a property by name to a particular method implemented by the effect author to handle the property. 
              The name must be found in the corresponding <i>propertyXml</i>.</param>
      <param name="bindingsCount">The number of bindings in the binding array.</param>
      <param name="effectFactory">The static factory that is used to create the corresponding effect.</param>
    </summary>
  </member>
  <member name="ID2D1TransformGraph::SetSingleTransformNode">
    <summary>
      <para>Sets a single transform node as being equivalent to the whole graph.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1effectauthor/nf-d2d1effectauthor-id2d1transformgraph-setsingletransformnode" /></para>
      <param name="node">The node to be set.</param>
    </summary>
  </member>
  <member name="D2D1_FLOOD_PROP">
    <summary>
      <para>Identifiers for properties of the Flood effect.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1effects/ne-d2d1effects-d2d1_flood_prop" /></para>
    </summary>
  </member>
  <member name="D2D1_FLOOD_PROP::D2D1_FLOOD_PROP_COLOR">
    <summary>The color and opacity of the bitmap. This property is a D2D1_VECTOR_4F. The individual values for each channel are of type FLOAT, unbounded and unitless.
            The effect doesn't modify the values for the channels.
            

The RGBA values for each channel range from 0 to 1.

The type is <a href="https://docs.microsoft.com/windows/desktop/api/dcommon/ns-dcommon-d2d_vector_4f">D2D1_VECTOR_4F</a>.

The default value is {0.0f, 0.0f, 0.0f, 1.0f}.</summary>
  </member>
  <member name="ID2D1TransformGraph::SetPassthroughGraph">
    <summary>
      <para>Uses the specified input as the effect output.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1effectauthor/nf-d2d1effectauthor-id2d1transformgraph-setpassthroughgraph" /></para>
      <param name="effectInputIndex">The index of the input to the effect.</param>
    </summary>
  </member>
  <member name="ID2D1Properties::GetPropertyCount">
    <summary>
      <para>Gets the number of top-level properties.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1_1/nf-d2d1_1-id2d1properties-getpropertycount" /></para>
    </summary>
  </member>
  <member name="ID2D1RenderTarget::GetDpi">
    <summary>
      <para>Return the render target's dots per inch (DPI).</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1/nf-d2d1-id2d1rendertarget-getdpi" /></para>
      <param name="dpiX">When this method returns, contains the horizontal DPI of the render target. This parameter is passed uninitialized.</param>
      <param name="dpiY">When this method returns, contains the vertical DPI of the render target. This parameter is passed uninitialized.</param>
    </summary>
  </member>
  <member name="ID2D1SvgStrokeDashArray">
    <summary>
      <para>Interface describing an SVG stroke-dasharray value.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1svg/nn-d2d1svg-id2d1svgstrokedasharray" /></para>
    </summary>
  </member>
  <member name="ID2D1CommandSink::PushLayer">
    <summary>
      <para>Pushes a layer onto the clip and layer stack.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1_1/nf-d2d1_1-id2d1commandsink-pushlayer" /></para>
      <param name="layerParameters1">The parameters that define the layer.</param>
      <param name="layer">The layer resource that receives subsequent drawing operations.</param>
    </summary>
  </member>
  <member name="ID2D1Factory1::UnregisterEffect">
    <summary>
      <para>Unregisters an effect within the factory instance that corresponds to the classId provided.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1_1/nf-d2d1_1-id2d1factory1-unregistereffect" /></para>
      <param name="classId">The identifier of the effect to be unregistered.</param>
    </summary>
  </member>
  <member name="D2D1_GAMMA1">
    <summary>
      <para>Determines what gamma is used for interpolation and blending.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1_3/ne-d2d1_3-d2d1_gamma1" /></para>
    </summary>
  </member>
  <member name="D2D1_GAMMA1::D2D1_GAMMA1_G22">
    <summary>Colors are manipulated in 2.2 gamma color space.</summary>
  </member>
  <member name="D2D1_GAMMA1::D2D1_GAMMA1_G10">
    <summary>Colors are manipulated in 1.0 gamma color space.</summary>
  </member>
  <member name="D2D1_GAMMA1::D2D1_GAMMA1_G2084">
    <summary>Colors are manipulated in ST.2084 PQ gamma color space.</summary>
  </member>
  <member name="ID2D1BoundsAdjustmentTransform::SetOutputBounds">
    <summary>
      <para>This sets the output bounds for the support transform.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1effectauthor/nf-d2d1effectauthor-id2d1boundsadjustmenttransform-setoutputbounds" /></para>
      <param name="outputBounds">The output bounds.</param>
    </summary>
  </member>
  <member name="ID2D1StrokeStyle::GetStartCap">
    <summary>
      <para>Retrieves the type of shape used at the beginning of a stroke.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1/nf-d2d1-id2d1strokestyle-getstartcap" /></para>
    </summary>
  </member>
  <member name="ID2D1Multithread">
    <summary>
      <para>A locking mechanism from a Direct2D factory that Direct2D uses to control exclusive resource access in an app that is uses multiple threads.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1_1/nn-d2d1_1-id2d1multithread" /></para>
    </summary>
  </member>
  <member name="ID2D1DeviceContext::GetEffectInvalidRectangleCount">
    <summary>
      <para>Gets the number of invalid output rectangles that have accumulated on the effect.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1_1/nf-d2d1_1-id2d1devicecontext-geteffectinvalidrectanglecount" /></para>
      <param name="effect">The effect to count the invalid rectangles on.</param>
      <param name="rectangleCount">The returned rectangle count.</param>
    </summary>
  </member>
  <member name="ID2D1Factory::CreateDCRenderTarget">
    <summary>
      <para>Creates a render target that draws to a Windows Graphics Device Interface (GDI) device context.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1/nf-d2d1-id2d1factory-createdcrendertarget" /></para>
      <param name="renderTargetProperties">The rendering mode, pixel format, remoting options, DPI information, and the minimum DirectX support required for hardware rendering.  To enable the device context (DC) render target to work with GDI, set the DXGI format to <a href="https://docs.microsoft.com/windows/win32/api/dxgiformat/ne-dxgiformat-dxgi_format">DXGI_FORMAT_B8G8R8A8_UNORM</a> and the alpha mode to <a href="https://docs.microsoft.com/windows/win32/api/dcommon/ne-dcommon-d2d1_alpha_mode">D2D1_ALPHA_MODE_PREMULTIPLIED</a> or <b>D2D1_ALPHA_MODE_IGNORE</b>. For more information about pixel formats, see  <a href="https://docs.microsoft.com/windows/win32/Direct2D/supported-pixel-formats-and-alpha-modes">Supported Pixel  Formats and Alpha Modes</a>.</param>
      <param name="dcRenderTarget">When this method returns, <i>dcRenderTarget</i> contains the address of the pointer to the  <a href="https://docs.microsoft.com/windows/win32/api/d2d1/nn-d2d1-id2d1dcrendertarget">ID2D1DCRenderTarget</a> created by the method.</param>
    </summary>
  </member>
  <member name="ID2D1SvgStrokeDashArray::RemoveDashesAtEnd">
    <summary>
      <para>Removes dashes from the end of the array.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1svg/nf-d2d1svg-id2d1svgstrokedasharray-removedashesatend" /></para>
      <param name="dashesCount">Specifies how many dashes to remove.</param>
    </summary>
  </member>
  <member name="D2D1_COLOR_CONTEXT_TYPE">
    <summary>
      <para>Specifies which way a color profile is defined.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1_3/ne-d2d1_3-d2d1_color_context_type" /></para>
    </summary>
  </member>
  <member name="ID2D1RenderTarget::DrawLine">
    <summary>
      <para>Draws a line between the specified points using the specified stroke style.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1/nf-d2d1-id2d1rendertarget-drawline" /></para>
      <param name="point0">The start point of the line, in device-independent pixels.</param>
      <param name="point1">The end point of the line, in device-independent pixels.</param>
      <param name="brush">The brush used to paint the line's stroke.</param>
      <param name="strokeWidth">The width of the stroke, in device-independent pixels. The value must be greater than or equal to 0.0f. If this parameter isn't specified, it defaults to 1.0f. The stroke is centered on the line.</param>
      <param name="strokeStyle">The style of stroke to paint, or <b>NULL</b> to paint a solid line.</param>
    </summary>
  </member>
  <member name="ID2D1Device::GetMaximumTextureMemory">
    <summary>
      <para>Sets the maximum amount of texture memory Direct2D accumulates before it purges the image caches and cached texture allocations.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1_1/nf-d2d1_1-id2d1device-getmaximumtexturememory" /></para>
    </summary>
  </member>
  <member name="ID2D1GeometryGroup::GetSourceGeometries">
    <summary>
      <para>Retrieves the geometries in the geometry group.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1/nf-d2d1-id2d1geometrygroup-getsourcegeometries" /></para>
      <param name="geometries">When this method returns, contains the address of a pointer to an array of geometries to be filled by this method. The length of the array is specified by the <i>geometryCount</i> parameter. If the array is <b>NULL</b>, then this method performs no operation. You must allocate the memory for this array.</param>
      <param name="geometriesCount">A value indicating the number of geometries to return in the <i>geometries</i> array. If this value is less than the number of geometries in the geometry group, the remaining geometries are omitted. If this value is larger than the number of geometries in the geometry group, the extra geometries are set to <b>NULL</b>. To obtain the number of geometries currently in the geometry group, use the <a href="https://docs.microsoft.com/windows/win32/api/d2d1/nf-d2d1-id2d1geometrygroup-getsourcegeometrycount">GetSourceGeometryCount</a> method.</param>
    </summary>
  </member>
  <member name="ID2D1DrawingStateBlock::SetTextRenderingParams">
    <summary>
      <para>Specifies the text-rendering configuration of the drawing state.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1/nf-d2d1-id2d1drawingstateblock-settextrenderingparams" /></para>
      <param name="textRenderingParams">The text-rendering configuration of the drawing state, or NULL to use default settings.</param>
    </summary>
  </member>
  <member name="D2D1ComputeMaximumScaleFactor">
    <summary>
      <para>Computes the maximum factor by which a given transform can stretch any vector.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1_2/nf-d2d1_2-d2d1computemaximumscalefactor" /></para>
      <param name="matrix">The input transform matrix.</param>
    </summary>
  </member>
  <member name="ID2D1ImageBrush::GetExtendModeX">
    <summary>
      <para>Gets the extend mode of the image brush on the x-axis.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1_1/nf-d2d1_1-id2d1imagebrush-getextendmodex" /></para>
    </summary>
  </member>
  <member name="ID2D1BoundsAdjustmentTransform">
    <summary>
      <para>A support transform for effects to modify the output rectangle of the previous effect or bitmap.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1effectauthor/nn-d2d1effectauthor-id2d1boundsadjustmenttransform" /></para>
    </summary>
  </member>
  <member name="ID2D1SvgDocument::CreatePointCollection">
    <summary>
      <para>Creates a points object which can be used to set a points attribute on a polygon or polyline element.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1svg/nf-d2d1svg-id2d1svgdocument-createpointcollection" /></para>
      <param name="points">The points in the point collection.</param>
      <param name="pointsCount">The number of points in the points argument.</param>
      <param name="pointCollection">The created <a href="https://docs.microsoft.com/windows/desktop/api/d2d1svg/nn-d2d1svg-id2d1svgpointcollection">ID2D1SvgPointCollection</a> object.</param>
    </summary>
  </member>
  <member name="D2D1_STRAIGHTEN_PROP">
    <summary>
      <para>Identifiers for properties of the Straighten effect.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1effects_2/ne-d2d1effects_2-d2d1_straighten_prop" /></para>
    </summary>
  </member>
  <member name="D2D1_STRAIGHTEN_PROP::D2D1_STRAIGHTEN_PROP_ANGLE">
    <summary>The D2D1_STRAIGHTEN_PROP_ANGLE property is a float value that specifies how much the image should be rotated.  The allowed range is -45.0 to 45.0.  The default value is 0.0.</summary>
  </member>
  <member name="D2D1_STRAIGHTEN_PROP::D2D1_STRAIGHTEN_PROP_MAINTAIN_SIZE">
    <summary>The D2D1_STRAIGHTEN_PROP_MAINTAIN_SIZE property is a boolean value that specifies whether the image will be scaled such that the original size is maintained without any invalid regions.
          The default value is True.</summary>
  </member>
  <member name="D2D1_STRAIGHTEN_PROP::D2D1_STRAIGHTEN_PROP_SCALE_MODE">
    <summary>The D2D1_STRAIGHTEN_PROP_SCALE_MODE property is a <a href="https://docs.microsoft.com/windows/desktop/api/d2d1effects_2/ne-d2d1effects_2-d2d1_straighten_scale_mode">D2D1_STRAIGHTEN_SCALE_MODE</a> enumeration value indicating the scaling mode that should be used.</summary>
  </member>
  <member name="ID2D1Factory1::CreateDevice">
    <summary>
      <para>Creates a ID2D1Device object.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1_1/nf-d2d1_1-id2d1factory1-createdevice" /></para>
      <param name="dxgiDevice">The <a href="https://docs.microsoft.com/windows/desktop/api/dxgi/nn-dxgi-idxgidevice">IDXGIDevice</a> object used when creating  the <a href="https://docs.microsoft.com/windows/desktop/api/d2d1_1/nn-d2d1_1-id2d1device">ID2D1Device</a>.</param>
      <param name="d2dDevice">The requested <a href="https://docs.microsoft.com/windows/desktop/api/d2d1_1/nn-d2d1_1-id2d1device">ID2D1Device</a> object.</param>
    </summary>
  </member>
  <member name="D2D1_INPUT_DESCRIPTION">
    <summary>
      <para>Describes the options that transforms may set on input textures.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1effectauthor/ns-d2d1effectauthor-d2d1_input_description" /></para>
    </summary>
  </member>
  <member name="D2D1_INPUT_DESCRIPTION::filter">
    <summary>The type of filter to apply to the input texture.</summary>
  </member>
  <member name="D2D1_INPUT_DESCRIPTION::levelOfDetailCount">
    <summary>The mip level to retrieve from the upstream transform, if specified.</summary>
  </member>
  <member name="ID2D1Factory3::CreateDevice">
    <summary>
      <para>Creates an ID2D1Device2 object.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1_3/nf-d2d1_3-id2d1factory3-createdevice" /></para>
      <param name="dxgiDevice">The <a href="https://docs.microsoft.com/windows/desktop/api/dxgi/nn-dxgi-idxgidevice">IDXGIDevice</a> object used when creating  the <a href="https://docs.microsoft.com/windows/desktop/api/d2d1_3/nn-d2d1_3-id2d1device2">ID2D1Device2</a>.</param>
      <param name="d2dDevice2">The requested <a href="https://docs.microsoft.com/windows/desktop/api/d2d1_3/nn-d2d1_3-id2d1device2">ID2D1Device2</a> object.</param>
    </summary>
  </member>
  <member name="ID2D1ImageBrush">
    <summary>
      <para>Represents a brush based on an ID2D1Image.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1_1/nn-d2d1_1-id2d1imagebrush" /></para>
    </summary>
  </member>
  <member name="D2D1_SIMPLE_COLOR_PROFILE">
    <summary>
      <para>Simple description of a color space.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1_3/ns-d2d1_3-d2d1_simple_color_profile" /></para>
    </summary>
  </member>
  <member name="D2D1_SIMPLE_COLOR_PROFILE::redPrimary">
    <summary>The XY coordinates of the red primary in CIEXYZ space.</summary>
  </member>
  <member name="D2D1_SIMPLE_COLOR_PROFILE::greenPrimary">
    <summary>The XY coordinates of the green primary in CIEXYZ space.</summary>
  </member>
  <member name="D2D1_SIMPLE_COLOR_PROFILE::bluePrimary">
    <summary>The XY coordinates of the blue primary in CIEXYZ space.</summary>
  </member>
  <member name="D2D1_SIMPLE_COLOR_PROFILE::whitePointXZ">
    <summary>The X/Z tristimulus values for the whitepoint, normalized for relative luminance.</summary>
  </member>
  <member name="D2D1_SIMPLE_COLOR_PROFILE::gamma">
    <summary>The gamma encoding to use for this color space.</summary>
  </member>
  <member name="ID2D1GdiMetafileSink1::ProcessRecord">
    <summary>
      <para>Provides access to metafile records, including their type, data, and flags.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1_3/nf-d2d1_3-id2d1gdimetafilesink1-processrecord" /></para>
      <param name="recordType">The type of metafile record being processed. Please see <a href="https://docs.microsoft.com/openspecs/windows_protocols/ms-emf/91c257d7-c39d-4a36-9b1f-63e3f73d30ca">MS-EMF</a> and <a href="https://docs.microsoft.com/openspecs/windows_protocols/ms-emfplus/5f92c789-64f2-46b5-9ed4-15a9bb0946c6">MS-EMFPLUS</a> for a list of record types.</param>
      <param name="recordData">The data contained in this record. Please see <a href="https://docs.microsoft.com/openspecs/windows_protocols/ms-emf/91c257d7-c39d-4a36-9b1f-63e3f73d30ca">MS-EMF</a> and <a href="https://docs.microsoft.com/openspecs/windows_protocols/ms-emfplus/5f92c789-64f2-46b5-9ed4-15a9bb0946c6">MS-EMFPLUS</a> for information on record data layouts.</param>
      <param name="recordDataSize">TThe size of the data pointed to by recordData.</param>
      <param name="flags">The set of flags set for this record. Please see <a href="https://docs.microsoft.com/openspecs/windows_protocols/ms-emf/91c257d7-c39d-4a36-9b1f-63e3f73d30ca">MS-EMF</a> and <a href="https://docs.microsoft.com/openspecs/windows_protocols/ms-emfplus/5f92c789-64f2-46b5-9ed4-15a9bb0946c6">MS-EMFPLUS</a> for information on record flags.</param>
    </summary>
  </member>
  <member name="ID2D1StrokeStyle::GetDashesCount">
    <summary>
      <para>Retrieves the number of entries in the dashes array.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1/nf-d2d1-id2d1strokestyle-getdashescount" /></para>
    </summary>
  </member>
  <member name="ID2D1GradientStopCollection1::GetBufferPrecision">
    <summary>
      <para>Gets the precision of the gradient buffer.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1_1/nf-d2d1_1-id2d1gradientstopcollection1-getbufferprecision" /></para>
    </summary>
  </member>
  <member name="D2D1_FEATURE">
    <summary>
      <para>Defines capabilities of the underlying Direct3D device which may be queried using ID2D1EffectContext::CheckFeatureSupport.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1effectauthor/ne-d2d1effectauthor-d2d1_feature" /></para>
    </summary>
  </member>
  <member name="D2D1_FEATURE::D2D1_FEATURE_DOUBLES">
    <summary>A D2D1_FEATURE_DATA_DOUBLES structure should be filled.</summary>
  </member>
  <member name="D2D1_FEATURE::D2D1_FEATURE_D3D10_X_HARDWARE_OPTIONS">
    <summary>A D2D1_FEATURE_DATA_D3D10_X_HARDWARE_OPTIONS structure should be filled.</summary>
  </member>
  <member name="D2D1_CUSTOM_VERTEX_BUFFER_PROPERTIES">
    <summary>
      <para>Defines a vertex shader and the input element description to define the input layout.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1effectauthor/ns-d2d1effectauthor-d2d1_custom_vertex_buffer_properties" /></para>
    </summary>
  </member>
  <member name="D2D1_CUSTOM_VERTEX_BUFFER_PROPERTIES::shaderBufferWithInputSignature">
    <summary>A pointer to the buffer.</summary>
  </member>
  <member name="D2D1_CUSTOM_VERTEX_BUFFER_PROPERTIES::shaderBufferSize">
    <summary>The size of the buffer.</summary>
  </member>
  <member name="D2D1_CUSTOM_VERTEX_BUFFER_PROPERTIES::inputElements">
    <summary>An array of input assembler stage data types.</summary>
  </member>
  <member name="D2D1_CUSTOM_VERTEX_BUFFER_PROPERTIES::elementCount">
    <summary>The number of input elements in the vertex shader.</summary>
  </member>
  <member name="D2D1_CUSTOM_VERTEX_BUFFER_PROPERTIES::stride">
    <summary>The vertex stride.</summary>
  </member>
  <member name="D2D1_RENDER_TARGET_PROPERTIES">
    <summary>
      <para>Contains rendering options (hardware or software), pixel format, DPI information, remoting options, and Direct3D support requirements for a render target.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1/ns-d2d1-d2d1_render_target_properties" /></para>
    </summary>
  </member>
  <member name="D2D1_RENDER_TARGET_PROPERTIES::type">
    <summary>A value that specifies whether the render target should force hardware or software rendering. A value of <a href="https://docs.microsoft.com/windows/win32/api/d2d1/ne-d2d1-d2d1_render_target_type">D2D1_RENDER_TARGET_TYPE_DEFAULT</a> specifies that the render target should use hardware rendering if it is available; otherwise, it uses software rendering. Note that WIC bitmap render targets do not support hardware rendering.</summary>
  </member>
  <member name="D2D1_RENDER_TARGET_PROPERTIES::pixelFormat">
    <summary>The pixel format and alpha mode of the render target. You can use the <a href="https://docs.microsoft.com/windows/win32/api/d2d1helper/nf-d2d1helper-pixelformat">D2D1::PixelFormat</a> function to create a pixel format that specifies that Direct2D should select the pixel format and alpha mode for you. For a list of pixel formats and alpha modes supported by each render target, see <a href="https://docs.microsoft.com/windows/win32/Direct2D/supported-pixel-formats-and-alpha-modes">Supported Pixel Formats and Alpha Modes</a>.</summary>
  </member>
  <member name="D2D1_RENDER_TARGET_PROPERTIES::dpiX">
    <summary>The horizontal DPI of the render target.  To use the default DPI, set <i>dpiX</i> and <i>dpiY</i> to 0. For more information, see the Remarks section.</summary>
  </member>
  <member name="D2D1_RENDER_TARGET_PROPERTIES::dpiY">
    <summary>The vertical DPI of the render target. To use the default DPI, set <i>dpiX</i> and <i>dpiY</i> to 0.  For more information, see the Remarks section.</summary>
  </member>
  <member name="D2D1_RENDER_TARGET_PROPERTIES::usage">
    <summary>A value that specifies how the render target is remoted and whether it should be GDI-compatible.  Set to <a href="https://docs.microsoft.com/windows/win32/api/d2d1/ne-d2d1-d2d1_render_target_usage">D2D1_RENDER_TARGET_USAGE_NONE</a> to create a render target that is not compatible with GDI and uses Direct3D command-stream remoting if it  is available.</summary>
  </member>
  <member name="D2D1_RENDER_TARGET_PROPERTIES::minLevel">
    <summary>A value that specifies the minimum Direct3D feature level required for hardware rendering. If the specified minimum level is not available, the render target uses software rendering if the <b>type </b> member is set to <a href="https://docs.microsoft.com/windows/win32/api/d2d1/ne-d2d1-d2d1_render_target_type">D2D1_RENDER_TARGET_TYPE_DEFAULT</a>; if  <b>type </b> is set to to <b>D2D1_RENDER_TARGET_TYPE_HARDWARE</b>, render target creation fails. A value of <a href="https://docs.microsoft.com/windows/win32/api/d2d1/ne-d2d1-d2d1_feature_level">D2D1_FEATURE_LEVEL_DEFAULT</a> indicates that Direct2D should determine whether the Direct3D feature level of the device is adequate. This field is used only when creating <a href="https://docs.microsoft.com/windows/win32/api/d2d1/nn-d2d1-id2d1hwndrendertarget">ID2D1HwndRenderTarget</a> and <a href="https://docs.microsoft.com/windows/win32/api/d2d1/nn-d2d1-id2d1dcrendertarget">ID2D1DCRenderTarget</a> objects.</summary>
  </member>
  <member name="ID2D1Factory5::CreateDevice">
    <summary>
      <para>Creates an ID2D1Device4 object.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1_3/nf-d2d1_3-id2d1factory5-createdevice" /></para>
      <param name="dxgiDevice">The IDXGIDevice object used when creating the <a href="https://docs.microsoft.com/windows/desktop/api/d2d1_3/nn-d2d1_3-id2d1device4">ID2D1Device4</a>.</param>
      <param name="d2dDevice4">The requested <a href="https://docs.microsoft.com/windows/desktop/api/d2d1_3/nn-d2d1_3-id2d1device4">ID2D1Device4</a> object.</param>
    </summary>
  </member>
  <member name="ID2D1GradientStopCollection::GetGradientStopCount">
    <summary>
      <para>Retrieves the number of gradient stops in the collection.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1/nf-d2d1-id2d1gradientstopcollection-getgradientstopcount" /></para>
    </summary>
  </member>
  <member name="D2D1_FACTORY_TYPE">
    <summary>
      <para>Specifies whether Direct2D provides synchronization for an ID2D1Factory and the resources it creates, so that they may be safely accessed from multiple threads.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1/ne-d2d1-d2d1_factory_type" /></para>
    </summary>
  </member>
  <member name="D2D1_FACTORY_TYPE::D2D1_FACTORY_TYPE_SINGLE_THREADED">
    <summary>No synchronization is provided for accessing or writing to the factory or the objects it creates. If the factory or the objects are called from multiple threads, it is up to the application to provide access locking.</summary>
  </member>
  <member name="D2D1_FACTORY_TYPE::D2D1_FACTORY_TYPE_MULTI_THREADED">
    <summary>Direct2D provides synchronization for accessing and writing to the factory and the objects it creates, enabling safe access from multiple threads.</summary>
  </member>
  <member name="ID2D1GdiMetafile1::GetDpi">
    <summary>
      <para>Gets the DPI reported by the metafile.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1_3/nf-d2d1_3-id2d1gdimetafile1-getdpi" /></para>
      <param name="dpiX">Receives the horizontal DPI reported by the metafile.</param>
      <param name="dpiY">Receives the vertical DPI reported by the metafile.</param>
    </summary>
  </member>
  <member name="ID2D1CommandSink::FillGeometry">
    <summary>
      <para>Indicates to the command sink a geometry to be filled.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1_1/nf-d2d1_1-id2d1commandsink-fillgeometry" /></para>
      <param name="geometry">The geometry that should be filled.</param>
      <param name="brush">The primary brush used to fill the geometry.</param>
      <param name="opacityBrush">A brush whose alpha channel is used to modify the opacity of the primary fill brush.</param>
    </summary>
  </member>
  <member name="ID2D1SvgDocument::FindElementById">
    <summary>
      <para>Gets the SVG element with the specified ID.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1svg/nf-d2d1svg-id2d1svgdocument-findelementbyid" /></para>
      <param name="id">ID of the element to retrieve.</param>
      <param name="svgElement">The element matching the specified ID. If the element cannot be found, the returned element will be null.</param>
    </summary>
  </member>
  <member name="ID2D1RenderTarget::SetTextRenderingParams">
    <summary>
      <para>Specifies text rendering options to be applied to all subsequent text and glyph drawing operations.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1/nf-d2d1-id2d1rendertarget-settextrenderingparams" /></para>
      <param name="textRenderingParams">The text rendering options to be applied to all subsequent text and glyph drawing operations; <b>NULL</b> to clear current text rendering options.</param>
    </summary>
  </member>
  <member name="ID2D1Factory1::GetEffectProperties">
    <summary>
      <para>Retrieves the properties of an effect.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1_1/nf-d2d1_1-id2d1factory1-geteffectproperties" /></para>
      <param name="effectId">The ID of the effect to retrieve properties from.</param>
      <param name="properties">When this method returns, contains the address of a pointer to the property interface that can be used to query the metadata of the effect.</param>
    </summary>
  </member>
  <member name="ID2D1SvgElement::AppendChild">
    <summary>
      <para>Appends an element to the list of children.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1svg/nf-d2d1svg-id2d1svgelement-appendchild" /></para>
      <param name="newChild">The element to append.</param>
    </summary>
  </member>
  <member name="ID2D1SourceTransform::Draw">
    <summary>
      <para>Draws the transform to the graphics processing unit (GPU)–based Direct2D pipeline.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1effectauthor/nf-d2d1effectauthor-id2d1sourcetransform-draw" /></para>
      <param name="target">The target to which the transform should be written.</param>
      <param name="drawRect">The area within the source from which the image should be drawn.</param>
      <param name="targetOrigin">The origin within the target bitmap to which the source data should be drawn.</param>
    </summary>
  </member>
  <member name="D2D1_GAUSSIANBLUR_OPTIMIZATION">
    <summary>
      <para>The optimization mode for the Gaussian blur effect.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1effects/ne-d2d1effects-d2d1_gaussianblur_optimization" /></para>
    </summary>
  </member>
  <member name="D2D1_GAUSSIANBLUR_OPTIMIZATION::D2D1_GAUSSIANBLUR_OPTIMIZATION_SPEED">
    <summary>Applies internal optimizations such as pre-scaling at relatively small radii. Uses linear filtering.</summary>
  </member>
  <member name="D2D1_GAUSSIANBLUR_OPTIMIZATION::D2D1_GAUSSIANBLUR_OPTIMIZATION_BALANCED">
    <summary>Uses the same optimization thresholds as Speed mode, but uses trilinear filtering.</summary>
  </member>
  <member name="D2D1_GAUSSIANBLUR_OPTIMIZATION::D2D1_GAUSSIANBLUR_OPTIMIZATION_QUALITY">
    <summary>Only uses internal optimizations with large blur radii, where approximations are less likely to be visible. Uses trilinear filtering.</summary>
  </member>
  <member name="ID2D1EffectContext1::CreateLookupTable3D">
    <summary>
      <para>Creates a 3D lookup table for mapping a 3-channel input to a 3-channel output. The table data must be provided in 4-channel format.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1effectauthor_1/nf-d2d1effectauthor_1-id2d1effectcontext1-createlookuptable3d" /></para>
      <param name="precision">Precision of the input lookup table data.</param>
      <param name="extents">Number of lookup table elements per dimension (X, Y, Z).</param>
      <param name="data">Buffer holding the lookup table data.</param>
      <param name="dataCount">Size of the lookup table data buffer.</param>
      <param name="strides">An array containing two values. The first value is the size in bytes from one row (X dimension) of LUT data to the next. 
          The second value is the size in bytes from one LUT data plane (X and Y dimensions) to the next.</param>
      <param name="lookupTable">Receives the new lookup table instance.</param>
    </summary>
  </member>
  <member name="ID2D1DrawInfo::SetVertexShaderConstantBuffer">
    <summary>
      <para>Sets the constant buffer for this transform's vertex shader.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1effectauthor/nf-d2d1effectauthor-id2d1drawinfo-setvertexshaderconstantbuffer" /></para>
      <param name="buffer">The data applied to the constant buffer</param>
      <param name="bufferCount">The number of bytes of data in the constant buffer.</param>
    </summary>
  </member>
  <member name="D2D1_SATURATION_PROP">
    <summary>
      <para>Identifiers for properties of the Saturation effect.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1effects/ne-d2d1effects-d2d1_saturation_prop" /></para>
    </summary>
  </member>
  <member name="D2D1_SATURATION_PROP::D2D1_SATURATION_PROP_SATURATION">
    <summary>The saturation of the image. You can set the saturation to a value between 0 and 1. If you set it to 1 the output image is fully saturated. 
          If you set it to 0 the output image is monochrome. The saturation value is unitless.
          

The type is FLOAT.

The default is 0.5f.</summary>
  </member>
  <member name="ID2D1SvgPathData">
    <summary>
      <para>Interface describing SVG path data. Path data can be set as the 'd' attribute on a 'path' element.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1svg/nn-d2d1svg-id2d1svgpathdata" /></para>
    </summary>
  </member>
  <member name="ID2D1CommandSink2::DrawGdiMetafile">
    <summary>
      <para>Draws a metafile to the command sink using the given source and destination rectangles.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1_3/nf-d2d1_3-id2d1commandsink2-drawgdimetafile" /></para>
      <param name="gdiMetafile">The metafile to draw.</param>
      <param name="destinationRectangle">The rectangle in the target where the metafile will be drawn, relative to the upper left corner (defined in DIPs). If NULL is specified, the destination rectangle is the size of the target.</param>
      <param name="sourceRectangle">The rectangle of the source metafile that will be drawn, relative to the upper left corner (defined in DIPs). 
     If NULL is specified, the source rectangle is the value returned by <a href="https://docs.microsoft.com/windows/desktop/api/d2d1_3/nf-d2d1_3-id2d1gdimetafile1-getsourcebounds">ID2D1GdiMetafile1::GetSourceBounds</a>.</param>
    </summary>
  </member>
  <member name="ID2D1SvgPaint::GetColor">
    <summary>
      <para>Gets the paint color that is used if the paint type is D2D1_SVG_PAINT_TYPE_COLOR.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1svg/nf-d2d1svg-id2d1svgpaint-getcolor" /></para>
      <param name="color">The paint color that is used if the paint type is D2D1_SVG_PAINT_TYPE_COLOR.</param>
    </summary>
  </member>
  <member name="ID2D1Factory::CreateGeometryGroup">
    <summary>
      <para>Creates an ID2D1GeometryGroup, which is an object that holds other geometries.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1/nf-d2d1-id2d1factory-creategeometrygroup" /></para>
      <param name="fillMode">A value that specifies the rule that a composite shape uses to determine whether a given point is part of the geometry.</param>
      <param name="geometries">An array containing the geometry objects to add to the geometry group. The number of elements in this array is indicated by the <i>geometriesCount</i> parameter.</param>
      <param name="geometriesCount">The number of elements in <i>geometries</i>.</param>
      <param name="geometryGroup">When this method returns, contains the address of a pointer to the geometry group created by this method.</param>
    </summary>
  </member>
  <member name="ID2D1ImageBrush::SetSourceRectangle">
    <summary>
      <para>Sets the source rectangle in the image brush.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1_1/nf-d2d1_1-id2d1imagebrush-setsourcerectangle" /></para>
      <param name="sourceRectangle">The source rectangle that defines the portion of the image to tile.</param>
    </summary>
  </member>
  <member name="ID2D1Bitmap1::GetSurface">
    <summary>
      <para>Gets either the surface that was specified when the bitmap was created, or the default surface created when the bitmap was created.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1_1/nf-d2d1_1-id2d1bitmap1-getsurface" /></para>
      <param name="dxgiSurface">The underlying DXGI surface for the bitmap.</param>
    </summary>
  </member>
  <member name="ID2D1ImageBrush::SetExtendModeX">
    <summary>
      <para>Sets how the content inside the source rectangle in the image brush will be extended on the x-axis.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1_1/nf-d2d1_1-id2d1imagebrush-setextendmodex" /></para>
      <param name="extendModeX">The extend mode on the x-axis of the image.</param>
    </summary>
  </member>
  <member name="D2D1_IMAGE_SOURCE_FROM_DXGI_OPTIONS">
    <summary>
      <para>Option flags controlling primary conversion performed by CreateImageSourceFromDxgi, if any.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1_3/ne-d2d1_3-d2d1_image_source_from_dxgi_options" /></para>
    </summary>
  </member>
  <member name="D2D1_IMAGE_SOURCE_FROM_DXGI_OPTIONS::D2D1_IMAGE_SOURCE_FROM_DXGI_OPTIONS_NONE">
    <summary>No primary conversion is performed.</summary>
  </member>
  <member name="D2D1_IMAGE_SOURCE_FROM_DXGI_OPTIONS::D2D1_IMAGE_SOURCE_FROM_DXGI_OPTIONS_LOW_QUALITY_PRIMARY_CONVERSION">
    <summary>Low quality primary conversion is performed.</summary>
  </member>
  <member name="D2D1_LOOKUPTABLE3D_PROP">
    <summary>
      <para>Identifiers for the properties of the 3D Lookup Table effect.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1effects_2/ne-d2d1effects_2-d2d1_lookuptable3d_prop" /></para>
    </summary>
  </member>
  <member name="D2D1_LOOKUPTABLE3D_PROP::D2D1_LOOKUPTABLE3D_PROP_LUT">
    <summary>The D2D1_LOOKUPTABLE3D_PROP_LUT property is a pointer to an <a href="https://docs.microsoft.com/windows/desktop/api/d2d1_3/nn-d2d1_3-id2d1lookuptable3d">ID2D1LookupTable3D</a> object.  The default value is null.</summary>
  </member>
  <member name="D2D1_LOOKUPTABLE3D_PROP::D2D1_LOOKUPTABLE3D_PROP_ALPHA_MODE">
    <summary>The D2D1_LOOKUPTABLE3D_PROP_ALPHA_MODE property is a <a href="https://docs.microsoft.com/windows/desktop/api/dcommon/ne-dcommon-d2d1_alpha_mode">D2D1_ALPHA_MODE</a> value indicating the alpha mode of the input file.
          See the About Alpha Modes section of the <a href="https://docs.microsoft.com/windows/desktop/Direct2D/supported-pixel-formats-and-alpha-modes">Supported Pixel Formats and Alpha Modes</a> topic for additional information.</summary>
  </member>
  <member name="D2D1_TRANSFORMED_IMAGE_SOURCE_OPTIONS">
    <summary>
      <para>Option flags for transformed image sources.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1_3/ne-d2d1_3-d2d1_transformed_image_source_options" /></para>
    </summary>
  </member>
  <member name="D2D1_TRANSFORMED_IMAGE_SOURCE_OPTIONS::D2D1_TRANSFORMED_IMAGE_SOURCE_OPTIONS_NONE">
    <summary>No option flags.</summary>
  </member>
  <member name="D2D1_TRANSFORMED_IMAGE_SOURCE_OPTIONS::D2D1_TRANSFORMED_IMAGE_SOURCE_OPTIONS_DISABLE_DPI_SCALE">
    <summary>Prevents the image source from being automatically scaled (by a ratio of the context DPI divided by 96) while drawn.</summary>
  </member>
  <member name="ID2D1ColorContext">
    <summary>
      <para>Represents a color context that can be used with an ID2D1Bitmap1 object.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1_1/nn-d2d1_1-id2d1colorcontext" /></para>
    </summary>
  </member>
  <member name="D2D1_SPOTSPECULAR_SCALE_MODE">
    <summary>
      <para>The interpolation mode the Spot-specular lighting effect uses to scale the image to the corresponding kernel unit length. There are six scale modes that range in quality and speed.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1effects/ne-d2d1effects-d2d1_spotspecular_scale_mode" /></para>
    </summary>
  </member>
  <member name="D2D1_SPOTSPECULAR_SCALE_MODE::D2D1_SPOTSPECULAR_SCALE_MODE_NEAREST_NEIGHBOR">
    <summary>Samples the nearest single point and uses that. This mode uses less processing time, but outputs the lowest quality image.</summary>
  </member>
  <member name="D2D1_SPOTSPECULAR_SCALE_MODE::D2D1_SPOTSPECULAR_SCALE_MODE_LINEAR">
    <summary>Uses a four point sample and linear interpolation. This mode outputs a higher quality image than nearest neighbor.</summary>
  </member>
  <member name="D2D1_SPOTSPECULAR_SCALE_MODE::D2D1_SPOTSPECULAR_SCALE_MODE_CUBIC">
    <summary>Uses a 16 sample cubic kernel for interpolation. This mode uses the most processing time, but outputs a higher quality image.</summary>
  </member>
  <member name="D2D1_SPOTSPECULAR_SCALE_MODE::D2D1_SPOTSPECULAR_SCALE_MODE_MULTI_SAMPLE_LINEAR">
    <summary>Uses 4 linear samples within a single pixel for good edge anti-aliasing. This mode is good for scaling down by small amounts on images with few pixels.</summary>
  </member>
  <member name="D2D1_SPOTSPECULAR_SCALE_MODE::D2D1_SPOTSPECULAR_SCALE_MODE_ANISOTROPIC">
    <summary>Uses anisotropic filtering to sample a pattern according to the transformed shape of the bitmap.</summary>
  </member>
  <member name="D2D1_SPOTSPECULAR_SCALE_MODE::D2D1_SPOTSPECULAR_SCALE_MODE_HIGH_QUALITY_CUBIC">
    <summary>Uses a variable size high quality cubic kernel to perform a pre-downscale the image if downscaling is involved in the transform matrix. Then uses the cubic interpolation mode for the final output.</summary>
  </member>
  <member name="ID2D1SvgPathData::GetSegmentDataCount">
    <summary>
      <para>Gets the size of the segment data array.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1svg/nf-d2d1svg-id2d1svgpathdata-getsegmentdatacount" /></para>
    </summary>
  </member>
  <member name="ID2D1RenderTarget::GetTextRenderingParams">
    <summary>
      <para>Retrieves the render target's current text rendering options.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1/nf-d2d1-id2d1rendertarget-gettextrenderingparams" /></para>
      <param name="textRenderingParams"> When this method returns, <i>textRenderingParams</i>contains the address  of a pointer to the render target's current text rendering options.</param>
    </summary>
  </member>
  <member name="ID2D1Multithread::Enter">
    <summary>
      <para>Enters the Direct2D API critical section, if it exists.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1_1/nf-d2d1_1-id2d1multithread-enter" /></para>
    </summary>
  </member>
  <member name="ID2D1CommandSink1">
    <summary>
      <para>This interface performs all the same functions as the existing ID2D1CommandSink interface. It also enables access to the new primitive blend modes, MIN and ADD, through its SetPrimitiveBlend1 method.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1_2/nn-d2d1_2-id2d1commandsink1" /></para>
    </summary>
  </member>
  <member name="D2D1_COLORMANAGEMENT_RENDERING_INTENT">
    <summary>
      <para>Specifies which ICC rendering intent the Color management effect should use.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1effects/ne-d2d1effects-d2d1_colormanagement_rendering_intent" /></para>
    </summary>
  </member>
  <member name="D2D1_COLORMANAGEMENT_RENDERING_INTENT::D2D1_COLORMANAGEMENT_RENDERING_INTENT_PERCEPTUAL">
    <summary>The effect compresses or expands the full color gamut of the image to fill the color gamut of the device, 
          so that gray balance is preserved but colorimetric accuracy may not be preserved.</summary>
  </member>
  <member name="D2D1_COLORMANAGEMENT_RENDERING_INTENT::D2D1_COLORMANAGEMENT_RENDERING_INTENT_RELATIVE_COLORIMETRIC">
    <summary>The effect preserves the chroma of colors in the image at the possible expense of hue and lightness.</summary>
  </member>
  <member name="D2D1_COLORMANAGEMENT_RENDERING_INTENT::D2D1_COLORMANAGEMENT_RENDERING_INTENT_SATURATION">
    <summary>The effect adjusts colors that fall outside the range of colors the output device renders to the closest color available. It does not preserve the white point.</summary>
  </member>
  <member name="D2D1_COLORMANAGEMENT_RENDERING_INTENT::D2D1_COLORMANAGEMENT_RENDERING_INTENT_ABSOLUTE_COLORIMETRIC">
    <summary>The effect adjusts any colors that fall outside the range that the output device can render to the closest color that can be rendered. The effect does not change the other colors and preserves the white point.</summary>
  </member>
  <member name="D2D1_GEOMETRY_RELATION">
    <summary>
      <para>Describes how one geometry object is spatially related to another geometry object.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1/ne-d2d1-d2d1_geometry_relation" /></para>
    </summary>
  </member>
  <member name="D2D1_GEOMETRY_RELATION::D2D1_GEOMETRY_RELATION_UNKNOWN">
    <summary>The relationship between the two geometries cannot be determined. This value is never returned by any D2D method.</summary>
  </member>
  <member name="D2D1_GEOMETRY_RELATION::D2D1_GEOMETRY_RELATION_DISJOINT">
    <summary>The two geometries  do not intersect at all.</summary>
  </member>
  <member name="D2D1_GEOMETRY_RELATION::D2D1_GEOMETRY_RELATION_IS_CONTAINED">
    <summary>The instance geometry is entirely contained by  the passed-in geometry.</summary>
  </member>
  <member name="D2D1_GEOMETRY_RELATION::D2D1_GEOMETRY_RELATION_CONTAINS">
    <summary>The instance geometry entirely contains the passed-in geometry.</summary>
  </member>
  <member name="D2D1_GEOMETRY_RELATION::D2D1_GEOMETRY_RELATION_OVERLAP">
    <summary>The two geometries overlap but neither completely contains the other.</summary>
  </member>
  <member name="ID2D1PrintControl::AddPage">
    <summary>
      <para>Converts Direct2D primitives in the passed-in command list into a fixed page representation for use by the print subsystem.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1_1/nf-d2d1_1-id2d1printcontrol-addpage" /></para>
      <param name="commandList">The command list that contains the rendering operations.</param>
      <param name="pageSize">The size of the page to add.</param>
      <param name="pagePrintTicketStream">The print ticket stream.</param>
      <param name="tag1">Contains the first label for subsequent drawing operations. This parameter is passed uninitialized. If NULL is specified, no value is retrieved for this parameter.</param>
      <param name="tag2">Contains the second label for subsequent drawing operations. This parameter is passed uninitialized. If NULL is specified, no value is retrieved for this parameter.</param>
    </summary>
  </member>
  <member name="ID2D1TransformGraph::GetInputCount">
    <summary>
      <para>Returns the number of inputs to the transform graph.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1effectauthor/nf-d2d1effectauthor-id2d1transformgraph-getinputcount" /></para>
    </summary>
  </member>
  <member name="ID2D1DeviceContext3">
    <summary>
      <para>This interface performs all the same functions as the ID2D1DeviceContext2 interface, plus it enables functionality for creating and drawing sprite batches.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1_3/nn-d2d1_3-id2d1devicecontext3" /></para>
    </summary>
  </member>
  <member name="ID2D1RenderTarget::GetTags">
    <summary>
      <para>Gets the label for subsequent drawing operations.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1/nf-d2d1-id2d1rendertarget-gettags" /></para>
      <param name="tag1">When this method returns, contains the first label for subsequent drawing operations. This parameter is passed uninitialized. If <b>NULL</b> is specified, no value is retrieved for this parameter.</param>
      <param name="tag2">When this method returns, contains the second label for subsequent drawing operations. This parameter is passed uninitialized. If <b>NULL</b> is specified, no value is retrieved for this parameter.</param>
    </summary>
  </member>
  <member name="ID2D1Factory1::CreateGdiMetafile">
    <summary>
      <para>Creates a new ID2D1GdiMetafile object that you can use to replay metafile content.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1_1/nf-d2d1_1-id2d1factory1-creategdimetafile" /></para>
      <param name="metafileStream">A stream object that has the metafile data.</param>
      <param name="metafile">The address of the newly created GDI metafile object.</param>
    </summary>
  </member>
  <member name="ID2D1DeviceContext::CreateColorContext">
    <summary>
      <para>Creates a color context.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1_1/nf-d2d1_1-id2d1devicecontext-createcolorcontext" /></para>
      <param name="space">The space  of color context to create.</param>
      <param name="profile">A buffer containing the ICC profile bytes used to initialize the color context when <i>space</i> is <a href="https://docs.microsoft.com/windows/desktop/api/d2d1_1/ne-d2d1_1-d2d1_color_space">D2D1_COLOR_SPACE_CUSTOM</a>.  For other types, the parameter is ignored and should be set to <b>NULL</b>.</param>
      <param name="profileSize">The size in bytes of <i>Profile</i>.</param>
      <param name="colorContext">When this method returns, contains the address of a pointer to a new color context object.</param>
    </summary>
  </member>
  <member name="D2D1_MORPHOLOGY_MODE">
    <summary>
      <para>The mode for the Morphology effect.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1effects/ne-d2d1effects-d2d1_morphology_mode" /></para>
    </summary>
  </member>
  <member name="D2D1_MORPHOLOGY_MODE::D2D1_MORPHOLOGY_MODE_ERODE">
    <summary>The maximum value from each RGB channel in the kernel is used.</summary>
  </member>
  <member name="D2D1_MORPHOLOGY_MODE::D2D1_MORPHOLOGY_MODE_DILATE">
    <summary>The minimum value from each RGB channel in the kernel is used.</summary>
  </member>
  <member name="ID2D1DrawInfo::SetPixelShaderConstantBuffer">
    <summary>
      <para>Sets the constant buffer for this transform's pixel shader.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1effectauthor/nf-d2d1effectauthor-id2d1drawinfo-setpixelshaderconstantbuffer" /></para>
      <param name="buffer">The data applied to the constant buffer.</param>
      <param name="bufferCount">The number of bytes of data in the constant buffer</param>
    </summary>
  </member>
  <member name="ID2D1SvgPathData::GetCommandsCount">
    <summary>
      <para>Gets the size of the commands array.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1svg/nf-d2d1svg-id2d1svgpathdata-getcommandscount" /></para>
    </summary>
  </member>
  <member name="ID2D1SvgElement::HasChildren">
    <summary>
      <para>Returns a boolean indicating whether this element has children.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1svg/nf-d2d1svg-id2d1svgelement-haschildren" /></para>
    </summary>
  </member>
  <member name="D2D1_FEATURE_DATA_DOUBLES">
    <summary>
      <para>Describes the support for doubles in shaders.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1effectauthor/ns-d2d1effectauthor-d2d1_feature_data_doubles" /></para>
    </summary>
  </member>
  <member name="D2D1_FEATURE_DATA_DOUBLES::doublePrecisionFloatShaderOps">
    <summary>TRUE is doubles are supported within the shaders.</summary>
  </member>
  <member name="ID2D1AnalysisTransform::ProcessAnalysisResults">
    <summary>
      <para>Supplies the analysis data to an analysis transform.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1effectauthor/nf-d2d1effectauthor-id2d1analysistransform-processanalysisresults" /></para>
      <param name="analysisData">The data that the transform will analyze.</param>
      <param name="analysisDataCount">The size of the analysis data.</param>
    </summary>
  </member>
  <member name="ID2D1Device4::SetMaximumColorGlyphCacheMemory">
    <summary>
      <para>Sets the maximum capacity of the color glyph cache.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1_3/nf-d2d1_3-id2d1device4-setmaximumcolorglyphcachememory" /></para>
      <param name="maximumInBytes">The maximum capacity of the color glyph cache.</param>
    </summary>
  </member>
  <member name="D2D1_2DAFFINETRANSFORM_INTERPOLATION_MODE">
    <summary>
      <para>The interpolation mode to be used with the 2D affine transform effect to scale the image. There are 6 scale modes that range in quality and speed.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1effects/ne-d2d1effects-d2d1_2daffinetransform_interpolation_mode" /></para>
    </summary>
  </member>
  <member name="D2D1_2DAFFINETRANSFORM_INTERPOLATION_MODE::D2D1_2DAFFINETRANSFORM_INTERPOLATION_MODE_NEAREST_NEIGHBOR">
    <summary>Samples the nearest single point and uses that. This mode uses less processing time, but outputs the lowest quality image.</summary>
  </member>
  <member name="D2D1_2DAFFINETRANSFORM_INTERPOLATION_MODE::D2D1_2DAFFINETRANSFORM_INTERPOLATION_MODE_LINEAR">
    <summary>Uses a four point sample and linear interpolation. This mode uses more processing time than the nearest neighbor mode, but outputs a higher quality image.</summary>
  </member>
  <member name="D2D1_2DAFFINETRANSFORM_INTERPOLATION_MODE::D2D1_2DAFFINETRANSFORM_INTERPOLATION_MODE_CUBIC">
    <summary>Uses a 16 sample cubic kernel for interpolation. This mode uses the most processing time, but outputs a higher quality image.</summary>
  </member>
  <member name="D2D1_2DAFFINETRANSFORM_INTERPOLATION_MODE::D2D1_2DAFFINETRANSFORM_INTERPOLATION_MODE_MULTI_SAMPLE_LINEAR">
    <summary>Uses 4 linear samples within a single pixel for good edge anti-aliasing. This mode is good for scaling down by small amounts on images with few pixels.</summary>
  </member>
  <member name="D2D1_2DAFFINETRANSFORM_INTERPOLATION_MODE::D2D1_2DAFFINETRANSFORM_INTERPOLATION_MODE_ANISOTROPIC">
    <summary>Uses anisotropic filtering to sample a pattern according to the transformed shape of the bitmap.</summary>
  </member>
  <member name="D2D1_2DAFFINETRANSFORM_INTERPOLATION_MODE::D2D1_2DAFFINETRANSFORM_INTERPOLATION_MODE_HIGH_QUALITY_CUBIC">
    <summary>Uses a variable size high quality cubic kernel to perform a pre-downscale the image if downscaling is involved in the transform matrix. Then uses the cubic interpolation mode for the final output.</summary>
  </member>
  <member name="ID2D1PathGeometry::GetFigureCount">
    <summary>
      <para>Retrieves the number of figures in the path geometry.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1/nf-d2d1-id2d1pathgeometry-getfigurecount" /></para>
      <param name="count">A pointer that receives the number of figures in the path geometry when this method returns. You must allocate storage for this parameter.</param>
    </summary>
  </member>
  <member name="ID2D1DeviceContext::GetPrimitiveBlend">
    <summary>
      <para>Returns the currently set primitive blend used by the device context.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1_1/nf-d2d1_1-id2d1devicecontext-getprimitiveblend" /></para>
    </summary>
  </member>
  <member name="ID2D1RadialGradientBrush::SetCenter">
    <summary>
      <para>Specifies the center of the gradient ellipse in the brush's coordinate space.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1/nf-d2d1-id2d1radialgradientbrush-setcenter" /></para>
      <param name="center">The center of the gradient ellipse, in the brush's coordinate space.</param>
    </summary>
  </member>
  <member name="D2D1_TURBULENCE_NOISE">
    <summary>
      <para>The turbulence noise mode for the Turbulence effect. Indicates whether to generate a bitmap based on Fractal Noise or the Turbulence function.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1effects/ne-d2d1effects-d2d1_turbulence_noise" /></para>
    </summary>
  </member>
  <member name="D2D1_TURBULENCE_NOISE::D2D1_TURBULENCE_NOISE_FRACTAL_SUM">
    <summary>Computes a sum of the octaves, shifting the output range from [-1, 1], to [0, 1].</summary>
  </member>
  <member name="D2D1_TURBULENCE_NOISE::D2D1_TURBULENCE_NOISE_TURBULENCE">
    <summary>Computes a sum of the absolute value of each octave.</summary>
  </member>
  <member name="D2D1_GAUSSIANBLUR_PROP">
    <summary>
      <para>Identifiers for properties of the Gaussian blur effect.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1effects/ne-d2d1effects-d2d1_gaussianblur_prop" /></para>
    </summary>
  </member>
  <member name="D2D1_GAUSSIANBLUR_PROP::D2D1_GAUSSIANBLUR_PROP_STANDARD_DEVIATION">
    <summary>The amount of blur to be applied to the image. You can compute the blur radius of the kernel by multiplying the standard deviation by 3.
            The units of both the standard deviation and blur radius are DIPs. A value of zero DIPs disables this effect entirely.
            

The type is FLOAT.

The default value is 3.0f.</summary>
  </member>
  <member name="D2D1_GAUSSIANBLUR_PROP::D2D1_GAUSSIANBLUR_PROP_OPTIMIZATION">
    <summary>The optimization mode.
            

The type is <a href="https://docs.microsoft.com/windows/desktop/api/d2d1effects/ne-d2d1effects-d2d1_gaussianblur_optimization">D2D1_GAUSSIANBLUR_OPTIMIZATION</a>.

The default value is D2D1_GAUSSIANBLUR_OPTIMIZATION_BALANCED.</summary>
  </member>
  <member name="D2D1_GAUSSIANBLUR_PROP::D2D1_GAUSSIANBLUR_PROP_BORDER_MODE">
    <summary>The mode used to calculate the border of the image, soft or hard.
            

The type is <a href="https://docs.microsoft.com/windows/desktop/api/d2d1effects/ne-d2d1effects-d2d1_gaussianblur_optimization">D2D1_GAUSSIANBLUR_OPTIMIZATION</a>.

The default value is D2D1_BORDER_MODE_SOFT.</summary>
  </member>
  <member name="D2D1_SVG_UNIT_TYPE">
    <summary>
      <para>Defines the coordinate system used for SVG gradient or clipPath elements.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1svg/ne-d2d1svg-d2d1_svg_unit_type" /></para>
    </summary>
  </member>
  <member name="D2D1_SVG_UNIT_TYPE::D2D1_SVG_UNIT_TYPE_USER_SPACE_ON_USE">
    <summary>The property is set to SVG's 'userSpaceOnUse' value.</summary>
  </member>
  <member name="D2D1_SVG_UNIT_TYPE::D2D1_SVG_UNIT_TYPE_OBJECT_BOUNDING_BOX">
    <summary>The property is set to SVG's 'objectBoundingBox' value.</summary>
  </member>
  <member name="D2D1_BLEND_PROP">
    <summary>
      <para>Identifiers for properties of the Blend effect.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1effects/ne-d2d1effects-d2d1_blend_prop" /></para>
    </summary>
  </member>
  <member name="D2D1_BLEND_PROP::D2D1_BLEND_PROP_MODE">
    <summary>The blend mode used for the effect.
          

The type is <a href="https://docs.microsoft.com/windows/desktop/api/d2d1effects/ne-d2d1effects-d2d1_blend_mode">D2D1_BLEND_MODE</a>.

The default value is D2D1_BLEND_MODE_MULTIPLY.</summary>
  </member>
  <member name="ID2D1SvgElement::GetSpecifiedAttributeNameLength">
    <summary>
      <para>Gets the string length of the name of the specified attribute at the given index.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1svg/nf-d2d1svg-id2d1svgelement-getspecifiedattributenamelength" /></para>
      <param name="index">The index of the attribute.</param>
      <param name="nameLength">Outputs the string length of the name of the specified attribute.</param>
      <param name="inherited">Indicates whether the attribute is set to the inherit value.</param>
    </summary>
  </member>
  <member name="ID2D1Factory">
    <summary>
      <para>Creates Direct2D resources.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1/nn-d2d1-id2d1factory" /></para>
    </summary>
  </member>
  <member name="D2D1_STROKE_STYLE_PROPERTIES">
    <summary>
      <para>Describes the stroke that outlines a shape.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1/ns-d2d1-d2d1_stroke_style_properties" /></para>
    </summary>
  </member>
  <member name="D2D1_STROKE_STYLE_PROPERTIES::startCap">
    <summary>The cap applied to the start of all the open figures in a stroked geometry.</summary>
  </member>
  <member name="D2D1_STROKE_STYLE_PROPERTIES::endCap">
    <summary>The cap applied to the end of all the open figures in a stroked geometry.</summary>
  </member>
  <member name="D2D1_STROKE_STYLE_PROPERTIES::dashCap">
    <summary>The shape  at either end of each dash segment.</summary>
  </member>
  <member name="D2D1_STROKE_STYLE_PROPERTIES::lineJoin">
    <summary>A value that describes how segments are joined. This value is ignored for a vertex if the segment flags specify that the segment should have a smooth join.</summary>
  </member>
  <member name="D2D1_STROKE_STYLE_PROPERTIES::miterLimit">
    <summary>The limit of the thickness of the join on a mitered corner. This value is always treated as though it is greater than or equal to 1.0f.</summary>
  </member>
  <member name="D2D1_STROKE_STYLE_PROPERTIES::dashStyle">
    <summary>A value that specifies whether the stroke has a dash pattern and, if so, the dash style.</summary>
  </member>
  <member name="D2D1_STROKE_STYLE_PROPERTIES::dashOffset">
    <summary>A value that specifies an offset in the dash sequence.   A positive dash offset value  shifts the dash pattern, in units of  stroke width, toward the start of the stroked geometry.  A negative dash offset value  shifts the dash pattern, in units of  stroke width, toward the end of the stroked geometry.</summary>
  </member>
  <member name="ID2D1SimplifiedGeometrySink::AddLines">
    <summary>
      <para>Creates a sequence of lines using the specified points and adds them to the geometry sink.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1/nf-d2d1-id2d1simplifiedgeometrysink-addlines" /></para>
      <param name="points">A pointer to an array of one or more points that describe the lines to draw. A line is drawn from the geometry sink's current point (the end point of the last segment drawn or the location specified by <a href="https://docs.microsoft.com/windows/win32/api/d2d1/nf-d2d1-id2d1simplifiedgeometrysink-beginfigure">BeginFigure</a>) to the first point in the array. if the array contains additional points, a line is drawn from the first point to the second point in the array, from the second point to the third point, and so on.</param>
      <param name="pointsCount">The number of points in the <i>points</i> array.</param>
    </summary>
  </member>
  <member name="ID2D1SvgElement::RemoveChild">
    <summary>
      <para>Removes the oldChild from the tree. Children of oldChild remain children of oldChild.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1svg/nf-d2d1svg-id2d1svgelement-removechild" /></para>
      <param name="oldChild">The child element to be removed. The oldChild element must be an immediate child of this element.</param>
    </summary>
  </member>
  <member name="ID2D1DrawingStateBlock1">
    <summary>
      <para>Implementation of a drawing state block that adds the functionality of primitive blend in addition to already existing antialias mode, transform, tags and text rendering mode.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1_1/nn-d2d1_1-id2d1drawingstateblock1" /></para>
    </summary>
  </member>
  <member name="ID2D1RenderInfo::SetCached">
    <summary>
      <para>Specifies that the output of the transform in which the render information is encapsulated is or is not cached.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1effectauthor/nf-d2d1effectauthor-id2d1renderinfo-setcached" /></para>
      <param name="isCached"><b>TRUE</b> if the output of the transform is cached; otherwise, <b>FALSE</b>.</param>
    </summary>
  </member>
  <member name="D2D1_BORDER_PROP">
    <summary>
      <para>Identifiers for properties of the Border effect.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1effects/ne-d2d1effects-d2d1_border_prop" /></para>
    </summary>
  </member>
  <member name="D2D1_BORDER_PROP::D2D1_BORDER_PROP_EDGE_MODE_X">
    <summary>The edge mode in the X direction for the effect. You can set this to clamp, wrap, or mirror.
            

The type is <a href="https://docs.microsoft.com/windows/desktop/api/d2d1effects/ne-d2d1effects-d2d1_border_edge_mode">D2D1_BORDER_EDGE_MODE</a>.

The default value is D2D1_BORDER_EDGE_MODE_CLAMP.</summary>
  </member>
  <member name="D2D1_BORDER_PROP::D2D1_BORDER_PROP_EDGE_MODE_Y">
    <summary>The edge mode in the Y direction for the effect. You can set this to clamp, wrap, or mirror.
            

The type is <a href="https://docs.microsoft.com/windows/desktop/api/d2d1effects/ne-d2d1effects-d2d1_border_edge_mode">D2D1_BORDER_EDGE_MODE</a>.

The default value is D2D1_BORDER_EDGE_MODE_CLAMP.</summary>
  </member>
  <member name="D2D1_BEZIER_SEGMENT">
    <summary>
      <para>Represents a cubic bezier segment drawn between two points.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1/ns-d2d1-d2d1_bezier_segment" /></para>
    </summary>
  </member>
  <member name="D2D1_BEZIER_SEGMENT::point1">
    <summary>The first control point for the Bezier segment.</summary>
  </member>
  <member name="D2D1_BEZIER_SEGMENT::point2">
    <summary>The second control point for the Bezier segment.</summary>
  </member>
  <member name="D2D1_BEZIER_SEGMENT::point3">
    <summary>The end point for the Bezier segment.</summary>
  </member>
  <member name="ID2D1DeviceContext4::DrawColorBitmapGlyphRun">
    <summary>
      <para>Draws a color bitmap glyph run using one of the bitmap formats.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1_3/nf-d2d1_3-id2d1devicecontext4-drawcolorbitmapglyphrun" /></para>
      <param name="glyphImageFormat">Specifies the format of the glyph image. Supported formats are DWRITE_GLYPH_IMAGE_FORMATS_PNG, DWRITE_GLYPH_IMAGE_FORMATS_JPEG,
          DWRITE_GLYPH_IMAGE_FORMATS_TIFF, or DWRITE_GLYPH_IMAGE_FORMATS_PREMULTIPLIED_B8G8R8A8.  This method will result in an error if the color glyph run does not contain the requested format.
          

Only one format can be specified at a time, combinations of flags are not valid input.</param>
      <param name="baselineOrigin">The origin of the baseline for the glyph run.</param>
      <param name="glyphRun">The glyphs to render.</param>
      <param name="measuringMode">Indicates the measuring method.</param>
      <param name="bitmapSnapOption">Specifies the pixel snapping policy when rendering color bitmap glyphs.</param>
    </summary>
  </member>
  <member name="D2D1_COLOR_INTERPOLATION_MODE">
    <summary>
      <para>Defines how to interpolate between colors.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1_1/ne-d2d1_1-d2d1_color_interpolation_mode" /></para>
    </summary>
  </member>
  <member name="D2D1_COLOR_INTERPOLATION_MODE::D2D1_COLOR_INTERPOLATION_MODE_STRAIGHT">
    <summary>Colors are interpolated with straight alpha.</summary>
  </member>
  <member name="D2D1_COLOR_INTERPOLATION_MODE::D2D1_COLOR_INTERPOLATION_MODE_PREMULTIPLIED">
    <summary>Colors are interpolated with premultiplied alpha.</summary>
  </member>
  <member name="ID2D1StrokeStyle::GetMiterLimit">
    <summary>
      <para>Retrieves the limit on the ratio of the miter length to half the stroke's thickness.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1/nf-d2d1-id2d1strokestyle-getmiterlimit" /></para>
    </summary>
  </member>
  <member name="ID2D1Factory6">
    <summary>
      <para>Creates Direct2D resources. This interface also enables the creation of ID2D1Device5 objects.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1_3/nn-d2d1_3-id2d1factory6" /></para>
    </summary>
  </member>
  <member name="ID2D1DrawingStateBlock::GetTextRenderingParams">
    <summary>
      <para>Retrieves the text-rendering configuration of the drawing state.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1/nf-d2d1-id2d1drawingstateblock-gettextrenderingparams" /></para>
      <param name="textRenderingParams">When this method returns, contains the address of a pointer to an <a href="https://docs.microsoft.com/windows/win32/api/dwrite/nn-dwrite-idwriterenderingparams">IDWriteRenderingParams</a> object that describes the text-rendering configuration of the drawing state.</param>
    </summary>
  </member>
  <member name="ID2D1DeviceContext::GetRenderingControls">
    <summary>
      <para>Gets the rendering controls that have been applied to the context.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1_1/nf-d2d1_1-id2d1devicecontext-getrenderingcontrols" /></para>
      <param name="renderingControls">When this method returns, contains a pointer to the rendering controls for this context.</param>
    </summary>
  </member>
  <member name="ID2D1DeviceContext6">
    <summary>
      <para>This interface performs all the same functions as the existing ID2D1DeviceContext5 interface, plus it enables access to the BlendImage method.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1_3/nn-d2d1_3-id2d1devicecontext6" /></para>
    </summary>
  </member>
  <member name="ID2D1SvgPointCollection::GetPointsCount">
    <summary>
      <para>Gets the number of points in the array.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1svg/nf-d2d1svg-id2d1svgpointcollection-getpointscount" /></para>
    </summary>
  </member>
  <member name="ID2D1DeviceContext">
    <summary>
      <para>Represents a set of state and command buffers that are used to render to a target.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1_1/nn-d2d1_1-id2d1devicecontext" /></para>
    </summary>
  </member>
  <member name="ID2D1SvgElement::GetTagNameLength">
    <summary>
      <para>Gets the string length of the tag name.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1svg/nf-d2d1svg-id2d1svgelement-gettagnamelength" /></para>
    </summary>
  </member>
  <member name="ID2D1BitmapBrush::GetBitmap">
    <summary>
      <para>Gets the bitmap source that this brush uses to paint.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1/nf-d2d1-id2d1bitmapbrush-getbitmap" /></para>
      <param name="bitmap">When this method returns, contains the address to a pointer to the bitmap with which this brush paints.</param>
    </summary>
  </member>
  <member name="ID2D1SvgDocument::GetViewportSize">
    <summary>
      <para>Returns the size of the initial viewport.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1svg/nf-d2d1svg-id2d1svgdocument-getviewportsize" /></para>
    </summary>
  </member>
  <member name="ID2D1ColorContext::GetProfileSize">
    <summary>
      <para>Gets the size of the color profile associated with the bitmap.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1_1/nf-d2d1_1-id2d1colorcontext-getprofilesize" /></para>
    </summary>
  </member>
  <member name="ID2D1Bitmap1">
    <summary>
      <para>Represents a bitmap that can be used as a surface for an ID2D1DeviceContext or mapped into system memory, and can contain additional color context information.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1_1/nn-d2d1_1-id2d1bitmap1" /></para>
    </summary>
  </member>
  <member name="ID2D1Ink::GetBounds">
    <summary>
      <para>Retrieve the bounds of the geometry, with an optional applied transform.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1_3/nf-d2d1_3-id2d1ink-getbounds" /></para>
      <param name="inkStyle">The ink style to be used in determining the bounds of this ink object.</param>
      <param name="worldTransform">The world transform to be used in determining the bounds of this ink object.</param>
      <param name="bounds">When this method returns, contains the bounds of this ink object.</param>
    </summary>
  </member>
  <member name="ID2D1RadialGradientBrush::GetCenter">
    <summary>
      <para>Retrieves the center of the gradient ellipse.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1/nf-d2d1-id2d1radialgradientbrush-getcenter" /></para>
    </summary>
  </member>
  <member name="ID2D1Bitmap::GetDpi">
    <summary>
      <para>Return the dots per inch (DPI) of the bitmap.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1/nf-d2d1-id2d1bitmap-getdpi" /></para>
      <param name="dpiX">The horizontal DPI of the image. You must allocate storage for this parameter.</param>
      <param name="dpiY">The vertical DPI of the image.  You must allocate storage for this parameter.</param>
    </summary>
  </member>
  <member name="ID2D1SvgDocument::SetRoot">
    <summary>
      <para>Sets the root element of the document.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1svg/nf-d2d1svg-id2d1svgdocument-setroot" /></para>
      <param name="root">The new root element of the document.</param>
    </summary>
  </member>
  <member name="D2D1_DRAWING_STATE_DESCRIPTION1">
    <summary>
      <para>Describes the drawing state of a device context.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1_1/ns-d2d1_1-d2d1_drawing_state_description1" /></para>
    </summary>
  </member>
  <member name="D2D1_DRAWING_STATE_DESCRIPTION1::antialiasMode">
    <summary>The antialiasing mode for subsequent nontext drawing operations.</summary>
  </member>
  <member name="D2D1_DRAWING_STATE_DESCRIPTION1::textAntialiasMode">
    <summary>The antialiasing mode for subsequent text and glyph drawing operations.</summary>
  </member>
  <member name="D2D1_DRAWING_STATE_DESCRIPTION1::tag1">
    <summary>A label for subsequent drawing operations.</summary>
  </member>
  <member name="D2D1_DRAWING_STATE_DESCRIPTION1::tag2">
    <summary>A label for subsequent drawing operations.</summary>
  </member>
  <member name="D2D1_DRAWING_STATE_DESCRIPTION1::transform">
    <summary>The transformation to apply to subsequent drawing operations.</summary>
  </member>
  <member name="D2D1_DRAWING_STATE_DESCRIPTION1::primitiveBlend">
    <summary>The blend mode for the device context to apply to subsequent drawing operations.</summary>
  </member>
  <member name="D2D1_DRAWING_STATE_DESCRIPTION1::unitMode">
    <summary>D2D1_UNIT_MODE</summary>
  </member>
  <member name="ID2D1SvgDocument::CreatePathData">
    <summary>
      <para>Creates a path data object which can be used to set a 'd' attribute on a 'path' element.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1svg/nf-d2d1svg-id2d1svgdocument-createpathdata" /></para>
      <param name="segmentData">An array of segment data.</param>
      <param name="segmentDataCount">Number of items in segmentData.</param>
      <param name="commands">An array of path commands.</param>
      <param name="commandsCount">The number of items in commands.</param>
      <param name="pathData">When this method completes, this points to the created path data.</param>
    </summary>
  </member>
  <member name="D2D1_BITMAPSOURCE_INTERPOLATION_MODE">
    <summary>
      <para>The interpolation mode used to scale the image in the Bitmap source effect.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1effects/ne-d2d1effects-d2d1_bitmapsource_interpolation_mode" /></para>
    </summary>
  </member>
  <member name="D2D1_BITMAPSOURCE_INTERPOLATION_MODE::D2D1_BITMAPSOURCE_INTERPOLATION_MODE_NEAREST_NEIGHBOR">
    <summary>Samples the nearest single point and uses that. Doesn't generate a mipmap.</summary>
  </member>
  <member name="D2D1_BITMAPSOURCE_INTERPOLATION_MODE::D2D1_BITMAPSOURCE_INTERPOLATION_MODE_LINEAR">
    <summary>Uses a four point sample and linear interpolation. Doesn't generate a mipmap.</summary>
  </member>
  <member name="D2D1_BITMAPSOURCE_INTERPOLATION_MODE::D2D1_BITMAPSOURCE_INTERPOLATION_MODE_CUBIC">
    <summary>Uses a 16 sample cubic kernel for interpolation. Doesn't generate a mipmap.</summary>
  </member>
  <member name="D2D1_BITMAPSOURCE_INTERPOLATION_MODE::D2D1_BITMAPSOURCE_INTERPOLATION_MODE_FANT">
    <summary>Uses the WIC fant interpolation, the same as the IWICBitmapScaler interface. Doesn't generate a mipmap.</summary>
  </member>
  <member name="D2D1_BITMAPSOURCE_INTERPOLATION_MODE::D2D1_BITMAPSOURCE_INTERPOLATION_MODE_MIPMAP_LINEAR">
    <summary>Generates mipmap chain in system memory using bilinear interpolation. For each mipmap the effect scales to the nearest multiple of 0.5 using bilinear interpolation 
          and then scales the remaining amount using linear interpolation.</summary>
  </member>
  <member name="ID2D1DeviceContext5::CreateColorContextFromDxgiColorSpace">
    <summary>
      <para>Creates a color context from a DXGI color space type. It is only valid to use this with the Color Management Effect in 'Best' mode.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1_3/nf-d2d1_3-id2d1devicecontext5-createcolorcontextfromdxgicolorspace" /></para>
      <param name="colorSpace">The color space to create the color context from.</param>
      <param name="colorContext">The created color context.</param>
    </summary>
  </member>
  <member name="ID2D1TransformedGeometry::GetTransform">
    <summary>
      <para>Retrieves the matrix used to transform the ID2D1TransformedGeometry object's source geometry.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1/nf-d2d1-id2d1transformedgeometry-gettransform" /></para>
      <param name="transform">A pointer that receives the matrix used to transform the <a href="https://docs.microsoft.com/windows/win32/api/d2d1/nn-d2d1-id2d1transformedgeometry">ID2D1TransformedGeometry</a> object's source geometry. You must allocate storage for this parameter.</param>
    </summary>
  </member>
  <member name="ID2D1RenderInfo::SetInputDescription">
    <summary>
      <para>Sets how a specific input to the transform should be handled by the renderer in terms of sampling.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1effectauthor/nf-d2d1effectauthor-id2d1renderinfo-setinputdescription" /></para>
      <param name="inputIndex">The index of the input that will have the input description applied.</param>
      <param name="inputDescription">The description of the input to be applied to the transform.</param>
    </summary>
  </member>
  <member name="ID2D1CommandSink::PopLayer">
    <summary>
      <para>Removes a layer from the layer and clip stack.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1_1/nf-d2d1_1-id2d1commandsink-poplayer" /></para>
    </summary>
  </member>
  <member name="ID2D1CommandSink::BeginDraw">
    <summary>
      <para>Notifies the implementation of the command sink that drawing is about to commence.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1_1/nf-d2d1_1-id2d1commandsink-begindraw" /></para>
    </summary>
  </member>
  <member name="ID2D1SvgElement::IsAttributeSpecified">
    <summary>
      <para>Returns a boolean indicating if the attribute is explicitly set on the element.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1svg/nf-d2d1svg-id2d1svgelement-isattributespecified" /></para>
      <param name="name">The name of the attribute.</param>
      <param name="inherited">Outputs whether the attribute is set to the inherit value.</param>
    </summary>
  </member>
  <member name="D2D1_TABLETRANSFER_PROP">
    <summary>
      <para>Identifiers for properties of the Table transfer effect.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1effects/ne-d2d1effects-d2d1_tabletransfer_prop" /></para>
    </summary>
  </member>
  <member name="D2D1_TABLETRANSFER_PROP::D2D1_TABLETRANSFER_PROP_RED_TABLE">
    <summary>The list of values used to define the transfer function for the Red channel.
            

The type is FLOAT[].

The default is {0.0f, 1.0f}.</summary>
  </member>
  <member name="D2D1_TABLETRANSFER_PROP::D2D1_TABLETRANSFER_PROP_RED_DISABLE">
    <summary>If you set this to TRUE the effect does not apply the transfer function to the Red channel.
            If you set this to FALSE it applies the RedTableTransfer function to the Red channel.
            

The type is BOOL.

The default is FALSE.</summary>
  </member>
  <member name="D2D1_TABLETRANSFER_PROP::D2D1_TABLETRANSFER_PROP_GREEN_TABLE">
    <summary>The list of values used to define the transfer function for the Green channel.
            

The type is FLOAT[].

The default is {0.0f, 1.0f}.</summary>
  </member>
  <member name="D2D1_TABLETRANSFER_PROP::D2D1_TABLETRANSFER_PROP_GREEN_DISABLE">
    <summary>If you set this to TRUE the effect does not apply the transfer function to the Green channel.
            If you set this to FALSE it applies the GreenTableTransfer function to the Green channel.
            

The type is BOOL.

The default is FALSE.</summary>
  </member>
  <member name="D2D1_TABLETRANSFER_PROP::D2D1_TABLETRANSFER_PROP_BLUE_TABLE">
    <summary>The list of values used to define the transfer function for the Blue channel.
            

The type is FLOAT[].

The default is {0.0f, 1.0f}.</summary>
  </member>
  <member name="D2D1_TABLETRANSFER_PROP::D2D1_TABLETRANSFER_PROP_BLUE_DISABLE">
    <summary>If you set this to TRUE the effect does not apply the transfer function to the Blue channel.
            If you set this to FALSE it applies the BlueTableTransfer function to the Blue channel.
            

The type is BOOL.

The default is FALSE.</summary>
  </member>
  <member name="D2D1_TABLETRANSFER_PROP::D2D1_TABLETRANSFER_PROP_ALPHA_TABLE">
    <summary>The list of values used to define the transfer function for the Alpha channel.
            

The type is FLOAT[].

The default is {0.0f, 1.0f}.</summary>
  </member>
  <member name="D2D1_TABLETRANSFER_PROP::D2D1_TABLETRANSFER_PROP_ALPHA_DISABLE">
    <summary>If you set this to TRUE the effect does not apply the transfer function to the Alpha channel.
            If you set this to FALSE it applies the AlphaTableTransfer function to the Alpha channel.
            

The type is BOOL.

The default is FALSE.</summary>
  </member>
  <member name="D2D1_TABLETRANSFER_PROP::D2D1_TABLETRANSFER_PROP_CLAMP_OUTPUT">
    <summary>Whether the effect clamps color values to between 0 and 1 before the effect passes the values to the next effect in the graph. The effect clamps the values before it premultiplies the alpha.
            

If you set this to TRUE the effect will clamp the values. If you set this to FALSE, the effect will not clamp the color values, 
            but other effects and the output surface may clamp the values if they are not of high enough precision.

The type is BOOL.

The default is FALSE.</summary>
  </member>
  <member name="D2D1_SVG_VIEWBOX">
    <summary>
      <para>Represents an SVG viewBox.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1svg/ns-d2d1svg-d2d1_svg_viewbox" /></para>
    </summary>
  </member>
  <member name="D2D1_SVG_VIEWBOX::x">
    <summary>X coordinate of the view box.</summary>
  </member>
  <member name="D2D1_SVG_VIEWBOX::y">
    <summary>Y coordinate of the view box.</summary>
  </member>
  <member name="D2D1_SVG_VIEWBOX::width">
    <summary>Width of the view box.</summary>
  </member>
  <member name="D2D1_SVG_VIEWBOX::height">
    <summary>Height of the view box.</summary>
  </member>
  <member name="ID2D1SpriteBatch::SetSprites">
    <summary>
      <para>Updates the properties of the specified sprites in this sprite batch.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1_3/nf-d2d1_3-id2d1spritebatch-setsprites" /></para>
      <param name="startIndex">The index of the first sprite in this sprite batch to update.</param>
      <param name="spriteCount">The number of sprites to update with new properties. This determines how many strides into each given array Direct2D will read.</param>
      <param name="destinationRectangles">A pointer to an array containing the destination rectangles specifying where to draw the sprites on the destination device context.</param>
      <param name="sourceRectangles">A pointer to an array containing the source rectangles specifying the regions of the source bitmap to draw as sprites.

          

Direct2D will use the entire source bitmap for sprites that are assigned a null value or the InfiniteRectU. 
          If this parameter is omitted entirely or set to a null value, then Direct2D will use the entire source bitmap for all the updated sprites.</param>
      <param name="colors">A pointer to an array containing the colors to apply to each sprite. The output color is the result of component-wise multiplication of the source bitmap color and the provided color. 
          The output color is not clamped.

          

Direct2D will not change the color of sprites that are assigned a null value. If this parameter is omitted entirely or set to a null value, 
          then Direct2D will not change the color of any of the updated sprites.</param>
      <param name="transforms">A pointer to an array containing the transforms to apply to each sprite’s destination rectangle.

          

Direct2D will not transform the destination rectangle of any sprites that are assigned a null value. 
          If this parameter is omitted entirely or set to a null value, then Direct2D will not transform the destination rectangle of any of the updated sprites.</param>
      <param name="destinationRectanglesStride">Specifies the distance, in bytes, between each rectangle in the destinationRectangles array. 
          If you provide a stride of 0, then the same destination rectangle will be used for each updated sprite.</param>
      <param name="sourceRectanglesStride">Specifies the distance, in bytes, between each rectangle in the sourceRectangles array (if that array is given). 
          If you provide a stride of 0, then the same source rectangle will be used for each updated sprite.</param>
      <param name="colorsStride">Specifies the distance, in bytes, between each color in the colors array (if that array is given). 
          If you provide a stride of 0, then the same color will be used for each updated sprite.</param>
      <param name="transformsStride">Specifies the distance, in bytes, between each transform in the transforms array (if that array is given). 
          If you provide a stride of 0, then the same transform will be used for each updated sprite.</param>
    </summary>
  </member>
  <member name="ID2D1LinearGradientBrush::SetStartPoint">
    <summary>
      <para>Sets the starting coordinates of the linear gradient in the brush's coordinate space.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1/nf-d2d1-id2d1lineargradientbrush-setstartpoint" /></para>
      <param name="startPoint">The starting two-dimensional coordinates of the linear gradient, in the brush's coordinate space.</param>
    </summary>
  </member>
  <member name="ID2D1GdiMetafile1::GetSourceBounds">
    <summary>
      <para>Gets the bounds of the metafile in source space in DIPs. This corresponds to the frame rect in an EMF/EMF+.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1_3/nf-d2d1_3-id2d1gdimetafile1-getsourcebounds" /></para>
      <param name="bounds">The bounds, in DIPs, of the metafile.</param>
    </summary>
  </member>
  <member name="ID2D1DeviceContext2::CreateTransformedImageSource">
    <summary>
      <para>Creates an image source which shares resources with an original.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1_3/nf-d2d1_3-id2d1devicecontext2-createtransformedimagesource" /></para>
      <param name="imageSource">The original image.</param>
      <param name="properties">Properties for the source image.</param>
      <param name="transformedImageSource">Receives the new image source.</param>
    </summary>
  </member>
  <member name="D2D1_TEXT_ANTIALIAS_MODE">
    <summary>
      <para>Describes the antialiasing mode used for drawing text.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1/ne-d2d1-d2d1_text_antialias_mode" /></para>
    </summary>
  </member>
  <member name="D2D1_TEXT_ANTIALIAS_MODE::D2D1_TEXT_ANTIALIAS_MODE_DEFAULT">
    <summary>Use the system default. See Remarks.</summary>
  </member>
  <member name="D2D1_TEXT_ANTIALIAS_MODE::D2D1_TEXT_ANTIALIAS_MODE_CLEARTYPE">
    <summary>Use ClearType antialiasing.</summary>
  </member>
  <member name="D2D1_TEXT_ANTIALIAS_MODE::D2D1_TEXT_ANTIALIAS_MODE_GRAYSCALE">
    <summary>Use grayscale antialiasing.</summary>
  </member>
  <member name="D2D1_TEXT_ANTIALIAS_MODE::D2D1_TEXT_ANTIALIAS_MODE_ALIASED">
    <summary>Do not use antialiasing.</summary>
  </member>
  <member name="ID2D1InkStyle::GetNibTransform">
    <summary>
      <para>Retrieves the transform to be applied to this style's nib shape.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1_3/nf-d2d1_3-id2d1inkstyle-getnibtransform" /></para>
      <param name="transform">When this method returns, contains a pointer to the transform to be applied to this style's nib shape.</param>
    </summary>
  </member>
  <member name="ID2D1ImageBrush::GetInterpolationMode">
    <summary>
      <para>Gets the interpolation mode of the image brush.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1_1/nf-d2d1_1-id2d1imagebrush-getinterpolationmode" /></para>
    </summary>
  </member>
  <member name="ID2D1SvgGlyphStyle::SetStroke">
    <summary>
      <para>Provides values to an SVG glyph for stroke properties. The brush with opacity set to 1 is used as the 'context-stroke'. The opacity of the brush is used as the 'context-stroke-opacity' value.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1_3/nf-d2d1_3-id2d1svgglyphstyle-setstroke" /></para>
      <param name="brush">Describes how the stroke is painted. A null brush will cause the context-stroke value to be none.</param>
      <param name="strokeWidth">Specifies the 'context-value' for the 'stroke-width' property.</param>
      <param name="dashes">Specifies the 'context-value' for the 'stroke-dasharray'
          property. A null value will cause the stroke-dasharray to be set to 'none'.</param>
      <param name="dashesCount">The the number of dashes in the dash array.</param>
      <param name="dashOffset">Specifies the 'context-value' for the 'stroke-dashoffset' property.</param>
    </summary>
  </member>
  <member name="D2D1_BITMAPSOURCE_PROP">
    <summary>
      <para>Identifiers for properties of the Bitmap source effect.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1effects/ne-d2d1effects-d2d1_bitmapsource_prop" /></para>
    </summary>
  </member>
  <member name="D2D1_BITMAPSOURCE_PROP::D2D1_BITMAPSOURCE_PROP_WIC_BITMAP_SOURCE">
    <summary>The IWICBitmapSource containing the image data to be loaded.
            

The type is IWICBitmapSource.

The default value is NULL.</summary>
  </member>
  <member name="D2D1_BITMAPSOURCE_PROP::D2D1_BITMAPSOURCE_PROP_SCALE">
    <summary>The scale amount in the X and Y direction. The effect multiplies the width by the X value and the height by the Y value. 
          This property is a D2D1_VECTOR_2F defined as: (X scale, Y scale). The scale amounts are FLOAT, unitless, and must be positive or 0.
          

The type is D2D1_VECTOR_2F.

The default value is {1.0f, 1.0f}.</summary>
  </member>
  <member name="D2D1_BITMAPSOURCE_PROP::D2D1_BITMAPSOURCE_PROP_INTERPOLATION_MODE">
    <summary>The interpolation mode used to scale the image.
          If the mode disables the mipmap, then BitmapSouce will cache the image at the resolution determined by the Scale and EnableDPICorrection properties.
          

The type is <a href="https://docs.microsoft.com/windows/desktop/api/d2d1effects/ne-d2d1effects-d2d1_bitmapsource_interpolation_mode">D2D1_BITMAPSOURCE_INTERPOLATION_MODE</a>.

The default value is D2D1_BITMAPSOURCE_INTERPOLATION_MODE_LINEAR.</summary>
  </member>
  <member name="D2D1_BITMAPSOURCE_PROP::D2D1_BITMAPSOURCE_PROP_ENABLE_DPI_CORRECTION">
    <summary>If you set this to TRUE, the effect will scale the input image to convert the DPI reported by IWICBitmapSource to the DPI of the device context. 
          The effect uses the interpolation mode you set with the InterpolationMode property. If you set this to FALSE, the effect uses a DPI of 96.0 for the output image.
          

The type is BOOL.

The default value is FALSE.</summary>
  </member>
  <member name="D2D1_BITMAPSOURCE_PROP::D2D1_BITMAPSOURCE_PROP_ALPHA_MODE">
    <summary>The alpha mode of the output. This can be either premultiplied or straight.
          

The type is <a href="https://docs.microsoft.com/windows/desktop/api/d2d1effects/ne-d2d1effects-d2d1_bitmapsource_alpha_mode">D2D1_BITMAPSOURCE_ALPHA_MODE</a>.

The default value is D2D1_BITMAPSOURCE_ALPHA_MODE_PREMULTIPLIED.</summary>
  </member>
  <member name="D2D1_BITMAPSOURCE_PROP::D2D1_BITMAPSOURCE_PROP_ORIENTATION">
    <summary>A flip and/or rotation operation to be performed on the image.
          

The type is <a href="https://docs.microsoft.com/windows/desktop/api/d2d1effects/ne-d2d1effects-d2d1_bitmapsource_orientation">D2D1_BITMAPSOURCE_ORIENTATION</a>.

The default value is D2D1_BITMAPSOURCE_ORIENTATION_DEFAULT.</summary>
  </member>
  <member name="ID2D1GradientMesh::GetPatches">
    <summary>
      <para>Returns a subset of the patches that make up this gradient mesh.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1_3/nf-d2d1_3-id2d1gradientmesh-getpatches" /></para>
      <param name="startIndex">Index of the first patch to return.</param>
      <param name="patches">A pointer to the array to be filled with the patch data.</param>
      <param name="patchesCount">The number of patches to be returned.</param>
    </summary>
  </member>
  <member name="D2D1_DIRECTIONALBLUR_OPTIMIZATION">
    <summary>
      <para>Specifies the optimization mode for the Directional blur effect.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1effects/ne-d2d1effects-d2d1_directionalblur_optimization" /></para>
    </summary>
  </member>
  <member name="D2D1_DIRECTIONALBLUR_OPTIMIZATION::D2D1_DIRECTIONALBLUR_OPTIMIZATION_SPEED">
    <summary>Applies internal optimizations such as pre-scaling at relatively small radii. Uses linear filtering.</summary>
  </member>
  <member name="D2D1_DIRECTIONALBLUR_OPTIMIZATION::D2D1_DIRECTIONALBLUR_OPTIMIZATION_BALANCED">
    <summary>Uses the same optimization thresholds as Speed mode, but uses trilinear filtering.</summary>
  </member>
  <member name="D2D1_DIRECTIONALBLUR_OPTIMIZATION::D2D1_DIRECTIONALBLUR_OPTIMIZATION_QUALITY">
    <summary>Only uses internal optimizations with large blur radii, where approximations are less likely to be visible. Uses trilinear filtering.</summary>
  </member>
  <member name="ID2D1GeometrySink::AddQuadraticBeziers">
    <summary>
      <para>Adds a sequence of quadratic Bezier segments as an array in a single call.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1/nf-d2d1-id2d1geometrysink-addquadraticbeziers" /></para>
      <param name="beziers">An array of a sequence of quadratic Bezier segments.</param>
      <param name="beziersCount">A value indicating the number of quadratic Bezier segments in <i>beziers</i>.</param>
    </summary>
  </member>
  <member name="D2D1_COLORMANAGEMENT_QUALITY">
    <summary>
      <para>The quality level of the transform for the Color management effect.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1effects/ne-d2d1effects-d2d1_colormanagement_quality" /></para>
    </summary>
  </member>
  <member name="D2D1_COLORMANAGEMENT_QUALITY::D2D1_COLORMANAGEMENT_QUALITY_PROOF">
    <summary>The lowest quality mode. This mode requires feature level 9_1 or above.</summary>
  </member>
  <member name="D2D1_COLORMANAGEMENT_QUALITY::D2D1_COLORMANAGEMENT_QUALITY_NORMAL">
    <summary>Normal quality mode. This mode requires feature level 9_1 or above.</summary>
  </member>
  <member name="D2D1_COLORMANAGEMENT_QUALITY::D2D1_COLORMANAGEMENT_QUALITY_BEST">
    <summary>The best quality mode. This mode requires feature level 10_0 or above, as well as floating point precision buffers. 
          This mode supports floating point precision as well as extended range as defined in the ICC v4.3 specification.</summary>
  </member>
  <member name="ID2D1SvgAttribute::Clone">
    <summary>
      <para>Creates a clone of this attribute value. On creation, the cloned attribute is not set on any element.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1svg/nf-d2d1svg-id2d1svgattribute-clone" /></para>
      <param name="attribute">Specifies the attribute value to clone.</param>
    </summary>
  </member>
  <member name="D2D1_HISTOGRAM_PROP">
    <summary>
      <para>Identifiers for properties of the Histogram effect.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1effects/ne-d2d1effects-d2d1_histogram_prop" /></para>
    </summary>
  </member>
  <member name="D2D1_HISTOGRAM_PROP::D2D1_HISTOGRAM_PROP_NUM_BINS">
    <summary>Specifies the number of bins used for the histogram. The range of intensity values that fall into a particular bucket depend on the number of specified buckets. 
          

The type is UINT32.

The default is 256.</summary>
  </member>
  <member name="D2D1_HISTOGRAM_PROP::D2D1_HISTOGRAM_PROP_CHANNEL_SELECT">
    <summary>Specifies the channel used to generate the histogram. This effect has a single data output corresponding to the specified channel.
          

The type is <a href="https://docs.microsoft.com/windows/desktop/api/d2d1effects/ne-d2d1effects-d2d1_channel_selector">D2D1_CHANNEL_SELECTOR</a>.

The default is D2D1_CHANNEL_SELECTOR_R.</summary>
  </member>
  <member name="D2D1_HISTOGRAM_PROP::D2D1_HISTOGRAM_PROP_HISTOGRAM_OUTPUT">
    <summary>The output array.
          

The type is FLOAT[].</summary>
  </member>
  <member name="D2D1_BITMAP_BRUSH_PROPERTIES1">
    <summary>
      <para>Describes the extend modes and the interpolation mode of an ID2D1BitmapBrush.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1_1/ns-d2d1_1-d2d1_bitmap_brush_properties1" /></para>
    </summary>
  </member>
  <member name="D2D1_BITMAP_BRUSH_PROPERTIES1::extendModeX">
    <summary>A value that describes how the brush horizontally tiles those areas that extend past its bitmap.</summary>
  </member>
  <member name="D2D1_BITMAP_BRUSH_PROPERTIES1::extendModeY">
    <summary>A value that describes how the brush vertically tiles those areas that extend past its bitmap.</summary>
  </member>
  <member name="D2D1_BITMAP_BRUSH_PROPERTIES1::interpolationMode">
    <summary>A value that specifies how the bitmap is interpolated when it is scaled or rotated.</summary>
  </member>
  <member name="D2D1_HWND_RENDER_TARGET_PROPERTIES">
    <summary>
      <para>Contains the HWND, pixel size, and presentation options for an ID2D1HwndRenderTarget.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1/ns-d2d1-d2d1_hwnd_render_target_properties" /></para>
    </summary>
  </member>
  <member name="D2D1_HWND_RENDER_TARGET_PROPERTIES::hwnd">
    <summary>The HWND to which the render target issues the output from its drawing commands.</summary>
  </member>
  <member name="D2D1_HWND_RENDER_TARGET_PROPERTIES::pixelSize">
    <summary>The size of the render target, in pixels.</summary>
  </member>
  <member name="D2D1_HWND_RENDER_TARGET_PROPERTIES::presentOptions">
    <summary>A value that specifies whether the render target retains the frame after it is presented and whether the render target waits for the device to refresh before presenting.</summary>
  </member>
  <member name="ID2D1Device5::CreateDeviceContext">
    <summary>
      <para>Creates a new device context with no initially assigned target.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1_3/nf-d2d1_3-id2d1device5-createdevicecontext" /></para>
      <param name="options">Options for creating the device context.</param>
      <param name="deviceContext5">The created device context.</param>
    </summary>
  </member>
  <member name="D2D1_ELLIPSE">
    <summary>
      <para>Contains the center point, x-radius, and y-radius of an ellipse.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1/ns-d2d1-d2d1_ellipse" /></para>
    </summary>
  </member>
  <member name="D2D1_ELLIPSE::point">
    <summary>The center point of the ellipse.</summary>
  </member>
  <member name="D2D1_ELLIPSE::radiusX">
    <summary>The X-radius of the ellipse.</summary>
  </member>
  <member name="D2D1_ELLIPSE::radiusY">
    <summary>The Y-radius of the ellipse.</summary>
  </member>
  <member name="ID2D1Transform">
    <summary>
      <para>Represents the base interface for all of the transforms implemented by the transform author.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1effectauthor/nn-d2d1effectauthor-id2d1transform" /></para>
    </summary>
  </member>
  <member name="ID2D1Device::SetMaximumTextureMemory">
    <summary>
      <para>Sets the maximum amount of texture memory Direct2D accumulates before it purges the image caches and cached texture allocations.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1_1/nf-d2d1_1-id2d1device-setmaximumtexturememory" /></para>
      <param name="maximumInBytes">The new maximum texture memory in bytes.</param>
    </summary>
  </member>
  <member name="ID2D1RenderTarget::GetTransform">
    <summary>
      <para>Gets the current transform of the render target.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1/nf-d2d1-id2d1rendertarget-gettransform" /></para>
      <param name="transform">When this returns, contains the current transform of the render target. This parameter is passed uninitialized.</param>
    </summary>
  </member>
  <member name="D2D1_BORDER_EDGE_MODE">
    <summary>
      <para>The edge mode for the Border effect.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1effects/ne-d2d1effects-d2d1_border_edge_mode" /></para>
    </summary>
  </member>
  <member name="D2D1_BORDER_EDGE_MODE::D2D1_BORDER_EDGE_MODE_CLAMP">
    <summary>Repeats the pixels from the edges of the image.</summary>
  </member>
  <member name="D2D1_BORDER_EDGE_MODE::D2D1_BORDER_EDGE_MODE_WRAP">
    <summary>Uses pixels from the opposite end edge of the image.</summary>
  </member>
  <member name="D2D1_BORDER_EDGE_MODE::D2D1_BORDER_EDGE_MODE_MIRROR">
    <summary>Reflects pixels about the edge of the image.</summary>
  </member>
  <member name="ID2D1GeometrySink">
    <summary>
      <para>Describes a geometric path that can contain lines, arcs, cubic Bezier curves, and quadratic Bezier curves.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1/nn-d2d1-id2d1geometrysink" /></para>
    </summary>
  </member>
  <member name="ID2D1Effect::SetInput">
    <summary>
      <para>Sets the given input image by index.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1_1/nf-d2d1_1-id2d1effect-setinput" /></para>
      <param name="index">The index of the image to set.</param>
      <param name="input">The input image to set.</param>
      <param name="invalidate">Whether to invalidate the graph at the location of the effect input</param>
    </summary>
  </member>
  <member name="ID2D1BlendTransform">
    <summary>
      <para>Provides methods to allow a blend operation to be inserted into a transform graph.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1effectauthor/nn-d2d1effectauthor-id2d1blendtransform" /></para>
    </summary>
  </member>
  <member name="ID2D1EffectContext::CreateEffect">
    <summary>
      <para>Creates a Direct2D effect for the specified class ID.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1effectauthor/nf-d2d1effectauthor-id2d1effectcontext-createeffect" /></para>
      <param name="effectId">The built-in or registered effect ID to create the effect. See <a href="https://docs.microsoft.com/windows/desktop/Direct2D/built-in-effects">Built-in Effects</a> for a list of effect IDs.</param>
      <param name="effect">When this method returns, contains the address of a pointer to the effect.</param>
    </summary>
  </member>
  <member name="ID2D1ColorContext1::GetSimpleColorProfile">
    <summary>
      <para>Retrieves a set simple color profile.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1_3/nf-d2d1_3-id2d1colorcontext1-getsimplecolorprofile" /></para>
      <param name="simpleProfile">Pointer to a D2D1_SIMPLE_COLOR_PROFILE that will contain the simple color profile when the method returns.</param>
    </summary>
  </member>
  <member name="D2D1_SPOTDIFFUSE_PROP">
    <summary>
      <para>Identifiers for properties of the Spot-diffuse lighting effect.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1effects/ne-d2d1effects-d2d1_spotdiffuse_prop" /></para>
    </summary>
  </member>
  <member name="D2D1_SPOTDIFFUSE_PROP::D2D1_SPOTDIFFUSE_PROP_LIGHT_POSITION">
    <summary>The light position of the point light source. The property is a D2D1_VECTOR_3F defined as (x, y, z). The units are in device-independent pixels (DIPs) and are unbounded.
            

The type is <a href="https://docs.microsoft.com/windows/desktop/api/dcommon/ns-dcommon-d2d_vector_3f">D2D1_VECTOR_3F</a>.
            

The default value is {0.0f, 0.0f, 0.0f}.</summary>
  </member>
  <member name="D2D1_SPOTDIFFUSE_PROP::D2D1_SPOTDIFFUSE_PROP_POINTS_AT">
    <summary>Where the spot light is focused. The property is exposed as a D2D1_VECTOR_3F with – (x, y, z). The units are in DIPs and the values are unbounded.
            

The type is <a href="https://docs.microsoft.com/windows/desktop/api/dcommon/ns-dcommon-d2d_vector_3f">D2D1_VECTOR_3F</a>.
            

The default value is {0.0f, 0.0f, 0.0f}.</summary>
  </member>
  <member name="D2D1_SPOTDIFFUSE_PROP::D2D1_SPOTDIFFUSE_PROP_FOCUS">
    <summary>The focus of the spot light. This property is unitless and is defined between 0 and 200.
            

The type is FLOAT.

The default value is 1.0f.</summary>
  </member>
  <member name="D2D1_SPOTDIFFUSE_PROP::D2D1_SPOTDIFFUSE_PROP_LIMITING_CONE_ANGLE">
    <summary>The cone angle that restricts the region where the light is projected. No light is projected outside the cone. The limiting cone angle is the angle between the spot light axis (the axis between the LightPosition and PointsAt properties) and the spot light cone. This property is defined in degrees and must be between 0 to 90 degrees.
            

The type is FLOAT.

The default value is 90.0f.</summary>
  </member>
  <member name="D2D1_SPOTDIFFUSE_PROP::D2D1_SPOTDIFFUSE_PROP_DIFFUSE_CONSTANT">
    <summary>The ratio of diffuse reflection to amount of incoming light. This property must be between 0 and 10,000 and is unitless.
            

The type is FLOAT.

The default value is 1.0f.</summary>
  </member>
  <member name="D2D1_SPOTDIFFUSE_PROP::D2D1_SPOTDIFFUSE_PROP_SURFACE_SCALE">
    <summary>The scale factor in the Z direction. The surface scale is unitless and must be between 0 and 10,000.
            

The type is FLOAT.

The default value is 1.0f.</summary>
  </member>
  <member name="D2D1_SPOTDIFFUSE_PROP::D2D1_SPOTDIFFUSE_PROP_COLOR">
    <summary>The color of the incoming light. This property is exposed as a Vector 3 – (R, G, B) and used to compute L<sub>R</sub>, L<sub>G</sub>, L<sub>B</sub>.
            

The type is <a href="https://docs.microsoft.com/windows/desktop/api/dcommon/ns-dcommon-d2d_vector_3f">D2D1_VECTOR_3F</a>.

The default value is {1.0f, 1.0f, 1.0f}</summary>
  </member>
  <member name="D2D1_SPOTDIFFUSE_PROP::D2D1_SPOTDIFFUSE_PROP_KERNEL_UNIT_LENGTH">
    <summary>The size of an element in the Sobel kernel used to generate the surface normal in the X and Y direction. This property maps to the dx and dy values in the Sobel gradient. 
            This property is a <a href="https://docs.microsoft.com/windows/desktop/api/dcommon/ns-dcommon-d2d_vector_2f">D2D1_VECTOR_2F</a>(Kernel Unit Length X, Kernel Unit Length Y) and is defined in (DIPs/Kernel Unit). 
            The effect uses bilinear interpolation to scale the bitmap to match size of kernel elements.
            

The type is <a href="https://docs.microsoft.com/windows/desktop/api/dcommon/ns-dcommon-d2d_vector_2f">D2D1_VECTOR_2F</a>.
            

The default value is {1.0f, 1.0f}.</summary>
  </member>
  <member name="D2D1_SPOTDIFFUSE_PROP::D2D1_SPOTDIFFUSE_PROP_SCALE_MODE">
    <summary>The interpolation mode the effect uses to scale the image to the corresponding kernel unit length. There are six scale modes that range in quality and speed.
            

The type is <a href="https://docs.microsoft.com/windows/desktop/api/d2d1effects/ne-d2d1effects-d2d1_spotdiffuse_scale_mode">D2D1_SPOTDIFFUSE_SCALE_MODE</a>.
            

The default value is D2D1_SPOTDIFFUSE_SCALE_MODE_LINEAR.</summary>
  </member>
  <member name="ID2D1SvgGlyphStyle::GetStrokeDashesCount">
    <summary>
      <para>Returns the number of dashes in the dash array.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1_3/nf-d2d1_3-id2d1svgglyphstyle-getstrokedashescount" /></para>
    </summary>
  </member>
  <member name="D2D1_EDGEDETECTION_MODE">
    <summary>
      <para>Values for the D2D1_EDGEDETECTION_PROP_MODE property of the Edge Detection effect.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1effects_2/ne-d2d1effects_2-d2d1_edgedetection_mode" /></para>
    </summary>
  </member>
  <member name="D2D1_EDGEDETECTION_MODE::D2D1_EDGEDETECTION_MODE_SOBEL">
    <summary>Indicates the Sobel operator should be used for edge detection.</summary>
  </member>
  <member name="D2D1_EDGEDETECTION_MODE::D2D1_EDGEDETECTION_MODE_PREWITT">
    <summary>Indicates the Prewitt operator should be used for edge detection.</summary>
  </member>
  <member name="ID2D1BitmapBrush::SetBitmap">
    <summary>
      <para>Specifies the bitmap source that this brush uses to paint.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1/nf-d2d1-id2d1bitmapbrush-setbitmap" /></para>
      <param name="bitmap">The bitmap source used by the brush.</param>
    </summary>
  </member>
  <member name="D2D1_SVG_ATTRIBUTE_POD_TYPE">
    <summary>
      <para>Defines the type of SVG POD attribute to set or get.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1svg/ne-d2d1svg-d2d1_svg_attribute_pod_type" /></para>
    </summary>
  </member>
  <member name="D2D1_SVG_ATTRIBUTE_POD_TYPE::D2D1_SVG_ATTRIBUTE_POD_TYPE_FLOAT">
    <summary>The attribute is a FLOAT.</summary>
  </member>
  <member name="D2D1_SVG_ATTRIBUTE_POD_TYPE::D2D1_SVG_ATTRIBUTE_POD_TYPE_COLOR">
    <summary>The attribute is a D2D1_COLOR_F.</summary>
  </member>
  <member name="D2D1_SVG_ATTRIBUTE_POD_TYPE::D2D1_SVG_ATTRIBUTE_POD_TYPE_FILL_MODE">
    <summary>The attribute is a D2D1_FILL_MODE.</summary>
  </member>
  <member name="D2D1_SVG_ATTRIBUTE_POD_TYPE::D2D1_SVG_ATTRIBUTE_POD_TYPE_DISPLAY">
    <summary>The attribute is a D2D1_SVG_DISPLAY.</summary>
  </member>
  <member name="D2D1_SVG_ATTRIBUTE_POD_TYPE::D2D1_SVG_ATTRIBUTE_POD_TYPE_OVERFLOW">
    <summary>The attribute is a D2D1_SVG_OVERFLOW.</summary>
  </member>
  <member name="D2D1_SVG_ATTRIBUTE_POD_TYPE::D2D1_SVG_ATTRIBUTE_POD_TYPE_LINE_CAP">
    <summary>The attribute is a D2D1_SVG_LINE_CAP.</summary>
  </member>
  <member name="D2D1_SVG_ATTRIBUTE_POD_TYPE::D2D1_SVG_ATTRIBUTE_POD_TYPE_LINE_JOIN">
    <summary>The attribute is a D2D1_SVG_LINE_JOIN.</summary>
  </member>
  <member name="D2D1_SVG_ATTRIBUTE_POD_TYPE::D2D1_SVG_ATTRIBUTE_POD_TYPE_VISIBILITY">
    <summary>The attribute is a D2D1_SVG_VISIBILITY.</summary>
  </member>
  <member name="D2D1_SVG_ATTRIBUTE_POD_TYPE::D2D1_SVG_ATTRIBUTE_POD_TYPE_MATRIX">
    <summary>The attribute is a D2D1_MATRIX_3X2_F.</summary>
  </member>
  <member name="D2D1_SVG_ATTRIBUTE_POD_TYPE::D2D1_SVG_ATTRIBUTE_POD_TYPE_UNIT_TYPE">
    <summary>The attribute is a D2D1_SVG_UNIT_TYPE.</summary>
  </member>
  <member name="D2D1_SVG_ATTRIBUTE_POD_TYPE::D2D1_SVG_ATTRIBUTE_POD_TYPE_EXTEND_MODE">
    <summary>The attribute is a D2D1_EXTEND_MODE.</summary>
  </member>
  <member name="D2D1_SVG_ATTRIBUTE_POD_TYPE::D2D1_SVG_ATTRIBUTE_POD_TYPE_PRESERVE_ASPECT_RATIO">
    <summary>The attribute is a D2D1_SVG_PRESERVE_ASPECT_RATIO.</summary>
  </member>
  <member name="D2D1_SVG_ATTRIBUTE_POD_TYPE::D2D1_SVG_ATTRIBUTE_POD_TYPE_VIEWBOX">
    <summary>The attribute is a D2D1_SVG_VIEWBOX.</summary>
  </member>
  <member name="D2D1_SVG_ATTRIBUTE_POD_TYPE::D2D1_SVG_ATTRIBUTE_POD_TYPE_LENGTH">
    <summary>The attribute is a D2D1_SVG_LENGTH.</summary>
  </member>
  <member name="D2D1_POINTSPECULAR_PROP">
    <summary>
      <para>Identifiers for properties of the Point-specular lighting effect.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1effects/ne-d2d1effects-d2d1_pointspecular_prop" /></para>
    </summary>
  </member>
  <member name="D2D1_POINTSPECULAR_PROP::D2D1_POINTSPECULAR_PROP_LIGHT_POSITION">
    <summary>The light position of the point light source. The property is a D2D1_VECTOR_3F defined as (x, y, z). The units are in device-independent pixels (DIPs) and the values are unitless and unbounded.
            

The type is D2D1_VECTOR_3F.

The default value is {0.0f, 0.0f, 0.0f}.</summary>
  </member>
  <member name="D2D1_POINTSPECULAR_PROP::D2D1_POINTSPECULAR_PROP_SPECULAR_EXPONENT">
    <summary>The exponent for the specular term in the Phong lighting equation. A larger value corresponds to a more reflective surface. This value is unitless and must be between 1.0 and 128.
            

The type is FLOAT.

The default value is 1.0f.</summary>
  </member>
  <member name="D2D1_POINTSPECULAR_PROP::D2D1_POINTSPECULAR_PROP_SPECULAR_CONSTANT">
    <summary>The ratio of specular reflection to the incoming light. The value is unitless and must be between 0 and 10,000.
            

The type is FLOAT.

The default value is 1.0f.</summary>
  </member>
  <member name="D2D1_POINTSPECULAR_PROP::D2D1_POINTSPECULAR_PROP_SURFACE_SCALE">
    <summary>The scale factor in the Z direction for generating a height map. The value is unitless and must be between 0 and 10,000.
            

The type is FLOAT.

The default value is 1.0f.</summary>
  </member>
  <member name="D2D1_POINTSPECULAR_PROP::D2D1_POINTSPECULAR_PROP_COLOR">
    <summary>The color of the incoming light. This property is exposed as a <a href="https://docs.microsoft.com/windows/desktop/api/dcommon/ns-dcommon-d2d_vector_3f">D2D1_VECTOR_3F</a> – (R, G, B) and used to compute LR, LG, LB.
            

The type is <a href="https://docs.microsoft.com/windows/desktop/api/dcommon/ns-dcommon-d2d_vector_3f">D2D1_VECTOR_3F</a>.

The default value is {1.0f, 1.0f, 1.0f}.</summary>
  </member>
  <member name="D2D1_POINTSPECULAR_PROP::D2D1_POINTSPECULAR_PROP_KERNEL_UNIT_LENGTH">
    <summary>The size of an element in the Sobel kernel used to generate the surface normal in the X and Y directions. This property maps to the dx and dy values in the Sobel gradient. 
            This property is a <a href="https://docs.microsoft.com/windows/desktop/api/dcommon/ns-dcommon-d2d_vector_2f">D2D1_VECTOR_2F</a>(Kernel Unit Length X, Kernel Unit Length Y) and is defined in (DIPs/Kernel Unit). 
            The effect uses bilinear interpolation to scale the bitmap to match size of kernel elements.
            

The type is <a href="https://docs.microsoft.com/windows/desktop/api/dcommon/ns-dcommon-d2d_vector_2f">D2D1_VECTOR_2F</a>.

The default value is {1.0f, 1.0f}.</summary>
  </member>
  <member name="D2D1_POINTSPECULAR_PROP::D2D1_POINTSPECULAR_PROP_SCALE_MODE">
    <summary>The interpolation mode the effect uses to scale the image to the corresponding kernel unit length. There are six scale modes that range in quality and speed.
            

The type is <a href="https://docs.microsoft.com/windows/desktop/api/d2d1effects/ne-d2d1effects-d2d1_pointspecular_scale_mode">D2D1_POINTSPECULAR_SCALE_MODE</a>.

The default value is D2D1_POINTSPECULAR_SCALE_MODE_LINEAR.</summary>
  </member>
  <member name="ID2D1RenderTarget">
    <summary>
      <para>Represents an object that can receive drawing commands. Interfaces that inherit from ID2D1RenderTarget render the drawing commands they receive in different ways.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1/nn-d2d1-id2d1rendertarget" /></para>
    </summary>
  </member>
  <member name="ID2D1CommandSink2::DrawGradientMesh">
    <summary>
      <para>Renders a given gradient mesh to the target.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1_3/nf-d2d1_3-id2d1commandsink2-drawgradientmesh" /></para>
      <param name="gradientMesh">The gradient mesh to be rendered.</param>
    </summary>
  </member>
  <member name="ID2D1Device4">
    <summary>
      <para>Represents a resource domain whose objects and device contexts can be used together. This interface performs all the same functions as the ID2D1Device3 interface. It also enables the creation of ID2D1DeviceContext4 objects.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1_3/nn-d2d1_3-id2d1device4" /></para>
    </summary>
  </member>
  <member name="ID2D1RenderTarget::SetAntialiasMode">
    <summary>
      <para>Sets the antialiasing mode of the render target. The antialiasing mode applies to all subsequent drawing operations, excluding text and glyph drawing operations.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1/nf-d2d1-id2d1rendertarget-setantialiasmode" /></para>
      <param name="antialiasMode">The antialiasing mode for future drawing operations.</param>
    </summary>
  </member>
  <member name="ID2D1Factory7">
    <summary>
      <para>Creates Direct2D resources. This interface performs all the same functions as the ID2D1Factory6 interface, plus it enables the creation of ID2D1Device6 objects.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1_3/nn-d2d1_3-id2d1factory7" /></para>
    </summary>
  </member>
  <member name="D2D1_ROUNDED_RECT">
    <summary>
      <para>Contains the dimensions and corner radii of a rounded rectangle.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1/ns-d2d1-d2d1_rounded_rect" /></para>
    </summary>
  </member>
  <member name="D2D1_ROUNDED_RECT::rect">
    <summary>The coordinates of the rectangle.</summary>
  </member>
  <member name="D2D1_ROUNDED_RECT::radiusX">
    <summary>The x-radius for the quarter ellipse that is drawn to replace every corner of the rectangle.</summary>
  </member>
  <member name="D2D1_ROUNDED_RECT::radiusY">
    <summary>The y-radius for the quarter ellipse that is drawn to replace every corner of the rectangle.</summary>
  </member>
  <member name="D2D1_IMAGE_BRUSH_PROPERTIES">
    <summary>
      <para>Describes image brush features.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1_1/ns-d2d1_1-d2d1_image_brush_properties" /></para>
    </summary>
  </member>
  <member name="D2D1_IMAGE_BRUSH_PROPERTIES::sourceRectangle">
    <summary>The source rectangle in the image space from which the image will be tiled or interpolated.</summary>
  </member>
  <member name="D2D1_IMAGE_BRUSH_PROPERTIES::extendModeX">
    <summary>The extend mode in the image x-axis.</summary>
  </member>
  <member name="D2D1_IMAGE_BRUSH_PROPERTIES::extendModeY">
    <summary>The extend mode in the image y-axis.</summary>
  </member>
  <member name="D2D1_IMAGE_BRUSH_PROPERTIES::interpolationMode">
    <summary>The interpolation mode to use when scaling the image brush.</summary>
  </member>
  <member name="ID2D1SvgElement::GetSpecifiedAttributeName">
    <summary>
      <para>Gets the name of the attribute at the given index.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1svg/nf-d2d1svg-id2d1svgelement-getspecifiedattributename" /></para>
      <param name="index">The index of the attribute.</param>
      <param name="name">Outputs the name of the attribute.</param>
      <param name="nameCount">Length of the string returned in the name argument.</param>
      <param name="inherited">Outputs whether the attribute is set to the inherit value.</param>
    </summary>
  </member>
  <member name="ID2D1SvgPointCollection::RemovePointsAtEnd">
    <summary>
      <para>Removes points from the end of the array.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1svg/nf-d2d1svg-id2d1svgpointcollection-removepointsatend" /></para>
      <param name="pointsCount">Specifies how many points to remove.</param>
    </summary>
  </member>
  <member name="D2D1_EFFECT_INPUT_DESCRIPTION">
    <summary>
      <para>Describes features of an effect.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1_1/ns-d2d1_1-d2d1_effect_input_description" /></para>
    </summary>
  </member>
  <member name="D2D1_EFFECT_INPUT_DESCRIPTION::effect">
    <summary>The effect whose input connection is being specified.</summary>
  </member>
  <member name="D2D1_EFFECT_INPUT_DESCRIPTION::inputIndex">
    <summary>The input index of the effect that is being considered.</summary>
  </member>
  <member name="D2D1_EFFECT_INPUT_DESCRIPTION::inputRectangle">
    <summary>The amount of data that would be available on the input. This can be used to query this information when the data is not yet available.</summary>
  </member>
  <member name="D2D1_CREATION_PROPERTIES">
    <summary>
      <para>Specifies the options with which the Direct2D device, factory, and device context are created.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1_1/ns-d2d1_1-d2d1_creation_properties" /></para>
    </summary>
  </member>
  <member name="D2D1_CREATION_PROPERTIES::threadingMode">
    <summary>The threading mode with which the corresponding root objects will be created.</summary>
  </member>
  <member name="D2D1_CREATION_PROPERTIES::debugLevel">
    <summary>The debug level that the root objects should be created with.</summary>
  </member>
  <member name="D2D1_CREATION_PROPERTIES::options">
    <summary>The device context options that the root objects should be created with.</summary>
  </member>
  <member name="ID2D1EffectContext::LoadComputeShader">
    <summary>
      <para>Loads the given shader by its unique ID.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1effectauthor/nf-d2d1effectauthor-id2d1effectcontext-loadcomputeshader" /></para>
      <param name="resourceId">The unique id that identifies the shader.</param>
      <param name="shaderBuffer">The buffer that contains the shader to register.</param>
      <param name="shaderBufferCount">The size of the shader buffer in bytes.</param>
    </summary>
  </member>
  <member name="ID2D1EffectContext::CreateColorContextFromWicColorContext">
    <summary>
      <para>Creates a color context from an IWICColorContext. The D2D1ColorContext space of the resulting context varies, see Remarks for more info.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1effectauthor/nf-d2d1effectauthor-id2d1effectcontext-createcolorcontextfromwiccolorcontext" /></para>
      <param name="wicColorContext">The <a href="https://docs.microsoft.com/windows/desktop/api/wincodec/nn-wincodec-iwiccolorcontext">IWICColorContext</a> used to initialize the color context.</param>
      <param name="colorContext">When this method returns, contains the address of a pointer to a new color context.</param>
    </summary>
  </member>
  <member name="ID2D1RectangleGeometry::GetRect">
    <summary>
      <para>Retrieves the rectangle that describes the rectangle geometry's dimensions.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1/nf-d2d1-id2d1rectanglegeometry-getrect" /></para>
      <param name="rect">Contains a pointer to a rectangle that describes the rectangle geometry's dimensions when this method returns. You must allocate storage for this parameter.</param>
    </summary>
  </member>
  <member name="ID2D1EllipseGeometry">
    <summary>
      <para>Represents an ellipse.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1/nn-d2d1-id2d1ellipsegeometry" /></para>
    </summary>
  </member>
  <member name="D2D1_SVG_VISIBILITY">
    <summary>
      <para>Specifies a value for the SVG visibility property.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1svg/ne-d2d1svg-d2d1_svg_visibility" /></para>
    </summary>
  </member>
  <member name="D2D1_SVG_VISIBILITY::D2D1_SVG_VISIBILITY_VISIBLE">
    <summary>The element is visible.</summary>
  </member>
  <member name="D2D1_SVG_VISIBILITY::D2D1_SVG_VISIBILITY_HIDDEN">
    <summary>The element is invisible.</summary>
  </member>
  <member name="ID2D1Bitmap">
    <summary>
      <para>Represents a bitmap that has been bound to an ID2D1RenderTarget.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1/nn-d2d1-id2d1bitmap" /></para>
    </summary>
  </member>
  <member name="ID2D1DeviceContext4">
    <summary>
      <para>This interface performs all the same functions as the ID2D1DeviceContext3 interface, plus it enables functionality for handling new types of color font glyphs.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1_3/nn-d2d1_3-id2d1devicecontext4" /></para>
    </summary>
  </member>
  <member name="ID2D1Device3::CreateDeviceContext">
    <summary>
      <para>Creates a new ID2D1DeviceContext3 from this Direct2D device.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1_3/nf-d2d1_3-id2d1device3-createdevicecontext" /></para>
      <param name="options">The options to be applied to the created device context.</param>
      <param name="deviceContext3">When this method returns, contains a pointer to the new device context.</param>
    </summary>
  </member>
  <member name="ID2D1SimplifiedGeometrySink::EndFigure">
    <summary>
      <para>Ends the current figure; optionally, closes it.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1/nf-d2d1-id2d1simplifiedgeometrysink-endfigure" /></para>
      <param name="figureEnd">A value that indicates whether the current figure is closed. If the figure is closed, a line is drawn between the current point and the start point specified by <a href="https://docs.microsoft.com/windows/win32/api/d2d1/nf-d2d1-id2d1simplifiedgeometrysink-beginfigure">BeginFigure</a>.</param>
    </summary>
  </member>
  <member name="ID2D1Transform::MapOutputRectToInputRects">
    <summary>
      <para>Allows a transform to state how it would map a rectangle requested on its output to a set of sample rectangles on its input.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1effectauthor/nf-d2d1effectauthor-id2d1transform-mapoutputrecttoinputrects" /></para>
      <param name="outputRect">The output rectangle from which the inputs must be mapped.</param>
      <param name="inputRects">The corresponding set of inputs. The inputs will directly correspond to the transform inputs.</param>
      <param name="inputRectsCount">The number of inputs specified. <a href="https://docs.microsoft.com/windows/desktop/Direct2D/direct2d-portal">Direct2D</a> guarantees that this is equal to the number of inputs specified on the transform.</param>
    </summary>
  </member>
  <member name="ID2D1Factory4">
    <summary>
      <para>Creates Direct2D resources. This interface also enables the creation of ID2D1Device3 objects.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1_3/nn-d2d1_3-id2d1factory4" /></para>
    </summary>
  </member>
  <member name="D2D1_ARC_SIZE">
    <summary>
      <para>Specifies whether an arc should be greater than 180 degrees.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1/ne-d2d1-d2d1_arc_size" /></para>
    </summary>
  </member>
  <member name="D2D1_ARC_SIZE::D2D1_ARC_SIZE_SMALL">
    <summary>An arc's sweep should be 180 degrees or less.</summary>
  </member>
  <member name="D2D1_ARC_SIZE::D2D1_ARC_SIZE_LARGE">
    <summary>An arc's sweep should be 180 degrees or greater.</summary>
  </member>
  <member name="D2D1_ARITHMETICCOMPOSITE_PROP">
    <summary>
      <para>Identifiers for the properties of the Arithmetic composite effect.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1effects/ne-d2d1effects-d2d1_arithmeticcomposite_prop" /></para>
    </summary>
  </member>
  <member name="D2D1_ARITHMETICCOMPOSITE_PROP::D2D1_ARITHMETICCOMPOSITE_PROP_COEFFICIENTS">
    <summary>The coefficients for the equation used to composite the two input images. The coefficients are unitless and unbounded.
            

Type is D2D1_VECTOR_4F.

Default value is {1.0f, 0.0f, 0.0f, 0.0f}.</summary>
  </member>
  <member name="D2D1_ARITHMETICCOMPOSITE_PROP::D2D1_ARITHMETICCOMPOSITE_PROP_CLAMP_OUTPUT">
    <summary>The effect clamps color values to between 0 and 1 before the effect passes the values to the next effect in the graph.
            If you set this to TRUE the effect will clamp the values. If you set this to FALSE, the effect will not clamp the color values, 
            but other effects and the output surface may clamp the values if they are not of high enough precision.
            

Type is BOOL.

Default value is FALSE.</summary>
  </member>
  <member name="ID2D1SvgElement::GetFirstChild">
    <summary>
      <para>Gets the first child of this element.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1svg/nf-d2d1svg-id2d1svgelement-getfirstchild" /></para>
      <param name="child">Outputs the first child of this element.</param>
    </summary>
  </member>
  <member name="ID2D1Image">
    <summary>
      <para>Represents a producer of pixels that can fill an arbitrary 2D plane.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1/nn-d2d1-id2d1image" /></para>
    </summary>
  </member>
  <member name="D2D1_HUEROTATION_PROP">
    <summary>
      <para>Identifiers for properties of the Hue rotate effect.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1effects/ne-d2d1effects-d2d1_huerotation_prop" /></para>
    </summary>
  </member>
  <member name="D2D1_HUEROTATION_PROP::D2D1_HUEROTATION_PROP_ANGLE">
    <summary>The angle to rotate the hue, in degrees.
          

The type is FLOAT.

The default is 0.0f.</summary>
  </member>
  <member name="D2D1_EXTEND_MODE">
    <summary>
      <para>Specifies how a brush paints areas outside of its normal content area.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1/ne-d2d1-d2d1_extend_mode" /></para>
    </summary>
  </member>
  <member name="D2D1_EXTEND_MODE::D2D1_EXTEND_MODE_CLAMP">
    <summary>Repeat the edge pixels of the brush's content for all regions outside the normal content area.</summary>
  </member>
  <member name="D2D1_EXTEND_MODE::D2D1_EXTEND_MODE_WRAP">
    <summary>Repeat the brush's content.</summary>
  </member>
  <member name="D2D1_EXTEND_MODE::D2D1_EXTEND_MODE_MIRROR">
    <summary>The same as D2D1_EXTEND_MODE_WRAP, except that alternate tiles of the brush's content are flipped. (The brush's normal content is drawn untransformed.)</summary>
  </member>
  <member name="ID2D1Device::CreateDeviceContext">
    <summary>
      <para>Creates a new device context from a Direct2D device.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1_1/nf-d2d1_1-id2d1device-createdevicecontext" /></para>
      <param name="options">The options to be applied to the created device context.</param>
      <param name="deviceContext">When this method returns, contains the address of a pointer to the new device context.</param>
    </summary>
  </member>
  <member name="ID2D1DeviceContext5::DrawSvgDocument">
    <summary>
      <para>Draws an SVG document.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1_3/nf-d2d1_3-id2d1devicecontext5-drawsvgdocument" /></para>
      <param name="svgDocument">The SVG document to draw.</param>
    </summary>
  </member>
  <member name="ID2D1Effect::GetInput">
    <summary>
      <para>Gets the given input image by index.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1_1/nf-d2d1_1-id2d1effect-getinput" /></para>
      <param name="index">The index of the image to retrieve.</param>
      <param name="input">When this method returns, contains the address of a pointer to the image that is identified by <i>Index</i>.</param>
    </summary>
  </member>
  <member name="ID2D1GradientStopCollection1">
    <summary>
      <para>Represents a collection of D2D1_GRADIENT_STOP objects for linear and radial gradient brushes. It provides get methods for all the new parameters added to the gradient stop collection.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1_1/nn-d2d1_1-id2d1gradientstopcollection1" /></para>
    </summary>
  </member>
  <member name="ID2D1SvgDocument::SetViewportSize">
    <summary>
      <para>Sets the size of the initial viewport.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1svg/nf-d2d1svg-id2d1svgdocument-setviewportsize" /></para>
      <param name="viewportSize">The size of the viewport.</param>
    </summary>
  </member>
  <member name="ID2D1DeviceContext::CreateColorContextFromFilename">
    <summary>
      <para>Creates a color context by loading it from the specified filename. The profile bytes are the contents of the file specified by Filename.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1_1/nf-d2d1_1-id2d1devicecontext-createcolorcontextfromfilename" /></para>
      <param name="filename">The path to the file containing the profile bytes to initialize the color context with.</param>
      <param name="colorContext">When this method returns, contains the address of a pointer to a new color context.</param>
    </summary>
  </member>
  <member name="ID2D1EffectContext">
    <summary>
      <para>Provides factory methods and other state management for effect and transform authors.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1effectauthor/nn-d2d1effectauthor-id2d1effectcontext" /></para>
    </summary>
  </member>
  <member name="ID2D1CommandSink">
    <summary>
      <para>The command sink is implemented by you for an application when you want to receive a playback of the commands recorded in a command list.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1_1/nn-d2d1_1-id2d1commandsink" /></para>
    </summary>
  </member>
  <member name="ID2D1DeviceContext1">
    <summary>
      <para>Enables creation and drawing of geometry realization objects.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1_2/nn-d2d1_2-id2d1devicecontext1" /></para>
    </summary>
  </member>
  <member name="ID2D1DrawInfo::SetResourceTexture">
    <summary>
      <para>Sets the resource texture corresponding to the given shader texture index.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1effectauthor/nf-d2d1effectauthor-id2d1drawinfo-setresourcetexture" /></para>
      <param name="textureIndex">The index of the texture to be bound to the pixel shader.</param>
      <param name="resourceTexture">The created resource texture.</param>
    </summary>
  </member>
  <member name="ID2D1RadialGradientBrush::GetGradientOriginOffset">
    <summary>
      <para>Retrieves the offset of the gradient origin relative to the gradient ellipse's center.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1/nf-d2d1-id2d1radialgradientbrush-getgradientoriginoffset" /></para>
    </summary>
  </member>
  <member name="D2D1_YCBCR_INTERPOLATION_MODE">
    <summary>
      <para>Specifies the interpolation mode for the YCbCr effect.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1effects_1/ne-d2d1effects_1-d2d1_ycbcr_interpolation_mode" /></para>
    </summary>
  </member>
  <member name="D2D1_YCBCR_INTERPOLATION_MODE::D2D1_YCBCR_INTERPOLATION_MODE_NEAREST_NEIGHBOR">
    <summary>Samples the nearest single point and uses that. This mode uses less processing time, but outputs the lowest quality image.</summary>
  </member>
  <member name="D2D1_YCBCR_INTERPOLATION_MODE::D2D1_YCBCR_INTERPOLATION_MODE_LINEAR">
    <summary>Uses a four point sample and linear interpolation. This mode uses more processing time than the nearest neighbor mode, but outputs a higher quality image.</summary>
  </member>
  <member name="D2D1_YCBCR_INTERPOLATION_MODE::D2D1_YCBCR_INTERPOLATION_MODE_CUBIC">
    <summary>Uses a 16 sample cubic kernel for interpolation. This mode uses the most processing time, but outputs a higher quality image.</summary>
  </member>
  <member name="D2D1_YCBCR_INTERPOLATION_MODE::D2D1_YCBCR_INTERPOLATION_MODE_MULTI_SAMPLE_LINEAR">
    <summary>Uses 4 linear samples within a single pixel for good edge anti-aliasing. This mode is good for scaling down by small amounts on images with few pixels.</summary>
  </member>
  <member name="D2D1_YCBCR_INTERPOLATION_MODE::D2D1_YCBCR_INTERPOLATION_MODE_ANISOTROPIC">
    <summary>Uses anisotropic filtering to sample a pattern according to the transformed shape of the bitmap.</summary>
  </member>
  <member name="D2D1_YCBCR_INTERPOLATION_MODE::D2D1_YCBCR_INTERPOLATION_MODE_HIGH_QUALITY_CUBIC">
    <summary>Uses a variable size high quality cubic kernel to perform a pre-downscale the image if downscaling is involved in the transform matrix. Then uses the cubic interpolation mode for the final output.</summary>
  </member>
  <member name="D2D1_POINTSPECULAR_SCALE_MODE">
    <summary>
      <para>The interpolation mode the Point-specular lighting effect uses to scale the image to the corresponding kernel unit length. There are six scale modes that range in quality and speed.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1effects/ne-d2d1effects-d2d1_pointspecular_scale_mode" /></para>
    </summary>
  </member>
  <member name="D2D1_POINTSPECULAR_SCALE_MODE::D2D1_POINTSPECULAR_SCALE_MODE_NEAREST_NEIGHBOR">
    <summary>Samples the nearest single point and uses that. This mode uses less processing time, but outputs the lowest quality image.</summary>
  </member>
  <member name="D2D1_POINTSPECULAR_SCALE_MODE::D2D1_POINTSPECULAR_SCALE_MODE_LINEAR">
    <summary>Uses a four point sample and linear interpolation. This mode outputs a higher quality image than nearest neighbor.</summary>
  </member>
  <member name="D2D1_POINTSPECULAR_SCALE_MODE::D2D1_POINTSPECULAR_SCALE_MODE_CUBIC">
    <summary>Uses a 16 sample cubic kernel for interpolation. This mode uses the most processing time, but outputs a higher quality image.</summary>
  </member>
  <member name="D2D1_POINTSPECULAR_SCALE_MODE::D2D1_POINTSPECULAR_SCALE_MODE_MULTI_SAMPLE_LINEAR">
    <summary>Uses 4 linear samples within a single pixel for good edge anti-aliasing. This mode is good for scaling down by small amounts on images with few pixels.</summary>
  </member>
  <member name="D2D1_POINTSPECULAR_SCALE_MODE::D2D1_POINTSPECULAR_SCALE_MODE_ANISOTROPIC">
    <summary>Uses anisotropic filtering to sample a pattern according to the transformed shape of the bitmap.</summary>
  </member>
  <member name="D2D1_POINTSPECULAR_SCALE_MODE::D2D1_POINTSPECULAR_SCALE_MODE_HIGH_QUALITY_CUBIC">
    <summary>Uses a variable size high quality cubic kernel to perform a pre-downscale the image if downscaling is involved in the transform matrix. Then uses the cubic interpolation mode for the final output.</summary>
  </member>
  <member name="D2D1_MAPPED_RECT">
    <summary>
      <para>Describes mapped memory from the ID2D1Bitmap1::Map API.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1_1/ns-d2d1_1-d2d1_mapped_rect" /></para>
    </summary>
  </member>
  <member name="D2D1_MAPPED_RECT::pitch">
    <summary>The size in bytes of an individual scanline in the bitmap.</summary>
  </member>
  <member name="D2D1_MAPPED_RECT::bits">
    <summary>The data inside the bitmap.</summary>
  </member>
  <member name="D2D1_SVG_LINE_CAP">
    <summary>
      <para>Specifies a value for the SVG stroke-linecap property.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1svg/ne-d2d1svg-d2d1_svg_line_cap" /></para>
    </summary>
  </member>
  <member name="D2D1_SVG_LINE_CAP::D2D1_SVG_LINE_CAP_BUTT">
    <summary>The property is set to SVG's 'butt' value.</summary>
  </member>
  <member name="D2D1_SVG_LINE_CAP::D2D1_SVG_LINE_CAP_SQUARE">
    <summary>The property is set to SVG's 'square' value.</summary>
  </member>
  <member name="D2D1_SVG_LINE_CAP::D2D1_SVG_LINE_CAP_ROUND">
    <summary>The property is set to SVG's 'round' value.</summary>
  </member>
  <member name="ID2D1BitmapRenderTarget::GetBitmap">
    <summary>
      <para>Retrieves the bitmap for this render target. The returned bitmap can be used for drawing operations.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1/nf-d2d1-id2d1bitmaprendertarget-getbitmap" /></para>
      <param name="bitmap">When this method returns, contains the address of a pointer to the bitmap for this render target. This bitmap can be used for drawing operations.</param>
    </summary>
  </member>
  <member name="ID2D1StrokeStyle::GetDashStyle">
    <summary>
      <para>Gets a value that describes the stroke's dash pattern.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1/nf-d2d1-id2d1strokestyle-getdashstyle" /></para>
    </summary>
  </member>
  <member name="ID2D1Bitmap1::GetColorContext">
    <summary>
      <para>Gets the color context information associated with the bitmap.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1_1/nf-d2d1_1-id2d1bitmap1-getcolorcontext" /></para>
      <param name="colorContext">When this method returns, contains the address of a pointer to the  color context interface associated with the bitmap.</param>
    </summary>
  </member>
  <member name="D2D1_EDGEDETECTION_PROP">
    <summary>
      <para>Identifiers for properties of the Edge Detection effect.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1effects_2/ne-d2d1effects_2-d2d1_edgedetection_prop" /></para>
    </summary>
  </member>
  <member name="D2D1_EDGEDETECTION_PROP::D2D1_EDGEDETECTION_PROP_STRENGTH">
    <summary>The D2D1_EDGEDETECTION_PROP_STRENGTH property is a float value modulating the response of the edge detection filter. A low strength value means that weaker edges will get filtered out, 
          while a high value means stronger edges will get filtered out.  The allowed range is 0.0 to 1.0.  The default value is 0.5.</summary>
  </member>
  <member name="D2D1_EDGEDETECTION_PROP::D2D1_EDGEDETECTION_PROP_BLUR_RADIUS">
    <summary>The D2D1_EDGEDETECTION_PROP_BLUR_RADIUS property is a float value specifying the amount of blur to apply.  Applying blur is used to remove high frequencies and reduce phantom edges.  
          The allowed range is 0.0 to 10.0. The default value is 0.0 (no blur applied).</summary>
  </member>
  <member name="D2D1_EDGEDETECTION_PROP::D2D1_EDGEDETECTION_PROP_MODE">
    <summary>The D2D1_EDGEDETECTION_PROP_MODE property is a <a href="https://docs.microsoft.com/windows/desktop/api/d2d1effects_2/ne-d2d1effects_2-d2d1_edgedetection_mode">D2D1_EDGEDETECTION_MODE</a> enumeration value which mode to use for edge detection.  
          The default value is D2D1_EDGEDETECTION_MODE_SOBEL.</summary>
  </member>
  <member name="D2D1_EDGEDETECTION_PROP::D2D1_EDGEDETECTION_PROP_OVERLAY_EDGES">
    <summary>The D2D1_EDGEDETECTION_PROP_OVERLAY_EDGES property is a boolean value. Edge detection only applies to the RGB channels, the alpha channel is ignored for purposes of detecting edges.
          If D2D1_EDGEDETECTION_PROP_OVERLAY_EDGES is false, the output edges is fully opaque. If D2D1_EDGEDETECTION_PROP_OVERLAY_EDGES is true, the input opacity is preserved.
          The default value is false.</summary>
  </member>
  <member name="D2D1_EDGEDETECTION_PROP::D2D1_EDGEDETECTION_PROP_ALPHA_MODE">
    <summary>The D2D1_EDGEDETECTION_PROP_ALPHA_MODE property is a <a href="https://docs.microsoft.com/windows/desktop/api/dcommon/ne-dcommon-d2d1_alpha_mode">D2D1_ALPHA_MODE</a> enumeration value indicating the alpha mode of the input file.
          If the input is not opaque, this value is used to determine whether to unpremultiply the inputs.
          See the About Alpha Modes section of the <a href="https://docs.microsoft.com/windows/desktop/Direct2D/supported-pixel-formats-and-alpha-modes">Supported Pixel Formats and Alpha Modes</a> topic for additional information.   
          
          The default value is D2D1_ALPHA_MODE_PREMULTIPLIED.</summary>
  </member>
  <member name="ID2D1SvgGlyphStyle::GetFill">
    <summary>
      <para>Returns the requested fill parameters.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1_3/nf-d2d1_3-id2d1svgglyphstyle-getfill" /></para>
      <param name="brush">Describes how the area is painted.</param>
    </summary>
  </member>
  <member name="D2D1_SWEEP_DIRECTION">
    <summary>
      <para>Defines the direction that an elliptical arc is drawn.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1/ne-d2d1-d2d1_sweep_direction" /></para>
    </summary>
  </member>
  <member name="D2D1_SWEEP_DIRECTION::D2D1_SWEEP_DIRECTION_COUNTER_CLOCKWISE">
    <summary>Arcs are drawn in a counterclockwise (negative-angle) direction.</summary>
  </member>
  <member name="D2D1_SWEEP_DIRECTION::D2D1_SWEEP_DIRECTION_CLOCKWISE">
    <summary>Arcs are drawn in a clockwise (positive-angle) direction.</summary>
  </member>
  <member name="ID2D1CommandSink::FillRectangle">
    <summary>
      <para>Indicates to the command sink a rectangle to be filled.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1_1/nf-d2d1_1-id2d1commandsink-fillrectangle" /></para>
      <param name="rect">The rectangle to fill.</param>
      <param name="brush">The brush with which to fill the rectangle.</param>
    </summary>
  </member>
  <member name="D2D1_CONTRAST_PROP">
    <summary>
      <para>Identifiers for properties of the Contrast effect.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1effects_2/ne-d2d1effects_2-d2d1_contrast_prop" /></para>
    </summary>
  </member>
  <member name="D2D1_CONTRAST_PROP::D2D1_CONTRAST_PROP_CONTRAST">
    <summary>The D2D1_CONTRAST_PROP_CONTRAST property is a float value indicating the amount by which to adjust the contrast of the image. Negative values reduce contrast, while positive values increase contrast.  
          Minimum value is -1.0f, maximum value is 1.0f.  The default value for the property is 0.0f.</summary>
  </member>
  <member name="D2D1_CONTRAST_PROP::D2D1_CONTRAST_PROP_CLAMP_INPUT">
    <summary>The D2D1_CONTRAST_PROP_CLAMP_INPUT property is a boolean value indicating whether or not to clamp the input to [0.0, 1.0]. The default value for the property is FALSE.</summary>
  </member>
  <member name="D2D1_SVG_OVERFLOW">
    <summary>
      <para>Specifies a value for the SVG overflow property.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1svg/ne-d2d1svg-d2d1_svg_overflow" /></para>
    </summary>
  </member>
  <member name="D2D1_SVG_OVERFLOW::D2D1_SVG_OVERFLOW_VISIBLE">
    <summary>The element is not clipped to its viewport.</summary>
  </member>
  <member name="D2D1_SVG_OVERFLOW::D2D1_SVG_OVERFLOW_HIDDEN">
    <summary>The element is clipped to its viewport.</summary>
  </member>
  <member name="ID2D1RenderTarget::SetTags">
    <summary>
      <para>Specifies a label for subsequent drawing operations.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1/nf-d2d1-id2d1rendertarget-settags" /></para>
      <param name="tag1">A label to apply to subsequent drawing operations.</param>
      <param name="tag2">A label to apply to subsequent drawing operations.</param>
    </summary>
  </member>
  <member name="D2D1_DISPLACEMENTMAP_PROP">
    <summary>
      <para>Identifiers for properties of the Displacement map effect.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1effects/ne-d2d1effects-d2d1_displacementmap_prop" /></para>
    </summary>
  </member>
  <member name="D2D1_DISPLACEMENTMAP_PROP::D2D1_DISPLACEMENTMAP_PROP_SCALE">
    <summary>Multiplies the intensity of the selected channel from the displacement image. The higher you set this property, the more the effect displaces the pixels.
            

The type is FLOAT.

The default value is 0.0f.</summary>
  </member>
  <member name="D2D1_DISPLACEMENTMAP_PROP::D2D1_DISPLACEMENTMAP_PROP_X_CHANNEL_SELECT">
    <summary>The effect extracts the intensity from this color channel and uses it to spatially displace the image in the X direction.
          

The type is <a href="https://docs.microsoft.com/windows/desktop/api/d2d1effects/ne-d2d1effects-d2d1_channel_selector">D2D1_CHANNEL_SELECTOR</a>.

The default value is D2D1_CHANNEL_SELECTOR_A</summary>
  </member>
  <member name="D2D1_DISPLACEMENTMAP_PROP::D2D1_DISPLACEMENTMAP_PROP_Y_CHANNEL_SELECT">
    <summary>The effect extracts the intensity from this color channel and uses it to spatially displace the image in the Y direction.
          

The type is <a href="https://docs.microsoft.com/windows/desktop/api/d2d1effects/ne-d2d1effects-d2d1_channel_selector">D2D1_CHANNEL_SELECTOR</a>.

The default value is D2D1_CHANNEL_SELECTOR_A</summary>
  </member>
  <member name="ID2D1CommandSink::SetTags">
    <summary>
      <para>Sets the tags that correspond to the tags in the command sink.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1_1/nf-d2d1_1-id2d1commandsink-settags" /></para>
      <param name="tag1">The first tag to associate with the primitive.</param>
      <param name="tag2">The second tag to associate with the primitive.</param>
    </summary>
  </member>
  <member name="D2D1_DIRECTIONALBLUR_PROP">
    <summary>
      <para>Identifiers for properties of the Directional blur effect.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1effects/ne-d2d1effects-d2d1_directionalblur_prop" /></para>
    </summary>
  </member>
  <member name="D2D1_DIRECTIONALBLUR_PROP::D2D1_DIRECTIONALBLUR_PROP_STANDARD_DEVIATION">
    <summary>The amount of blur to be applied to the image. You can compute the blur radius of the kernel by multiplying the standard deviation by 3. 
          The units of both the standard deviation and blur radius are DIPs. A value of 0 DIPs disables this effect. 
          

The type is FLOAT.

The default value is 3.0f.</summary>
  </member>
  <member name="D2D1_DIRECTIONALBLUR_PROP::D2D1_DIRECTIONALBLUR_PROP_ANGLE">
    <summary>The angle of the blur relative to the x-axis, in the counterclockwise direction. The units are specified in degrees.
          

The blur kernel is first generated using the same process as for the Gaussian blur effect. The kernel values are then transformed according to the blur angle.

The type is FLOAT.

The default value is 0.0f.</summary>
  </member>
  <member name="D2D1_DIRECTIONALBLUR_PROP::D2D1_DIRECTIONALBLUR_PROP_OPTIMIZATION">
    <summary>The optimization mode. See Optimization modes for more info.
          

The type is <a href="https://docs.microsoft.com/windows/desktop/api/d2d1effects/ne-d2d1effects-d2d1_directionalblur_optimization">D2D1_DIRECTIONALBLUR_OPTIMIZATION</a>.

The default value is D2D1_DIRECTIONALBLUR_OPTIMIZATION_BALANCED.</summary>
  </member>
  <member name="D2D1_DIRECTIONALBLUR_PROP::D2D1_DIRECTIONALBLUR_PROP_BORDER_MODE">
    <summary>The mode used to calculate the border of the image, soft or hard. See Border modes for more info.
          

The type is <a href="https://docs.microsoft.com/windows/desktop/api/d2d1effects/ne-d2d1effects-d2d1_border_mode">D2D1_BORDER_MODE</a>.

The default value is D2D1_BORDER_MODE_SOFT.</summary>
  </member>
  <member name="ID2D1TransformedGeometry">
    <summary>
      <para>Represents a geometry that has been transformed.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1/nn-d2d1-id2d1transformedgeometry" /></para>
    </summary>
  </member>
  <member name="ID2D1Device4::GetMaximumColorGlyphCacheMemory">
    <summary>
      <para>Gets the maximum capacity of the color glyph cache.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1_3/nf-d2d1_3-id2d1device4-getmaximumcolorglyphcachememory" /></para>
    </summary>
  </member>
  <member name="ID2D1RenderTarget::PopAxisAlignedClip">
    <summary>
      <para>Removes the last axis-aligned clip from the render target. After this method is called, the clip is no longer applied to subsequent drawing operations.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1/nf-d2d1-id2d1rendertarget-popaxisalignedclip" /></para>
    </summary>
  </member>
  <member name="ID2D1EffectContext::LoadPixelShader">
    <summary>
      <para>Loads the given shader by its unique ID.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1effectauthor/nf-d2d1effectauthor-id2d1effectcontext-loadpixelshader" /></para>
      <param name="shaderId">The unique id that identifies the shader.</param>
      <param name="shaderBuffer">The buffer that contains the shader to register.</param>
      <param name="shaderBufferCount">The size of the shader buffer in bytes.</param>
    </summary>
  </member>
  <member name="ID2D1Bitmap1::GetOptions">
    <summary>
      <para>Gets the options used in creating the bitmap.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1_1/nf-d2d1_1-id2d1bitmap1-getoptions" /></para>
    </summary>
  </member>
  <member name="ID2D1SvgPathData::RemoveSegmentDataAtEnd">
    <summary>
      <para>Removes data from the end of the segment data array.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1svg/nf-d2d1svg-id2d1svgpathdata-removesegmentdataatend" /></para>
      <param name="dataCount">Specifies how much data to remove.</param>
    </summary>
  </member>
  <member name="ID2D1Device3">
    <summary>
      <para>Represents a resource domain whose objects and device contexts can be used together. This interface performs all the same functions as the ID2D1Device2 interface. It also enables the creation of ID2D1DeviceContext3 objects.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1_3/nn-d2d1_3-id2d1device3" /></para>
    </summary>
  </member>
  <member name="ID2D1Bitmap::CopyFromBitmap">
    <summary>
      <para>Copies the specified region from the specified bitmap into the current bitmap.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1/nf-d2d1-id2d1bitmap-copyfrombitmap" /></para>
      <param name="destPoint">In the current bitmap, the upper-left corner of the area to which the region specified by <i>srcRect</i> is copied.</param>
      <param name="bitmap">The bitmap to copy from.</param>
      <param name="srcRect">The area of <i>bitmap</i> to copy.</param>
    </summary>
  </member>
  <member name="ID2D1EffectContext::CreateVertexBuffer">
    <summary>
      <para>Creates a vertex buffer or finds a standard vertex buffer and optionally initializes it with vertices.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1effectauthor/nf-d2d1effectauthor-id2d1effectcontext-createvertexbuffer" /></para>
      <param name="vertexBufferProperties">The properties used to describe the vertex buffer and vertex shader.</param>
      <param name="resourceId">The unique id that identifies the vertex buffer.</param>
      <param name="customVertexBufferProperties">The properties used to define a custom vertex buffer. If you use a built-in vertex shader, you don't have to specify this property.</param>
      <param name="buffer">The returned vertex buffer.</param>
    </summary>
  </member>
  <member name="ID2D1Ink::SetSegments">
    <summary>
      <para>Updates the specified segments in this ink object with new control points.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1_3/nf-d2d1_3-id2d1ink-setsegments" /></para>
      <param name="startSegment">The index of the first segment in this ink object to update.</param>
      <param name="segments">A pointer to the array of segment data to be used in the update.</param>
      <param name="segmentsCount">The number of segments in this ink object that will be updated with new data. Note that segmentsCount must be less than or equal to the number of segments in the ink object minus startSegment.</param>
    </summary>
  </member>
  <member name="ID2D1DrawTransform">
    <summary>
      <para>A specialized implementation of the Shantzis calculations to a transform implemented on the GPU.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1effectauthor/nn-d2d1effectauthor-id2d1drawtransform" /></para>
    </summary>
  </member>
  <member name="ID2D1Bitmap::GetPixelFormat">
    <summary>
      <para>Retrieves the pixel format and alpha mode of the bitmap.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1/nf-d2d1-id2d1bitmap-getpixelformat" /></para>
    </summary>
  </member>
  <member name="ID2D1RenderTarget::FillGeometry">
    <summary>
      <para>Paints the interior of the specified geometry.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1/nf-d2d1-id2d1rendertarget-fillgeometry" /></para>
      <param name="geometry">The geometry to paint.</param>
      <param name="brush">The brush used to paint the geometry's interior.</param>
      <param name="opacityBrush">The opacity mask to apply to the geometry, or <b>NULL</b> for no opacity mask. If an opacity mask (the <i>opacityBrush</i> parameter) is specified, <i>brush</i> must be an <a href="https://docs.microsoft.com/windows/win32/api/d2d1/nn-d2d1-id2d1bitmapbrush">ID2D1BitmapBrush</a> that has   its x- and y-extend modes set to <a href="https://docs.microsoft.com/windows/win32/api/d2d1/ne-d2d1-d2d1_extend_mode">D2D1_EXTEND_MODE_CLAMP</a>. For more information, see the Remarks section.</param>
    </summary>
  </member>
  <member name="ID2D1CommandSink::SetTransform">
    <summary>
      <para>Sets a new transform.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1_1/nf-d2d1_1-id2d1commandsink-settransform" /></para>
      <param name="transform">The transform to be set.</param>
    </summary>
  </member>
  <member name="ID2D1StrokeStyle::GetDashOffset">
    <summary>
      <para>Retrieves a value that specifies how far in the dash sequence the stroke will start.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1/nf-d2d1-id2d1strokestyle-getdashoffset" /></para>
    </summary>
  </member>
  <member name="ID2D1CommandList::Stream">
    <summary>
      <para>Streams the contents of the command list to the specified command sink.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1_1/nf-d2d1_1-id2d1commandlist-stream" /></para>
      <param name="sink">The sink into which the command list will be streamed.</param>
    </summary>
  </member>
  <member name="ID2D1EffectContext::LoadVertexShader">
    <summary>
      <para>Loads the given shader by its unique ID.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1effectauthor/nf-d2d1effectauthor-id2d1effectcontext-loadvertexshader" /></para>
      <param name="resourceId">The unique id that identifies the shader.</param>
      <param name="shaderBuffer">The buffer that contains the shader to register.</param>
      <param name="shaderBufferCount">The size of the shader buffer in bytes.</param>
    </summary>
  </member>
  <member name="ID2D1EffectContext1">
    <summary>
      <para>Provides factory methods and other state management for effect and transform authors.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1effectauthor_1/nn-d2d1effectauthor_1-id2d1effectcontext1" /></para>
    </summary>
  </member>
  <member name="ID2D1DeviceContext::GetEffectInvalidRectangles">
    <summary>
      <para>Gets the invalid rectangles that have accumulated since the last time the effect was drawn and EndDraw was then called on the device context.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1_1/nf-d2d1_1-id2d1devicecontext-geteffectinvalidrectangles" /></para>
      <param name="effect">The effect to get the invalid rectangles from.</param>
      <param name="rectangles">An array of <a href="https://docs.microsoft.com/windows/desktop/Direct2D/d2d1-rect-f">D2D1_RECT_F</a> structures.  You must allocate this to the correct size.  You can get the count of the invalid rectangles using the <a href="https://docs.microsoft.com/windows/desktop/api/d2d1_1/nf-d2d1_1-id2d1devicecontext-geteffectinvalidrectanglecount">GetEffectInvalidRectangleCount</a> method.</param>
      <param name="rectanglesCount">The number of rectangles to get.</param>
    </summary>
  </member>
  <member name="ID2D1TessellationSink">
    <summary>
      <para>Populates an ID2D1Mesh object with triangles.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1/nn-d2d1-id2d1tessellationsink" /></para>
    </summary>
  </member>
  <member name="ID2D1ImageSource">
    <summary>
      <para>Represents a producer of pixels that can fill an arbitrary 2D plane.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1_3/nn-d2d1_3-id2d1imagesource" /></para>
    </summary>
  </member>
  <member name="ID2D1DrawingStateBlock1::GetDescription">
    <summary>
      <para>Gets the antialiasing mode, transform, tags, primitive blend, and unit mode portion of the drawing state.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1_1/nf-d2d1_1-id2d1drawingstateblock1-getdescription" /></para>
      <param name="stateDescription">When this method returns, contains the antialiasing mode, transform, tags, primitive blend, and unit mode portion of the drawing state. You must allocate storage for this parameter.</param>
    </summary>
  </member>
  <member name="ID2D1RoundedRectangleGeometry::GetRoundedRect">
    <summary>
      <para>Retrieves a rounded rectangle that describes this rounded rectangle geometry.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1/nf-d2d1-id2d1roundedrectanglegeometry-getroundedrect" /></para>
      <param name="roundedRect">A pointer that receives a rounded rectangle that describes this rounded rectangle geometry. You must allocate storage for this parameter.</param>
    </summary>
  </member>
  <member name="D2D1_LINEARTRANSFER_PROP">
    <summary>
      <para>Identifiers for properties of the Linear transfer effect.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1effects/ne-d2d1effects-d2d1_lineartransfer_prop" /></para>
    </summary>
  </member>
  <member name="D2D1_LINEARTRANSFER_PROP::D2D1_LINEARTRANSFER_PROP_RED_Y_INTERCEPT">
    <summary>The Y-intercept of the linear function for the Red channel. 
          

The type is FLOAT.

The default is 0.0f.</summary>
  </member>
  <member name="D2D1_LINEARTRANSFER_PROP::D2D1_LINEARTRANSFER_PROP_RED_SLOPE">
    <summary>The slope of the linear function for the Red channel.
          

The type is FLOAT.

The default is 1.0f.</summary>
  </member>
  <member name="D2D1_LINEARTRANSFER_PROP::D2D1_LINEARTRANSFER_PROP_RED_DISABLE">
    <summary>If you set this to TRUE the effect does not apply the transfer function to the Red channel. 
          If you set this to FALSE the effect applies the RedLinearTransfer function to the Red channel. 
          

The type is BOOL.

The default is FALSE.</summary>
  </member>
  <member name="D2D1_LINEARTRANSFER_PROP::D2D1_LINEARTRANSFER_PROP_GREEN_Y_INTERCEPT">
    <summary>The Y-intercept of the linear function for the Green channel. 
          

The type is FLOAT.

The default is 0.0f.</summary>
  </member>
  <member name="D2D1_LINEARTRANSFER_PROP::D2D1_LINEARTRANSFER_PROP_GREEN_SLOPE">
    <summary>The slope of the linear function for the Green channel.
          

The type is FLOAT.

The default is 1.0f.</summary>
  </member>
  <member name="D2D1_LINEARTRANSFER_PROP::D2D1_LINEARTRANSFER_PROP_GREEN_DISABLE">
    <summary>If you set this to TRUE the effect does not apply the transfer function to the Green channel. 
          If you set this to FALSE the effect applies the GreenLinearTransfer function to the Green channel. 
          

The type is BOOL.

The default is FALSE.</summary>
  </member>
  <member name="D2D1_LINEARTRANSFER_PROP::D2D1_LINEARTRANSFER_PROP_BLUE_Y_INTERCEPT">
    <summary>The Y-intercept of the linear function for the Blue channel. 
          

The type is FLOAT.

The default is 0.0f.</summary>
  </member>
  <member name="D2D1_LINEARTRANSFER_PROP::D2D1_LINEARTRANSFER_PROP_BLUE_SLOPE">
    <summary>The slope of the linear function for the Blue channel.
          

The type is FLOAT.

The default is 1.0f.</summary>
  </member>
  <member name="D2D1_LINEARTRANSFER_PROP::D2D1_LINEARTRANSFER_PROP_BLUE_DISABLE">
    <summary>If you set this to TRUE the effect does not apply the transfer function to the Blue channel. 
          If you set this to FALSE the effect applies the BlueLinearTransfer function to the Blue channel. 
          

The type is BOOL.

The default is FALSE.</summary>
  </member>
  <member name="D2D1_LINEARTRANSFER_PROP::D2D1_LINEARTRANSFER_PROP_ALPHA_Y_INTERCEPT">
    <summary>The Y-intercept of the linear function for the Alpha channel. 
          

The type is FLOAT.

The default is 0.0f.</summary>
  </member>
  <member name="D2D1_LINEARTRANSFER_PROP::D2D1_LINEARTRANSFER_PROP_ALPHA_SLOPE">
    <summary>The slope of the linear function for the Alpha channel.
          

The type is FLOAT.

The default is 0.0f.</summary>
  </member>
  <member name="D2D1_LINEARTRANSFER_PROP::D2D1_LINEARTRANSFER_PROP_ALPHA_DISABLE">
    <summary>If you set this to TRUE the effect does not apply the transfer function to the Alpha channel. 
          If you set this to FALSE the effect applies the AlphaLinearTransfer function to the Alpha channel. 
          

The type is BOOL.

The default is FALSE.</summary>
  </member>
  <member name="D2D1_LINEARTRANSFER_PROP::D2D1_LINEARTRANSFER_PROP_CLAMP_OUTPUT">
    <summary>Whether the effect clamps color values to between 0 and 1 before the effect passes the values to the next effect in the graph. 
          The effect clamps the values before it premultiplies the alpha .
          

If you set this to TRUE the effect will clamp the values. If you set this to FALSE, the effect will not clamp the color values, but other effects and 
          the output surface may clamp the values if they are not of high enough precision.

The type is BOOL.

The default is FALSE.</summary>
  </member>
  <member name="ID2D1SvgPaint::GetIdLength">
    <summary>
      <para>Gets the string length of the element id which acts as the paint server. This id is used if the paint type is D2D1_SVG_PAINT_TYPE_URI.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1svg/nf-d2d1svg-id2d1svgpaint-getidlength" /></para>
    </summary>
  </member>
  <member name="ID2D1Factory7::CreateDevice">
    <summary>
      <para>Creates a new Direct2D device from the given IDXGIDevice.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1_3/nf-d2d1_3-id2d1factory7-createdevice" /></para>
      <param name="dxgiDevice">The IDXGIDevice from which to create the Direct2D device.</param>
      <param name="d2dDevice6">The created device.</param>
    </summary>
  </member>
  <member name="D2D1_HIGHLIGHTSANDSHADOWS_PROP">
    <summary>
      <para>Identifiers for properties of the Highlights and Shadows effect.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1effects_2/ne-d2d1effects_2-d2d1_highlightsandshadows_prop" /></para>
    </summary>
  </member>
  <member name="D2D1_HIGHLIGHTSANDSHADOWS_PROP::D2D1_HIGHLIGHTSANDSHADOWS_PROP_HIGHLIGHTS">
    <summary>The D2D1_HIGHLIGHTSANDSHADOWS_PROP_HIGHLIGHTS property is a float value indicating how much to increase or decrease highlights.  The allowed range is -1.0 to 1.0. The default value is 0.0.</summary>
  </member>
  <member name="D2D1_HIGHLIGHTSANDSHADOWS_PROP::D2D1_HIGHLIGHTSANDSHADOWS_PROP_SHADOWS">
    <summary>The D2D1_HIGHLIGHTSANDSHADOWS_PROP_SHADOWS property is a float value indicating how much to increase or decrease shadows.  The allowed range is -1.0 to 1.0. The default value is 0.0.</summary>
  </member>
  <member name="D2D1_HIGHLIGHTSANDSHADOWS_PROP::D2D1_HIGHLIGHTSANDSHADOWS_PROP_CLARITY">
    <summary>The D2D1_HIGHLIGHTSANDSHADOWS_PROP_CLARITY property is a float value indicating how much to increase or decrease clarity.  The allowed range is -1.0 to 1.0. The default value is 0.0.</summary>
  </member>
  <member name="D2D1_HIGHLIGHTSANDSHADOWS_PROP::D2D1_HIGHLIGHTSANDSHADOWS_PROP_INPUT_GAMMA">
    <summary>The D2D1_HIGHLIGHTSANDSHADOWS_PROP_INPUT_GAMMA property is a <a href="https://docs.microsoft.com/windows/desktop/api/d2d1effects_2/ne-d2d1effects_2-d2d1_highlightsandshadows_input_gamma">D2D1_HIGHLIGHTSANDSHADOWS_INPUT_GAMMA</a> enumeration value
          indicating the gamma of the input image.  The Highlights and Shadows effect works in linear gamma space, so if the input image is know to be linear, the D2D1_HIGHLIGHTSANDSHADOWS_INPUT_GAMMA_LINEAR value should be used to prevent sRGB to linear conversions from being performed.</summary>
  </member>
  <member name="D2D1_HIGHLIGHTSANDSHADOWS_PROP::D2D1_HIGHLIGHTSANDSHADOWS_PROP_MASK_BLUR_RADIUS">
    <summary>The D2D1_HIGHLIGHTSANDSHADOWS_PROP_MASK_BLUR_RADIUS property is a float value controlling the size of the region used around a pixel to classify the pixel as highlight or shadow. Lower values result in more localized adjustments. 
          The allowed range is 0.0 to 10.0.  The default value is 1.25.</summary>
  </member>
  <member name="ID2D1DrawInfo">
    <summary>
      <para>This interface is used to describe a GPU rendering pass on a vertex or pixel shader. It is passed to ID2D1DrawTransform.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1effectauthor/nn-d2d1effectauthor-id2d1drawinfo" /></para>
    </summary>
  </member>
  <member name="ID2D1RadialGradientBrush::GetRadiusX">
    <summary>
      <para>Retrieves the x-radius of the gradient ellipse.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1/nf-d2d1-id2d1radialgradientbrush-getradiusx" /></para>
    </summary>
  </member>
  <member name="D2D1_DEVICE_CONTEXT_OPTIONS">
    <summary>
      <para>This specifies options that apply to the device context for its lifetime.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1_1/ne-d2d1_1-d2d1_device_context_options" /></para>
    </summary>
  </member>
  <member name="D2D1_DEVICE_CONTEXT_OPTIONS::D2D1_DEVICE_CONTEXT_OPTIONS_NONE">
    <summary>The device context is created with default options.</summary>
  </member>
  <member name="D2D1_DEVICE_CONTEXT_OPTIONS::D2D1_DEVICE_CONTEXT_OPTIONS_ENABLE_MULTITHREADED_OPTIMIZATIONS">
    <summary>Distribute rendering work across multiple threads. Refer to <a href="https://docs.microsoft.com/windows/desktop/Direct2D/improving-direct2d-performance">Improving the performance of Direct2D apps</a> for additional notes on the use of this flag.</summary>
  </member>
  <member name="ID2D1RenderTarget::PopLayer">
    <summary>
      <para>Stops redirecting drawing operations to the layer that is specified by the last PushLayer call.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1/nf-d2d1-id2d1rendertarget-poplayer" /></para>
    </summary>
  </member>
  <member name="D2D1_COMBINE_MODE">
    <summary>
      <para>Specifies the different methods by which two geometries can be combined.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1/ne-d2d1-d2d1_combine_mode" /></para>
    </summary>
  </member>
  <member name="D2D1_COMBINE_MODE::D2D1_COMBINE_MODE_UNION">
    <summary>The two regions are combined by taking the union of both. Given two geometries, <i>A</i> and <i>B</i>, the resulting geometry is geometry <i>A</i> + geometry <i>B</i>.</summary>
  </member>
  <member name="D2D1_COMBINE_MODE::D2D1_COMBINE_MODE_INTERSECT">
    <summary>The two regions are combined by taking their intersection. The new area consists of the overlapping region between the two geometries.</summary>
  </member>
  <member name="D2D1_COMBINE_MODE::D2D1_COMBINE_MODE_XOR">
    <summary>The two regions are combined by taking the area that exists in the first region but not the second and the area that exists in the second region but not the first. Given two geometries, <i>A</i> and <i>B</i>, the new region consists of (<i>A</i>-<i>B</i>) + (<i>B</i>-<i>A</i>).</summary>
  </member>
  <member name="D2D1_COMBINE_MODE::D2D1_COMBINE_MODE_EXCLUDE">
    <summary>The second region is excluded from the first. Given two geometries, <i>A</i> and <i>B</i>, the area of geometry <i>B</i> is removed from the area of geometry <i>A</i>, producing a region that is <i>A</i>-<i>B</i>.</summary>
  </member>
  <member name="ID2D1PrintControl">
    <summary>
      <para>Converts Direct2D primitives stored in an ID2D1CommandList into a fixed page representation. The print sub-system then consumes the primitives.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1_1/nn-d2d1_1-id2d1printcontrol" /></para>
    </summary>
  </member>
  <member name="ID2D1EffectContext::CreateOffsetTransform">
    <summary>
      <para>Creates and returns an offset transform.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1effectauthor/nf-d2d1effectauthor-id2d1effectcontext-createoffsettransform" /></para>
      <param name="offset">The offset amount.</param>
      <param name="transform">When this method returns, contains the address of a pointer to an offset transform object.</param>
    </summary>
  </member>
  <member name="ID2D1LookupTable3D">
    <summary>
      <para>A container for 3D lookup table data that can be passed to the LookupTable3D effect.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1_3/nn-d2d1_3-id2d1lookuptable3d" /></para>
    </summary>
  </member>
  <member name="ID2D1Ink::GetStartPoint">
    <summary>
      <para>Retrieves the starting point for this ink object.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1_3/nf-d2d1_3-id2d1ink-getstartpoint" /></para>
    </summary>
  </member>
  <member name="ID2D1SimplifiedGeometrySink::Close">
    <summary>
      <para>Closes the geometry sink, indicates whether it is in an error state, and resets the sink's error state.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1/nf-d2d1-id2d1simplifiedgeometrysink-close" /></para>
    </summary>
  </member>
  <member name="ID2D1GdiMetafile::Stream">
    <summary>
      <para>This method streams the contents of the command to the given metafile sink.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1_1/nf-d2d1_1-id2d1gdimetafile-stream" /></para>
      <param name="sink">The sink into which Direct2D  will call back.</param>
    </summary>
  </member>
  <member name="D2D1_LAYER_OPTIONS1">
    <summary>
      <para>Specifies how the layer contents should be prepared.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1_1/ne-d2d1_1-d2d1_layer_options1" /></para>
    </summary>
  </member>
  <member name="D2D1_LAYER_OPTIONS1::D2D1_LAYER_OPTIONS1_NONE">
    <summary>Default layer behavior. A premultiplied layer target is pushed and its contents are cleared to transparent black.</summary>
  </member>
  <member name="D2D1_LAYER_OPTIONS1::D2D1_LAYER_OPTIONS1_INITIALIZE_FROM_BACKGROUND">
    <summary>The layer is not cleared to transparent black.</summary>
  </member>
  <member name="D2D1_LAYER_OPTIONS1::D2D1_LAYER_OPTIONS1_IGNORE_ALPHA">
    <summary>The layer is always created as ignore alpha. All content rendered into the layer will be treated as opaque.</summary>
  </member>
  <member name="ID2D1RenderTarget::DrawGeometry">
    <summary>
      <para>Draws the outline of the specified geometry using the specified stroke style.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1/nf-d2d1-id2d1rendertarget-drawgeometry" /></para>
      <param name="geometry">The geometry to draw.</param>
      <param name="brush">The brush used to paint the geometry's stroke.</param>
      <param name="strokeWidth">The width of the stroke, in device-independent pixels. The value must be greater than or equal to 0.0f. If this parameter isn't specified, it defaults to 1.0f. The stroke is centered on the line.</param>
      <param name="strokeStyle">The style of stroke to apply to the geometry's outline, or <b>NULL</b> to paint a solid stroke.</param>
    </summary>
  </member>
  <member name="ID2D1TessellationSink::Close">
    <summary>
      <para>Closes the sink and returns its error status.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1/nf-d2d1-id2d1tessellationsink-close" /></para>
    </summary>
  </member>
  <member name="ID2D1DeviceContext5">
    <summary>
      <para>This interface performs all the same functions as the ID2D1DeviceContext4 interface, plus it enables the creation of color contexts and Svg documents.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1_3/nn-d2d1_3-id2d1devicecontext5" /></para>
    </summary>
  </member>
  <member name="ID2D1EffectContext::CreateBlendTransform">
    <summary>
      <para>This creates a blend transform that can be inserted into a transform graph.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1effectauthor/nf-d2d1effectauthor-id2d1effectcontext-createblendtransform" /></para>
      <param name="numInputs">The number of inputs to the blend transform.</param>
      <param name="blendDescription">Describes the blend transform that is to be created.</param>
      <param name="transform">The returned blend transform.</param>
    </summary>
  </member>
  <member name="D2D1_RENDER_TARGET_TYPE">
    <summary>
      <para>Describes whether a render target uses hardware or software rendering, or if Direct2D should select the rendering mode.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1/ne-d2d1-d2d1_render_target_type" /></para>
    </summary>
  </member>
  <member name="D2D1_RENDER_TARGET_TYPE::D2D1_RENDER_TARGET_TYPE_DEFAULT">
    <summary>The render target uses hardware rendering, if available; otherwise, it uses software rendering.</summary>
  </member>
  <member name="D2D1_RENDER_TARGET_TYPE::D2D1_RENDER_TARGET_TYPE_SOFTWARE">
    <summary>The render target uses software rendering only.</summary>
  </member>
  <member name="D2D1_RENDER_TARGET_TYPE::D2D1_RENDER_TARGET_TYPE_HARDWARE">
    <summary>The render target uses hardware rendering only.</summary>
  </member>
  <member name="ID2D1Device2::GetDxgiDevice">
    <summary>
      <para>Returns the DXGI device associated with this Direct2D device.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1_3/nf-d2d1_3-id2d1device2-getdxgidevice" /></para>
      <param name="dxgiDevice">The DXGI device associated with this Direct2D device.</param>
    </summary>
  </member>
  <member name="ID2D1TransformedImageSource::GetSource">
    <summary>
      <para>Retrieves the source image used to create the transformed image source.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1_3/nf-d2d1_3-id2d1transformedimagesource-getsource" /></para>
      <param name="imageSource">Retrieves the source image used to create the transformed image source.</param>
    </summary>
  </member>
  <member name="D2D1_DRAWING_STATE_DESCRIPTION">
    <summary>
      <para>Describes the drawing state of a render target.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1/ns-d2d1-d2d1_drawing_state_description" /></para>
    </summary>
  </member>
  <member name="D2D1_DRAWING_STATE_DESCRIPTION::antialiasMode">
    <summary>The antialiasing mode for subsequent nontext drawing operations.</summary>
  </member>
  <member name="D2D1_DRAWING_STATE_DESCRIPTION::textAntialiasMode">
    <summary>The antialiasing mode for subsequent text and glyph drawing operations.</summary>
  </member>
  <member name="D2D1_DRAWING_STATE_DESCRIPTION::tag1">
    <summary>A label for subsequent drawing operations.</summary>
  </member>
  <member name="D2D1_DRAWING_STATE_DESCRIPTION::tag2">
    <summary>A label for subsequent drawing operations.</summary>
  </member>
  <member name="D2D1_DRAWING_STATE_DESCRIPTION::transform">
    <summary>The transformation to apply to subsequent drawing operations.</summary>
  </member>
  <member name="ID2D1GdiMetafileSink::ProcessRecord">
    <summary>
      <para>This method is called once for each record stored in a metafile.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1_1/nf-d2d1_1-id2d1gdimetafilesink-processrecord" /></para>
      <param name="recordType">The type of the record.</param>
      <param name="recordData">The data for the record.</param>
      <param name="recordDataSize">The byte size of the record data.</param>
    </summary>
  </member>
  <member name="ID2D1ResourceTexture">
    <summary>
      <para>Tracks a transform-created resource texture.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1effectauthor/nn-d2d1effectauthor-id2d1resourcetexture" /></para>
    </summary>
  </member>
  <member name="ID2D1DeviceContext1::DrawGeometryRealization">
    <summary>
      <para>Renders a given geometry realization to the target with the specified brush.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1_2/nf-d2d1_2-id2d1devicecontext1-drawgeometryrealization" /></para>
      <param name="geometryRealization">The geometry realization to be rendered.</param>
      <param name="brush">The brush to render the realization with.</param>
    </summary>
  </member>
  <member name="D2D1_3DPERSPECTIVETRANSFORM_PROP">
    <summary>
      <para>Identifiers for the properties of the 3D perspective transform effect.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1effects/ne-d2d1effects-d2d1_3dperspectivetransform_prop" /></para>
    </summary>
  </member>
  <member name="D2D1_3DPERSPECTIVETRANSFORM_PROP::D2D1_3DPERSPECTIVETRANSFORM_PROP_INTERPOLATION_MODE">
    <summary>The interpolation mode the effect uses on the image. There are 5 scale modes that range in quality and speed.
            

Type is D2D1_3DPERSPECTIVETRANSFORM_INTERPOLATION_MODE.

Default value is D2D1_3DPERSPECTIVETRANSFORM_INTERPOLATION_MODE_LINEAR.</summary>
  </member>
  <member name="D2D1_3DPERSPECTIVETRANSFORM_PROP::D2D1_3DPERSPECTIVETRANSFORM_PROP_BORDER_MODE">
    <summary>The mode used to calculate the border of the image, soft or hard. See Border modes for more info.
            

Type is D2D1_BORDER_MODE.

Default value is D2D1_BORDER_MODE_SOFT.</summary>
  </member>
  <member name="D2D1_3DPERSPECTIVETRANSFORM_PROP::D2D1_3DPERSPECTIVETRANSFORM_PROP_DEPTH">
    <summary>The distance from the PerspectiveOrigin to the projection plane. The value specified in DIPs and must be greater than 0.
            

Type is FLOAT.

Default value is 1000.0f.</summary>
  </member>
  <member name="D2D1_3DPERSPECTIVETRANSFORM_PROP::D2D1_3DPERSPECTIVETRANSFORM_PROP_PERSPECTIVE_ORIGIN">
    <summary>The X and Y location of the viewer in the 3D scene. This property is a D2D1_VECTOR_2F defined as: (point X, point Y). The units are in DIPs.
            You set the Z value with the Depth property.
            

Type is D2D1_VECTOR_2F.

Default value is {0.0f, 0.0f}.</summary>
  </member>
  <member name="D2D1_3DPERSPECTIVETRANSFORM_PROP::D2D1_3DPERSPECTIVETRANSFORM_PROP_LOCAL_OFFSET">
    <summary>A translation the effect performs before it rotates the projection plane. This property is a D2D1_VECTOR_3F defined as: (X, Y, Z). The units are in DIPs.
            

Type is D2D1_VECTOR_3F.

Default value is {0.0f, 0.0f, 0.0f}.</summary>
  </member>
  <member name="D2D1_3DPERSPECTIVETRANSFORM_PROP::D2D1_3DPERSPECTIVETRANSFORM_PROP_GLOBAL_OFFSET">
    <summary>A translation the effect performs after it rotates the projection plane. This property is a D2D1_VECTOR_3F defined as: (X, Y, Z). The units are in DIPs.
            

Type is D2D1_VECTOR_3F.

Default value is {0.0f, 0.0f, 0.0f}.</summary>
  </member>
  <member name="D2D1_3DPERSPECTIVETRANSFORM_PROP::D2D1_3DPERSPECTIVETRANSFORM_PROP_ROTATION_ORIGIN">
    <summary>The center point of the rotation the effect performs. This property is a D2D1_VECTOR_3F defined as: (X, Y, Z). The units are in DIPs.
            

Type is D2D1_VECTOR_3F.

Default value is {0.0f, 0.0f, 0.0f}.</summary>
  </member>
  <member name="D2D1_3DPERSPECTIVETRANSFORM_PROP::D2D1_3DPERSPECTIVETRANSFORM_PROP_ROTATION">
    <summary>The angles of rotation for each axis. This property is a D2D1_VECTOR_3F defined as: (X, Y, Z). The units are in degrees.
            

Type is D2D1_VECTOR_3F.

Default value is {0.0f, 0.0f, 0.0f}.</summary>
  </member>
  <member name="ID2D1BitmapBrush">
    <summary>
      <para>Paints an area with a bitmap.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1/nn-d2d1-id2d1bitmapbrush" /></para>
    </summary>
  </member>
  <member name="ID2D1CommandSink::SetUnitMode">
    <summary>
      <para>The unit mode changes the meaning of subsequent units from device-independent pixels (DIPs) to pixels or the other way. The command sink does not record a DPI, this is implied by the playback context or other playback interface such as ID2D1PrintControl.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1_1/nf-d2d1_1-id2d1commandsink-setunitmode" /></para>
      <param name="unitMode">The enumeration that specifies how units are to be interpreted.</param>
    </summary>
  </member>
  <member name="D2D1_QUADRATIC_BEZIER_SEGMENT">
    <summary>
      <para>Contains the control point and end point for a quadratic Bezier segment.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1/ns-d2d1-d2d1_quadratic_bezier_segment" /></para>
    </summary>
  </member>
  <member name="D2D1_QUADRATIC_BEZIER_SEGMENT::point1">
    <summary>The control point of the quadratic Bezier segment.</summary>
  </member>
  <member name="D2D1_QUADRATIC_BEZIER_SEGMENT::point2">
    <summary>The end point of the quadratic Bezier segment.</summary>
  </member>
  <member name="ID2D1ComputeTransform::SetComputeInfo">
    <summary>
      <para>Sets the render information used to specify the compute shader pass.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1effectauthor/nf-d2d1effectauthor-id2d1computetransform-setcomputeinfo" /></para>
      <param name="computeInfo">The render information object to set.</param>
    </summary>
  </member>
  <member name="ID2D1DeviceContext::GetGlyphRunWorldBounds">
    <summary>
      <para>Gets the world-space bounds in DIPs of the glyph run using the device context DPI.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1_1/nf-d2d1_1-id2d1devicecontext-getglyphrunworldbounds" /></para>
      <param name="baselineOrigin">The origin of the baseline for the glyph run.</param>
      <param name="glyphRun">The glyph run to render.</param>
      <param name="measuringMode">The DirectWrite measuring mode that indicates how glyph metrics are used to measure text when it is formatted.</param>
      <param name="bounds">The bounds of the glyph run in DIPs and in world space.</param>
    </summary>
  </member>
  <member name="ID2D1GdiMetafile::GetBounds">
    <summary>
      <para>Gets the bounds of the metafile, in device-independent pixels (DIPs), as reported in the metafile’s header.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1_1/nf-d2d1_1-id2d1gdimetafile-getbounds" /></para>
      <param name="bounds">The bounds, in DIPs, of the metafile.</param>
    </summary>
  </member>
  <member name="ID2D1HwndRenderTarget::GetHwnd">
    <summary>
      <para>Returns the HWND associated with this render target.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1/nf-d2d1-id2d1hwndrendertarget-gethwnd" /></para>
    </summary>
  </member>
  <member name="ID2D1SvgPaint::GetPaintType">
    <summary>
      <para>Gets the paint type.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1svg/nf-d2d1svg-id2d1svgpaint-getpainttype" /></para>
    </summary>
  </member>
  <member name="ID2D1DeviceContext3::CreateSpriteBatch">
    <summary>
      <para>Creates a new, empty sprite batch. After creating a sprite batch, use ID2D1SpriteBatch::AddSprites to add sprites to it, then use ID2D1DeviceContext3::DrawSpriteBatch to draw it.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1_3/nf-d2d1_3-id2d1devicecontext3-createspritebatch" /></para>
      <param name="spriteBatch">When this method returns, contains a pointer to a new, empty sprite batch to be populated by the app.</param>
    </summary>
  </member>
  <member name="ID2D1OffsetTransform::SetOffset">
    <summary>
      <para>Sets the offset in the current offset transform.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1effectauthor/nf-d2d1effectauthor-id2d1offsettransform-setoffset" /></para>
      <param name="offset">The new offset to apply to the offset transform.</param>
    </summary>
  </member>
  <member name="ID2D1DeviceContext::GetTarget">
    <summary>
      <para>Gets the target currently associated with the device context.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1_1/nf-d2d1_1-id2d1devicecontext-gettarget" /></para>
      <param name="image">When this method returns, contains the address of a pointer to the target currently associated with the device context.</param>
    </summary>
  </member>
  <member name="ID2D1TransformNode">
    <summary>
      <para>Describes a node in a transform topology.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1effectauthor/nn-d2d1effectauthor-id2d1transformnode" /></para>
    </summary>
  </member>
  <member name="D2D1_LINE_JOIN">
    <summary>
      <para>Describes the shape that joins two lines or segments.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1/ne-d2d1-d2d1_line_join" /></para>
    </summary>
  </member>
  <member name="D2D1_LINE_JOIN::D2D1_LINE_JOIN_MITER">
    <summary>Regular angular vertices.</summary>
  </member>
  <member name="D2D1_LINE_JOIN::D2D1_LINE_JOIN_BEVEL">
    <summary>Beveled vertices.</summary>
  </member>
  <member name="D2D1_LINE_JOIN::D2D1_LINE_JOIN_ROUND">
    <summary>Rounded vertices.</summary>
  </member>
  <member name="D2D1_LINE_JOIN::D2D1_LINE_JOIN_MITER_OR_BEVEL">
    <summary>Regular angular vertices unless the join would extend beyond the miter limit; otherwise, beveled vertices.</summary>
  </member>
  <member name="ID2D1DeviceContext::IsDxgiFormatSupported">
    <summary>
      <para>Indicates whether the format is supported by the device context.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1_1/nf-d2d1_1-id2d1devicecontext-isdxgiformatsupported" /></para>
      <param name="format">The DXGI format to check.</param>
    </summary>
  </member>
  <member name="D2D1_COLOR_BITMAP_GLYPH_SNAP_OPTION">
    <summary>
      <para>Specifies the pixel snapping policy when rendering color bitmap glyphs.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1_3/ne-d2d1_3-d2d1_color_bitmap_glyph_snap_option" /></para>
    </summary>
  </member>
  <member name="D2D1_COLOR_BITMAP_GLYPH_SNAP_OPTION::D2D1_COLOR_BITMAP_GLYPH_SNAP_OPTION_DEFAULT">
    <summary>Color bitmap glyph positions are snapped to the nearest pixel if the bitmap
          resolution matches that of the device context.</summary>
  </member>
  <member name="D2D1_COLOR_BITMAP_GLYPH_SNAP_OPTION::D2D1_COLOR_BITMAP_GLYPH_SNAP_OPTION_DISABLE">
    <summary>Color bitmap glyph positions are not snapped.</summary>
  </member>
  <member name="D2D1_LINEAR_GRADIENT_BRUSH_PROPERTIES">
    <summary>
      <para>Contains the starting point and endpoint of the gradient axis for an ID2D1LinearGradientBrush.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1/ns-d2d1-d2d1_linear_gradient_brush_properties" /></para>
    </summary>
  </member>
  <member name="D2D1_LINEAR_GRADIENT_BRUSH_PROPERTIES::startPoint">
    <summary>In the brush's coordinate space, the starting point  of the gradient axis.</summary>
  </member>
  <member name="D2D1_LINEAR_GRADIENT_BRUSH_PROPERTIES::endPoint">
    <summary>In the brush's coordinate space, the endpoint  of the gradient axis.</summary>
  </member>
  <member name="D2D1_COMPOSITE_MODE">
    <summary>
      <para>Used to specify the blend mode for all of the Direct2D blending operations.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1_1/ne-d2d1_1-d2d1_composite_mode" /></para>
    </summary>
  </member>
  <member name="D2D1_COMPOSITE_MODE::D2D1_COMPOSITE_MODE_SOURCE_OVER">
    <summary>The standard source-over-destination blend mode.</summary>
  </member>
  <member name="D2D1_COMPOSITE_MODE::D2D1_COMPOSITE_MODE_DESTINATION_OVER">
    <summary>The destination is rendered over the source.</summary>
  </member>
  <member name="D2D1_COMPOSITE_MODE::D2D1_COMPOSITE_MODE_SOURCE_IN">
    <summary>Performs a logical clip of the source pixels against the destination pixels.</summary>
  </member>
  <member name="D2D1_COMPOSITE_MODE::D2D1_COMPOSITE_MODE_DESTINATION_IN">
    <summary>The inverse of the <b>D2D1_COMPOSITE_MODE_SOURCE_IN</b> operation.</summary>
  </member>
  <member name="D2D1_COMPOSITE_MODE::D2D1_COMPOSITE_MODE_SOURCE_OUT">
    <summary>This is the logical inverse to <b>D2D1_COMPOSITE_MODE_SOURCE_IN</b>.</summary>
  </member>
  <member name="D2D1_COMPOSITE_MODE::D2D1_COMPOSITE_MODE_DESTINATION_OUT">
    <summary>The is the logical inverse to <b>D2D1_COMPOSITE_MODE_DESTINATION_IN</b>.</summary>
  </member>
  <member name="D2D1_COMPOSITE_MODE::D2D1_COMPOSITE_MODE_SOURCE_ATOP">
    <summary>Writes the source pixels over the destination where there are destination pixels.</summary>
  </member>
  <member name="D2D1_COMPOSITE_MODE::D2D1_COMPOSITE_MODE_DESTINATION_ATOP">
    <summary>The logical inverse of <b>D2D1_COMPOSITE_MODE_SOURCE_ATOP</b>.</summary>
  </member>
  <member name="D2D1_COMPOSITE_MODE::D2D1_COMPOSITE_MODE_XOR">
    <summary>The source is inverted with the destination.</summary>
  </member>
  <member name="D2D1_COMPOSITE_MODE::D2D1_COMPOSITE_MODE_PLUS">
    <summary>The channel components are summed.</summary>
  </member>
  <member name="D2D1_COMPOSITE_MODE::D2D1_COMPOSITE_MODE_SOURCE_COPY">
    <summary>The source is copied to the destination; the destination pixels are ignored.</summary>
  </member>
  <member name="D2D1_COMPOSITE_MODE::D2D1_COMPOSITE_MODE_BOUNDED_SOURCE_COPY">
    <summary>Equivalent to <b>D2D1_COMPOSITE_MODE_SOURCE_COPY</b>, but pixels outside of the source bounds are unchanged.</summary>
  </member>
  <member name="D2D1_COMPOSITE_MODE::D2D1_COMPOSITE_MODE_MASK_INVERT">
    <summary>Destination colors are inverted according to a source mask.</summary>
  </member>
  <member name="ID2D1CommandSink3">
    <summary>
      <para>This interface performs all the same functions as the existing ID2D1CommandSink2 interface. It also enables access to sprite batch rendering.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1_3/nn-d2d1_3-id2d1commandsink3" /></para>
    </summary>
  </member>
  <member name="ID2D1SvgGlyphStyle::SetFill">
    <summary>
      <para>Provides values to an SVG glyph for fill.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1_3/nf-d2d1_3-id2d1svgglyphstyle-setfill" /></para>
      <param name="brush">Describes how the area is painted.  A null brush will cause the context-fill value to come from
          the <a href="https://docs.microsoft.com/windows/desktop/api/d2d1_3/nf-d2d1_3-id2d1devicecontext4-drawtext(constwchar_uint32_idwritetextformat_constd2d1_rect_f__id2d1brush_id2d1svgglyphstyle_uint32_d2d1_draw_text_options_dwrite_measuring_mode)">defaultFillBrush</a>. If the defaultFillBrush is also null, the context-fill value will be 'none'.
          To set the ‘context-fill’ value, this method uses the provided brush with its opacity set to 1. To set the ‘context-fill-opacity’ value, this method uses the opacity of the provided brush.</param>
    </summary>
  </member>
  <member name="ID2D1CommandSink4::SetPrimitiveBlend2">
    <summary>
      <para>Sets a new primitive blend mode. Allows access to the MAX primitive blend mode.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1_3/nf-d2d1_3-id2d1commandsink4-setprimitiveblend2" /></para>
      <param name="primitiveBlend">The primitive blend that will apply to subsequent primitives.</param>
    </summary>
  </member>
  <member name="ID2D1StrokeStyle::GetDashCap">
    <summary>
      <para>Gets a value that specifies how the ends of each dash are drawn.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1/nf-d2d1-id2d1strokestyle-getdashcap" /></para>
    </summary>
  </member>
  <member name="ID2D1GdiMetafileSink">
    <summary>
      <para>A developer implemented interface that allows a metafile to be replayed.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1_1/nn-d2d1_1-id2d1gdimetafilesink" /></para>
    </summary>
  </member>
  <member name="ID2D1Ink::GetSegmentCount">
    <summary>
      <para>Returns the number of segments in this ink object.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1_3/nf-d2d1_3-id2d1ink-getsegmentcount" /></para>
    </summary>
  </member>
  <member name="D2D1_DISTANTDIFFUSE_PROP">
    <summary>
      <para>Identifiers for properties of the Distant-diffuse lighting effect.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1effects/ne-d2d1effects-d2d1_distantdiffuse_prop" /></para>
    </summary>
  </member>
  <member name="D2D1_DISTANTDIFFUSE_PROP::D2D1_DISTANTDIFFUSE_PROP_AZIMUTH">
    <summary>The direction angle of the light source in the XY plane relative to the X-axis in the counter clock wise direction. The units are in degrees and must be between 0 and 360 degrees.
            

The type is FLOAT.

The default value is 0.0f.</summary>
  </member>
  <member name="D2D1_DISTANTDIFFUSE_PROP::D2D1_DISTANTDIFFUSE_PROP_ELEVATION">
    <summary>The direction angle of the light source in the YZ plane relative to the Y-axis in the counter clock wise direction. The units are in degrees and must be between 0 and 360 degrees. 
            

The type is FLOAT.

The default value is 0.0f.</summary>
  </member>
  <member name="D2D1_DISTANTDIFFUSE_PROP::D2D1_DISTANTDIFFUSE_PROP_DIFFUSE_CONSTANT">
    <summary>The ratio of diffuse reflection to amount of incoming light. This property must be between 0 and 10,000 and is unitless. 
            

The type is FLOAT.

The default value is 1.0f.</summary>
  </member>
  <member name="D2D1_DISTANTDIFFUSE_PROP::D2D1_DISTANTDIFFUSE_PROP_SURFACE_SCALE">
    <summary>The scale factor in the Z direction. The surface scale is unitless and must be between 0 and 10,000.
            

The type is FLOAT.

The default value is 1.0f.</summary>
  </member>
  <member name="D2D1_DISTANTDIFFUSE_PROP::D2D1_DISTANTDIFFUSE_PROP_COLOR">
    <summary>The color of the incoming light. This property is exposed as a D2D1_VECTOR_3F – (R, G, B) and used to compute LR, LG, LB. 
            

The type is D2D1_VECTOR_3F.

The default value is {1.0f, 1.0f, 1.0f}.</summary>
  </member>
  <member name="D2D1_DISTANTDIFFUSE_PROP::D2D1_DISTANTDIFFUSE_PROP_KERNEL_UNIT_LENGTH">
    <summary>The size of an element in the Sobel kernel used to generate the surface normal in the X and Y direction. This property maps to the dx and dy values in the Sobel gradient. This property is a D2D1_VECTOR_2F (Kernel Unit Length X, Kernel Unit Length Y) and is defined in (device-independent pixels (DIPs)/Kernel Unit). The effect uses bilinear interpolation to scale the bitmap to match size of kernel elements. 
            

The type is D2D1_VECTOR_2F.

The default value is {1.0f, 1.0f}.</summary>
  </member>
  <member name="D2D1_DISTANTDIFFUSE_PROP::D2D1_DISTANTDIFFUSE_PROP_SCALE_MODE">
    <summary>The interpolation mode the effect uses to scale the image to the corresponding kernel unit length. There are six scale modes that range in quality and speed.
            

The type is D2D1_DISTANTDIFFUSE_SCALE_MODE.

The default value is D2D1_DISTANTDIFFUSE_SCALE_MODE_LINEAR.</summary>
  </member>
  <member name="D2D1_SVG_PAINT_TYPE">
    <summary>
      <para>Specifies the paint type for an SVG fill or stroke.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1svg/ne-d2d1svg-d2d1_svg_paint_type" /></para>
    </summary>
  </member>
  <member name="D2D1_SVG_PAINT_TYPE::D2D1_SVG_PAINT_TYPE_NONE">
    <summary>The fill or stroke is not rendered.</summary>
  </member>
  <member name="D2D1_SVG_PAINT_TYPE::D2D1_SVG_PAINT_TYPE_COLOR">
    <summary>A solid color is rendered.</summary>
  </member>
  <member name="D2D1_SVG_PAINT_TYPE::D2D1_SVG_PAINT_TYPE_CURRENT_COLOR">
    <summary>The current color is rendered.</summary>
  </member>
  <member name="D2D1_SVG_PAINT_TYPE::D2D1_SVG_PAINT_TYPE_URI">
    <summary>A paint server, defined by another element in the SVG document, is used.</summary>
  </member>
  <member name="D2D1_SVG_PAINT_TYPE::D2D1_SVG_PAINT_TYPE_URI_NONE">
    <summary>A paint server, defined by another element in the SVG document, is used. If the paint server reference is invalid, fall back to D2D1_SVG_PAINT_TYPE_NONE.</summary>
  </member>
  <member name="D2D1_SVG_PAINT_TYPE::D2D1_SVG_PAINT_TYPE_URI_COLOR">
    <summary>A paint server, defined by another element in the SVG document, is used. If the paint server reference is invalid, fall back to D2D1_SVG_PAINT_TYPE_COLOR.</summary>
  </member>
  <member name="D2D1_SVG_PAINT_TYPE::D2D1_SVG_PAINT_TYPE_URI_CURRENT_COLOR">
    <summary>A paint server, defined by another element in the SVG document, is used. If the paint server reference is invalid, fall back to D2D1_SVG_PAINT_TYPE_CURRENT_COLOR.</summary>
  </member>
  <member name="ID2D1CommandSink::DrawImage">
    <summary>
      <para>Draws the provided image to the command sink.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1_1/nf-d2d1_1-id2d1commandsink-drawimage" /></para>
      <param name="image">The image to be drawn to the command sink.</param>
      <param name="targetOffset">This defines the offset in the destination space that the image will be rendered to. The entire logical extent of the image will be rendered to the corresponding destination. If not specified, the destination origin will be (0, 0). The top-left corner of the image will be mapped to the target offset. This will not necessarily be the origin.</param>
      <param name="imageRectangle">The corresponding rectangle in the image space will be mapped to the provided origins when processing the image.</param>
      <param name="interpolationMode">The interpolation mode to use to  scale the image if necessary.</param>
      <param name="compositeMode">If specified, the composite mode that will be applied to the limits of the currently selected clip.</param>
    </summary>
  </member>
  <member name="D2D1_GAMMA">
    <summary>
      <para>Specifies which gamma is used for interpolation.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1/ne-d2d1-d2d1_gamma" /></para>
    </summary>
  </member>
  <member name="D2D1_GAMMA::D2D1_GAMMA_2_2">
    <summary>Interpolation is performed in the standard RGB (sRGB) gamma.</summary>
  </member>
  <member name="D2D1_GAMMA::D2D1_GAMMA_1_0">
    <summary>Interpolation is performed in the linear-gamma color space.</summary>
  </member>
  <member name="ID2D1EffectContext::IsBufferPrecisionSupported">
    <summary>
      <para>Indicates whether the buffer precision is supported by the underlying Direct2D device.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1effectauthor/nf-d2d1effectauthor-id2d1effectcontext-isbufferprecisionsupported" /></para>
      <param name="bufferPrecision">The buffer precision to check.</param>
    </summary>
  </member>
  <member name="ID2D1SvgStrokeDashArray::GetDashesCount">
    <summary>
      <para>Gets the number of the dashes in the array.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1svg/nf-d2d1svg-id2d1svgstrokedasharray-getdashescount" /></para>
    </summary>
  </member>
  <member name="D2D1_TILE_PROP">
    <summary>
      <para>Identifiers for properties of the Tile effect.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1effects/ne-d2d1effects-d2d1_tile_prop" /></para>
    </summary>
  </member>
  <member name="D2D1_TILE_PROP::D2D1_TILE_PROP_RECT">
    <summary>The region of the image to be tiled. This property is a <a href="https://docs.microsoft.com/windows/desktop/api/dcommon/ns-dcommon-d2d_vector_4f">D2D1_VECTOR_4F</a> defined as: (left, top, right, bottom). The units are in DIPs.
            

The type is <a href="https://docs.microsoft.com/windows/desktop/api/dcommon/ns-dcommon-d2d_vector_4f">D2D1_VECTOR_4F</a>.

The default is {0.0f, 0.0f, 100.0f, 100.0f}.</summary>
  </member>
  <member name="ID2D1Layer">
    <summary>
      <para>Represents the backing store required to render a layer.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1/nn-d2d1-id2d1layer" /></para>
    </summary>
  </member>
  <member name="ID2D1DeviceContext::CreateEffect">
    <summary>
      <para>Creates an effect for the specified class ID.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1_1/nf-d2d1_1-id2d1devicecontext-createeffect" /></para>
      <param name="effectId">The class ID of the effect to create. See <a href="https://docs.microsoft.com/windows/desktop/Direct2D/built-in-effects">Built-in Effects</a> for a list of effect IDs.</param>
      <param name="effect">When this method returns, contains the address of a pointer to a new effect.</param>
    </summary>
  </member>
  <member name="ID2D1SvgPathData::CreatePathGeometry">
    <summary>
      <para>Creates a path geometry object representing the path data.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1svg/nf-d2d1svg-id2d1svgpathdata-createpathgeometry" /></para>
      <param name="fillMode">Fill mode for the path geometry object.</param>
      <param name="pathGeometry">On completion, pathGeometry will contain a point to the created <a href="https://docs.microsoft.com/windows/desktop/api/d2d1_1/nn-d2d1_1-id2d1pathgeometry1">ID2D1PathGeometry1</a> object.</param>
    </summary>
  </member>
  <member name="ID2D1TransformGraph::ConnectToEffectInput">
    <summary>
      <para>Connects a transform node inside the graph to the corresponding effect input of the encapsulating effect.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1effectauthor/nf-d2d1effectauthor-id2d1transformgraph-connecttoeffectinput" /></para>
      <param name="toEffectInputIndex">The effect input to which the transform node will be bound.</param>
      <param name="node">The node to which the connection will be made.</param>
      <param name="toNodeInputIndex">The node input that will be connected.</param>
    </summary>
  </member>
  <member name="D2D1_CHANNEL_SELECTOR">
    <summary>
      <para>Specifies the color channel the Displacement map effectextracts the intensity from and uses it to spatially displace the image in the X or Y direction.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1effects/ne-d2d1effects-d2d1_channel_selector" /></para>
    </summary>
  </member>
  <member name="D2D1_CHANNEL_SELECTOR::D2D1_CHANNEL_SELECTOR_R">
    <summary>The effect extracts the intensity output from the red channel.</summary>
  </member>
  <member name="D2D1_CHANNEL_SELECTOR::D2D1_CHANNEL_SELECTOR_G">
    <summary>The effect extracts the intensity output from the green channel.</summary>
  </member>
  <member name="D2D1_CHANNEL_SELECTOR::D2D1_CHANNEL_SELECTOR_B">
    <summary>The effect extracts the intensity output from the blue channel.</summary>
  </member>
  <member name="D2D1_CHANNEL_SELECTOR::D2D1_CHANNEL_SELECTOR_A">
    <summary>The effect extracts the intensity output from the alpha channel.</summary>
  </member>
  <member name="ID2D1RenderTarget::DrawGlyphRun">
    <summary>
      <para>Draws the specified glyphs.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1/nf-d2d1-id2d1rendertarget-drawglyphrun" /></para>
      <param name="baselineOrigin">The origin, in device-independent pixels, of the glyphs' baseline.</param>
      <param name="glyphRun">The glyphs to render.</param>
      <param name="foregroundBrush">The brush used to paint the specified glyphs.</param>
      <param name="measuringMode">A value that indicates how glyph metrics are used to measure text when it is formatted.  The default value is <a href="https://docs.microsoft.com/windows/win32/api/dcommon/ne-dcommon-dwrite_measuring_mode">DWRITE_MEASURING_MODE_NATURAL</a>.</param>
    </summary>
  </member>
  <member name="ID2D1Bitmap::GetPixelSize">
    <summary>
      <para>Returns the size, in device-dependent units (pixels), of the bitmap.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1/nf-d2d1-id2d1bitmap-getpixelsize" /></para>
    </summary>
  </member>
  <member name="ID2D1ConcreteTransform::SetCached">
    <summary>
      <para>Sets whether the output of the specified transform is cached.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1effectauthor/nf-d2d1effectauthor-id2d1concretetransform-setcached" /></para>
      <param name="isCached"><b>TRUE</b> if the output should be cached; otherwise,  <b>FALSE</b>.</param>
    </summary>
  </member>
  <member name="ID2D1DeviceContext2::GetGradientMeshWorldBounds">
    <summary>
      <para>Returns the world bounds of a given gradient mesh.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1_3/nf-d2d1_3-id2d1devicecontext2-getgradientmeshworldbounds" /></para>
      <param name="gradientMesh">The gradient mesh whose world bounds will be calculated.</param>
      <param name="pBounds">When this method returns, contains a pointer to the bounds of the gradient mesh, in device independent pixels (DIPs).</param>
    </summary>
  </member>
  <member name="D2D1_SCALE_PROP">
    <summary>
      <para>Identifiers for properties of the Scale effect.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1effects/ne-d2d1effects-d2d1_scale_prop" /></para>
    </summary>
  </member>
  <member name="D2D1_SCALE_PROP::D2D1_SCALE_PROP_SCALE">
    <summary>The scale amount in the X and Y direction as a ratio of the output size to the input size.
            

This property a <a href="https://docs.microsoft.com/windows/desktop/api/dcommon/ns-dcommon-d2d_vector_2f">D2D1_VECTOR_2F</a> defined as: (X scale, Y scale). 
            The scale amounts are FLOAT, unitless, and must be positive or 0.

The type is <a href="https://docs.microsoft.com/windows/desktop/api/dcommon/ns-dcommon-d2d_vector_2f">D2D1_VECTOR_2F</a>.

The default value is {1.0f, 1.0f}.</summary>
  </member>
  <member name="D2D1_SCALE_PROP::D2D1_SCALE_PROP_CENTER_POINT">
    <summary>The image scaling center point. This property is a <a href="https://docs.microsoft.com/windows/desktop/api/dcommon/ns-dcommon-d2d_vector_2f">D2D1_VECTOR_2F</a> defined as: (point X, point Y). The units are in DIPs.
            

Use the center point property to scale around a point other than the upper-left corner.

The type is <a href="https://docs.microsoft.com/windows/desktop/api/dcommon/ns-dcommon-d2d_vector_2f">D2D1_VECTOR_2F</a>.

The default value is {0.0f, 0.0f}.</summary>
  </member>
  <member name="D2D1_SCALE_PROP::D2D1_SCALE_PROP_INTERPOLATION_MODE">
    <summary>The interpolation mode the effect uses to scale the image. There are 6 scale modes that range in quality and speed.
            

The type is <a href="https://docs.microsoft.com/windows/desktop/api/d2d1effects/ne-d2d1effects-d2d1_scale_interpolation_mode">D2D1_SCALE_INTERPOLATION_MODE</a>.

The default value is D2D1_SCALE_INTERPOLATION_MODE_LINEAR.</summary>
  </member>
  <member name="D2D1_SCALE_PROP::D2D1_SCALE_PROP_BORDER_MODE">
    <summary>The mode used to calculate the border of the image, soft or hard. 
            

The type is <a href="https://docs.microsoft.com/windows/desktop/api/d2d1effects/ne-d2d1effects-d2d1_border_mode">D2D1_BORDER_MODE</a>.

The default value is D2D1_BORDER_MODE_SOFT.</summary>
  </member>
  <member name="D2D1_SCALE_PROP::D2D1_SCALE_PROP_SHARPNESS">
    <summary>In the high quality cubic interpolation mode, the sharpness level of the scaling filter as a float between 0 and 1. The values are unitless. 
            You can use sharpness to adjust the quality of an image when you scale the image down.
            

The sharpness factor affects the shape of the kernel. The higher the sharpness factor, the smaller the kernel.

<div class="alert"><b>Note</b>  This property affects only the high quality cubic interpolation mode.</div>
<div> </div>
The type is FLOAT.

The default value is 0.0f.</summary>
  </member>
  <member name="D2D1_HDRTONEMAP_DISPLAY_MODE">
    <summary>
      <para>Defines constants that specify a value for the D2D1_HDRTONEMAP_PROP_DISPLAY_MODE property of the HDR Tone Map effect.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1effects_2/ne-d2d1effects_2-d2d1_hdrtonemap_display_mode" /></para>
    </summary>
  </member>
  <member name="D2D1_HDRTONEMAP_DISPLAY_MODE::D2D1_HDRTONEMAP_DISPLAY_MODE_SDR">
    <summary>Specifies that the tone mapper algorithm be optimized for best appearance on a standard dynamic range (SDR) display.</summary>
  </member>
  <member name="D2D1_HDRTONEMAP_DISPLAY_MODE::D2D1_HDRTONEMAP_DISPLAY_MODE_HDR">
    <summary>Specifies that the tone mapper algorithm be optimized for best appearance on a high dynamic range (HDR) display.</summary>
  </member>
  <member name="ID2D1PathGeometry::GetSegmentCount">
    <summary>
      <para>Retrieves the number of segments in the path geometry.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1/nf-d2d1-id2d1pathgeometry-getsegmentcount" /></para>
      <param name="count">A pointer that receives the number of segments in the path geometry when this method returns. You must allocate storage for this parameter.</param>
    </summary>
  </member>
  <member name="D2D1_WINDOW_STATE">
    <summary>
      <para>Describes whether a window is occluded.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1/ne-d2d1-d2d1_window_state" /></para>
    </summary>
  </member>
  <member name="D2D1_WINDOW_STATE::D2D1_WINDOW_STATE_NONE">
    <summary>The window is not occluded.</summary>
  </member>
  <member name="D2D1_WINDOW_STATE::D2D1_WINDOW_STATE_OCCLUDED">
    <summary>The window is occluded.</summary>
  </member>
  <member name="D2D1_PATH_SEGMENT">
    <summary>
      <para>Indicates whether a segment should be stroked and whether the join between this segment and the previous one should be smooth. This enumeration allows a bitwise combination of its member values.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1/ne-d2d1-d2d1_path_segment" /></para>
    </summary>
  </member>
  <member name="D2D1_PATH_SEGMENT::D2D1_PATH_SEGMENT_NONE">
    <summary>The segment is joined  as specified by the <a href="https://docs.microsoft.com/windows/win32/api/d2d1/nn-d2d1-id2d1strokestyle">ID2D1StrokeStyle</a> interface, and it is stroked.</summary>
  </member>
  <member name="D2D1_PATH_SEGMENT::D2D1_PATH_SEGMENT_FORCE_UNSTROKED">
    <summary>The segment is not stroked.</summary>
  </member>
  <member name="D2D1_PATH_SEGMENT::D2D1_PATH_SEGMENT_FORCE_ROUND_LINE_JOIN">
    <summary>The segment is always joined with the one preceding it using a round line join, regardless of which <a href="https://docs.microsoft.com/windows/win32/api/d2d1/ne-d2d1-d2d1_line_join">D2D1_LINE_JOIN</a>enumeration is specified by the <a href="https://docs.microsoft.com/windows/win32/api/d2d1/nn-d2d1-id2d1strokestyle">ID2D1StrokeStyle</a> interface. If this segment is the first segment and the figure is closed, a round line join is used to connect the closing segment with the first segment. If the figure is not closed, this setting has no effect on the first segment of the figure. If <a href="https://docs.microsoft.com/windows/win32/api/d2d1/nf-d2d1-id2d1simplifiedgeometrysink-setsegmentflags">ID2D1SimplifiedGeometrySink::SetSegmentFlags</a> is called just before <a href="https://docs.microsoft.com/windows/win32/api/d2d1/nf-d2d1-id2d1simplifiedgeometrysink-endfigure">ID2D1SimplifiedGeometrySink::EndFigure</a>, the join between the closing segment and the last explicitly specified segment is affected.</summary>
  </member>
  <member name="ID2D1CommandSink4">
    <summary>
      <para>This interface performs all the same functions as the existing ID2D1CommandSink3 interface. It also enables access to the new primitive blend mode, MAX, through the SetPrimitiveBlend2 method.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1_3/nn-d2d1_3-id2d1commandsink4" /></para>
    </summary>
  </member>
  <member name="ID2D1ComputeInfo::SetComputeShader">
    <summary>
      <para>Sets the compute shader to the given shader resource. The resource must be loaded before this call is made.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1effectauthor/nf-d2d1effectauthor-id2d1computeinfo-setcomputeshader" /></para>
      <param name="shaderId">The GUID of the shader.</param>
    </summary>
  </member>
  <member name="D2D1_BITMAP_OPTIONS">
    <summary>
      <para>Specifies how a bitmap can be used.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1_1/ne-d2d1_1-d2d1_bitmap_options" /></para>
    </summary>
  </member>
  <member name="D2D1_BITMAP_OPTIONS::D2D1_BITMAP_OPTIONS_NONE">
    <summary>The bitmap is created with default properties.</summary>
  </member>
  <member name="D2D1_BITMAP_OPTIONS::D2D1_BITMAP_OPTIONS_TARGET">
    <summary>The bitmap can be used as a device context target.</summary>
  </member>
  <member name="D2D1_BITMAP_OPTIONS::D2D1_BITMAP_OPTIONS_CANNOT_DRAW">
    <summary>The bitmap cannot be used as an input.</summary>
  </member>
  <member name="D2D1_BITMAP_OPTIONS::D2D1_BITMAP_OPTIONS_CPU_READ">
    <summary>The bitmap can be read from the CPU.</summary>
  </member>
  <member name="D2D1_BITMAP_OPTIONS::D2D1_BITMAP_OPTIONS_GDI_COMPATIBLE">
    <summary>The bitmap works with <a href="https://docs.microsoft.com/windows/desktop/api/d2d1/nf-d2d1-id2d1gdiinteroprendertarget-getdc">ID2D1GdiInteropRenderTarget::GetDC</a>.

<div class="alert"><b>Note</b>  This flag is not available in Windows Store apps.</div>
<div> </div></summary>
  </member>
  <member name="ID2D1DeviceContext::GetEffectRequiredInputRectangles">
    <summary>
      <para>Returns the input rectangles that are required to be supplied by the caller to produce the given output rectangle.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1_1/nf-d2d1_1-id2d1devicecontext-geteffectrequiredinputrectangles" /></para>
      <param name="renderEffect">The image whose output is being rendered.</param>
      <param name="renderImageRectangle">The portion of the output image whose inputs are being inspected.</param>
      <param name="inputDescriptions">A list of the inputs whos rectangles are being queried.</param>
      <param name="requiredInputRects">The input rectangles returned to the caller.</param>
      <param name="inputCount">The number of inputs.</param>
    </summary>
  </member>
  <member name="D2D1_SPRITE_OPTIONS">
    <summary>
      <para>Specifies additional aspects of how a sprite batch is to be drawn, as part of a call to ID2D1DeviceContext3::DrawSpriteBatch.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1_3/ne-d2d1_3-d2d1_sprite_options" /></para>
    </summary>
  </member>
  <member name="D2D1_SPRITE_OPTIONS::D2D1_SPRITE_OPTIONS_NONE">
    <summary>Default value. No special drawing configuration. This option yields the best drawing performance.</summary>
  </member>
  <member name="D2D1_SPRITE_OPTIONS::D2D1_SPRITE_OPTIONS_CLAMP_TO_SOURCE_RECTANGLE">
    <summary>Interpolation of bitmap pixels will be clamped to the sprite’s source rectangle. 
          If the sub-images in your source bitmap have no pixels separating them, then you may see color bleeding when drawing them with D2D1_SPRITE_OPTIONS_NONE. 
          In that case, consider adding borders between them with your sprite-packing tool, or use this option.
          Note that drawing sprites with this option enabled is slower than using D2D1_SPRITE_OPTIONS_NONE.</summary>
  </member>
  <member name="ID2D1VertexBuffer::Map">
    <summary>
      <para>Maps the provided data into user memory.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1effectauthor/nf-d2d1effectauthor-id2d1vertexbuffer-map" /></para>
      <param name="data">When this method returns, contains the address of a pointer to the available buffer.</param>
      <param name="bufferSize">The desired size of the buffer.</param>
    </summary>
  </member>
  <member name="D2D1_SVG_LINE_JOIN">
    <summary>
      <para>Specifies a value for the SVG stroke-linejoin property.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1svg/ne-d2d1svg-d2d1_svg_line_join" /></para>
    </summary>
  </member>
  <member name="D2D1_SVG_LINE_JOIN::D2D1_SVG_LINE_JOIN_BEVEL">
    <summary>The property is set to SVG's 'bevel' value.</summary>
  </member>
  <member name="D2D1_SVG_LINE_JOIN::D2D1_SVG_LINE_JOIN_MITER">
    <summary>The property is set to SVG's 'miter' value. Note that this is equivalent to D2D1_LINE_JOIN_MITER_OR_BEVEL, not D2D1_LINE_JOIN_MITER.</summary>
  </member>
  <member name="D2D1_SVG_LINE_JOIN::D2D1_SVG_LINE_JOIN_ROUND">
    <summary>The property is set to SVG's 'round' value.</summary>
  </member>
  <member name="ID2D1ResourceTexture::Update">
    <summary>
      <para>Updates the specific resource texture inside the specific range or box using the supplied data.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1effectauthor/nf-d2d1effectauthor-id2d1resourcetexture-update" /></para>
      <param name="minimumExtents">The "left" extent of the updates if specified; if <b>NULL</b>, the entire texture is updated.</param>
      <param name="maximimumExtents">The "right" extent of the updates if specified; if <b>NULL</b>, the entire texture is updated.</param>
      <param name="strides">The stride to advance through the input data, according to dimension.</param>
      <param name="dimensions">The number of dimensions in the resource texture. This must match the number used to load the texture.</param>
      <param name="data">The data to be placed into the resource texture.</param>
      <param name="dataCount">The size of the data buffer to be used to update the resource texture.</param>
    </summary>
  </member>
  <member name="ID2D1RenderInfo::SetOutputBuffer">
    <summary>
      <para>Allows a caller to control the output precision and channel-depth of the transform in which the render information is encapsulated.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1effectauthor/nf-d2d1effectauthor-id2d1renderinfo-setoutputbuffer" /></para>
      <param name="bufferPrecision">The type of buffer that should be used as an output from this transform.</param>
      <param name="channelDepth">The number of channels that will be used on the output buffer.</param>
    </summary>
  </member>
  <member name="D2D1_PROPERTY">
    <summary>
      <para>Specifies the indices of the system properties present on the ID2D1Properties interface for an ID2D1Effect.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1_1/ne-d2d1_1-d2d1_property" /></para>
    </summary>
  </member>
  <member name="D2D1_PROPERTY::D2D1_PROPERTY_CLSID">
    <summary>The CLSID of the effect.</summary>
  </member>
  <member name="D2D1_PROPERTY::D2D1_PROPERTY_DISPLAYNAME">
    <summary>The name of the effect.</summary>
  </member>
  <member name="D2D1_PROPERTY::D2D1_PROPERTY_AUTHOR">
    <summary>The author of the effect.</summary>
  </member>
  <member name="D2D1_PROPERTY::D2D1_PROPERTY_CATEGORY">
    <summary>The category of the effect.</summary>
  </member>
  <member name="D2D1_PROPERTY::D2D1_PROPERTY_DESCRIPTION">
    <summary>The description of the effect.</summary>
  </member>
  <member name="D2D1_PROPERTY::D2D1_PROPERTY_INPUTS">
    <summary>The names of the effect's inputs.</summary>
  </member>
  <member name="D2D1_PROPERTY::D2D1_PROPERTY_CACHED">
    <summary>The output of the effect should be cached.</summary>
  </member>
  <member name="D2D1_PROPERTY::D2D1_PROPERTY_PRECISION">
    <summary>The buffer precision of the effect output.</summary>
  </member>
  <member name="D2D1_PROPERTY::D2D1_PROPERTY_MIN_INPUTS">
    <summary>The minimum number of inputs supported by the effect.</summary>
  </member>
  <member name="D2D1_PROPERTY::D2D1_PROPERTY_MAX_INPUTS">
    <summary>The maximum number of inputs supported by the effect.</summary>
  </member>
  <member name="ID2D1Factory1::GetRegisteredEffects">
    <summary>
      <para>Returns the class IDs of the currently registered effects and global effects on this factory.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1_1/nf-d2d1_1-id2d1factory1-getregisteredeffects" /></para>
      <param name="effects">When this method returns, contains an array of effects. <b>NULL</b> if no effects are retrieved.</param>
      <param name="effectsCount">The capacity of the <i>effects</i> array.</param>
      <param name="effectsReturned">When this method returns, contains the  number of effects copied into <i>effects</i>.</param>
      <param name="effectsRegistered">When this method returns, contains the number of effects currently registered in the system.</param>
    </summary>
  </member>
  <member name="ID2D1SolidColorBrush::GetColor">
    <summary>
      <para>Retrieves the color of the solid color brush.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1/nf-d2d1-id2d1solidcolorbrush-getcolor" /></para>
    </summary>
  </member>
  <member name="D2D1_DEBUG_LEVEL">
    <summary>
      <para>Indicates the type of information provided by the Direct2D Debug Layer.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1/ne-d2d1-d2d1_debug_level" /></para>
    </summary>
  </member>
  <member name="D2D1_DEBUG_LEVEL::D2D1_DEBUG_LEVEL_NONE">
    <summary>Direct2D does not produce any debugging output.</summary>
  </member>
  <member name="D2D1_DEBUG_LEVEL::D2D1_DEBUG_LEVEL_ERROR">
    <summary>Direct2D sends error messages to the debug layer.</summary>
  </member>
  <member name="D2D1_DEBUG_LEVEL::D2D1_DEBUG_LEVEL_WARNING">
    <summary>Direct2D sends error messages and warnings to the debug layer.</summary>
  </member>
  <member name="D2D1_DEBUG_LEVEL::D2D1_DEBUG_LEVEL_INFORMATION">
    <summary>Direct2D sends error messages, warnings, and additional diagnostic information that can help improve performance to the debug layer.</summary>
  </member>
  <member name="D2D1_STRAIGHTEN_SCALE_MODE">
    <summary>
      <para>Values for the D2D1_STRAIGHTEN_PROP_SCALE_MODE property of the Straighten effect.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1effects_2/ne-d2d1effects_2-d2d1_straighten_scale_mode" /></para>
    </summary>
  </member>
  <member name="D2D1_STRAIGHTEN_SCALE_MODE::D2D1_STRAIGHTEN_SCALE_MODE_NEAREST_NEIGHBOR">
    <summary>Indicates nearest neighbor interpolation should be used.</summary>
  </member>
  <member name="D2D1_STRAIGHTEN_SCALE_MODE::D2D1_STRAIGHTEN_SCALE_MODE_LINEAR">
    <summary>Indicates linear interpolation should be used.</summary>
  </member>
  <member name="D2D1_STRAIGHTEN_SCALE_MODE::D2D1_STRAIGHTEN_SCALE_MODE_CUBIC">
    <summary>Indicates cubic interpolation should be used.</summary>
  </member>
  <member name="D2D1_STRAIGHTEN_SCALE_MODE::D2D1_STRAIGHTEN_SCALE_MODE_MULTI_SAMPLE_LINEAR">
    <summary>Indicates multi-sample linear interpolation should be used.</summary>
  </member>
  <member name="D2D1_STRAIGHTEN_SCALE_MODE::D2D1_STRAIGHTEN_SCALE_MODE_ANISOTROPIC">
    <summary>Indicates anisotropic filtering should be used.</summary>
  </member>
  <member name="ID2D1SolidColorBrush">
    <summary>
      <para>Paints an area with a solid color.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1/nn-d2d1-id2d1solidcolorbrush" /></para>
    </summary>
  </member>
  <member name="D2D1_SVG_PRESERVE_ASPECT_RATIO">
    <summary>
      <para>Represents all SVG preserveAspectRatio settings.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1svg/ns-d2d1svg-d2d1_svg_preserve_aspect_ratio" /></para>
    </summary>
  </member>
  <member name="D2D1_SVG_PRESERVE_ASPECT_RATIO::defer">
    <summary>Sets the 'defer' portion of the preserveAspectRatio settings. This field only has an effect on an 'image' element that references another SVG document. As
          this is not currently supported, the field has no impact on rendering.</summary>
  </member>
  <member name="D2D1_SVG_PRESERVE_ASPECT_RATIO::align">
    <summary>Sets the align portion of the preserveAspectRatio settings.</summary>
  </member>
  <member name="D2D1_SVG_PRESERVE_ASPECT_RATIO::meetOrSlice">
    <summary>Sets the meetOrSlice portion of the preserveAspectRatio settings.</summary>
  </member>
  <member name="ID2D1RenderTarget::GetMaximumBitmapSize">
    <summary>
      <para>Gets the maximum size, in device-dependent units (pixels), of any one bitmap dimension supported by the render target.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1/nf-d2d1-id2d1rendertarget-getmaximumbitmapsize" /></para>
    </summary>
  </member>
  <member name="ID2D1Resource">
    <summary>
      <para>Represents a Direct2D drawing resource.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1/nn-d2d1-id2d1resource" /></para>
    </summary>
  </member>
  <member name="ID2D1VertexBuffer::Unmap">
    <summary>
      <para>Unmaps the vertex buffer.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1effectauthor/nf-d2d1effectauthor-id2d1vertexbuffer-unmap" /></para>
    </summary>
  </member>
  <member name="ID2D1Device1::SetRenderingPriority">
    <summary>
      <para>Sets the priority of Direct2D rendering operations performed on any device context associated with the device.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1_2/nf-d2d1_2-id2d1device1-setrenderingpriority" /></para>
      <param name="renderingPriority">The desired rendering priority for the device and associated contexts.</param>
    </summary>
  </member>
  <member name="ID2D1TransformGraph">
    <summary>
      <para>Represents a graph of transform nodes.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1effectauthor/nn-d2d1effectauthor-id2d1transformgraph" /></para>
    </summary>
  </member>
  <member name="ID2D1RenderTarget::GetPixelFormat">
    <summary>
      <para>Retrieves the pixel format and alpha mode of the render target.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1/nf-d2d1-id2d1rendertarget-getpixelformat" /></para>
    </summary>
  </member>
  <member name="ID2D1EffectContext::CreateColorContextFromFilename">
    <summary>
      <para>Creates a color context by loading it from the specified filename. The profile bytes are the contents of the file specified by filename.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1effectauthor/nf-d2d1effectauthor-id2d1effectcontext-createcolorcontextfromfilename" /></para>
      <param name="filename">The path to the file containing the profile bytes to initialize the color context with.</param>
      <param name="colorContext">When this method returns, contains the address of a pointer to a new color context.</param>
    </summary>
  </member>
  <member name="D2D1_STROKE_STYLE_PROPERTIES1">
    <summary>
      <para>Describes the stroke that outlines a shape.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1_1/ns-d2d1_1-d2d1_stroke_style_properties1" /></para>
    </summary>
  </member>
  <member name="D2D1_STROKE_STYLE_PROPERTIES1::startCap">
    <summary>The cap to use at the start of each open figure.</summary>
  </member>
  <member name="D2D1_STROKE_STYLE_PROPERTIES1::endCap">
    <summary>The cap to use at the end of each open figure.</summary>
  </member>
  <member name="D2D1_STROKE_STYLE_PROPERTIES1::dashCap">
    <summary>The cap to use at the start and end of each dash.</summary>
  </member>
  <member name="D2D1_STROKE_STYLE_PROPERTIES1::lineJoin">
    <summary>The line join to use.</summary>
  </member>
  <member name="D2D1_STROKE_STYLE_PROPERTIES1::miterLimit">
    <summary>The limit beyond which miters are either clamped or converted to bevels.</summary>
  </member>
  <member name="D2D1_STROKE_STYLE_PROPERTIES1::dashStyle">
    <summary>The type of dash to use.</summary>
  </member>
  <member name="D2D1_STROKE_STYLE_PROPERTIES1::dashOffset">
    <summary>The location of the first dash, relative to the start of the figure.</summary>
  </member>
  <member name="D2D1_STROKE_STYLE_PROPERTIES1::transformType">
    <summary>The rule that determines what render target properties affect the nib of the stroke.</summary>
  </member>
  <member name="ID2D1GradientStopCollection::GetGradientStops">
    <summary>
      <para>Copies the gradient stops from the collection into an array of D2D1_GRADIENT_STOP structures.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1/nf-d2d1-id2d1gradientstopcollection-getgradientstops" /></para>
      <param name="gradientStops">A pointer to a one-dimensional array of <a href="https://docs.microsoft.com/windows/win32/api/d2d1/ns-d2d1-d2d1_gradient_stop">D2D1_GRADIENT_STOP</a> structures. When this method returns, the array contains copies of the collection's gradient stops. You must allocate the memory for this array.</param>
      <param name="gradientStopsCount">A value indicating the number of gradient stops to copy. If the value is less than the number of gradient stops in the collection, the remaining gradient stops are omitted. If the value is larger than the number of gradient stops in the collection, the extra gradient stops are set to <b>NULL</b>. To obtain the number of gradient stops in the collection, use the <a href="https://docs.microsoft.com/windows/win32/api/d2d1/nf-d2d1-id2d1gradientstopcollection-getgradientstopcount">GetGradientStopCount</a> method.</param>
    </summary>
  </member>
  <member name="ID2D1GradientMesh">
    <summary>
      <para>Represents a device-dependent representation of a gradient mesh composed of patches. Use the ID2D1DeviceContext2::CreateGradientMesh method to create an instance of ID2D1GradientMesh.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1_3/nn-d2d1_3-id2d1gradientmesh" /></para>
    </summary>
  </member>
  <member name="ID2D1BitmapBrush1::SetInterpolationMode1">
    <summary>
      <para>Sets the interpolation mode for the brush.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1_1/nf-d2d1_1-id2d1bitmapbrush1-setinterpolationmode1" /></para>
      <param name="interpolationMode">The mode to use.</param>
    </summary>
  </member>
  <member name="ID2D1Ink">
    <summary>
      <para>Represents a single continuous stroke of variable-width ink, as defined by a series of Bezier segments and widths.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1_3/nn-d2d1_3-id2d1ink" /></para>
    </summary>
  </member>
  <member name="ID2D1BorderTransform::SetExtendModeY">
    <summary>
      <para>Sets the extend mode in the y direction.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1effectauthor/nf-d2d1effectauthor-id2d1bordertransform-setextendmodey" /></para>
      <param name="extendMode">The extend mode in the y direction.</param>
    </summary>
  </member>
  <member name="ID2D1TransformedGeometry::GetSourceGeometry">
    <summary>
      <para>Retrieves the source geometry of this transformed geometry object.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1/nf-d2d1-id2d1transformedgeometry-getsourcegeometry" /></para>
      <param name="sourceGeometry">When this method returns, contains a pointer to a pointer to the source geometry for this transformed geometry object. This parameter is passed uninitialized.</param>
    </summary>
  </member>
  <member name="D2D1_GAMMATRANSFER_PROP">
    <summary>
      <para>Identifiers for properties of the Gamma transfer effect.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1effects/ne-d2d1effects-d2d1_gammatransfer_prop" /></para>
    </summary>
  </member>
  <member name="D2D1_GAMMATRANSFER_PROP::D2D1_GAMMATRANSFER_PROP_RED_AMPLITUDE">
    <summary>The amplitude of the gamma transfer function for the Red channel.
            

The type is FLOAT.

The default value is 1.0f.</summary>
  </member>
  <member name="D2D1_GAMMATRANSFER_PROP::D2D1_GAMMATRANSFER_PROP_RED_EXPONENT">
    <summary>The exponent of the gamma transfer function for the Red channel.
            

The type is FLOAT.

The default value is 1.0f.</summary>
  </member>
  <member name="D2D1_GAMMATRANSFER_PROP::D2D1_GAMMATRANSFER_PROP_RED_OFFSET">
    <summary>The offset of the gamma transfer function for the Red channel.
            

The type is FLOAT.

The default value is 0.0f.</summary>
  </member>
  <member name="D2D1_GAMMATRANSFER_PROP::D2D1_GAMMATRANSFER_PROP_RED_DISABLE">
    <summary>If you set this to TRUE it does not apply the transfer function to the Red channel. An identity transfer function is used.
            If you set this to FALSE it applies the gamma transfer function to the Red channel.
            

The type is BOOL.

The default value is FALSE.</summary>
  </member>
  <member name="D2D1_GAMMATRANSFER_PROP::D2D1_GAMMATRANSFER_PROP_GREEN_AMPLITUDE">
    <summary>The amplitude of the gamma transfer function for the Green channel.
            

The type is FLOAT.

The default value is 1.0f.</summary>
  </member>
  <member name="D2D1_GAMMATRANSFER_PROP::D2D1_GAMMATRANSFER_PROP_GREEN_EXPONENT">
    <summary>The exponent of the gamma transfer function for the Green channel.
            

The type is FLOAT.

The default value is 1.0f.</summary>
  </member>
  <member name="D2D1_GAMMATRANSFER_PROP::D2D1_GAMMATRANSFER_PROP_GREEN_OFFSET">
    <summary>The offset of the gamma transfer function for the Green channel.
            

The type is FLOAT.

The default value is 0.0f.</summary>
  </member>
  <member name="D2D1_GAMMATRANSFER_PROP::D2D1_GAMMATRANSFER_PROP_GREEN_DISABLE">
    <summary>If you set this to TRUE it does not apply the transfer function to the Green channel. An identity transfer function is used.
            If you set this to FALSE it applies the gamma transfer function to the Green channel.
            

The type is BOOL.

The default value is FALSE.</summary>
  </member>
  <member name="D2D1_GAMMATRANSFER_PROP::D2D1_GAMMATRANSFER_PROP_BLUE_AMPLITUDE">
    <summary>The amplitude of the gamma transfer function for the Blue channel.
            

The type is FLOAT.

The default value is 1.0f.</summary>
  </member>
  <member name="D2D1_GAMMATRANSFER_PROP::D2D1_GAMMATRANSFER_PROP_BLUE_EXPONENT">
    <summary>The exponent of the gamma transfer function for the Blue channel.
            

The type is FLOAT.

The default value is 1.0f.</summary>
  </member>
  <member name="D2D1_GAMMATRANSFER_PROP::D2D1_GAMMATRANSFER_PROP_BLUE_OFFSET">
    <summary>The offset of the gamma transfer function for the Blue channel.
            

The type is FLOAT.

The default value is 0.0f.</summary>
  </member>
  <member name="D2D1_GAMMATRANSFER_PROP::D2D1_GAMMATRANSFER_PROP_BLUE_DISABLE">
    <summary>If you set this to TRUE it does not apply the transfer function to the Blue channel. An identity transfer function is used.
            If you set this to FALSE it applies the gamma transfer function to the Blue channel.
            

The type is BOOL.

The default value is FALSE.</summary>
  </member>
  <member name="D2D1_GAMMATRANSFER_PROP::D2D1_GAMMATRANSFER_PROP_ALPHA_AMPLITUDE">
    <summary>The amplitude of the gamma transfer function for the Alpha channel.
            

The type is FLOAT.

The default value is 1.0f.</summary>
  </member>
  <member name="D2D1_GAMMATRANSFER_PROP::D2D1_GAMMATRANSFER_PROP_ALPHA_EXPONENT">
    <summary>The exponent of the gamma transfer function for the Alpha channel.
            

The type is FLOAT.

The default value is 1.0f.</summary>
  </member>
  <member name="D2D1_GAMMATRANSFER_PROP::D2D1_GAMMATRANSFER_PROP_ALPHA_OFFSET">
    <summary>The offset of the gamma transfer function for the Alpha channel.
            

The type is FLOAT.

The default value is 0.0f.</summary>
  </member>
  <member name="D2D1_GAMMATRANSFER_PROP::D2D1_GAMMATRANSFER_PROP_ALPHA_DISABLE">
    <summary>If you set this to TRUE it does not apply the transfer function to the Alpha channel. An identity transfer function is used.
            If you set this to FALSE it applies the gamma transfer function to the Alpha channel.
            

The type is BOOL.

The default value is FALSE.</summary>
  </member>
  <member name="D2D1_GAMMATRANSFER_PROP::D2D1_GAMMATRANSFER_PROP_CLAMP_OUTPUT">
    <summary>Whether the effect clamps color values to between 0 and 1 before the effect passes the values to the next effect in the graph.
            The effect clamps the values before it premultiplies the alpha.
            

If you set this to TRUE the effect will clamp the values. If you set this to FALSE, the effect will not clamp the color values,
              but other effects and the output surface may clamp the values if they are not of high enough precision.
            

The type is BOOL.

The default value is FALSE.</summary>
  </member>
  <member name="ID2D1Effect::GetOutput">
    <summary>
      <para>Gets the output image from the effect.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1_1/nf-d2d1_1-id2d1effect-getoutput" /></para>
      <param name="outputImage">When this method returns, contains the address of a pointer to the output image for the effect.</param>
    </summary>
  </member>
  <member name="ID2D1SvgDocument">
    <summary>
      <para>Represents an SVG document.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1svg/nn-d2d1svg-id2d1svgdocument" /></para>
    </summary>
  </member>
  <member name="ID2D1Mesh::Open">
    <summary>
      <para>Opens the mesh for population.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1/nf-d2d1-id2d1mesh-open" /></para>
      <param name="tessellationSink">When this method returns, contains a pointer to a pointer to an <a href="https://docs.microsoft.com/windows/win32/api/d2d1/nn-d2d1-id2d1tessellationsink">ID2D1TessellationSink</a> that is used to populate the mesh. This parameter is passed uninitialized.</param>
    </summary>
  </member>
  <member name="ID2D1DeviceContext4::GetSvgGlyphImage">
    <summary>
      <para>Retrieves an image of the SVG glyph from the color glyph cache.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1_3/nf-d2d1_3-id2d1devicecontext4-getsvgglyphimage" /></para>
      <param name="glyphOrigin">Origin of the glyph.</param>
      <param name="fontFace">Reference to a font face which contains font face type, appropriate file references, face identification data and various font data such as metrics, names and glyph outlines.</param>
      <param name="fontEmSize">The specified font size affects the output
          glyphTransform, causing it to properly scale the glyph.</param>
      <param name="glyphIndex">Index of the glyph to retrieve.</param>
      <param name="isSideways">If true, specifies that glyphs are rotated 90 degrees to the left and vertical metrics are used. Vertical writing is achieved by specifying isSideways as true and rotating the entire run 90 degrees to the right via a rotate transform.</param>
      <param name="worldTransform">The transform to apply to the image.</param>
      <param name="defaultFillBrush">Describes how the area is painted.</param>
      <param name="svgGlyphStyle">The values for context-fill, context-stroke, and context-value that are used when rendering SVG glyphs.</param>
      <param name="colorPaletteIndex">The index used to select a color palette within a color font. 
          Note that this not the same as the paletteIndex in the DWRITE_COLOR_GLYPH_RUN struct, which is not relevant for SVG glyphs.</param>
      <param name="glyphTransform">Output transform, which transforms from the glyph's space to the same output space as the worldTransform. 
          This includes the input glyphOrigin, the glyph's offset from the glyphOrigin, and any other required transformations.</param>
      <param name="glyphImage">On completion, contains the retrieved glyph image.</param>
    </summary>
  </member>
  <member name="ID2D1EffectContext::CreateBoundsAdjustmentTransform">
    <summary>
      <para>Creates and returns a bounds adjustment transform.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1effectauthor/nf-d2d1effectauthor-id2d1effectcontext-createboundsadjustmenttransform" /></para>
      <param name="outputRectangle">The initial output rectangle for the bounds adjustment transform.</param>
      <param name="transform">The returned bounds adjustment transform.</param>
    </summary>
  </member>
  <member name="ID2D1Device6::CreateDeviceContext">
    <summary>
      <para>Creates a new device context with no initially assigned target.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1_3/nf-d2d1_3-id2d1device6-createdevicecontext" /></para>
      <param name="options">Options for creating the device context.</param>
      <param name="deviceContext6">The created device context.</param>
    </summary>
  </member>
  <member name="ID2D1CommandList">
    <summary>
      <para>Represents a sequence of commands that can be recorded and played back.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1_1/nn-d2d1_1-id2d1commandlist" /></para>
    </summary>
  </member>
  <member name="ID2D1ConcreteTransform">
    <summary>
      <para>Represents the set of transforms implemented by the effect-rendering system, which provides fixed-functionality.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1effectauthor/nn-d2d1effectauthor-id2d1concretetransform" /></para>
    </summary>
  </member>
  <member name="D2D1_SUBPROPERTY">
    <summary>
      <para>Specifies the indices of the system sub-properties that may be present in any property.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1_1/ne-d2d1_1-d2d1_subproperty" /></para>
    </summary>
  </member>
  <member name="D2D1_SUBPROPERTY::D2D1_SUBPROPERTY_DISPLAYNAME">
    <summary>The name for the parent property.</summary>
  </member>
  <member name="D2D1_SUBPROPERTY::D2D1_SUBPROPERTY_ISREADONLY">
    <summary>A Boolean indicating whether the parent property is writeable.</summary>
  </member>
  <member name="D2D1_SUBPROPERTY::D2D1_SUBPROPERTY_MIN">
    <summary>The minimum value that can be set to the parent property.</summary>
  </member>
  <member name="D2D1_SUBPROPERTY::D2D1_SUBPROPERTY_MAX">
    <summary>The maximum value that can be set to the parent property.</summary>
  </member>
  <member name="D2D1_SUBPROPERTY::D2D1_SUBPROPERTY_DEFAULT">
    <summary>The default value of the parent property.</summary>
  </member>
  <member name="D2D1_SUBPROPERTY::D2D1_SUBPROPERTY_FIELDS">
    <summary>An array of name/index pairs that indicate the possible values that can be set to the parent property.</summary>
  </member>
  <member name="D2D1_SUBPROPERTY::D2D1_SUBPROPERTY_INDEX">
    <summary>An index sub-property used by the elements of the <b>D2D1_SUBPROPERTY_FIELDS</b> array.</summary>
  </member>
  <member name="D2D1_LAYER_PARAMETERS">
    <summary>
      <para>Contains the content bounds, mask information, opacity settings, and other options for a layer resource.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1/ns-d2d1-d2d1_layer_parameters" /></para>
    </summary>
  </member>
  <member name="D2D1_LAYER_PARAMETERS::contentBounds">
    <summary>The content bounds of the layer. Content outside these bounds is not guaranteed to render.</summary>
  </member>
  <member name="D2D1_LAYER_PARAMETERS::geometricMask">
    <summary>The geometric mask specifies the area of the layer that is composited into the render target.</summary>
  </member>
  <member name="D2D1_LAYER_PARAMETERS::maskAntialiasMode">
    <summary>A value that specifies the antialiasing mode for the geometricMask.</summary>
  </member>
  <member name="D2D1_LAYER_PARAMETERS::maskTransform">
    <summary>A value that specifies the transform that is applied to the geometric mask when composing the layer.</summary>
  </member>
  <member name="D2D1_LAYER_PARAMETERS::opacity">
    <summary>An opacity value that is applied uniformly to all resources in the layer when compositing to the target.</summary>
  </member>
  <member name="D2D1_LAYER_PARAMETERS::opacityBrush">
    <summary>A brush that is used to modify the opacity of the layer. The brush 
is mapped to the layer, and the alpha channel of each mapped brush pixel is multiplied against the corresponding layer pixel.</summary>
  </member>
  <member name="D2D1_LAYER_PARAMETERS::layerOptions">
    <summary>A value that specifies whether the layer intends to render text with ClearType antialiasing.</summary>
  </member>
  <member name="ID2D1EffectContext::FindVertexBuffer">
    <summary>
      <para>This finds the given vertex buffer if it has already been created with ID2D1EffectContext::CreateVertexBuffer with the same GUID.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1effectauthor/nf-d2d1effectauthor-id2d1effectcontext-findvertexbuffer" /></para>
      <param name="resourceId">The unique id that identifies the vertex buffer.</param>
      <param name="buffer">The returned vertex buffer that can be used as a resource in a <a href="https://docs.microsoft.com/windows/desktop/Direct2D/direct2d-portal">Direct2D</a> effect.</param>
    </summary>
  </member>
  <member name="D2D1_PRINT_CONTROL_PROPERTIES">
    <summary>
      <para>The creation properties for a ID2D1PrintControl object.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1_1/ns-d2d1_1-d2d1_print_control_properties" /></para>
    </summary>
  </member>
  <member name="D2D1_PRINT_CONTROL_PROPERTIES::fontSubset">
    <summary>The mode to use for subsetting fonts for printing, defaults to <a href="https://docs.microsoft.com/windows/desktop/api/d2d1_1/ne-d2d1_1-d2d1_print_font_subset_mode">D2D1_PRINT_FONT_SUBSET_MODE_DEFAULT</a>.</summary>
  </member>
  <member name="D2D1_PRINT_CONTROL_PROPERTIES::rasterDPI">
    <summary>DPI for rasterization of all unsupported Direct2D commands or options, defaults to 150.0.</summary>
  </member>
  <member name="D2D1_PRINT_CONTROL_PROPERTIES::colorSpace">
    <summary>Color space for vector graphics, defaults to <a href="https://docs.microsoft.com/windows/desktop/api/d2d1_1/ne-d2d1_1-d2d1_color_space">D2D1_COLOR_SPACE_SRGB</a>.</summary>
  </member>
  <member name="D2D1_SVG_ATTRIBUTE_STRING_TYPE">
    <summary>
      <para>Defines the type of SVG string attribute to set or get.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1svg/ne-d2d1svg-d2d1_svg_attribute_string_type" /></para>
    </summary>
  </member>
  <member name="D2D1_SVG_ATTRIBUTE_STRING_TYPE::D2D1_SVG_ATTRIBUTE_STRING_TYPE_SVG">
    <summary>The attribute is a string in the same form as it would appear in the SVG XML.
          Note that when getting values of this type, the value returned may not exactly match the value that was set. Instead, the output value is a normalized version
          of the value. For example, an input color of 'red' may be output as '#FF0000'.</summary>
  </member>
  <member name="D2D1_SVG_ATTRIBUTE_STRING_TYPE::D2D1_SVG_ATTRIBUTE_STRING_TYPE_ID">
    <summary>The attribute is an element ID.</summary>
  </member>
  <member name="ID2D1Device2::CreateDeviceContext">
    <summary>
      <para>Creates a new ID2D1DeviceContext2 from a Direct2D device.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1_3/nf-d2d1_3-id2d1device2-createdevicecontext" /></para>
      <param name="options">The options to be applied to the created device context.</param>
      <param name="deviceContext2">When this method returns, contains the address of a pointer to the new device context.</param>
    </summary>
  </member>
  <member name="ID2D1SvgElement::CreateChild">
    <summary>
      <para>Creates an element from a tag name. The element is appended to the list of children.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1svg/nf-d2d1svg-id2d1svgelement-createchild" /></para>
      <param name="tagName">The tag name of the new child. An empty string is interpreted to be a text content element.</param>
      <param name="newChild">The new child element.</param>
    </summary>
  </member>
  <member name="D2D1_COMPATIBLE_RENDER_TARGET_OPTIONS">
    <summary>
      <para>Specifies additional features supportable by a compatible render target when it is created. This enumeration allows a bitwise combination of its member values.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1/ne-d2d1-d2d1_compatible_render_target_options" /></para>
    </summary>
  </member>
  <member name="D2D1_COMPATIBLE_RENDER_TARGET_OPTIONS::D2D1_COMPATIBLE_RENDER_TARGET_OPTIONS_NONE">
    <summary>The render target supports no additional features.</summary>
  </member>
  <member name="D2D1_COMPATIBLE_RENDER_TARGET_OPTIONS::D2D1_COMPATIBLE_RENDER_TARGET_OPTIONS_GDI_COMPATIBLE">
    <summary>The render target supports interoperability with the Windows Graphics Device Interface  (GDI).</summary>
  </member>
  <member name="ID2D1GdiInteropRenderTarget::ReleaseDC">
    <summary>
      <para>Indicates that drawing with the device context retrieved using the GetDC method is finished.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1/nf-d2d1-id2d1gdiinteroprendertarget-releasedc" /></para>
      <param name="update">The modified region of the device context, or <b>NULL</b> to specify the entire render target.</param>
    </summary>
  </member>
  <member name="ID2D1CommandSink::FillMesh">
    <summary>
      <para>Indicates a mesh to be filled by the command sink.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1_1/nf-d2d1_1-id2d1commandsink-fillmesh" /></para>
      <param name="mesh">The mesh object to be filled.</param>
      <param name="brush">The brush with which to fill the mesh.</param>
    </summary>
  </member>
  <member name="D2D1_FILTER">
    <summary>
      <para>Represents filtering modes that a transform may select to use on input textures.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1effectauthor/ne-d2d1effectauthor-d2d1_filter" /></para>
    </summary>
  </member>
  <member name="D2D1_FILTER::D2D1_FILTER_MIN_MAG_MIP_POINT">
    <summary>Use point sampling for minification, magnification, and mip-level sampling.</summary>
  </member>
  <member name="D2D1_FILTER::D2D1_FILTER_MIN_MAG_POINT_MIP_LINEAR">
    <summary>Use point sampling for minification and magnification; use linear interpolation for mip-level sampling.</summary>
  </member>
  <member name="D2D1_FILTER::D2D1_FILTER_MIN_POINT_MAG_LINEAR_MIP_POINT">
    <summary>Use point sampling for minification; use linear interpolation for magnification; use point sampling for mip-level sampling.</summary>
  </member>
  <member name="D2D1_FILTER::D2D1_FILTER_MIN_POINT_MAG_MIP_LINEAR">
    <summary>Use point sampling for minification; use linear interpolation for magnification and mip-level sampling.</summary>
  </member>
  <member name="D2D1_FILTER::D2D1_FILTER_MIN_LINEAR_MAG_MIP_POINT">
    <summary>Use linear interpolation for minification; use point sampling for magnification and mip-level sampling.</summary>
  </member>
  <member name="D2D1_FILTER::D2D1_FILTER_MIN_LINEAR_MAG_POINT_MIP_LINEAR">
    <summary>Use linear interpolation for minification; use point sampling for magnification; use linear interpolation for mip-level sampling.</summary>
  </member>
  <member name="D2D1_FILTER::D2D1_FILTER_MIN_MAG_LINEAR_MIP_POINT">
    <summary>Use linear interpolation for minification and magnification; use point sampling for mip-level sampling.</summary>
  </member>
  <member name="D2D1_FILTER::D2D1_FILTER_MIN_MAG_MIP_LINEAR">
    <summary>Use linear interpolation for minification, magnification, and mip-level sampling.</summary>
  </member>
  <member name="D2D1_FILTER::D2D1_FILTER_ANISOTROPIC">
    <summary>Use anisotropic interpolation for minification, magnification, and mip-level sampling.</summary>
  </member>
  <member name="ID2D1InkStyle::SetNibShape">
    <summary>
      <para>Sets the pre-transform nib shape for this style.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1_3/nf-d2d1_3-id2d1inkstyle-setnibshape" /></para>
      <param name="nibShape">The pre-transform nib shape to use in this style.</param>
    </summary>
  </member>
  <member name="ID2D1DeviceContext::InvalidateEffectInputRectangle">
    <summary>
      <para>This indicates that a portion of an effect's input is invalid. This method can be called many times.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1_1/nf-d2d1_1-id2d1devicecontext-invalidateeffectinputrectangle" /></para>
      <param name="effect">The effect to invalidate.</param>
      <param name="input">The input index.</param>
      <param name="inputRectangle">The rect to invalidate.</param>
    </summary>
  </member>
  <member name="ID2D1Multithread::GetMultithreadProtected">
    <summary>
      <para>Returns whether the Direct2D factory was created with the D2D1_FACTORY_TYPE_MULTI_THREADED flag.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1_1/nf-d2d1_1-id2d1multithread-getmultithreadprotected" /></para>
    </summary>
  </member>
  <member name="ID2D1EffectContext::CreateBorderTransform">
    <summary>
      <para>Creates a transform that extends its input infinitely in every direction based on the passed in extend mode.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1effectauthor/nf-d2d1effectauthor-id2d1effectcontext-createbordertransform" /></para>
      <param name="extendModeX">The extend mode in the X-axis direction.</param>
      <param name="extendModeY">The extend mode in the Y-axis direction.</param>
      <param name="transform">The returned transform.</param>
    </summary>
  </member>
  <member name="D2D1InvertMatrix">
    <summary>
      <para>Tries to invert the specified matrix.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1/nf-d2d1-d2d1invertmatrix" /></para>
      <param name="matrix">The matrix to invert.</param>
    </summary>
  </member>
  <member name="D2D1_FILL_MODE">
    <summary>
      <para>Specifies how the intersecting areas of geometries or figures are combined to form the area of the composite geometry.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1/ne-d2d1-d2d1_fill_mode" /></para>
    </summary>
  </member>
  <member name="D2D1_FILL_MODE::D2D1_FILL_MODE_ALTERNATE">
    <summary>Determines whether a point is in the fill region by drawing a ray from that point to infinity in any direction, and then counting the number of path segments within the given shape that the ray crosses. If this number is odd, the point is in the fill region; if even, the point is outside the fill region.</summary>
  </member>
  <member name="D2D1_FILL_MODE::D2D1_FILL_MODE_WINDING">
    <summary>Determines whether a point is in the fill region of the path by drawing a ray from that point to infinity in any direction, and then examining the places where a segment of the shape crosses the ray. Starting with a count of zero, add one each time a segment crosses the ray from left to right and subtract one each time a path segment crosses the ray from right to left,  as long as left and right are seen from the perspective of the ray. After counting the crossings, if the result is zero, then the point is outside the path. Otherwise, it is inside the path.</summary>
  </member>
  <member name="ID2D1Factory::ReloadSystemMetrics">
    <summary>
      <para>Forces the factory to refresh any system defaults that it might have changed since factory creation.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1/nf-d2d1-id2d1factory-reloadsystemmetrics" /></para>
    </summary>
  </member>
  <member name="D2D1_INK_POINT">
    <summary>
      <para>Represents a point, radius pair that makes up part of a D2D1_INK_BEZIER_SEGMENT.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1_3/ns-d2d1_3-d2d1_ink_point" /></para>
    </summary>
  </member>
  <member name="D2D1_INK_POINT::x">
    <summary>The x-coordinate of the point.</summary>
  </member>
  <member name="D2D1_INK_POINT::y">
    <summary>The y-coordinate of the point.</summary>
  </member>
  <member name="D2D1_INK_POINT::radius">
    <summary>The radius of this point. Corresponds to the width of the ink stroke at this point in the stroke.</summary>
  </member>
  <member name="ID2D1ImageSource::TryReclaimResources">
    <summary>
      <para>Restores access to resources that were previously offered by calling OfferResources.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1_3/nf-d2d1_3-id2d1imagesource-tryreclaimresources" /></para>
      <param name="resourcesDiscarded">Returns with TRUE if the corresponding resource’s content was discarded and is now undefined, or FALSE if the corresponding resource’s old content is still intact.
            The caller can pass in NULL, if the caller intends to fill the resources with new content regardless of whether the old content was discarded.</param>
    </summary>
  </member>
  <member name="ID2D1Brush::GetTransform">
    <summary>
      <para>Gets the transform applied to this brush.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1/nf-d2d1-id2d1brush-gettransform" /></para>
      <param name="transform">The transform applied to this brush.</param>
    </summary>
  </member>
  <member name="D2D1_DC_INITIALIZE_MODE">
    <summary>
      <para>Specifies how a device context is initialized for GDI rendering when it is retrieved from the render target.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1/ne-d2d1-d2d1_dc_initialize_mode" /></para>
    </summary>
  </member>
  <member name="D2D1_DC_INITIALIZE_MODE::D2D1_DC_INITIALIZE_MODE_COPY">
    <summary>The current contents of the render target are copied to the device context when it is initialized.</summary>
  </member>
  <member name="D2D1_DC_INITIALIZE_MODE::D2D1_DC_INITIALIZE_MODE_CLEAR">
    <summary>The device context is cleared to transparent black when it is initialized.</summary>
  </member>
  <member name="ID2D1Device1::GetRenderingPriority">
    <summary>
      <para>Retrieves the current rendering priority of the device.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1_2/nf-d2d1_2-id2d1device1-getrenderingpriority" /></para>
    </summary>
  </member>
  <member name="D2D1_LAYER_OPTIONS">
    <summary>
      <para>Specifies options that can be applied when a layer resource is applied to create a layer.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1/ne-d2d1-d2d1_layer_options" /></para>
    </summary>
  </member>
  <member name="D2D1_LAYER_OPTIONS::D2D1_LAYER_OPTIONS_NONE">
    <summary>The text in this layer does not use ClearType antialiasing.</summary>
  </member>
  <member name="D2D1_LAYER_OPTIONS::D2D1_LAYER_OPTIONS_INITIALIZE_FOR_CLEARTYPE">
    <summary>The layer renders correctly for ClearType text. If the render target is set to ClearType, the  layer continues to render ClearType. If the render target is set to ClearType and this option is not specified, the render target will be set to render gray-scale until the layer is popped. The caller can override this default by calling <a href="https://docs.microsoft.com/windows/win32/api/d2d1/nf-d2d1-id2d1rendertarget-settextantialiasmode">SetTextAntialiasMode</a> while within the layer. This flag is slightly slower than the default.</summary>
  </member>
  <member name="ID2D1CommandSink::DrawGdiMetafile">
    <summary>
      <para>Draw a metafile to the device context.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1_1/nf-d2d1_1-id2d1commandsink-drawgdimetafile" /></para>
      <param name="gdiMetafile">The metafile to draw.</param>
      <param name="targetOffset">The offset from the upper left corner of the render target.</param>
    </summary>
  </member>
  <member name="ID2D1PathGeometry">
    <summary>
      <para>Represents a complex shape that may be composed of arcs, curves, and lines.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1/nn-d2d1-id2d1pathgeometry" /></para>
    </summary>
  </member>
  <member name="D2D1_OPACITYMETADATA_PROP">
    <summary>
      <para>Identifiers for properties of the Opacity metadata effect.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1effects/ne-d2d1effects-d2d1_opacitymetadata_prop" /></para>
    </summary>
  </member>
  <member name="D2D1_OPACITYMETADATA_PROP::D2D1_OPACITYMETADATA_PROP_INPUT_OPAQUE_RECT">
    <summary>The portion of the source image that is opaque. The default is the entire input image.
          

The type is <a href="https://docs.microsoft.com/windows/desktop/api/dcommon/ns-dcommon-d2d_vector_4f">D2D1_VECTOR_4F</a>.

The default is {-FLT_MAX, -FLT_MAX, FLT_MAX, FLT_MAX}.</summary>
  </member>
  <member name="ID2D1RadialGradientBrush::SetGradientOriginOffset">
    <summary>
      <para>Specifies the offset of the gradient origin relative to the gradient ellipse's center.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1/nf-d2d1-id2d1radialgradientbrush-setgradientoriginoffset" /></para>
      <param name="gradientOriginOffset">The offset of the gradient origin from the center of the gradient ellipse.</param>
    </summary>
  </member>
  <member name="ID2D1RenderInfo::SetInstructionCountHint">
    <summary>
      <para>Provides an estimated hint of shader execution cost to D2D.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1effectauthor/nf-d2d1effectauthor-id2d1renderinfo-setinstructioncounthint" /></para>
      <param name="instructionCount">An approximate instruction count of the associated shader.</param>
    </summary>
  </member>
  <member name="ID2D1RenderTarget::CreateMesh">
    <summary>
      <para>Create a mesh that uses triangles to describe a shape.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1/nf-d2d1-id2d1rendertarget-createmesh" /></para>
      <param name="mesh">When this method returns, contains a pointer to a pointer to the new mesh.</param>
    </summary>
  </member>
  <member name="ID2D1BorderTransform::GetExtendModeY">
    <summary>
      <para>Gets the extend mode in the y direction.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1effectauthor/nf-d2d1effectauthor-id2d1bordertransform-getextendmodey" /></para>
    </summary>
  </member>
  <member name="D2D1_CROP_PROP">
    <summary>
      <para>Identifiers for properties of the Crop effect.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1effects/ne-d2d1effects-d2d1_crop_prop" /></para>
    </summary>
  </member>
  <member name="D2D1_CROP_PROP::D2D1_CROP_PROP_RECT">
    <summary>The region to be cropped specified as a vector in the form (left, top, width, height). Units are in DIPs.
            

<div class="alert"><b>Note</b>  The rectangle will be truncated if it overlaps the edge boundaries of the input image.</div>
<div> </div>
Type is <a href="https://docs.microsoft.com/windows/desktop/api/dcommon/ns-dcommon-d2d_vector_4f">D2D1_VECTOR_4F</a>


Default value is {-FLT_MAX, -FLT_MAX, FLT_MAX, FLT_MAX}</summary>
  </member>
  <member name="D2D1_CROP_PROP::D2D1_CROP_PROP_BORDER_MODE">
    <summary>Indicates how the effect handles the crop rectangle falling on fractional pixel coordinates.
          

Type is <a href="https://docs.microsoft.com/windows/desktop/api/d2d1effects/ne-d2d1effects-d2d1_border_mode">D2D1_BORDER_MODE</a>.

Default value is D2D1_BORDER_MODE_SOFT.</summary>
  </member>
  <member name="ID2D1RenderTarget::EndDraw">
    <summary>
      <para>Ends drawing operations on the render target and indicates the current error state and associated tags.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1/nf-d2d1-id2d1rendertarget-enddraw" /></para>
      <param name="tag1">When this method returns, contains the tag for drawing operations that caused errors or 0 if there were no errors. This parameter is passed uninitialized.</param>
      <param name="tag2">When this method returns, contains the tag for drawing operations that caused errors or 0 if there were no errors. This parameter is passed uninitialized.</param>
    </summary>
  </member>
  <member name="D2D1_THREADING_MODE">
    <summary>
      <para>Specifies the threading mode used while simultaneously creating the device, factory, and device context.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1_1/ne-d2d1_1-d2d1_threading_mode" /></para>
    </summary>
  </member>
  <member name="D2D1_THREADING_MODE::D2D1_THREADING_MODE_SINGLE_THREADED">
    <summary>Resources may only be invoked serially.  Device context state is not protected from multi-threaded access.</summary>
  </member>
  <member name="D2D1_THREADING_MODE::D2D1_THREADING_MODE_MULTI_THREADED">
    <summary>Resources may be invoked from multiple threads. Resources use interlocked reference counting and their state is protected.</summary>
  </member>
  <member name="D2D1_POINTDIFFUSE_PROP">
    <summary>
      <para>Identifiers for properties of the Point-diffuse lighting effect.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1effects/ne-d2d1effects-d2d1_pointdiffuse_prop" /></para>
    </summary>
  </member>
  <member name="D2D1_POINTDIFFUSE_PROP::D2D1_POINTDIFFUSE_PROP_LIGHT_POSITION">
    <summary>The light position of the point light source. The property is a D2D1_VECTOR_3F defined as (x, y, z). The units are in device-independent pixels (DIPs) and are unbounded.
            

The type is <a href="https://docs.microsoft.com/windows/desktop/api/dcommon/ns-dcommon-d2d_vector_3f">D2D1_VECTOR_3F</a>.

The default value is {0.0f, 0.0f, 0.0f}.</summary>
  </member>
  <member name="D2D1_POINTDIFFUSE_PROP::D2D1_POINTDIFFUSE_PROP_DIFFUSE_CONSTANT">
    <summary>The ratio of diffuse reflection to amount of incoming light. This property must be between 0 and 10,000 and is unitless.
            

The type is FLOAT.

The default value is 1.0f.</summary>
  </member>
  <member name="D2D1_POINTDIFFUSE_PROP::D2D1_POINTDIFFUSE_PROP_SURFACE_SCALE">
    <summary>The scale factor in the Z direction. The surface scale is unitless and must be between 0 and 10,000.
            

The type is FLOAT.

The default value is 1.0f.</summary>
  </member>
  <member name="D2D1_POINTDIFFUSE_PROP::D2D1_POINTDIFFUSE_PROP_COLOR">
    <summary>The color of the incoming light. This property is exposed as a Vector 3 – (R, G, B) and used to compute LR, LG, LB.
            

The type is <a href="https://docs.microsoft.com/windows/desktop/api/dcommon/ns-dcommon-d2d_vector_3f">D2D1_VECTOR_3F</a>.

The default value is {1.0f, 1.0f, 1.0f}.</summary>
  </member>
  <member name="D2D1_POINTDIFFUSE_PROP::D2D1_POINTDIFFUSE_PROP_KERNEL_UNIT_LENGTH">
    <summary>The size of an element in the Sobel kernel used to generate the surface normal in the X and Y direction. This property maps to the dx and dy values in the Sobel gradient. 
            This property is a <a href="https://docs.microsoft.com/windows/desktop/api/dcommon/ns-dcommon-d2d_vector_2f">D2D1_VECTOR_2F</a> (Kernel Unit Length X, Kernel Unit Length Y) and is defined in (DIPs/Kernel Unit). 
            The effect uses bilinear interpolation to scale the bitmap to match size of kernel elements.
            

The type is <a href="https://docs.microsoft.com/windows/desktop/api/dcommon/ns-dcommon-d2d_vector_2f">D2D1_VECTOR_2F</a>.

The default value is {1.0f, 1.0f}.</summary>
  </member>
  <member name="D2D1_POINTDIFFUSE_PROP::D2D1_POINTDIFFUSE_PROP_SCALE_MODE">
    <summary>The interpolation mode the effect uses to scale the image to the corresponding kernel unit length. There are six scale modes that range in quality and speed.
            

The type is <a href="https://docs.microsoft.com/windows/desktop/api/d2d1effects/ne-d2d1effects-d2d1_pointdiffuse_scale_mode">D2D1_POINTDIFFUSE_SCALE_MODE</a>.

The default value is D2D1_POINTDIFFUSE_SCALE_MODE_LINEAR.</summary>
  </member>
  <member name="ID2D1CommandSink::DrawBitmap">
    <summary>
      <para>Draws a bitmap to the render target.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1_1/nf-d2d1_1-id2d1commandsink-drawbitmap" /></para>
      <param name="bitmap">The bitmap to draw.</param>
      <param name="destinationRectangle">The destination rectangle. The default is the size of the bitmap and the location is the upper left corner of the render target.</param>
      <param name="opacity">The opacity of the bitmap.</param>
      <param name="interpolationMode">The interpolation mode to use.</param>
      <param name="sourceRectangle">An optional source rectangle.</param>
      <param name="perspectiveTransform">An optional perspective transform.</param>
    </summary>
  </member>
  <member name="D2D1_POINT_DESCRIPTION">
    <summary>
      <para>Describes a point on a path geometry.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1_1/ns-d2d1_1-d2d1_point_description" /></para>
    </summary>
  </member>
  <member name="D2D1_POINT_DESCRIPTION::point">
    <summary>The end point after walking the path.</summary>
  </member>
  <member name="D2D1_POINT_DESCRIPTION::unitTangentVector">
    <summary>A unit vector indicating the tangent point.</summary>
  </member>
  <member name="D2D1_POINT_DESCRIPTION::endSegment">
    <summary>The index of the segment on which point resides. This index is global to the entire path, not just to a particular figure.</summary>
  </member>
  <member name="D2D1_POINT_DESCRIPTION::endFigure">
    <summary>The index of the figure on which point resides.</summary>
  </member>
  <member name="D2D1_POINT_DESCRIPTION::lengthToEndSegment">
    <summary>The length of the section of the path stretching from the start of the path  to the start of <b>endSegment</b>.</summary>
  </member>
  <member name="D2D1_POSTERIZE_PROP">
    <summary>
      <para>Identifiers for properties of the Posterize effect.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1effects_2/ne-d2d1effects_2-d2d1_posterize_prop" /></para>
    </summary>
  </member>
  <member name="D2D1_POSTERIZE_PROP::D2D1_POSTERIZE_PROP_RED_VALUE_COUNT">
    <summary>The D2D1_POSTERIZE_PROP_RED_VALUE_COUNT property is an integer value specifying how many evenly spaced steps to divide the red channel range of 0.0 to 1.0 into.  
          For example, a value of 4 generates a table with 4 steps, [0.0, 0.33, 0.67, 1.0].  The allowed range for this property is 2 to 16.  The default value is 4.</summary>
  </member>
  <member name="D2D1_POSTERIZE_PROP::D2D1_POSTERIZE_PROP_GREEN_VALUE_COUNT">
    <summary>The D2D1_POSTERIZE_PROP_GREEN_VALUE_COUNT property is an integer value specifying how many evenly spaced steps to divide the green channel range of 0.0 to 1.0 into.  
          For example, a value of 4 generates a table with 4 steps, [0.0, 0.33, 0.67, 1.0].  The allowed range for this property is 2 to 16.  The default value is 4.</summary>
  </member>
  <member name="D2D1_POSTERIZE_PROP::D2D1_POSTERIZE_PROP_BLUE_VALUE_COUNT">
    <summary>The D2D1_POSTERIZE_PROP_BLUE_VALUE_COUNT property is an integer value specifying how many evenly spaced steps to divide the blue channel range of 0.0 to 1.0 into.  
          For example, a value of 4 generates a table with 4 steps, [0.0, 0.33, 0.67, 1.0].  The allowed range for this property is 2 to 16.  The default value is 4.</summary>
  </member>
  <member name="ID2D1Device::ClearResources">
    <summary>
      <para>Clears all of the rendering resources used by Direct2D.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1_1/nf-d2d1_1-id2d1device-clearresources" /></para>
      <param name="millisecondsSinceUse">Discards only resources that haven't been used for greater than the specified time in milliseconds. The default is 0 milliseconds.</param>
    </summary>
  </member>
  <member name="ID2D1Effect::SetInputEffect">
    <summary>
      <para>Sets the given input effect by index.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1_1/nf-d2d1_1-id2d1effect-setinputeffect" /></para>
      <param name="index">The index of the input to set.</param>
      <param name="inputEffect">The input effect to set.</param>
      <param name="invalidate">Whether to invalidate the graph at the location of the effect input</param>
    </summary>
  </member>
  <member name="ID2D1GeometrySink::AddLine">
    <summary>
      <para>Creates a line segment between the current point and the specified end point and adds it to the geometry sink.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1/nf-d2d1-id2d1geometrysink-addline" /></para>
      <param name="point">The end point of the line to draw.</param>
    </summary>
  </member>
  <member name="ID2D1BitmapBrush::GetInterpolationMode">
    <summary>
      <para>Gets the interpolation method used when the brush bitmap is scaled or rotated.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1/nf-d2d1-id2d1bitmapbrush-getinterpolationmode" /></para>
    </summary>
  </member>
  <member name="ID2D1LinearGradientBrush::GetEndPoint">
    <summary>
      <para>Retrieves the ending coordinates of the linear gradient.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1/nf-d2d1-id2d1lineargradientbrush-getendpoint" /></para>
    </summary>
  </member>
  <member name="D2D1_SPOTSPECULAR_PROP">
    <summary>
      <para>Identifiers for properties of the Spot-specular lighting effect.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1effects/ne-d2d1effects-d2d1_spotspecular_prop" /></para>
    </summary>
  </member>
  <member name="D2D1_SPOTSPECULAR_PROP::D2D1_SPOTSPECULAR_PROP_LIGHT_POSITION">
    <summary>The light position of the point light source. The property is a <a href="https://docs.microsoft.com/windows/desktop/api/dcommon/ns-dcommon-d2d_vector_3f">D2D1_VECTOR_3F</a> defined as (x, y, z). 
            The units are in device-independent pixels (DIPs) and are unbounded.
            

The type is <a href="https://docs.microsoft.com/windows/desktop/api/dcommon/ns-dcommon-d2d_vector_3f">D2D1_VECTOR_3F</a>.

The default value is {0.0f, 0.0f, 0.0f}.</summary>
  </member>
  <member name="D2D1_SPOTSPECULAR_PROP::D2D1_SPOTSPECULAR_PROP_POINTS_AT">
    <summary>Where the spot light is focused. The property is exposed as a <a href="https://docs.microsoft.com/windows/desktop/api/dcommon/ns-dcommon-d2d_vector_3f">D2D1_VECTOR_3F</a> with – (x, y, z). 
            The units are in DIPs and the values are unbounded.
            

The type is <a href="https://docs.microsoft.com/windows/desktop/api/dcommon/ns-dcommon-d2d_vector_3f">D2D1_VECTOR_3F</a>.

The default value is {0.0f, 0.0f, 0.0f}.</summary>
  </member>
  <member name="D2D1_SPOTSPECULAR_PROP::D2D1_SPOTSPECULAR_PROP_FOCUS">
    <summary>The focus of the spot light. This property is unitless and is defined between 0 and 200.
            

The type is FLOAT.

The default value is 1.0f.</summary>
  </member>
  <member name="D2D1_SPOTSPECULAR_PROP::D2D1_SPOTSPECULAR_PROP_LIMITING_CONE_ANGLE">
    <summary>The cone angle that restricts the region where the light is projected. No light is projected outside the cone.
            The limiting cone angle is the angle between the spot light axis (the axis between the LightPosition and PointsAt properties) and the spot light cone.
            This property is defined in degrees and must be between 0 to 90 degrees.
            

The type is FLOAT.

The default value is 90.0f.</summary>
  </member>
  <member name="D2D1_SPOTSPECULAR_PROP::D2D1_SPOTSPECULAR_PROP_SPECULAR_EXPONENT">
    <summary>The exponent for the specular term in the Phong lighting equation. A larger value corresponds to a more reflective surface. This value is unitless and must be between 1.0 and 128.
            

The type is FLOAT.

The default value is 1.0f.</summary>
  </member>
  <member name="D2D1_SPOTSPECULAR_PROP::D2D1_SPOTSPECULAR_PROP_SPECULAR_CONSTANT">
    <summary>The ratio of specular reflection to the incoming light. The value is unitless and must be between 0 and 10,000.
            

The type is FLOAT.

The default value is 1.0f.</summary>
  </member>
  <member name="D2D1_SPOTSPECULAR_PROP::D2D1_SPOTSPECULAR_PROP_SURFACE_SCALE">
    <summary>The scale factor in the Z direction for generating a height map. The value is unitless and must be between 0 and 10,000.
            

The type is FLOAT.

The default value is 1.0f.</summary>
  </member>
  <member name="D2D1_SPOTSPECULAR_PROP::D2D1_SPOTSPECULAR_PROP_COLOR">
    <summary>The color of the incoming light. This property is exposed as a Vector 3 – (R, G, B) and used to compute LR, LG, LB.
            

The type is <a href="https://docs.microsoft.com/windows/desktop/api/dcommon/ns-dcommon-d2d_vector_3f">D2D1_VECTOR_3F</a>.

The default value is {1.0f, 1.0f, 1.0f}.</summary>
  </member>
  <member name="D2D1_SPOTSPECULAR_PROP::D2D1_SPOTSPECULAR_PROP_KERNEL_UNIT_LENGTH">
    <summary>The size of an element in the Sobel kernel used to generate the surface normal in the X and Y direction. This property maps to the dx and dy values in the Sobel gradient.
            This property is a D2D1_VECTOR_2F (Kernel Unit Length X, Kernel Unit Length Y) and is defined in (DIPs/Kernel Unit).
            The effect uses bilinear interpolation to scale the bitmap to match size of kernel elements.
            

The type is <a href="https://docs.microsoft.com/windows/desktop/api/dcommon/ns-dcommon-d2d_vector_2f">D2D1_VECTOR_2F</a>.

The default value is {1.0f, 1.0f}.</summary>
  </member>
  <member name="D2D1_SPOTSPECULAR_PROP::D2D1_SPOTSPECULAR_PROP_SCALE_MODE">
    <summary>The interpolation mode the effect uses to scale the image to the corresponding kernel unit length. There are six scale modes that range in quality and speed.
            

The type is <a href="https://docs.microsoft.com/windows/desktop/api/d2d1effects/ne-d2d1effects-d2d1_spotspecular_scale_mode">D2D1_SPOTSPECULAR_SCALE_MODE</a>.

The default value is D2D1_SPOTSPECULAR_SCALE_MODE_LINEAR.</summary>
  </member>
  <member name="ID2D1Properties">
    <summary>
      <para>Represents a set of run-time bindable and discoverable properties that allow a data-driven application to modify the state of a Direct2D effect.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1_1/nn-d2d1_1-id2d1properties" /></para>
    </summary>
  </member>
  <member name="ID2D1CommandSink::SetTextRenderingParams">
    <summary>
      <para>Indicates more detailed text rendering parameters.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1_1/nf-d2d1_1-id2d1commandsink-settextrenderingparams" /></para>
      <param name="textRenderingParams">The parameters to use for text rendering.</param>
    </summary>
  </member>
  <member name="ID2D1SvgElement::IsTextContent">
    <summary>
      <para>Returns a boolean indicating wether this element represents text content.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1svg/nf-d2d1svg-id2d1svgelement-istextcontent" /></para>
    </summary>
  </member>
  <member name="ID2D1Device5">
    <summary>
      <para>Represents a resource domain whose objects and device contexts can be used together. This interface performs all the same functions as the ID2D1Device4 interface. It also enables the creation of ID2D1DeviceContext5 objects.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1_3/nn-d2d1_3-id2d1device5" /></para>
    </summary>
  </member>
  <member name="D2D1_DASH_STYLE">
    <summary>
      <para>Describes the sequence of dashes and gaps in a stroke.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1/ne-d2d1-d2d1_dash_style" /></para>
    </summary>
  </member>
  <member name="D2D1_DASH_STYLE::D2D1_DASH_STYLE_SOLID">
    <summary>A solid line with no breaks.</summary>
  </member>
  <member name="D2D1_DASH_STYLE::D2D1_DASH_STYLE_DASH">
    <summary>A dash followed by a gap of equal length. The dash and the gap are each twice as long as the stroke thickness.

The equivalent dash  array for  <b>D2D1_DASH_STYLE_DASH</b> is {2, 2}.</summary>
  </member>
  <member name="D2D1_DASH_STYLE::D2D1_DASH_STYLE_DOT">
    <summary>A dot followed by a longer gap.

The equivalent dash  array for  <b>D2D1_DASH_STYLE_DOT</b> is {0, 2}.</summary>
  </member>
  <member name="D2D1_DASH_STYLE::D2D1_DASH_STYLE_DASH_DOT">
    <summary>A dash, followed by a gap, followed by a dot, followed by another gap.

The equivalent dash array for  <b>D2D1_DASH_STYLE_DASH_DOT</b> is {2, 2, 0, 2}.</summary>
  </member>
  <member name="D2D1_DASH_STYLE::D2D1_DASH_STYLE_DASH_DOT_DOT">
    <summary>A dash, followed by a gap, followed by a dot, followed by another gap, followed by another dot, followed by another gap.

The equivalent dash array for  <b>D2D1_DASH_STYLE_DASH_DOT_DOT</b> is {2, 2, 0, 2, 0, 2}.</summary>
  </member>
  <member name="D2D1_DASH_STYLE::D2D1_DASH_STYLE_CUSTOM">
    <summary>The dash pattern is specified by an array of floating-point values.</summary>
  </member>
  <member name="ID2D1Effect::SetInputCount">
    <summary>
      <para>Allows the application to change the number of inputs to an effect.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1_1/nf-d2d1_1-id2d1effect-setinputcount" /></para>
      <param name="inputCount">The number of inputs to the effect.</param>
    </summary>
  </member>
  <member name="D2D1_WHITELEVELADJUSTMENT_PROP">
    <summary>
      <para>Defines constants that identify the top level properties of the White Level Adjustment effect.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1effects_2/ne-d2d1effects_2-d2d1_whiteleveladjustment_prop" /></para>
    </summary>
  </member>
  <member name="D2D1_WHITELEVELADJUSTMENT_PROP::D2D1_WHITELEVELADJUSTMENT_PROP_INPUT_WHITE_LEVEL">
    <summary>Identifies the <c>InputWhiteLevel</c> property of the effect. The property is of type FLOAT, and is specified in nits.</summary>
  </member>
  <member name="D2D1_WHITELEVELADJUSTMENT_PROP::D2D1_WHITELEVELADJUSTMENT_PROP_OUTPUT_WHITE_LEVEL">
    <summary>Identifies the <c>OutputWhiteLevel</c> property of the effect. The property is of type FLOAT, and is specified in nits.</summary>
  </member>
  <member name="D2D1_CHROMAKEY_PROP">
    <summary>
      <para>Identifiers for properties of the Chroma-key effect.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1effects_2/ne-d2d1effects_2-d2d1_chromakey_prop" /></para>
    </summary>
  </member>
  <member name="D2D1_CHROMAKEY_PROP::D2D1_CHROMAKEY_PROP_COLOR">
    <summary>The D2D1_CHROMAKEY_PROP_COLOR property is a vector4 value indicating the color that should be converted to alpha.  The default color is black.</summary>
  </member>
  <member name="D2D1_CHROMAKEY_PROP::D2D1_CHROMAKEY_PROP_TOLERANCE">
    <summary>The D2D1_CHROMAKEY_PROP_TOLERANCE property is a float value indicating the tolerance for matching the color specified in the D2D1_CHROMAKEY_PROP_COLOR property.  
          The allowed range is 0.0 to 1.0.  The default value is 0.1.</summary>
  </member>
  <member name="D2D1_CHROMAKEY_PROP::D2D1_CHROMAKEY_PROP_INVERT_ALPHA">
    <summary>The D2D1_CHROMAKEY_PROP_INVERT_ALPHA property is a boolean value indicating whether the alpha values should be inverted.  The default value if False.</summary>
  </member>
  <member name="D2D1_CHROMAKEY_PROP::D2D1_CHROMAKEY_PROP_FEATHER">
    <summary>The D2D1_CHROMAKEY_PROP_FEATHER property is a boolean value whether the edges of the output should be softened in the alpha channel.
          When set to False, the alpha output by the effect is 1-bit: either fully opaque or fully transparent. Setting to True results in a softening of edges in the alpha channel of the Chroma Key output.
          The default value is False.</summary>
  </member>
  <member name="ID2D1StrokeStyle::GetDashes">
    <summary>
      <para>Copies the dash pattern to the specified array.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1/nf-d2d1-id2d1strokestyle-getdashes" /></para>
      <param name="dashes">A pointer to an array that will receive the dash pattern. The array must be able to contain at least as many elements as specified by <i>dashesCount</i>. You must allocate storage for this array.</param>
      <param name="dashesCount">The number of dashes to copy. If this value is less than the number of dashes in the stroke style's dashes array, the returned dashes are truncated to <i>dashesCount</i>. If this value is greater than the number of dashes in the stroke style's dashes array, the extra dashes are set to 0.0f. To obtain the actual number of dashes in the stroke style's dashes array, use the <a href="https://docs.microsoft.com/windows/win32/api/d2d1/nf-d2d1-id2d1strokestyle-getdashescount">GetDashesCount</a> method.</param>
    </summary>
  </member>
  <member name="ID2D1RadialGradientBrush::GetRadiusY">
    <summary>
      <para>Retrieves the y-radius of the gradient ellipse.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1/nf-d2d1-id2d1radialgradientbrush-getradiusy" /></para>
    </summary>
  </member>
  <member name="D2D1Vec3Length">
    <summary>
      <para>Returns the length of a 3 dimensional vector.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1_1/nf-d2d1_1-d2d1vec3length" /></para>
      <param name="x">The  x value of the vector.</param>
      <param name="y">The  y value of the vector.</param>
      <param name="z">The  z value of the vector.</param>
    </summary>
  </member>
  <member name="D2D1_SHARPEN_PROP">
    <summary>
      <para>Identifiers for properties of the Sharpen effect.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1effects_2/ne-d2d1effects_2-d2d1_sharpen_prop" /></para>
    </summary>
  </member>
  <member name="D2D1_SHARPEN_PROP::D2D1_SHARPEN_PROP_SHARPNESS">
    <summary>The D2D1_SHARPEN_PROP_SHARPNESS property is a float value indicating how much to sharpen the input image.  The allowed range is 0.0 to 10.0. The default value is 0.0.</summary>
  </member>
  <member name="D2D1_SHARPEN_PROP::D2D1_SHARPEN_PROP_THRESHOLD">
    <summary>The D2D1_SHARPEN_PROP_THRESHOLD property is a float value.  The allowed range is 0.0 to 1.0. The default value is 0.0.</summary>
  </member>
  <member name="D2D1_TURBULENCE_PROP">
    <summary>
      <para>Identifiers for properties of the Turbulence effect.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1effects/ne-d2d1effects-d2d1_turbulence_prop" /></para>
    </summary>
  </member>
  <member name="D2D1_TURBULENCE_PROP::D2D1_TURBULENCE_PROP_OFFSET">
    <summary>The coordinates where the turbulence output is generated.
            

The algorithm used to generate the Perlin noise is position dependent, so a different offset results in a different output.
              This property is not bounded and the units are specified in DIPs.
            

<div class="alert"><b>Note</b>  The offset does not have the same effect as a translation because the noise function output is infinite and the function will wrap around the tile.</div>
<div> </div>
The type is <a href="https://docs.microsoft.com/windows/desktop/api/dcommon/ns-dcommon-d2d_vector_2f">D2D1_VECTOR_2F</a>.
            

The default value is {0.0f, 0.0f}.</summary>
  </member>
  <member name="D2D1_TURBULENCE_PROP::D2D1_TURBULENCE_PROP_BASE_FREQUENCY">
    <summary>The base frequencies in the X and Y direction. This property is a float and must be greater than 0. The units are specified in 1/DIPs.
            

A value of 1 (1/DIPs) for the base frequency results in the Perlin noise completing an entire cycle between two pixels. The ease interpolation for these pixels results in completely random pixels, since there is no correlation between the pixels.

A value of 0.1(1/DIPs) for the base frequency, the Perlin noise function repeats every 10 DIPs. This results in correlation between pixels and the typical turbulence effect is visible.

The type is <a href="https://docs.microsoft.com/windows/desktop/api/dcommon/ns-dcommon-d2d_vector_2f">D2D1_VECTOR_2F</a>.
            

The default value is {0.01f, 0.01f}.</summary>
  </member>
  <member name="D2D1_TURBULENCE_PROP::D2D1_TURBULENCE_PROP_NUM_OCTAVES">
    <summary>The number of octaves for the noise function. This property is a UINT32 and must be greater than 0.
            

The type is UINT32.

The default value is 1.</summary>
  </member>
  <member name="D2D1_TURBULENCE_PROP::D2D1_TURBULENCE_PROP_SEED">
    <summary>The seed for the pseudo random generator. This property is unbounded.
            

The type is UINT32.

The default value is 0.</summary>
  </member>
  <member name="D2D1_TURBULENCE_PROP::D2D1_TURBULENCE_PROP_NOISE">
    <summary>The turbulence noise mode. This property can be either fractal sum or turbulence. Indicates whether to generate a bitmap based on Fractal Noise or the Turbulence function. 
            

The type is <a href="https://docs.microsoft.com/windows/desktop/api/d2d1effects/ne-d2d1effects-d2d1_turbulence_noise">D2D1_TURBULENCE_NOISE</a>.
            

The default value is D2D1_TURBULENCE_NOISE_FRACTAL_SUM.</summary>
  </member>
  <member name="D2D1_TURBULENCE_PROP::D2D1_TURBULENCE_PROP_STITCHABLE">
    <summary>Turns stitching on or off. The base frequency is adjusted so that output bitmap can be stitched. This is useful if you want to tile multiple copies of the turbulence effect output.
            

True – The output bitmap can be tiled (using the tile effect) without the appearance of seams. The base frequency is adjusted so that output bitmap can be stitched.

False – The base frequency is not adjusted, so seams may appear between tiles if the bitmap is tiled. 

The type is BOOL.

The default value is FALSE.</summary>
  </member>
  <member name="D2D1_TRIANGLE">
    <summary>
      <para>Contains the three vertices that describe a triangle.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1/ns-d2d1-d2d1_triangle" /></para>
    </summary>
  </member>
  <member name="D2D1_TRIANGLE::point1">
    <summary>The first vertex of a triangle.</summary>
  </member>
  <member name="D2D1_TRIANGLE::point2">
    <summary>The second vertex of a triangle.</summary>
  </member>
  <member name="D2D1_TRIANGLE::point3">
    <summary>The third vertex of a triangle.</summary>
  </member>
  <member name="D2D1_VIGNETTE_PROP">
    <summary>
      <para>Identifiers for properties of the Vignette effect.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1effects_2/ne-d2d1effects_2-d2d1_vignette_prop" /></para>
    </summary>
  </member>
  <member name="D2D1_VIGNETTE_PROP::D2D1_VIGNETTE_PROP_COLOR">
    <summary>The D2D1_VIGNETTE_PROP_COLOR property is an RGB tripplet that specifies the color to fade the image's edges to. The default color is black.</summary>
  </member>
  <member name="D2D1_VIGNETTE_PROP::D2D1_VIGNETTE_PROP_TRANSITION_SIZE">
    <summary>The D2D1_VIGNETTE_PROP_TRANSITION_SIZE property is a float value that specifies the size of the vignette region as a percentage of the full image region.  
          A size of 0 means the unfaded region is the entire image, while a size of 1 means the faded region is the entire source image.
          The allowed range is 0.0 to 1.0.  The default value is 0.1.</summary>
  </member>
  <member name="D2D1_VIGNETTE_PROP::D2D1_VIGNETTE_PROP_STRENGTH">
    <summary>The D2D1_VIGNETTE_PROP_STRENGTH property is a float value that specifies how much the vignette color bleeds in for a given transition size. 
          The allowed range is 0.0 to 1.0.  The default value is 0.5.</summary>
  </member>
  <member name="D2D1_SVG_LENGTH_UNITS">
    <summary>
      <para>Specifies the units for an SVG length.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1svg/ne-d2d1svg-d2d1_svg_length_units" /></para>
    </summary>
  </member>
  <member name="D2D1_SVG_LENGTH_UNITS::D2D1_SVG_LENGTH_UNITS_NUMBER">
    <summary>The length is unitless.</summary>
  </member>
  <member name="D2D1_SVG_LENGTH_UNITS::D2D1_SVG_LENGTH_UNITS_PERCENTAGE">
    <summary>The length is a percentage value.</summary>
  </member>
  <member name="D2D1_PRESENT_OPTIONS">
    <summary>
      <para>Describes how a render target behaves when it presents its content. This enumeration allows a bitwise combination of its member values.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1/ne-d2d1-d2d1_present_options" /></para>
    </summary>
  </member>
  <member name="D2D1_PRESENT_OPTIONS::D2D1_PRESENT_OPTIONS_NONE">
    <summary>The render target waits until the display refreshes to present and discards the frame upon presenting.</summary>
  </member>
  <member name="D2D1_PRESENT_OPTIONS::D2D1_PRESENT_OPTIONS_RETAIN_CONTENTS">
    <summary>The render target does not discard the frame upon presenting.</summary>
  </member>
  <member name="D2D1_PRESENT_OPTIONS::D2D1_PRESENT_OPTIONS_IMMEDIATELY">
    <summary>The render target does not wait until the display refreshes to present.</summary>
  </member>
  <member name="ID2D1CommandSink::SetTextAntialiasMode">
    <summary>
      <para>Indicates the new default antialiasing mode for text.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1_1/nf-d2d1_1-id2d1commandsink-settextantialiasmode" /></para>
      <param name="textAntialiasMode">The antialiasing mode for the text.</param>
    </summary>
  </member>
  <member name="ID2D1DeviceContext1::CreateStrokedGeometryRealization">
    <summary>
      <para>Creates a device-dependent representation of the stroke of a geometry that can be subsequently rendered.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1_2/nf-d2d1_2-id2d1devicecontext1-createstrokedgeometryrealization" /></para>
      <param name="geometry">The geometry to realize.</param>
      <param name="flatteningTolerance">The flattening tolerance to use when converting Beziers to line segments. This parameter shares the same units as the coordinates of the geometry.</param>
      <param name="strokeWidth">The width of the stroke. This parameter shares the same units as the coordinates of the geometry.</param>
      <param name="strokeStyle">The stroke style (optional).</param>
      <param name="geometryRealization">When this method returns, contains the address of a pointer to a new geometry realization object.</param>
    </summary>
  </member>
  <member name="ID2D1CommandSink2::DrawInk">
    <summary>
      <para>Renders the given ink object using the given brush and ink style.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1_3/nf-d2d1_3-id2d1commandsink2-drawink" /></para>
      <param name="ink">The ink object to be rendered.</param>
      <param name="brush">The brush with which to render the ink object.</param>
      <param name="inkStyle">The ink style to use when rendering the ink object.</param>
    </summary>
  </member>
  <member name="ID2D1GeometryGroup">
    <summary>
      <para>Represents a composite geometry, composed of other ID2D1Geometry objects.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1/nn-d2d1-id2d1geometrygroup" /></para>
    </summary>
  </member>
  <member name="D2D1_INK_STYLE_PROPERTIES">
    <summary>
      <para>Defines the general pen tip shape and the transform used in an ID2D1InkStyle object.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1_3/ns-d2d1_3-d2d1_ink_style_properties" /></para>
    </summary>
  </member>
  <member name="D2D1_INK_STYLE_PROPERTIES::nibShape">
    <summary>The pre-transform shape of the nib (pen tip) used to draw a given ink object.</summary>
  </member>
  <member name="D2D1_INK_STYLE_PROPERTIES::nibTransform">
    <summary>The transform applied to the nib.  Note that the translation components of the transform matrix are ignored for the purposes of rendering.</summary>
  </member>
  <member name="D2D1_RGBTOHUE_PROP">
    <summary>
      <para>Indentifiers for properties of the RGB to Hue effect.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1effects_2/ne-d2d1effects_2-d2d1_rgbtohue_prop" /></para>
    </summary>
  </member>
  <member name="D2D1_RGBTOHUE_PROP::D2D1_RGBTOHUE_PROP_OUTPUT_COLOR_SPACE">
    <summary>The D2D1_RGBTOHUE_PROP_OUTPUT_COLOR_SPACE property is an enumeration value which indicates the color space to convert to. 
          The default value for the property is D2D1_RGBTOHUE_OUTPUT_COLOR_SPACE_HUE_SATURATION_VALUE.
          See the <a href="https://docs.microsoft.com/windows/desktop/api/d2d1effects_2/ne-d2d1effects_2-d2d1_rgbtohue_output_color_space">D2D1_RGBTOHUE_OUTPUT_COLOR_SPACE</a> enumeration for more information.</summary>
  </member>
  <member name="ID2D1StrokeStyle::GetLineJoin">
    <summary>
      <para>Retrieves the type of joint used at the vertices of a shape's outline.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1/nf-d2d1-id2d1strokestyle-getlinejoin" /></para>
    </summary>
  </member>
  <member name="D2D1_GRADIENT_MESH_PATCH">
    <summary>
      <para>Represents a tensor patch with 16 control points, 4 corner colors, and boundary flags. An ID2D1GradientMesh is made up of 1 or more gradient mesh patches. Use the GradientMeshPatch function or the GradientMeshPatchFromCoonsPatch function to create one.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1_3/ns-d2d1_3-d2d1_gradient_mesh_patch" /></para>
    </summary>
  </member>
  <member name="D2D1_GRADIENT_MESH_PATCH::point00">
    <summary>The coordinate-space location of the control point in column 0 and row 0 of the tensor grid.</summary>
  </member>
  <member name="D2D1_GRADIENT_MESH_PATCH::point01">
    <summary>The coordinate-space location of the control point in column 0 and row 1 of the tensor grid.</summary>
  </member>
  <member name="D2D1_GRADIENT_MESH_PATCH::point02">
    <summary>The coordinate-space location of the control point in column 0 and row 2 of the tensor grid.</summary>
  </member>
  <member name="D2D1_GRADIENT_MESH_PATCH::point03">
    <summary>The coordinate-space location of the control point in column 0 and row 3 of the tensor grid.</summary>
  </member>
  <member name="D2D1_GRADIENT_MESH_PATCH::point10">
    <summary>The coordinate-space location of the control point in column 1 and row 0 of the tensor grid.</summary>
  </member>
  <member name="D2D1_GRADIENT_MESH_PATCH::point11">
    <summary>The coordinate-space location of the control point in column 1 and row 1 of the tensor grid.</summary>
  </member>
  <member name="D2D1_GRADIENT_MESH_PATCH::point12">
    <summary>The coordinate-space location of the control point in column 1 and row 2 of the tensor grid.</summary>
  </member>
  <member name="D2D1_GRADIENT_MESH_PATCH::point13">
    <summary>The coordinate-space location of the control point in column 1 and row 3 of the tensor grid.</summary>
  </member>
  <member name="D2D1_GRADIENT_MESH_PATCH::point20">
    <summary>The coordinate-space location of the control point in column 2 and row 0 of the tensor grid.</summary>
  </member>
  <member name="D2D1_GRADIENT_MESH_PATCH::point21">
    <summary>The coordinate-space location of the control point in column 2 and row 1 of the tensor grid.</summary>
  </member>
  <member name="D2D1_GRADIENT_MESH_PATCH::point22">
    <summary>The coordinate-space location of the control point in column 2 and row 2 of the tensor grid.</summary>
  </member>
  <member name="D2D1_GRADIENT_MESH_PATCH::point23">
    <summary>The coordinate-space location of the control point in column 2 and row 3 of the tensor grid.</summary>
  </member>
  <member name="D2D1_GRADIENT_MESH_PATCH::point30">
    <summary>The coordinate-space location of the control point in column 3 and row 0 of the tensor grid.</summary>
  </member>
  <member name="D2D1_GRADIENT_MESH_PATCH::point31">
    <summary>The coordinate-space location of the control point in column 3 and row 1 of the tensor grid.</summary>
  </member>
  <member name="D2D1_GRADIENT_MESH_PATCH::point32">
    <summary>The coordinate-space location of the control point in column 3 and row 2 of the tensor grid.</summary>
  </member>
  <member name="D2D1_GRADIENT_MESH_PATCH::point33">
    <summary>The coordinate-space location of the control point in column 3 and row 3 of the tensor grid.</summary>
  </member>
  <member name="D2D1_GRADIENT_MESH_PATCH::color00">
    <summary>The color associated with the control point in column 0 and row 0 of the tensor grid.</summary>
  </member>
  <member name="D2D1_GRADIENT_MESH_PATCH::color03">
    <summary>The color associated with the control point in column 0 and row 3 of the tensor grid.</summary>
  </member>
  <member name="D2D1_GRADIENT_MESH_PATCH::color30">
    <summary>The color associated with the control point in column 3 and row 0 of the tensor grid.</summary>
  </member>
  <member name="D2D1_GRADIENT_MESH_PATCH::color33">
    <summary>The color associated with the control point in column 3 and row 3 of the tensor grid.</summary>
  </member>
  <member name="D2D1_GRADIENT_MESH_PATCH::topEdgeMode">
    <summary>Specifies how to render the top edge of the mesh.</summary>
  </member>
  <member name="D2D1_GRADIENT_MESH_PATCH::leftEdgeMode">
    <summary>Specifies how to render the left edge of the mesh.</summary>
  </member>
  <member name="D2D1_GRADIENT_MESH_PATCH::bottomEdgeMode">
    <summary>Specifies how to render the bottom edge of the mesh.</summary>
  </member>
  <member name="D2D1_GRADIENT_MESH_PATCH::rightEdgeMode">
    <summary>Specifies how to render the right edge of the mesh.</summary>
  </member>
  <member name="ID2D1SvgElement::GetTagName">
    <summary>
      <para>Gets the tag name.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1svg/nf-d2d1svg-id2d1svgelement-gettagname" /></para>
      <param name="name">The tag name.</param>
      <param name="nameCount">Length of the value in the name argument.</param>
    </summary>
  </member>
  <member name="ID2D1ColorContext1::GetColorContextType">
    <summary>
      <para>Retrieves the color context type.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1_3/nf-d2d1_3-id2d1colorcontext1-getcolorcontexttype" /></para>
    </summary>
  </member>
  <member name="ID2D1RenderTarget::SetDpi">
    <summary>
      <para>Sets the dots per inch (DPI) of the render target.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1/nf-d2d1-id2d1rendertarget-setdpi" /></para>
      <param name="dpiX">A value greater than or equal to zero that specifies the horizontal DPI of the render target.</param>
      <param name="dpiY">A value greater than or equal to zero that specifies the vertical DPI of the render target.</param>
    </summary>
  </member>
  <member name="ID2D1SvgElement::GetPreviousChild">
    <summary>
      <para>Gets the previous sibling of the referenceChild element.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1svg/nf-d2d1svg-id2d1svgelement-getpreviouschild" /></para>
      <param name="referenceChild">The referenceChild must be an immediate child of this element.</param>
      <param name="previousChild">The output previousChild element will be non-null if the referenceChild has a previous sibling. If the referenceChild is the first child, the output is null.</param>
    </summary>
  </member>
  <member name="ID2D1Transform::MapInvalidRect">
    <summary>
      <para>Sets the input rectangles for this rendering pass into the transform.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1effectauthor/nf-d2d1effectauthor-id2d1transform-mapinvalidrect" /></para>
      <param name="inputIndex">The index of the input rectangle.</param>
      <param name="invalidInputRect">The invalid input rectangle.</param>
      <param name="invalidOutputRect">The output rectangle to which the input rectangle must be mapped.</param>
    </summary>
  </member>
  <member name="D2D1_CHANGE_TYPE">
    <summary>
      <para>Describes flags that influence how the renderer interacts with a custom vertex shader.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1effectauthor/ne-d2d1effectauthor-d2d1_change_type" /></para>
    </summary>
  </member>
  <member name="D2D1_CHANGE_TYPE::D2D1_CHANGE_TYPE_NONE">
    <summary>There were no changes.</summary>
  </member>
  <member name="D2D1_CHANGE_TYPE::D2D1_CHANGE_TYPE_PROPERTIES">
    <summary>The properties of the effect changed.</summary>
  </member>
  <member name="D2D1_CHANGE_TYPE::D2D1_CHANGE_TYPE_CONTEXT">
    <summary>The context state changed.</summary>
  </member>
  <member name="D2D1_CHANGE_TYPE::D2D1_CHANGE_TYPE_GRAPH">
    <summary>The effect’s transform graph has changed.  This happens only when an effect supports a variable input count.</summary>
  </member>
  <member name="ID2D1Factory1::RegisterEffectFromString">
    <summary>
      <para>Registers an effect within the factory instance with the property XML specified as a string.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1_1/nf-d2d1_1-id2d1factory1-registereffectfromstring" /></para>
      <param name="classId">The identifier of the effect to be registered.</param>
      <param name="propertyXml">A list of the effect properties, types, and metadata.</param>
      <param name="bindings">An array of properties and methods.

This binds a property by name to a particular method implemented by the effect author to handle the property. 
              The name must be found in the corresponding <i>propertyXml</i>.</param>
      <param name="bindingsCount">The number of bindings in the binding array.</param>
      <param name="effectFactory">The static factory that is used to create the corresponding effect.</param>
    </summary>
  </member>
  <member name="D2D1_LAYER_PARAMETERS1">
    <summary>
      <para>Contains the content bounds, mask information, opacity settings, and other options for a layer resource.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1_1/ns-d2d1_1-d2d1_layer_parameters1" /></para>
    </summary>
  </member>
  <member name="D2D1_LAYER_PARAMETERS1::contentBounds">
    <summary>The content bounds of the layer. Content outside these bounds is not guaranteed to render.</summary>
  </member>
  <member name="D2D1_LAYER_PARAMETERS1::geometricMask">
    <summary>The geometric mask specifies the area of the layer that is composited into the render target.</summary>
  </member>
  <member name="D2D1_LAYER_PARAMETERS1::maskAntialiasMode">
    <summary>A value that specifies the antialiasing mode for the geometricMask.</summary>
  </member>
  <member name="D2D1_LAYER_PARAMETERS1::maskTransform">
    <summary>A value that specifies the transform that is applied to the geometric mask when composing the layer.</summary>
  </member>
  <member name="D2D1_LAYER_PARAMETERS1::opacity">
    <summary>An opacity value that is applied uniformly to all resources in the layer when compositing to the target.</summary>
  </member>
  <member name="D2D1_LAYER_PARAMETERS1::opacityBrush">
    <summary>A brush that is used to modify the opacity of the layer. The brush 
is mapped to the layer, and the alpha channel of each mapped brush pixel is multiplied against the corresponding layer pixel.</summary>
  </member>
  <member name="D2D1_LAYER_PARAMETERS1::layerOptions">
    <summary>Additional options for the layer creation.</summary>
  </member>
  <member name="ID2D1Bitmap1::Unmap">
    <summary>
      <para>Unmaps the bitmap from memory.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1_1/nf-d2d1_1-id2d1bitmap1-unmap" /></para>
    </summary>
  </member>
  <member name="ID2D1Factory4::CreateDevice">
    <summary>
      <para>Creates an ID2D1Device3 object.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1_3/nf-d2d1_3-id2d1factory4-createdevice" /></para>
      <param name="dxgiDevice">The IDXGIDevice object used when creating the <a href="https://docs.microsoft.com/windows/desktop/api/d2d1_3/nn-d2d1_3-id2d1device3">ID2D1Device3</a>.</param>
      <param name="d2dDevice3">The requested <a href="https://docs.microsoft.com/windows/desktop/api/d2d1_3/nn-d2d1_3-id2d1device3">ID2D1Device3</a> object.</param>
    </summary>
  </member>
  <member name="ID2D1EllipseGeometry::GetEllipse">
    <summary>
      <para>Gets the D2D1_ELLIPSE structure that describes this ellipse geometry.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1/nf-d2d1-id2d1ellipsegeometry-getellipse" /></para>
      <param name="ellipse">When this method returns, contains the <a href="https://docs.microsoft.com/windows/win32/api/d2d1/ns-d2d1-d2d1_ellipse">D2D1_ELLIPSE</a> that describes the size and position of the ellipse. You must allocate storage for this parameter.</param>
    </summary>
  </member>
  <member name="ID2D1OffsetTransform::GetOffset">
    <summary>
      <para>Gets the offset currently in the offset transform.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1effectauthor/nf-d2d1effectauthor-id2d1offsettransform-getoffset" /></para>
    </summary>
  </member>
  <member name="ID2D1PathGeometry::Stream">
    <summary>
      <para>Copies the contents of the path geometry to the specified ID2D1GeometrySink.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1/nf-d2d1-id2d1pathgeometry-stream" /></para>
      <param name="geometrySink">The sink to which the path geometry's contents are copied. Modifying this sink does not change the contents of this path geometry.</param>
    </summary>
  </member>
  <member name="ID2D1Factory6::CreateDevice">
    <summary>
      <para>Creates a new Direct2D device from the given IDXGIDevice.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1_3/nf-d2d1_3-id2d1factory6-createdevice" /></para>
      <param name="dxgiDevice">The IDXGIDevice to create the Direct2D device from.</param>
      <param name="d2dDevice5">The created device.</param>
    </summary>
  </member>
  <member name="ID2D1SvgPaint">
    <summary>
      <para>Interface describing an SVG fill or stroke value.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1svg/nn-d2d1svg-id2d1svgpaint" /></para>
    </summary>
  </member>
  <member name="ID2D1EffectContext::IsShaderLoaded">
    <summary>
      <para>This tests to see if the given shader is loaded.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1effectauthor/nf-d2d1effectauthor-id2d1effectcontext-isshaderloaded" /></para>
      <param name="shaderId">The unique id that identifies the shader.</param>
    </summary>
  </member>
  <member name="ID2D1CommandSink::PopAxisAlignedClip">
    <summary>
      <para>Removes an axis-aligned clip from the layer and clip stack.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1_1/nf-d2d1_1-id2d1commandsink-popaxisalignedclip" /></para>
    </summary>
  </member>
  <member name="D2D1_HUETORGB_INPUT_COLOR_SPACE">
    <summary>
      <para>Values for the D2D1_HUETORGB_PROP_INPUT_COLOR_SPACE property of the Hue to RGB effect.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1effects_2/ne-d2d1effects_2-d2d1_huetorgb_input_color_space" /></para>
    </summary>
  </member>
  <member name="D2D1_HUETORGB_INPUT_COLOR_SPACE::D2D1_HUETORGB_INPUT_COLOR_SPACE_HUE_SATURATION_VALUE">
    <summary>The effect converts from Hue Saturation Value (HSV) to RGB.</summary>
  </member>
  <member name="D2D1_HUETORGB_INPUT_COLOR_SPACE::D2D1_HUETORGB_INPUT_COLOR_SPACE_HUE_SATURATION_LIGHTNESS">
    <summary>The effect converts from Hue Saturation Lightness (HSL) to RGB.</summary>
  </member>
  <member name="ID2D1GradientStopCollection1::GetPreInterpolationSpace">
    <summary>
      <para>Gets the color space of the input colors as well as the space in which gradient stops are interpolated.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1_1/nf-d2d1_1-id2d1gradientstopcollection1-getpreinterpolationspace" /></para>
    </summary>
  </member>
  <member name="D2D1_BRIGHTNESS_PROP">
    <summary>
      <para>Identifiers for the properties of the Brightness effect.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1effects/ne-d2d1effects-d2d1_brightness_prop" /></para>
    </summary>
  </member>
  <member name="D2D1_BRIGHTNESS_PROP::D2D1_BRIGHTNESS_PROP_WHITE_POINT">
    <summary>The upper portion of the brightness transfer curve. The white point adjusts the appearance of the brighter portions of the image. 
          This property is for both the x value and the y value, in that order. Each of the values of this property are between 0 and 1, inclusive.
          

The type is <a href="https://docs.microsoft.com/windows/desktop/api/dcommon/ns-dcommon-d2d_vector_2f">D2D1_VECTOR_2F</a>.

The default value is (1.0f, 1.0f).</summary>
  </member>
  <member name="D2D1_BRIGHTNESS_PROP::D2D1_BRIGHTNESS_PROP_BLACK_POINT">
    <summary>The lower portion of the brightness transfer curve. The black point adjusts the appearance of the darker portions of the image. 
          This property is for both the x value and the y value, in that order. Each of the values of this property are between 0 and 1, inclusive.
          

The type is <a href="https://docs.microsoft.com/windows/desktop/api/dcommon/ns-dcommon-d2d_vector_2f">D2D1_VECTOR_2F</a>.

The default value is (0.0f, 0.0f).</summary>
  </member>
  <member name="ID2D1Ink::RemoveSegmentsAtEnd">
    <summary>
      <para>Removes the given number of segments from the end of this ink object.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1_3/nf-d2d1_3-id2d1ink-removesegmentsatend" /></para>
      <param name="segmentsCount">The number of segments to be removed from the end of this ink object. Note that segmentsCount must be less or equal to the number of segments in the ink object.</param>
    </summary>
  </member>
  <member name="D2D1_BITMAP_PROPERTIES">
    <summary>
      <para>Describes the pixel format and dpi of a bitmap.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1/ns-d2d1-d2d1_bitmap_properties" /></para>
    </summary>
  </member>
  <member name="D2D1_BITMAP_PROPERTIES::pixelFormat">
    <summary>The bitmap's pixel format and alpha mode.</summary>
  </member>
  <member name="D2D1_BITMAP_PROPERTIES::dpiX">
    <summary>The horizontal dpi of the bitmap.</summary>
  </member>
  <member name="D2D1_BITMAP_PROPERTIES::dpiY">
    <summary>The vertical dpi of the bitmap.</summary>
  </member>
  <member name="D2D1_CONVOLVEMATRIX_SCALE_MODE">
    <summary>
      <para>The interpolation mode the Convolve matrix effect uses to scale the image to the corresponding kernel unit length. There are six scale modes that range in quality and speed.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1effects/ne-d2d1effects-d2d1_convolvematrix_scale_mode" /></para>
    </summary>
  </member>
  <member name="D2D1_CONVOLVEMATRIX_SCALE_MODE::D2D1_CONVOLVEMATRIX_SCALE_MODE_NEAREST_NEIGHBOR">
    <summary>Samples the nearest single point and uses that.  This mode uses less processing time, but outputs the lowest quality image.</summary>
  </member>
  <member name="D2D1_CONVOLVEMATRIX_SCALE_MODE::D2D1_CONVOLVEMATRIX_SCALE_MODE_LINEAR">
    <summary>Uses a four point sample and linear interpolation. This mode outputs a higher quality image than nearest neighbor mode.</summary>
  </member>
  <member name="D2D1_CONVOLVEMATRIX_SCALE_MODE::D2D1_CONVOLVEMATRIX_SCALE_MODE_CUBIC">
    <summary>Uses a 16 sample cubic kernel for interpolation.  This mode uses the most processing time, but outputs a higher quality image.</summary>
  </member>
  <member name="D2D1_CONVOLVEMATRIX_SCALE_MODE::D2D1_CONVOLVEMATRIX_SCALE_MODE_MULTI_SAMPLE_LINEAR">
    <summary>Uses 4 linear samples within a single pixel for good edge anti-aliasing. This mode is good for scaling down by small amounts on images with few pixels.</summary>
  </member>
  <member name="D2D1_CONVOLVEMATRIX_SCALE_MODE::D2D1_CONVOLVEMATRIX_SCALE_MODE_ANISOTROPIC">
    <summary>Uses anisotropic filtering to sample a pattern according to the transformed shape of the bitmap.</summary>
  </member>
  <member name="D2D1_CONVOLVEMATRIX_SCALE_MODE::D2D1_CONVOLVEMATRIX_SCALE_MODE_HIGH_QUALITY_CUBIC">
    <summary>Uses a variable size high quality cubic kernel to perform a pre-downscale the image if downscaling is involved in the transform matrix. Then uses the cubic interpolation mode for the final output.</summary>
  </member>
  <member name="D2D1_RADIAL_GRADIENT_BRUSH_PROPERTIES">
    <summary>
      <para>Contains the gradient origin offset and the size and position of the gradient ellipse for an ID2D1RadialGradientBrush.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1/ns-d2d1-d2d1_radial_gradient_brush_properties" /></para>
    </summary>
  </member>
  <member name="D2D1_RADIAL_GRADIENT_BRUSH_PROPERTIES::center">
    <summary>In the brush's coordinate space, the center of the gradient ellipse.</summary>
  </member>
  <member name="D2D1_RADIAL_GRADIENT_BRUSH_PROPERTIES::gradientOriginOffset">
    <summary>In the brush's coordinate space, the offset of the gradient origin relative to the gradient ellipse's center.</summary>
  </member>
  <member name="D2D1_RADIAL_GRADIENT_BRUSH_PROPERTIES::radiusX">
    <summary>In the brush's coordinate space, the x-radius  of the gradient ellipse.</summary>
  </member>
  <member name="D2D1_RADIAL_GRADIENT_BRUSH_PROPERTIES::radiusY">
    <summary>In the brush's coordinate space, the y-radius  of the gradient ellipse.</summary>
  </member>
  <member name="ID2D1RadialGradientBrush">
    <summary>
      <para>Paints an area with a radial gradient.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1/nn-d2d1-id2d1radialgradientbrush" /></para>
    </summary>
  </member>
  <member name="D2D1_RENDER_TARGET_USAGE">
    <summary>
      <para>Describes how a render target is remoted and whether it should be GDI-compatible. This enumeration allows a bitwise combination of its member values.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1/ne-d2d1-d2d1_render_target_usage" /></para>
    </summary>
  </member>
  <member name="D2D1_RENDER_TARGET_USAGE::D2D1_RENDER_TARGET_USAGE_NONE">
    <summary>The render target attempts to use Direct3D command-stream remoting and uses bitmap remoting if stream remoting fails. The render target is not GDI-compatible.</summary>
  </member>
  <member name="D2D1_RENDER_TARGET_USAGE::D2D1_RENDER_TARGET_USAGE_FORCE_BITMAP_REMOTING">
    <summary>The render target renders content locally and sends it to the terminal services client as a bitmap.</summary>
  </member>
  <member name="D2D1_RENDER_TARGET_USAGE::D2D1_RENDER_TARGET_USAGE_GDI_COMPATIBLE">
    <summary>The render target can be used efficiently with GDI.</summary>
  </member>
  <member name="D2D1_PATCH_EDGE_MODE">
    <summary>
      <para>Specifies how to render gradient mesh edges.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1_3/ne-d2d1_3-d2d1_patch_edge_mode" /></para>
    </summary>
  </member>
  <member name="D2D1_PATCH_EDGE_MODE::D2D1_PATCH_EDGE_MODE_ALIASED">
    <summary>Render this patch edge aliased. Use this value for the internal edges of your gradient mesh.</summary>
  </member>
  <member name="D2D1_PATCH_EDGE_MODE::D2D1_PATCH_EDGE_MODE_ANTIALIASED">
    <summary>Render this patch edge antialiased. Use this value for the external (boundary) edges of your mesh.</summary>
  </member>
  <member name="D2D1_PATCH_EDGE_MODE::D2D1_PATCH_EDGE_MODE_ALIASED_INFLATED">
    <summary>Render this patch edge aliased and also slightly inflated. Use this for the internal edges of your gradient mesh when there could be t-junctions among patches. 
          Inflating the internal edges mitigates seams that can appear along those junctions.</summary>
  </member>
  <member name="D2D1CreateDeviceContext">
    <summary>
      <para>Creates a new Direct2D device context associated with a DXGI surface.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1_1/nf-d2d1_1-d2d1createdevicecontext" /></para>
      <param name="dxgiSurface">The DXGI surface the Direct2D device context is associated with.</param>
      <param name="creationProperties">The properties to apply to the Direct2D device context.</param>
      <param name="d2dDeviceContext">When this function returns, contains the address of a pointer to a Direct2D device context.</param>
    </summary>
  </member>
  <member name="ID2D1GradientMesh::GetPatchCount">
    <summary>
      <para>Returns the number of patches that make up this gradient mesh.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1_3/nf-d2d1_3-id2d1gradientmesh-getpatchcount" /></para>
    </summary>
  </member>
  <member name="ID2D1ComputeInfo::SetComputeShaderConstantBuffer">
    <summary>
      <para>Establishes or changes the constant buffer data for this transform.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1effectauthor/nf-d2d1effectauthor-id2d1computeinfo-setcomputeshaderconstantbuffer" /></para>
      <param name="buffer">The data applied to the constant buffer.</param>
      <param name="bufferCount">The number of bytes of data in the constant buffer.</param>
    </summary>
  </member>
  <member name="D2D1_RGBTOHUE_OUTPUT_COLOR_SPACE">
    <summary>
      <para>Values for the D2D1_RGBTOHUE_PROP_OUTPUT_COLOR_SPACE property of the RGB to Hue effect.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1effects_2/ne-d2d1effects_2-d2d1_rgbtohue_output_color_space" /></para>
    </summary>
  </member>
  <member name="D2D1_RGBTOHUE_OUTPUT_COLOR_SPACE::D2D1_RGBTOHUE_OUTPUT_COLOR_SPACE_HUE_SATURATION_VALUE">
    <summary>The effect converts from RGB to Hue Saturation Value (HSV).</summary>
  </member>
  <member name="D2D1_RGBTOHUE_OUTPUT_COLOR_SPACE::D2D1_RGBTOHUE_OUTPUT_COLOR_SPACE_HUE_SATURATION_LIGHTNESS">
    <summary>The effect converts from RGB to Hue Saturation Lightness (HSL).</summary>
  </member>
  <member name="ID2D1OffsetTransform">
    <summary>
      <para>Instructs the effect-rendering system to offset an input bitmap without inserting a rendering pass.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1effectauthor/nn-d2d1effectauthor-id2d1offsettransform" /></para>
    </summary>
  </member>
  <member name="ID2D1RadialGradientBrush::SetRadiusY">
    <summary>
      <para>Specifies the y-radius of the gradient ellipse, in the brush's coordinate space.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1/nf-d2d1-id2d1radialgradientbrush-setradiusy" /></para>
      <param name="radiusY">The y-radius of the gradient ellipse. This value is in the brush's coordinate space.</param>
    </summary>
  </member>
  <member name="ID2D1Brush::SetOpacity">
    <summary>
      <para>Sets the degree of opacity of this brush.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1/nf-d2d1-id2d1brush-setopacity" /></para>
      <param name="opacity">A value between zero and 1 that indicates the opacity of the brush. This value is a constant multiplier that linearly scales the alpha value of all pixels filled by the brush. The opacity values are clamped in the range 0–1 before they are multipled together.</param>
    </summary>
  </member>
  <member name="ID2D1PathGeometry::Open">
    <summary>
      <para>Retrieves the geometry sink that is used to populate the path geometry with figures and segments.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1/nf-d2d1-id2d1pathgeometry-open" /></para>
      <param name="geometrySink">When this method returns, <i>geometrySink</i> contains the address of a pointer to the geometry sink that is used to populate the path geometry with figures and segments. This parameter is passed uninitialized.</param>
    </summary>
  </member>
  <member name="D2D1_POINTDIFFUSE_SCALE_MODE">
    <summary>
      <para>The interpolation mode the Point-diffuse lighting effect uses to scale the image to the corresponding kernel unit length. There are six scale modes that range in quality and speed.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1effects/ne-d2d1effects-d2d1_pointdiffuse_scale_mode" /></para>
    </summary>
  </member>
  <member name="D2D1_POINTDIFFUSE_SCALE_MODE::D2D1_POINTDIFFUSE_SCALE_MODE_NEAREST_NEIGHBOR">
    <summary>Samples the nearest single point and uses that. This mode uses less processing time, but outputs the lowest quality image.</summary>
  </member>
  <member name="D2D1_POINTDIFFUSE_SCALE_MODE::D2D1_POINTDIFFUSE_SCALE_MODE_LINEAR">
    <summary>Uses a four point sample and linear interpolation. This mode outputs a higher quality image than nearest neighbor.</summary>
  </member>
  <member name="D2D1_POINTDIFFUSE_SCALE_MODE::D2D1_POINTDIFFUSE_SCALE_MODE_CUBIC">
    <summary>Uses a 16 sample cubic kernel for interpolation. This mode uses the most processing time, but outputs a higher quality image.</summary>
  </member>
  <member name="D2D1_POINTDIFFUSE_SCALE_MODE::D2D1_POINTDIFFUSE_SCALE_MODE_MULTI_SAMPLE_LINEAR">
    <summary>Uses 4 linear samples within a single pixel for good edge anti-aliasing. This mode is good for scaling down by small amounts on images with few pixels.</summary>
  </member>
  <member name="D2D1_POINTDIFFUSE_SCALE_MODE::D2D1_POINTDIFFUSE_SCALE_MODE_ANISOTROPIC">
    <summary>Uses anisotropic filtering to sample a pattern according to the transformed shape of the bitmap.</summary>
  </member>
  <member name="D2D1_POINTDIFFUSE_SCALE_MODE::D2D1_POINTDIFFUSE_SCALE_MODE_HIGH_QUALITY_CUBIC">
    <summary>Uses a variable size high quality cubic kernel to perform a pre-downscale the image if downscaling is involved in the transform matrix. Then uses the cubic interpolation mode for the final output.</summary>
  </member>
  <member name="ID2D1RenderTarget::BeginDraw">
    <summary>
      <para>Initiates drawing on this render target.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1/nf-d2d1-id2d1rendertarget-begindraw" /></para>
    </summary>
  </member>
  <member name="ID2D1ColorContext::GetColorSpace">
    <summary>
      <para>Gets the color space of the color context.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1_1/nf-d2d1_1-id2d1colorcontext-getcolorspace" /></para>
    </summary>
  </member>
  <member name="ID2D1SpriteBatch::GetSpriteCount">
    <summary>
      <para>Retrieves the number of sprites in this sprite batch.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1_3/nf-d2d1_3-id2d1spritebatch-getspritecount" /></para>
    </summary>
  </member>
  <member name="ID2D1RadialGradientBrush::GetGradientStopCollection">
    <summary>
      <para>Retrieves the ID2D1GradientStopCollection associated with this radial gradient brush object.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1/nf-d2d1-id2d1radialgradientbrush-getgradientstopcollection" /></para>
      <param name="gradientStopCollection">The  <a href="https://docs.microsoft.com/windows/win32/api/d2d1/nn-d2d1-id2d1gradientstopcollection">ID2D1GradientStopCollection</a> object associated with this linear gradient brush object. This parameter is passed uninitialized.</param>
    </summary>
  </member>
  <member name="D2D1_BLEND_OPERATION">
    <summary>
      <para>Specifies the blend operation on two color sources.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1effectauthor/ne-d2d1effectauthor-d2d1_blend_operation" /></para>
    </summary>
  </member>
  <member name="D2D1_BLEND_OPERATION::D2D1_BLEND_OPERATION_ADD">
    <summary>Add source 1 and source 2.</summary>
  </member>
  <member name="D2D1_BLEND_OPERATION::D2D1_BLEND_OPERATION_SUBTRACT">
    <summary>Subtract source 1 from source 2.</summary>
  </member>
  <member name="D2D1_BLEND_OPERATION::D2D1_BLEND_OPERATION_REV_SUBTRACT">
    <summary>Subtract source 2 from source 1.</summary>
  </member>
  <member name="D2D1_BLEND_OPERATION::D2D1_BLEND_OPERATION_MIN">
    <summary>Find the minimum of source 1 and source 2.</summary>
  </member>
  <member name="D2D1_BLEND_OPERATION::D2D1_BLEND_OPERATION_MAX">
    <summary>Find the maximum of source 1 and source 2.</summary>
  </member>
  <member name="D2D1_BLEND_OPERATION::D2D1_BLEND_OPERATION_FORCE_DWORD">
    <summary>A value guaranteed to be a DWORD.</summary>
  </member>
  <member name="ID2D1DrawingStateBlock">
    <summary>
      <para>Represents the drawing state of a render target:\_the antialiasing mode, transform, tags, and text-rendering options.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1/nn-d2d1-id2d1drawingstateblock" /></para>
    </summary>
  </member>
  <member name="D2D1Tan">
    <summary>
      <para>Returns the tangent of an angle.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1_1/nf-d2d1_1-d2d1tan" /></para>
      <param name="angle">The angle to calculate the tangent for.</param>
    </summary>
  </member>
  <member name="ID2D1BorderTransform::SetExtendModeX">
    <summary>
      <para>Sets the extend mode in the x direction.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1effectauthor/nf-d2d1effectauthor-id2d1bordertransform-setextendmodex" /></para>
      <param name="extendMode">The extend mode in the x direction.</param>
    </summary>
  </member>
  <member name="ID2D1Properties::GetPropertyIndex">
    <summary>
      <para>Gets the index corresponding to the given property name.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1_1/nf-d2d1_1-id2d1properties-getpropertyindex" /></para>
      <param name="name">The name of the property to retrieve.</param>
    </summary>
  </member>
  <member name="ID2D1SvgPaint::GetId">
    <summary>
      <para>Gets the element id which acts as the paint server. This id is used if the paint type is D2D1_SVG_PAINT_TYPE_URI.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1svg/nf-d2d1svg-id2d1svgpaint-getid" /></para>
      <param name="id">The element id which acts as the paint server.</param>
      <param name="idCount" />
    </summary>
  </member>
  <member name="ID2D1RenderTarget::RestoreDrawingState">
    <summary>
      <para>Sets the render target's drawing state to that of the specified ID2D1DrawingStateBlock.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1/nf-d2d1-id2d1rendertarget-restoredrawingstate" /></para>
      <param name="drawingStateBlock">The new drawing state of the render target.</param>
    </summary>
  </member>
  <member name="ID2D1DeviceContext1::CreateFilledGeometryRealization">
    <summary>
      <para>Creates a device-dependent representation of the fill of the geometry that can be subsequently rendered.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1_2/nf-d2d1_2-id2d1devicecontext1-createfilledgeometryrealization" /></para>
      <param name="geometry">The geometry to realize.</param>
      <param name="flatteningTolerance">The flattening tolerance to use when converting Beziers to line segments. This parameter shares the same units as the coordinates of the geometry.</param>
      <param name="geometryRealization">When this method returns, contains the address of a pointer to a new geometry realization object.</param>
    </summary>
  </member>
  <member name="ID2D1SourceTransform">
    <summary>
      <para>Represents a CPU-based rasterization stage in the transform pipeline graph.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1effectauthor/nn-d2d1effectauthor-id2d1sourcetransform" /></para>
    </summary>
  </member>
  <member name="ID2D1CommandSink5">
    <summary>
      <para>This interface performs all the same functions as the existing ID2D1CommandSink4 interface, plus it enables access to the BlendImage method.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1_3/nn-d2d1_3-id2d1commandsink5" /></para>
    </summary>
  </member>
  <member name="ID2D1GdiInteropRenderTarget">
    <summary>
      <para>Provides access to an device context that can accept GDI drawing commands.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1/nn-d2d1-id2d1gdiinteroprendertarget" /></para>
    </summary>
  </member>
  <member name="D2D1_RENDERING_CONTROLS">
    <summary>
      <para>Describes limitations to be applied to an imaging effect renderer.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1_1/ns-d2d1_1-d2d1_rendering_controls" /></para>
    </summary>
  </member>
  <member name="D2D1_RENDERING_CONTROLS::bufferPrecision">
    <summary>The buffer precision used by default if the buffer precision is not otherwise specified by the effect or by the transform.</summary>
  </member>
  <member name="D2D1_RENDERING_CONTROLS::tileSize">
    <summary>The tile allocation size to be used by the imaging effect renderer.</summary>
  </member>
  <member name="D2D1_INTERPOLATION_MODE">
    <summary>
      <para>This is used to specify the quality of image scaling with ID2D1DeviceContext::DrawImage and with the 2D affine transform effect.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1_1/ne-d2d1_1-d2d1_interpolation_mode" /></para>
    </summary>
  </member>
  <member name="D2D1_INTERPOLATION_MODE::D2D1_INTERPOLATION_MODE_NEAREST_NEIGHBOR">
    <summary>Samples the nearest single point and uses that exact color.  This mode uses less processing time, but outputs the lowest quality image.</summary>
  </member>
  <member name="D2D1_INTERPOLATION_MODE::D2D1_INTERPOLATION_MODE_LINEAR">
    <summary>Uses a four point sample and linear interpolation. This mode uses more processing time than the nearest neighbor mode, but outputs a higher quality image.</summary>
  </member>
  <member name="D2D1_INTERPOLATION_MODE::D2D1_INTERPOLATION_MODE_CUBIC">
    <summary>Uses a 16 sample cubic kernel for interpolation.  This mode uses the most processing time, but outputs a higher quality image.</summary>
  </member>
  <member name="D2D1_INTERPOLATION_MODE::D2D1_INTERPOLATION_MODE_MULTI_SAMPLE_LINEAR">
    <summary>Uses 4 linear samples within a single pixel for good edge anti-aliasing. This mode is good for scaling down by small amounts on images with few pixels.</summary>
  </member>
  <member name="D2D1_INTERPOLATION_MODE::D2D1_INTERPOLATION_MODE_ANISOTROPIC">
    <summary>Uses anisotropic filtering to sample a pattern according to the transformed shape of the bitmap.</summary>
  </member>
  <member name="D2D1_INTERPOLATION_MODE::D2D1_INTERPOLATION_MODE_HIGH_QUALITY_CUBIC">
    <summary>Uses a variable size high quality cubic kernel to perform a pre-downscale the image if downscaling is involved in the transform matrix. Then uses the cubic interpolation mode for the final output.</summary>
  </member>
  <member name="ID2D1ImageBrush::SetExtendModeY">
    <summary>
      <para>Sets the extend mode on the y-axis.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1_1/nf-d2d1_1-id2d1imagebrush-setextendmodey" /></para>
      <param name="extendModeY">The extend mode on the y-axis of the image.</param>
    </summary>
  </member>
  <member name="D2D1GetGradientMeshInteriorPointsFromCoonsPatch">
    <summary>
      <para>Returns the interior points for a gradient mesh patch based on the points defining a Coons patch.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1_3/nf-d2d1_3-d2d1getgradientmeshinteriorpointsfromcoonspatch" /></para>
      <param name="pPoint0">The coordinate-space location of the control point at position 0.</param>
      <param name="pPoint1">The coordinate-space location of the control point at position 1.</param>
      <param name="pPoint2">The coordinate-space location of the control point at position 2.</param>
      <param name="pPoint3">The coordinate-space location of the control point at position 3.</param>
      <param name="pPoint4">The coordinate-space location of the control point at position 4.</param>
      <param name="pPoint5">The coordinate-space location of the control point at position 5.</param>
      <param name="pPoint6">The coordinate-space location of the control point at position 6.</param>
      <param name="pPoint7">The coordinate-space location of the control point at position 7.</param>
      <param name="pPoint8">The coordinate-space location of the control point at position 8.</param>
      <param name="pPoint9">The coordinate-space location of the control point at position 9.</param>
      <param name="pPoint10">The coordinate-space location of the control point at position 10.</param>
      <param name="pPoint11">The coordinate-space location of the control point at position 11.</param>
      <param name="pTensorPoint11">Returns the interior point for the gradient mesh corresponding to point11 in the <a href="https://docs.microsoft.com/windows/desktop/api/d2d1_3/ns-d2d1_3-d2d1_gradient_mesh_patch">D2D1_GRADIENT_MESH_PATCH</a> structure.</param>
      <param name="pTensorPoint12">Returns the interior point for the gradient mesh corresponding to point12 in the <a href="https://docs.microsoft.com/windows/desktop/api/d2d1_3/ns-d2d1_3-d2d1_gradient_mesh_patch">D2D1_GRADIENT_MESH_PATCH</a> structure.</param>
      <param name="pTensorPoint21">Returns the interior point for the gradient mesh corresponding to point21 in the <a href="https://docs.microsoft.com/windows/desktop/api/d2d1_3/ns-d2d1_3-d2d1_gradient_mesh_patch">D2D1_GRADIENT_MESH_PATCH</a> structure.</param>
      <param name="pTensorPoint22">Returns the interior point for the gradient mesh corresponding to point22 in the <a href="https://docs.microsoft.com/windows/desktop/api/d2d1_3/ns-d2d1_3-d2d1_gradient_mesh_patch">D2D1_GRADIENT_MESH_PATCH</a> structure.</param>
    </summary>
  </member>
  <member name="ID2D1Factory1::CreatePathGeometry">
    <summary>
      <para>Creates an ID2D1PathGeometry1 object.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1_1/nf-d2d1_1-id2d1factory1-createpathgeometry" /></para>
      <param name="pathGeometry">When this method returns, contains the address of a pointer to the newly created path geometry.</param>
    </summary>
  </member>
  <member name="ID2D1RenderTarget::SetTextAntialiasMode">
    <summary>
      <para>Specifies the antialiasing mode to use for subsequent text and glyph drawing operations.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1/nf-d2d1-id2d1rendertarget-settextantialiasmode" /></para>
      <param name="textAntialiasMode">The antialiasing mode to use for subsequent text and glyph drawing operations.</param>
    </summary>
  </member>
  <member name="D2D1SinCos">
    <summary>
      <para>Returns the sine and cosine of an angle.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1_1/nf-d2d1_1-d2d1sincos" /></para>
      <param name="angle">The angle to calculate.</param>
      <param name="s">The sine of the angle.</param>
      <param name="c">The cosine of the angle.</param>
    </summary>
  </member>
  <member name="ID2D1BitmapBrush::SetExtendModeX">
    <summary>
      <para>Specifies how the brush horizontally tiles those areas that extend past its bitmap.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1/nf-d2d1-id2d1bitmapbrush-setextendmodex" /></para>
      <param name="extendModeX">A value that specifies how the brush horizontally tiles those areas that extend past its bitmap.</param>
    </summary>
  </member>
  <member name="ID2D1Factory::GetDesktopDpi">
    <summary>
      <para>Retrieves the current desktop dots per inch (DPI). To refresh this value, call ReloadSystemMetrics.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1/nf-d2d1-id2d1factory-getdesktopdpi" /></para>
      <param name="dpiX"> When this method returns, contains the horizontal DPI of the desktop. You must allocate storage for this parameter.</param>
      <param name="dpiY">When this method returns, contains the vertical DPI of the desktop. You must allocate storage for this parameter.</param>
    </summary>
  </member>
  <member name="ID2D1DCRenderTarget::BindDC">
    <summary>
      <para>Binds the render target to the device context to which it issues drawing commands.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1/nf-d2d1-id2d1dcrendertarget-binddc" /></para>
      <param name="hDC">The device context to which the render target issues drawing commands.</param>
      <param name="pSubRect">The dimensions of the handle to a device context (HDC) to which the render target is bound.</param>
    </summary>
  </member>
  <member name="D2D1_SCALE_INTERPOLATION_MODE">
    <summary>
      <para>The interpolation mode the Scale effect uses to scale the image. There are 6 scale modes that range in quality and speed.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1effects/ne-d2d1effects-d2d1_scale_interpolation_mode" /></para>
    </summary>
  </member>
  <member name="D2D1_SCALE_INTERPOLATION_MODE::D2D1_SCALE_INTERPOLATION_MODE_NEAREST_NEIGHBOR">
    <summary>Samples the nearest single point and uses that. This mode uses less processing time, but outputs the lowest quality image.</summary>
  </member>
  <member name="D2D1_SCALE_INTERPOLATION_MODE::D2D1_SCALE_INTERPOLATION_MODE_LINEAR">
    <summary>Uses a four point sample and linear interpolation. This mode uses more processing time than the nearest neighbor mode, but outputs a higher quality image.</summary>
  </member>
  <member name="D2D1_SCALE_INTERPOLATION_MODE::D2D1_SCALE_INTERPOLATION_MODE_CUBIC">
    <summary>Uses a 16 sample cubic kernel for interpolation. This mode uses the most processing time, but outputs a higher quality image.</summary>
  </member>
  <member name="D2D1_SCALE_INTERPOLATION_MODE::D2D1_SCALE_INTERPOLATION_MODE_MULTI_SAMPLE_LINEAR">
    <summary>Uses 4 linear samples within a single pixel for good edge anti-aliasing. This mode is good for scaling down by small amounts on images with few pixels.</summary>
  </member>
  <member name="D2D1_SCALE_INTERPOLATION_MODE::D2D1_SCALE_INTERPOLATION_MODE_ANISOTROPIC">
    <summary>Uses anisotropic filtering to sample a pattern according to the transformed shape of the bitmap.</summary>
  </member>
  <member name="D2D1_SCALE_INTERPOLATION_MODE::D2D1_SCALE_INTERPOLATION_MODE_HIGH_QUALITY_CUBIC">
    <summary>Uses a variable size high quality cubic kernel to perform a pre-downscale the image if downscaling is involved in the transform matrix. Then uses the cubic interpolation mode for the final output.</summary>
  </member>
  <member name="D2D1_BITMAPSOURCE_ORIENTATION">
    <summary>
      <para>Speficies whether a flip and/or rotation operation should be performed by the Bitmap source effect.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1effects/ne-d2d1effects-d2d1_bitmapsource_orientation" /></para>
    </summary>
  </member>
  <member name="D2D1_BITMAPSOURCE_ORIENTATION::D2D1_BITMAPSOURCE_ORIENTATION_DEFAULT">
    <summary>The effect doesn't change the orientation of the input.</summary>
  </member>
  <member name="D2D1_BITMAPSOURCE_ORIENTATION::D2D1_BITMAPSOURCE_ORIENTATION_FLIP_HORIZONTAL">
    <summary>Flips the image horizontally.</summary>
  </member>
  <member name="D2D1_BITMAPSOURCE_ORIENTATION::D2D1_BITMAPSOURCE_ORIENTATION_ROTATE_CLOCKWISE180">
    <summary>Rotates the image clockwise 180 degrees.</summary>
  </member>
  <member name="D2D1_BITMAPSOURCE_ORIENTATION::D2D1_BITMAPSOURCE_ORIENTATION_ROTATE_CLOCKWISE180_FLIP_HORIZONTAL">
    <summary>Rotates the image clockwise 180 degrees and flips it horizontally.</summary>
  </member>
  <member name="D2D1_BITMAPSOURCE_ORIENTATION::D2D1_BITMAPSOURCE_ORIENTATION_ROTATE_CLOCKWISE270_FLIP_HORIZONTAL">
    <summary>Rotates the image clockwise 270 degrees and flips it horizontally.</summary>
  </member>
  <member name="D2D1_BITMAPSOURCE_ORIENTATION::D2D1_BITMAPSOURCE_ORIENTATION_ROTATE_CLOCKWISE90">
    <summary>Rotates the image clockwise 90 degrees.</summary>
  </member>
  <member name="D2D1_BITMAPSOURCE_ORIENTATION::D2D1_BITMAPSOURCE_ORIENTATION_ROTATE_CLOCKWISE90_FLIP_HORIZONTAL">
    <summary>Rotates the image clockwise 90 degrees and flips it horizontally.</summary>
  </member>
  <member name="D2D1_BITMAPSOURCE_ORIENTATION::D2D1_BITMAPSOURCE_ORIENTATION_ROTATE_CLOCKWISE270">
    <summary>Rotates the image clockwise 270 degrees.</summary>
  </member>
  <member name="ID2D1GeometryGroup::GetFillMode">
    <summary>
      <para>Indicates how the intersecting areas of the geometries contained in this geometry group are combined.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1/nf-d2d1-id2d1geometrygroup-getfillmode" /></para>
    </summary>
  </member>
  <member name="ID2D1SvgElement::GetSpecifiedAttributeCount">
    <summary>
      <para>Returns the number of specified attributes on this element.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1svg/nf-d2d1svg-id2d1svgelement-getspecifiedattributecount" /></para>
    </summary>
  </member>
  <member name="D2D1_ANTIALIAS_MODE">
    <summary>
      <para>Specifies how the edges of nontext primitives are rendered.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1/ne-d2d1-d2d1_antialias_mode" /></para>
    </summary>
  </member>
  <member name="D2D1_ANTIALIAS_MODE::D2D1_ANTIALIAS_MODE_PER_PRIMITIVE">
    <summary>Edges are antialiased using the Direct2D per-primitive method of high-quality antialiasing.</summary>
  </member>
  <member name="D2D1_ANTIALIAS_MODE::D2D1_ANTIALIAS_MODE_ALIASED">
    <summary>Objects are aliased in most cases. Objects are antialiased only when they are drawn to a render target created by the <a href="https://docs.microsoft.com/windows/win32/api/d2d1/nf-d2d1-id2d1factory-createdxgisurfacerendertarget(idxgisurface_constd2d1_render_target_properties__id2d1rendertarget)">CreateDxgiSurfaceRenderTarget</a> method and  Direct3D multisampling has been enabled on the backing DirectX Graphics Infrastructure (DXGI) surface.</summary>
  </member>
  <member name="ID2D1LinearGradientBrush::SetEndPoint">
    <summary>
      <para>Sets the ending coordinates of the linear gradient in the brush's coordinate space.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1/nf-d2d1-id2d1lineargradientbrush-setendpoint" /></para>
      <param name="endPoint">The ending two-dimensional coordinates of the linear gradient, in the brush's coordinate space.</param>
    </summary>
  </member>
  <member name="ID2D1RenderTarget::FillMesh">
    <summary>
      <para>Paints the interior of the specified mesh.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1/nf-d2d1-id2d1rendertarget-fillmesh" /></para>
      <param name="mesh">The mesh to paint.</param>
      <param name="brush">The brush used to paint the mesh.</param>
    </summary>
  </member>
  <member name="D2D1_DPICOMPENSATION_PROP">
    <summary>
      <para>Identifiers for properties of the DPI compensation effect.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1effects/ne-d2d1effects-d2d1_dpicompensation_prop" /></para>
    </summary>
  </member>
  <member name="D2D1_DPICOMPENSATION_PROP::D2D1_DPICOMPENSATION_PROP_INTERPOLATION_MODE">
    <summary>The interpolation mode the effect uses to scale the image.
            

The type is <a href="https://docs.microsoft.com/windows/desktop/api/d2d1effects/ne-d2d1effects-d2d1_dpicompensation_interpolation_mode">D2D1_DPICOMPENSATION_INTERPOLATION_MODE</a>.

The default value is D2D1_DPICOMPENSATION_INTERPOLATION_MODE_LINEAR.</summary>
  </member>
  <member name="D2D1_DPICOMPENSATION_PROP::D2D1_DPICOMPENSATION_PROP_BORDER_MODE">
    <summary>The mode used to calculate the border of the image, soft or hard. See Border modes for more info.
            

The type is <a href="https://docs.microsoft.com/windows/desktop/api/d2d1effects/ne-d2d1effects-d2d1_border_mode">D2D1_BORDER_MODE</a>.

The default value is D2D1_BORDER_MODE_SOFT.</summary>
  </member>
  <member name="D2D1_DPICOMPENSATION_PROP::D2D1_DPICOMPENSATION_PROP_INPUT_DPI">
    <summary>The DPI of the input image.
            

The type is FLOAT.

The default value is 96.0f.</summary>
  </member>
  <member name="ID2D1Factory2::CreateDevice">
    <summary>
      <para>Creates an ID2D1Device1 object.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1_2/nf-d2d1_2-id2d1factory2-createdevice" /></para>
      <param name="dxgiDevice">The <a href="https://docs.microsoft.com/windows/desktop/api/dxgi/nn-dxgi-idxgidevice">IDXGIDevice</a> object used when creating  the <a href="https://docs.microsoft.com/windows/desktop/api/d2d1_2/nn-d2d1_2-id2d1device1">ID2D1Device1</a>.</param>
      <param name="d2dDevice1">The requested <a href="https://docs.microsoft.com/windows/desktop/api/d2d1_2/nn-d2d1_2-id2d1device1">ID2D1Device1</a> object.</param>
    </summary>
  </member>
  <member name="ID2D1DeviceContext::IsBufferPrecisionSupported">
    <summary>
      <para>Indicates whether the buffer precision is supported by the underlying Direct3D device.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1_1/nf-d2d1_1-id2d1devicecontext-isbufferprecisionsupported" /></para>
      <param name="bufferPrecision">The buffer precision to check.</param>
    </summary>
  </member>
  <member name="D2D1_TRANSFORMED_IMAGE_SOURCE_PROPERTIES">
    <summary>
      <para>Properties of a transformed image source.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1_3/ns-d2d1_3-d2d1_transformed_image_source_properties" /></para>
    </summary>
  </member>
  <member name="D2D1_TRANSFORMED_IMAGE_SOURCE_PROPERTIES::orientation">
    <summary>The orientation at which the image source is drawn.</summary>
  </member>
  <member name="D2D1_TRANSFORMED_IMAGE_SOURCE_PROPERTIES::scaleX">
    <summary>The horizontal scale factor at which the image source is drawn.</summary>
  </member>
  <member name="D2D1_TRANSFORMED_IMAGE_SOURCE_PROPERTIES::scaleY">
    <summary>The vertical scale factor at which the image source is drawn.</summary>
  </member>
  <member name="D2D1_TRANSFORMED_IMAGE_SOURCE_PROPERTIES::interpolationMode">
    <summary>The interpolation mode used when the image source is drawn.  This is ignored if the image source is drawn using the DrawImage method, or using an image brush.</summary>
  </member>
  <member name="D2D1_TRANSFORMED_IMAGE_SOURCE_PROPERTIES::options">
    <summary>Image sourc option flags.</summary>
  </member>
  <member name="ID2D1TessellationSink::AddTriangles">
    <summary>
      <para>Copies the specified triangles to the sink.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1/nf-d2d1-id2d1tessellationsink-addtriangles" /></para>
      <param name="triangles">An array of <a href="https://docs.microsoft.com/windows/win32/api/d2d1/ns-d2d1-d2d1_triangle">D2D1_TRIANGLE</a> structures that describe the triangles to add to the sink.</param>
      <param name="trianglesCount">The number of triangles to copy from the <i>triangles</i> array.</param>
    </summary>
  </member>
  <member name="D2D1_GEOMETRY_SIMPLIFICATION_OPTION">
    <summary>
      <para>Specifies how a geometry is simplified to an ID2D1SimplifiedGeometrySink.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1/ne-d2d1-d2d1_geometry_simplification_option" /></para>
    </summary>
  </member>
  <member name="D2D1_GEOMETRY_SIMPLIFICATION_OPTION::D2D1_GEOMETRY_SIMPLIFICATION_OPTION_CUBICS_AND_LINES">
    <summary>The output can contain cubic Bezier curves and line segments.</summary>
  </member>
  <member name="D2D1_GEOMETRY_SIMPLIFICATION_OPTION::D2D1_GEOMETRY_SIMPLIFICATION_OPTION_LINES">
    <summary>The output is flattened so that it contains only line segments.</summary>
  </member>
  <member name="ID2D1Bitmap::CopyFromMemory">
    <summary>
      <para>Copies the specified region from memory into the current bitmap.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1/nf-d2d1-id2d1bitmap-copyfrommemory" /></para>
      <param name="dstRect">In the current bitmap, the rectangle to which the region specified by <i>srcRect</i> is copied.</param>
      <param name="srcData">The data to copy.</param>
      <param name="pitch">The stride, or pitch, of the source bitmap stored in <i>srcData</i>. The stride is the byte count of a scanline (one row of pixels in memory). The stride can be computed from the following formula: pixel width * bytes per pixel + memory padding.</param>
    </summary>
  </member>
  <member name="D2D1_SVG_PATH_COMMAND">
    <summary>
      <para>Represents a path commmand. Each command may reference floats from the segment data. Commands ending in _ABSOLUTE interpret data as absolute coordinate. Commands ending in _RELATIVE interpret data as being relative to the previous point.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1svg/ne-d2d1svg-d2d1_svg_path_command" /></para>
    </summary>
  </member>
  <member name="D2D1_SVG_PATH_COMMAND::D2D1_SVG_PATH_COMMAND_CLOSE_PATH">
    <summary>Closes the current subpath. Uses no segment data.</summary>
  </member>
  <member name="D2D1_SVG_PATH_COMMAND::D2D1_SVG_PATH_COMMAND_MOVE_ABSOLUTE">
    <summary>Starts a new subpath at the coordinate (x y). Uses 2 floats of segment data.</summary>
  </member>
  <member name="D2D1_SVG_PATH_COMMAND::D2D1_SVG_PATH_COMMAND_MOVE_RELATIVE">
    <summary>Starts a new subpath at the coordinate (x y). Uses 2 floats of segment data.</summary>
  </member>
  <member name="D2D1_SVG_PATH_COMMAND::D2D1_SVG_PATH_COMMAND_LINE_ABSOLUTE">
    <summary>Draws a line to the coordinate (x y). Uses 2 floats of segment data.</summary>
  </member>
  <member name="D2D1_SVG_PATH_COMMAND::D2D1_SVG_PATH_COMMAND_LINE_RELATIVE">
    <summary>Draws a line to the coordinate (x y). Uses 2 floats of segment data.</summary>
  </member>
  <member name="D2D1_SVG_PATH_COMMAND::D2D1_SVG_PATH_COMMAND_CUBIC_ABSOLUTE">
    <summary>Draws a cubic Bezier curve (x1 y1 x2 y2 x y). The curve ends at (x, y) and is defined by the two control points (x1, y1) and (x2, y2). Uses 6 floats of segment data.</summary>
  </member>
  <member name="D2D1_SVG_PATH_COMMAND::D2D1_SVG_PATH_COMMAND_CUBIC_RELATIVE">
    <summary>Draws a cubic Bezier curve (x1 y1 x2 y2 x y). The curve ends at (x, y) and is defined by the two control points (x1, y1) and (x2, y2). Uses 6 floats of segment data.</summary>
  </member>
  <member name="D2D1_SVG_PATH_COMMAND::D2D1_SVG_PATH_COMMAND_QUADRADIC_ABSOLUTE">
    <summary>Draws a quadratic Bezier curve (x1 y1 x y). The curve ends at (x, y) and is defined by the control point (x1 y1). Uses 4 floats of segment data.</summary>
  </member>
  <member name="D2D1_SVG_PATH_COMMAND::D2D1_SVG_PATH_COMMAND_QUADRADIC_RELATIVE">
    <summary>Draws a quadratic Bezier curve (x1 y1 x y). The curve ends at (x, y) and is defined by the control point (x1 y1). Uses 4 floats of segment data.</summary>
  </member>
  <member name="D2D1_SVG_PATH_COMMAND::D2D1_SVG_PATH_COMMAND_ARC_ABSOLUTE">
    <summary>Draws an elliptical arc (rx ry x-axis-rotation large-arc-flag sweep-flag x y). The curve ends at (x, y) and is defined by the arc parameters. The two flags are
          considered set if their values are non-zero. Uses 7 floats of segment data.</summary>
  </member>
  <member name="D2D1_SVG_PATH_COMMAND::D2D1_SVG_PATH_COMMAND_ARC_RELATIVE">
    <summary>Draws an elliptical arc (rx ry x-axis-rotation large-arc-flag sweep-flag x y). The curve ends at (x, y) and is defined by the arc parameters. The two flags are
          considered set if their values are non-zero. Uses 7 floats of segment data.</summary>
  </member>
  <member name="D2D1_SVG_PATH_COMMAND::D2D1_SVG_PATH_COMMAND_HORIZONTAL_ABSOLUTE">
    <summary>Draws a horizontal line to the coordinate (x). Uses 1 float of segment data.</summary>
  </member>
  <member name="D2D1_SVG_PATH_COMMAND::D2D1_SVG_PATH_COMMAND_HORIZONTAL_RELATIVE">
    <summary>Draws a horizontal line to the coordinate (x). Uses 1 float of segment data.</summary>
  </member>
  <member name="D2D1_SVG_PATH_COMMAND::D2D1_SVG_PATH_COMMAND_VERTICAL_ABSOLUTE">
    <summary>Draws a vertical line to the coordinate (y). Uses 1 float of segment data.</summary>
  </member>
  <member name="D2D1_SVG_PATH_COMMAND::D2D1_SVG_PATH_COMMAND_VERTICAL_RELATIVE">
    <summary>Draws a vertical line to the coordinate (y). Uses 1 float of segment data.</summary>
  </member>
  <member name="D2D1_SVG_PATH_COMMAND::D2D1_SVG_PATH_COMMAND_CUBIC_SMOOTH_ABSOLUTE">
    <summary>Draws a smooth cubic Bezier curve (x2 y2 x y). The curve ends at (x, y) and is defined by the control point (x2, y2). Uses 4 floats of segment data.</summary>
  </member>
  <member name="D2D1_SVG_PATH_COMMAND::D2D1_SVG_PATH_COMMAND_CUBIC_SMOOTH_RELATIVE">
    <summary>Draws a smooth cubic Bezier curve (x2 y2 x y). The curve ends at (x, y) and is defined by the control point (x2, y2). Uses 4 floats of segment data.</summary>
  </member>
  <member name="D2D1_SVG_PATH_COMMAND::D2D1_SVG_PATH_COMMAND_QUADRADIC_SMOOTH_ABSOLUTE">
    <summary>Draws a smooth quadratic Bezier curve ending at (x, y). Uses 2 floats of segment data.</summary>
  </member>
  <member name="D2D1_SVG_PATH_COMMAND::D2D1_SVG_PATH_COMMAND_QUADRADIC_SMOOTH_RELATIVE">
    <summary>Draws a smooth quadratic Bezier curve ending at (x, y). Uses 2 floats of segment data.</summary>
  </member>
  <member name="D2D1_FIGURE_END">
    <summary>
      <para>Indicates whether a specific ID2D1SimplifiedGeometrySink figure is open or closed.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1/ne-d2d1-d2d1_figure_end" /></para>
    </summary>
  </member>
  <member name="D2D1_FIGURE_END::D2D1_FIGURE_END_OPEN">
    <summary>The figure is open.</summary>
  </member>
  <member name="D2D1_FIGURE_END::D2D1_FIGURE_END_CLOSED">
    <summary>The figure is closed.</summary>
  </member>
  <member name="ID2D1SpriteBatch::AddSprites">
    <summary>
      <para>Adds the given sprites to the end of this sprite batch.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1_3/nf-d2d1_3-id2d1spritebatch-addsprites" /></para>
      <param name="spriteCount">The number of sprites to be added. This determines how many strides into each given array Direct2D will read.</param>
      <param name="destinationRectangles">A pointer to an array containing the destination rectangles specifying where to draw the sprites on the destination device context.</param>
      <param name="sourceRectangles">A pointer to an array containing the source rectangles specifying the regions of the source bitmap to draw as sprites.
          Direct2D will use the entire source bitmap for sprites that are assigned a null value or the InfiniteRectU. 
          If this parameter is omitted entirely or set to a null value, then Direct2D will use the entire source bitmap for all the added sprites.</param>
      <param name="colors">A pointer to an array containing the colors to apply to each sprite. 
          The output color is the result of component-wise multiplication of the source bitmap color and the provided color. 
          The output color is not clamped.

          

Direct2D will not change the color of sprites that are assigned a null value. If this parameter is omitted entirely or set to a null value, 
          then Direct2D will not change the color of any of the added sprites.</param>
      <param name="transforms">A pointer to an array containing the transforms to apply to each sprite’s destination rectangle.
            

Direct2D will not transform the destination rectangle of any sprites that are assigned a null value. 
            If this parameter is omitted entirely or set to a null value, 
            then Direct2D will not transform the destination rectangle of any of the added sprites.</param>
      <param name="destinationRectanglesStride">Specifies the distance, in bytes, between each rectangle in the destinationRectangles array. 
          If you provide a stride of 0, then the same destination rectangle will be used for each added sprite.</param>
      <param name="sourceRectanglesStride">Specifies the distance, in bytes, between each rectangle in the sourceRectangles array (if that array is given). 
          If you provide a stride of 0, then the same source rectangle will be used for each added sprite.</param>
      <param name="colorsStride">Specifies the distance, in bytes, between each color in the colors array (if that array is given). 
          If you provide a stride of 0, then the same color will be used for each added sprite.</param>
      <param name="transformsStride">Specifies the distance, in bytes, between each transform in the transforms array (if that array is given). 
          If you provide a stride of 0, then the same transform will be used for each added sprite.</param>
    </summary>
  </member>
  <member name="ID2D1Device6">
    <summary>
      <para>Represents a resource domain whose objects and device contexts can be used together. This interface performs all the same functions as the ID2D1Device5 interface, plus it enables the creation of ID2D1DeviceContext6 objects.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1_3/nn-d2d1_3-id2d1device6" /></para>
    </summary>
  </member>
  <member name="ID2D1InkStyle::GetNibShape">
    <summary>
      <para>Retrieves the pre-transform nib shape for this style.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1_3/nf-d2d1_3-id2d1inkstyle-getnibshape" /></para>
    </summary>
  </member>
  <member name="D2D1_INK_BEZIER_SEGMENT">
    <summary>
      <para>Represents a Bezier segment to be used in the creation of an ID2D1Ink object. This structure differs from D2D1_BEZIER_SEGMENT in that it is composed of D2D1_INK_POINTs, which contain a radius in addition to x- and y-coordinates.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1_3/ns-d2d1_3-d2d1_ink_bezier_segment" /></para>
    </summary>
  </member>
  <member name="D2D1_INK_BEZIER_SEGMENT::point1">
    <summary>The first control point for the Bezier segment.</summary>
  </member>
  <member name="D2D1_INK_BEZIER_SEGMENT::point2">
    <summary>The second control point for the Bezier segment.</summary>
  </member>
  <member name="D2D1_INK_BEZIER_SEGMENT::point3">
    <summary>The end point for the Bezier segment.</summary>
  </member>
  <member name="ID2D1RenderTarget::CreateSharedBitmap">
    <summary>
      <para>Creates an ID2D1Bitmap whose data is shared with another resource.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1/nf-d2d1-id2d1rendertarget-createsharedbitmap" /></para>
      <param name="riid">The interface ID of the object supplying the source data.</param>
      <param name="data">An <a href="https://docs.microsoft.com/windows/win32/api/d2d1/nn-d2d1-id2d1bitmap">ID2D1Bitmap</a>, <a href="https://docs.microsoft.com/windows/win32/api/dxgi/nn-dxgi-idxgisurface">IDXGISurface</a>, or an <a href="https://docs.microsoft.com/windows/win32/api/wincodec/nn-wincodec-iwicbitmaplock">IWICBitmapLock</a> that contains the data to share with the new <b>ID2D1Bitmap</b>. For more information, see the Remarks section.</param>
      <param name="bitmapProperties">The pixel format  and DPI of the bitmap to create . The <a href="https://docs.microsoft.com/windows/win32/api/dxgiformat/ne-dxgiformat-dxgi_format">DXGI_FORMAT</a> portion of the pixel format  must match the <a href="https://docs.microsoft.com/windows/win32/api/dxgiformat/ne-dxgiformat-dxgi_format">DXGI_FORMAT</a> of <i>data</i> or the method will fail, but the alpha modes don't have to match. To prevent a  mismatch, you can pass <b>NULL</b> or the value obtained from the <a href="https://docs.microsoft.com/windows/win32/api/d2d1helper/nf-d2d1helper-pixelformat">D2D1::PixelFormat</a> helper function. The DPI settings do not have to match those of <i>data</i>. If both <i>dpiX</i> and <i>dpiY</i> are  0.0f, the DPI of the render target is used.</param>
      <param name="bitmap">When this method returns, contains the address of a pointer to the new bitmap. This parameter is passed uninitialized.</param>
    </summary>
  </member>
  <member name="ID2D1SvgDocument::CreateStrokeDashArray">
    <summary>
      <para>Creates a dash array object which can be used to set the stroke-dasharray property.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1svg/nf-d2d1svg-id2d1svgdocument-createstrokedasharray" /></para>
      <param name="dashes">An array of dashes.</param>
      <param name="dashesCount">Size of the array in th dashes argument.</param>
      <param name="strokeDashArray">The created <a href="https://docs.microsoft.com/windows/desktop/api/d2d1svg/nn-d2d1svg-id2d1svgstrokedasharray">ID2D1SvgStrokeDashArray</a>.</param>
    </summary>
  </member>
  <member name="ID2D1SvgElement::SetTextValue">
    <summary>
      <para>Sets the value of a text content element.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1svg/nf-d2d1svg-id2d1svgelement-settextvalue" /></para>
      <param name="name">The new value of the text content element.</param>
      <param name="nameCount" />
    </summary>
  </member>
  <member name="D2D1_BITMAP_PROPERTIES1">
    <summary>
      <para>This structure allows a ID2D1Bitmap1 to be created with bitmap options and color context information available.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1_1/ns-d2d1_1-d2d1_bitmap_properties1" /></para>
    </summary>
  </member>
  <member name="D2D1_BITMAP_PROPERTIES1::pixelFormat">
    <summary>The DXGI format and alpha mode to create the bitmap with.</summary>
  </member>
  <member name="D2D1_BITMAP_PROPERTIES1::dpiX">
    <summary>The bitmap dpi in the x direction.</summary>
  </member>
  <member name="D2D1_BITMAP_PROPERTIES1::dpiY">
    <summary>The bitmap dpi in the y direction.</summary>
  </member>
  <member name="D2D1_BITMAP_PROPERTIES1::bitmapOptions">
    <summary>The special creation options of the bitmap.</summary>
  </member>
  <member name="D2D1_BITMAP_PROPERTIES1::colorContext">
    <summary>The optionally specified color context information.</summary>
  </member>
  <member name="ID2D1SpriteBatch::Clear">
    <summary>
      <para>Removes all sprites from this sprite batch.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1_3/nf-d2d1_3-id2d1spritebatch-clear" /></para>
    </summary>
  </member>
  <member name="ID2D1DeviceContext2">
    <summary>
      <para>This interface performs all the same functions as the ID2D1DeviceContext1 interface, plus it enables functionality such as ink rendering, gradient mesh rendering, and improved image loading.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1_3/nn-d2d1_3-id2d1devicecontext2" /></para>
    </summary>
  </member>
  <member name="ID2D1RenderTarget::GetSize">
    <summary>
      <para>Returns the size of the render target in device-independent pixels.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1/nf-d2d1-id2d1rendertarget-getsize" /></para>
    </summary>
  </member>
  <member name="D2D1_SEPIA_PROP">
    <summary>
      <para>Identifiers for properties of the Sepia effect.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1effects_2/ne-d2d1effects_2-d2d1_sepia_prop" /></para>
    </summary>
  </member>
  <member name="D2D1_SEPIA_PROP::D2D1_SEPIA_PROP_INTENSITY">
    <summary>The D2D1_SEPIA_PROP_INTENSITY property is a float value indicating the intesity of the sepia effect. The allowed range is 0.0 to 1.0.  The default value is 0.5.</summary>
  </member>
  <member name="D2D1_SEPIA_PROP::D2D1_SEPIA_PROP_ALPHA_MODE">
    <summary>The D2D1_SEPIA_PROP_ALPHA_MODE property is a <a href="https://docs.microsoft.com/windows/desktop/api/dcommon/ne-dcommon-d2d1_alpha_mode">D2D1_ALPHA_MODE</a> enumeration value indicating the alpha mode of the input file.
          See the About Alpha Modes section of the <a href="https://docs.microsoft.com/windows/desktop/Direct2D/supported-pixel-formats-and-alpha-modes">Supported Pixel Formats and Alpha Modes</a> topic for additional information..  
          The default value is D2D1_ALPHA_MODE_PREMULTIPLIED.</summary>
  </member>
  <member name="ID2D1CommandSink::PushAxisAlignedClip">
    <summary>
      <para>Pushes a clipping rectangle onto the clip and layer stack.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1_1/nf-d2d1_1-id2d1commandsink-pushaxisalignedclip" /></para>
      <param name="clipRect">The rectangle that defines the clip.</param>
      <param name="antialiasMode">The antialias mode for the clip.</param>
    </summary>
  </member>
  <member name="ID2D1DeviceContext::CreateCommandList">
    <summary>
      <para>Creates a ID2D1CommandList object.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1_1/nf-d2d1_1-id2d1devicecontext-createcommandlist" /></para>
      <param name="commandList">When this method returns, contains the address of a pointer to a command list.</param>
    </summary>
  </member>
  <member name="ID2D1Factory2">
    <summary>
      <para>Creates Direct2D resources.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1_2/nn-d2d1_2-id2d1factory2" /></para>
    </summary>
  </member>
  <member name="ID2D1RectangleGeometry">
    <summary>
      <para>Describes a two-dimensional rectangle.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1/nn-d2d1-id2d1rectanglegeometry" /></para>
    </summary>
  </member>
  <member name="ID2D1CommandSink::DrawGlyphRun">
    <summary>
      <para>Indicates the glyphs to be drawn.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1_1/nf-d2d1_1-id2d1commandsink-drawglyphrun" /></para>
      <param name="baselineOrigin">The upper left corner of the baseline.</param>
      <param name="glyphRun">The glyphs to render.</param>
      <param name="glyphRunDescription">Additional non-rendering information about the glyphs.</param>
      <param name="foregroundBrush">The brush used to fill the glyphs.</param>
      <param name="measuringMode">The measuring mode to apply to the glyphs.</param>
    </summary>
  </member>
  <member name="ID2D1ColorContext::GetProfile">
    <summary>
      <para>Gets the color profile bytes for an ID2D1ColorContext.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1_1/nf-d2d1_1-id2d1colorcontext-getprofile" /></para>
      <param name="profile">When this method returns, contains the color profile.</param>
      <param name="profileSize">The size of the <i>profile</i> buffer.</param>
    </summary>
  </member>
  <member name="D2D1_FEATURE_DATA_D3D10_X_HARDWARE_OPTIONS">
    <summary>
      <para>Describes compute shader support, which is an option on D3D10 feature level.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1effectauthor/ns-d2d1effectauthor-d2d1_feature_data_d3d10_x_hardware_options" /></para>
    </summary>
  </member>
  <member name="D2D1_FEATURE_DATA_D3D10_X_HARDWARE_OPTIONS::computeShaders_Plus_RawAndStructuredBuffers_Via_Shader_4_x">
    <summary>Shader model 4 compute shaders are supported.</summary>
  </member>
  <member name="D2D1_HUETORGB_PROP">
    <summary>
      <para>Identifiers for properties of the Hue to RGB effect.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1effects_2/ne-d2d1effects_2-d2d1_huetorgb_prop" /></para>
    </summary>
  </member>
  <member name="D2D1_HUETORGB_PROP::D2D1_HUETORGB_PROP_INPUT_COLOR_SPACE">
    <summary>The D2D1_HUETORGB_PROP_INPUT_COLOR_SPACE property is an enumeration value which indicates which color space to convert from. 
          The default value for the property is D2D1_HUETORGB_INPUT_COLOR_SPACE_HUE_SATURATION_VALUE.
          See <a href="https://docs.microsoft.com/windows/desktop/api/d2d1effects_2/ne-d2d1effects_2-d2d1_huetorgb_input_color_space">D2D1_HUETORGB_INPUT_COLOR_SPACE</a> enumeration for more information.</summary>
  </member>
  <member name="ID2D1EffectImpl::Initialize">
    <summary>
      <para>The effect can use this method to do one time initialization tasks.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1effectauthor/nf-d2d1effectauthor-id2d1effectimpl-initialize" /></para>
      <param name="effectContext">An internal context interface that creates and returns effect author–centric types.</param>
      <param name="transformGraph">The effect can
    populate the transform graph with a topology and can update it later.</param>
    </summary>
  </member>
  <member name="ID2D1RenderTarget::Flush">
    <summary>
      <para>Executes all pending drawing commands.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1/nf-d2d1-id2d1rendertarget-flush" /></para>
      <param name="tag1">When this method returns, contains the tag for drawing operations that caused errors or 0 if there were no errors. This parameter is passed uninitialized.</param>
      <param name="tag2">When this method returns, contains the tag for drawing operations that caused errors or 0 if there were no errors. This parameter is passed uninitialized.</param>
    </summary>
  </member>
  <member name="ID2D1CommandSink1::SetPrimitiveBlend1">
    <summary>
      <para>Sets a new primitive blend mode.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1_2/nf-d2d1_2-id2d1commandsink1-setprimitiveblend1" /></para>
      <param name="primitiveBlend">The primitive blend that will apply to subsequent primitives.</param>
    </summary>
  </member>
  <member name="ID2D1GdiMetafile">
    <summary>
      <para>A Direct2D resource that wraps a WMF, EMF, or EMF+ metafile.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1_1/nn-d2d1_1-id2d1gdimetafile" /></para>
    </summary>
  </member>
  <member name="ID2D1SvgElement::GetLastChild">
    <summary>
      <para>Gets the last child of this element.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1svg/nf-d2d1svg-id2d1svgelement-getlastchild" /></para>
      <param name="child">Outputs the last child of this element.</param>
    </summary>
  </member>
  <member name="D2D1_2DAFFINETRANSFORM_PROP">
    <summary>
      <para>Identifiers for properties of the 2D affine transform effect.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1effects/ne-d2d1effects-d2d1_2daffinetransform_prop" /></para>
    </summary>
  </member>
  <member name="D2D1_2DAFFINETRANSFORM_PROP::D2D1_2DAFFINETRANSFORM_PROP_INTERPOLATION_MODE">
    <summary>The interpolation mode used to scale the image. There are 6 scale modes that range in quality and speed.
            

Type is <a href="https://docs.microsoft.com/windows/desktop/api/d2d1effects/ne-d2d1effects-d2d1_2daffinetransform_interpolation_mode">D2D1_2DAFFINETRANSFORM_INTERPOLATION_MODE</a>.

Default value is D2D1_2DAFFINETRANSFORM_INTERPOLATION_MODE_LINEAR.</summary>
  </member>
  <member name="D2D1_2DAFFINETRANSFORM_PROP::D2D1_2DAFFINETRANSFORM_PROP_BORDER_MODE">
    <summary>The mode used to calculate the border of the image, soft or hard.
            

Type is <a href="https://docs.microsoft.com/windows/desktop/api/d2d1effects/ne-d2d1effects-d2d1_border_mode">D2D1_BORDER_MODE</a>.

Default value is D2D1_BORDER_MODE_SOFT.</summary>
  </member>
  <member name="D2D1_2DAFFINETRANSFORM_PROP::D2D1_2DAFFINETRANSFORM_PROP_TRANSFORM_MATRIX">
    <summary>The 3x2 matrix to transform the image using the Direct2D matrix transform.
            

Type is <a href="https://docs.microsoft.com/windows/desktop/Direct2D/d2d1-matrix-3x2-f">D2D1_MATRIX_3X2_F</a>.

Default value is Matrix3x2F::Identity().</summary>
  </member>
  <member name="D2D1_2DAFFINETRANSFORM_PROP::D2D1_2DAFFINETRANSFORM_PROP_SHARPNESS">
    <summary>In the high quality cubic interpolation mode, the sharpness level of the scaling filter as a float between 0 and 1. The values are unitless. You can use sharpness to adjust the quality of an image when you scale the image.
            The sharpness factor affects the shape of the kernel. The higher the sharpness factor, the smaller the kernel.
            

<div class="alert"><b>Note</b>  This property affects only the high quality cubic interpolation mode.</div>
<div> </div>
Type is FLOAT.

Default value is 1.0f.</summary>
  </member>
  <member name="ID2D1DeviceContext4::DrawSvgGlyphRun">
    <summary>
      <para>Draws a color glyph run that has the format of DWRITE_GLYPH_IMAGE_FORMATS_SVG.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1_3/nf-d2d1_3-id2d1devicecontext4-drawsvgglyphrun" /></para>
      <param name="baselineOrigin">The origin of the baseline for the glyph run.</param>
      <param name="glyphRun">The glyphs to render.</param>
      <param name="defaultFillBrush">The brush used to paint the specified glyphs.</param>
      <param name="svgGlyphStyle">Values for context-fill, context-stroke, and context-value that are used when rendering SVG glyphs.</param>
      <param name="colorPaletteIndex">The index used to select a color palette within a color font. Note that this not the same as the paletteIndex in the
          DWRITE_COLOR_GLYPH_RUN struct, which is not relevant for SVG glyphs.</param>
      <param name="measuringMode">Indicates the measuring method used for text layout.</param>
    </summary>
  </member>
  <member name="ID2D1GradientStopCollection">
    <summary>
      <para>Represents an collection of D2D1_GRADIENT_STOP objects for linear and radial gradient brushes.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1/nn-d2d1-id2d1gradientstopcollection" /></para>
    </summary>
  </member>
  <member name="D2D1_BITMAPSOURCE_ALPHA_MODE">
    <summary>
      <para>Specifies the alpha mode of the output of the Bitmap source effect.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1effects/ne-d2d1effects-d2d1_bitmapsource_alpha_mode" /></para>
    </summary>
  </member>
  <member name="D2D1_BITMAPSOURCE_ALPHA_MODE::D2D1_BITMAPSOURCE_ALPHA_MODE_PREMULTIPLIED">
    <summary>The effect output uses premultiplied alpha.</summary>
  </member>
  <member name="D2D1_BITMAPSOURCE_ALPHA_MODE::D2D1_BITMAPSOURCE_ALPHA_MODE_STRAIGHT">
    <summary>The effect output uses straight alpha.</summary>
  </member>
  <member name="ID2D1StrokeStyle1::GetStrokeTransformType">
    <summary>
      <para>Gets the stroke transform type.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1_1/nf-d2d1_1-id2d1strokestyle1-getstroketransformtype" /></para>
    </summary>
  </member>
  <member name="ID2D1RenderTarget::GetPixelSize">
    <summary>
      <para>Returns the size of the render target in device pixels.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1/nf-d2d1-id2d1rendertarget-getpixelsize" /></para>
    </summary>
  </member>
  <member name="ID2D1SvgGlyphStyle::GetStroke">
    <summary>
      <para>Returns the requested stroke parameters.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1_3/nf-d2d1_3-id2d1svgglyphstyle-getstroke" /></para>
      <param name="brush">Describes how the stroke is painted.</param>
      <param name="strokeWidth">The 'context-value' for the 'stroke-width' property.</param>
      <param name="dashes">The 'context-value' for the 'stroke-dasharray'
          property.</param>
      <param name="dashesCount">The the number of dashes in the dash array.</param>
      <param name="dashOffset">The 'context-value' for the 'stroke-dashoffset' property.</param>
    </summary>
  </member>
  <member name="D2D1CreateFactory">
    <summary>
      <para>Creates a factory object that can be used to create Direct2D resources.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1/nf-d2d1-d2d1createfactory" /></para>
      <param name="factoryType">The threading model of the factory and the resources it creates.</param>
      <param name="riid">A reference to the IID of <a href="https://docs.microsoft.com/windows/win32/api/d2d1/nn-d2d1-id2d1factory">ID2D1Factory</a> that is obtained by using <c>__uuidof(ID2D1Factory)</c>.</param>
      <param name="pFactoryOptions">The level of detail provided to the debugging layer.</param>
      <param name="ppIFactory">When this method returns, contains the address to a pointer to the new factory.</param>
    </summary>
  </member>
  <member name="D2D1_CONVOLVEMATRIX_PROP">
    <summary>
      <para>Identifiers for properties of the Convolve matrix effect.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1effects/ne-d2d1effects-d2d1_convolvematrix_prop" /></para>
    </summary>
  </member>
  <member name="D2D1_CONVOLVEMATRIX_PROP::D2D1_CONVOLVEMATRIX_PROP_KERNEL_UNIT_LENGTH">
    <summary>The size of one unit in the kernel. The units are in (DIPs/kernel unit), where a kernel unit is the size of the element in the convolution kernel. 
          A value of 1 (DIP/kernel unit) corresponds to one pixel in a image at 96 DPI.
          

The type is FLOAT.

The default value is 1.0f.</summary>
  </member>
  <member name="D2D1_CONVOLVEMATRIX_PROP::D2D1_CONVOLVEMATRIX_PROP_SCALE_MODE">
    <summary>The interpolation mode the effect uses to scale the image to the corresponding kernel unit length. There are six scale modes that range in quality and speed.
          

The type is <a href="https://docs.microsoft.com/windows/desktop/api/d2d1effects/ne-d2d1effects-d2d1_convolvematrix_scale_mode">D2D1_CONVOLVEMATRIX_SCALE_MODE</a>.

The default value is D2D1_CONVOLVEMATRIX_SCALE_MODE_LINEAR.</summary>
  </member>
  <member name="D2D1_CONVOLVEMATRIX_PROP::D2D1_CONVOLVEMATRIX_PROP_KERNEL_SIZE_X">
    <summary>The width of the kernel matrix. The units are specified in kernel units. 
          

The type is UINT32.

The default value is 3.</summary>
  </member>
  <member name="D2D1_CONVOLVEMATRIX_PROP::D2D1_CONVOLVEMATRIX_PROP_KERNEL_SIZE_Y">
    <summary>The height of the kernel matrix. The units are specified in kernel units. 
          

The type is UINT32.

The default value is 3.</summary>
  </member>
  <member name="D2D1_CONVOLVEMATRIX_PROP::D2D1_CONVOLVEMATRIX_PROP_KERNEL_MATRIX">
    <summary>The kernel matrix to be applied to the image. The kernel elements aren't bounded and are specified as floats.
          

The first set of KernelSizeX numbers in the FLOAT[] corresponds to the first row in the kernel.
          The second set of KernelSizeX numbers correspond to the second row, and so on up to KernelSizeY rows.

The type is FLOAT[].

The default value is {0.0f, 0.0f, 0.0f, 0.0f, 1.0f, 0.0f, 0.0f, 0.0f, 0.0f}.</summary>
  </member>
  <member name="D2D1_CONVOLVEMATRIX_PROP::D2D1_CONVOLVEMATRIX_PROP_DIVISOR">
    <summary>The kernel matrix is applied to a pixel and then the result is divided by this value. 
          

0 behaves as a value of float epsilon.

The type is FLOAT.

The default value is 1.0f.</summary>
  </member>
  <member name="D2D1_CONVOLVEMATRIX_PROP::D2D1_CONVOLVEMATRIX_PROP_BIAS">
    <summary>The effect applies the kernel matrix, the divisor, and then the bias is added to the result. The bias is unbounded and unitless. 
          

The type is FLOAT.

The default value is 0.0f.</summary>
  </member>
  <member name="D2D1_CONVOLVEMATRIX_PROP::D2D1_CONVOLVEMATRIX_PROP_KERNEL_OFFSET">
    <summary>Shifts the convolution kernel from a centered position on the output pixel to a position you specify left/right and up/down. The offset is defined in kernel units.
          

With some offsets and kernel sizes, the convolution kernel’s samples won't land on a pixel image center. The pixel values for the kernel sample are computed by bilinear interpolation.

The type is <a href="https://docs.microsoft.com/windows/desktop/api/dcommon/ns-dcommon-d2d_vector_2f">D2D1_VECTOR_2F</a>.

The default value is {0.0f, 0.0f}.</summary>
  </member>
  <member name="D2D1_CONVOLVEMATRIX_PROP::D2D1_CONVOLVEMATRIX_PROP_PRESERVE_ALPHA">
    <summary>Specifies whether the convolution kernel is applied to the alpha channel or only the color channels.
          

If you set this to TRUE the convolution kernel is applied only to the color channels.

If you set this to FALSE the convolution kernel is applied to all channels.

The type is BOOL.

The default value is FALSE.</summary>
  </member>
  <member name="D2D1_CONVOLVEMATRIX_PROP::D2D1_CONVOLVEMATRIX_PROP_BORDER_MODE">
    <summary>The mode used to calculate the border of the image, soft or hard.
          

The type is <a href="https://docs.microsoft.com/windows/desktop/api/d2d1effects/ne-d2d1effects-d2d1_border_mode">D2D1_BORDER_MODE</a>.

The default value is D2D1_BORDER_MODE_SOFT.</summary>
  </member>
  <member name="D2D1_CONVOLVEMATRIX_PROP::D2D1_CONVOLVEMATRIX_PROP_CLAMP_OUTPUT">
    <summary>Whether the effect clamps color values to between 0 and 1 before the effect passes the values to the next effect in the graph. The effect clamps the values before it premultiplies the alpha.
          

If you set this to TRUE the effect will clamp the values. If you set this to FALSE, the effect will not clamp the color values, 
          but other effects and the output surface may clamp the values if they are not of high enough precision.

The type is BOOL.

The default value is FALSE.</summary>
  </member>
  <member name="ID2D1DeviceContext2::CreateLookupTable3D">
    <summary>
      <para>Creates a 3D lookup table for mapping a 3-channel input to a 3-channel output. The table data must be provided in 4-channel format.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1_3/nf-d2d1_3-id2d1devicecontext2-createlookuptable3d" /></para>
      <param name="precision">Precision of the input lookup table data.</param>
      <param name="extents">Number of lookup table elements per dimension (X, Y, Z).</param>
      <param name="data">Buffer holding the lookup table data.</param>
      <param name="dataCount">Size of the lookup table data buffer.</param>
      <param name="strides">An array containing two values.  The first value is the size in bytes from one row (X dimension) of LUT data to the next.  
          The second value is the size in bytes from one LUT data plane (X and Y dimensions) to the next.</param>
      <param name="lookupTable">Receives the new lookup table instance.</param>
    </summary>
  </member>
  <member name="ID2D1SimplifiedGeometrySink::BeginFigure">
    <summary>
      <para>Starts a new figure at the specified point.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1/nf-d2d1-id2d1simplifiedgeometrysink-beginfigure" /></para>
      <param name="startPoint">The point at which to begin the new figure.</param>
      <param name="figureBegin">Whether the new figure should be hollow or filled.</param>
    </summary>
  </member>
  <member name="D2D1_BORDER_MODE">
    <summary>
      <para>Specifies how the Crop effect handles the crop rectangle falling on fractional pixel coordinates.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1effects/ne-d2d1effects-d2d1_border_mode" /></para>
    </summary>
  </member>
  <member name="D2D1_BORDER_MODE::D2D1_BORDER_MODE_SOFT">
    <summary>If the crop rectangle falls on fractional pixel coordinates, the effect applies antialiasing which results in a soft edge.</summary>
  </member>
  <member name="D2D1_BORDER_MODE::D2D1_BORDER_MODE_HARD">
    <summary>If the crop rectangle falls on fractional pixel coordinates, the effect clamps which results in a hard edge.</summary>
  </member>
  <member name="ID2D1ImageBrush::GetImage">
    <summary>
      <para>Gets the image associated with the image brush.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1_1/nf-d2d1_1-id2d1imagebrush-getimage" /></para>
      <param name="image">When this method returns, contains the address of a pointer to the image associated with  this brush.</param>
    </summary>
  </member>
  <member name="ID2D1BitmapBrush::GetExtendModeY">
    <summary>
      <para>Gets the method by which the brush vertically tiles those areas that extend past its bitmap.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1/nf-d2d1-id2d1bitmapbrush-getextendmodey" /></para>
    </summary>
  </member>
  <member name="ID2D1StrokeStyle">
    <summary>
      <para>Describes the caps, miter limit, line join, and dash information for a stroke.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1/nn-d2d1-id2d1strokestyle" /></para>
    </summary>
  </member>
  <member name="ID2D1Resource::GetFactory">
    <summary>
      <para>Retrieves the factory associated with this resource.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1/nf-d2d1-id2d1resource-getfactory" /></para>
      <param name="factory">When this method returns, contains a pointer to a pointer to the factory that created this resource. This parameter is passed uninitialized.</param>
    </summary>
  </member>
  <member name="ID2D1DrawInfo::SetPixelShader">
    <summary>
      <para>Set the shader instructions for this transform.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1effectauthor/nf-d2d1effectauthor-id2d1drawinfo-setpixelshader" /></para>
      <param name="shaderId">The resource id for the  shader.</param>
      <param name="pixelOptions">Additional information provided to the renderer to indicate the operations the pixel shader does.</param>
    </summary>
  </member>
  <member name="ID2D1ColorContext1::GetDXGIColorSpace">
    <summary>
      <para>Retrieves the DXGI color space of this context. Returns DXGI_COLOR_SPACE_CUSTOM when color context type is ICC.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1_3/nf-d2d1_3-id2d1colorcontext1-getdxgicolorspace" /></para>
    </summary>
  </member>
  <member name="ID2D1CommandSink::DrawRectangle">
    <summary>
      <para>Draws a rectangle.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1_1/nf-d2d1_1-id2d1commandsink-drawrectangle" /></para>
      <param name="rect">The rectangle to be drawn to the command sink.</param>
      <param name="brush">The brush used to stroke the geometry.</param>
      <param name="strokeWidth">The width of the stroke.</param>
      <param name="strokeStyle">The style of the stroke.</param>
    </summary>
  </member>
  <member name="ID2D1DeviceContext::DrawGlyphRun">
    <summary>
      <para>Draws a series of glyphs to the device context.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1_1/nf-d2d1_1-id2d1devicecontext-drawglyphrun" /></para>
      <param name="baselineOrigin">Origin of first glyph in the series.</param>
      <param name="glyphRun">The glyphs to render.</param>
      <param name="glyphRunDescription">Supplementary glyph series information.</param>
      <param name="foregroundBrush">The brush that defines the text color.</param>
      <param name="measuringMode">The measuring mode of the glyph series, used to determine the advances and offsets. The default value is DWRITE_MEASURING_MODE_NATURAL.</param>
    </summary>
  </member>
  <member name="D2D1_GRADIENT_STOP">
    <summary>
      <para>Contains the position and color of a gradient stop.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1/ns-d2d1-d2d1_gradient_stop" /></para>
    </summary>
  </member>
  <member name="D2D1_GRADIENT_STOP::position">
    <summary>A value that indicates the relative position of the gradient stop in the brush. This value must be in the [0.0f, 1.0f] range if the gradient stop is to be seen explicitly.</summary>
  </member>
  <member name="D2D1_GRADIENT_STOP::color">
    <summary>The color of the gradient stop.</summary>
  </member>
  <member name="ID2D1DCRenderTarget">
    <summary>
      <para>Issues drawing commands to a GDI device context.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1/nn-d2d1-id2d1dcrendertarget" /></para>
    </summary>
  </member>
  <member name="D2D1_VERTEX_OPTIONS">
    <summary>
      <para>Describes flags that influence how the renderer interacts with a custom vertex shader.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1effectauthor/ne-d2d1effectauthor-d2d1_vertex_options" /></para>
    </summary>
  </member>
  <member name="D2D1_VERTEX_OPTIONS::D2D1_VERTEX_OPTIONS_NONE">
    <summary>The logical equivalent of having no flags set.</summary>
  </member>
  <member name="D2D1_VERTEX_OPTIONS::D2D1_VERTEX_OPTIONS_DO_NOT_CLEAR">
    <summary>If this flag is set, the renderer  assumes that the vertex shader will cover the entire region of interest with vertices and need not clear the destination render target. If this flag is not set, the renderer assumes that the vertices do not cover the entire region interest and must clear the render target to transparent black first.</summary>
  </member>
  <member name="D2D1_VERTEX_OPTIONS::D2D1_VERTEX_OPTIONS_USE_DEPTH_BUFFER">
    <summary>The renderer will use a depth buffer when rendering custom vertices. The depth buffer will be used for calculating occlusion information. This can result in the renderer output being draw-order dependent if it contains transparency.</summary>
  </member>
  <member name="D2D1_VERTEX_OPTIONS::D2D1_VERTEX_OPTIONS_ASSUME_NO_OVERLAP">
    <summary>Indicates that custom vertices do not overlap each other.</summary>
  </member>
  <member name="ID2D1HwndRenderTarget::CheckWindowState">
    <summary>
      <para>Indicates whether the HWND associated with this render target is occluded.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1/nf-d2d1-id2d1hwndrendertarget-checkwindowstate" /></para>
    </summary>
  </member>
  <member name="D2D1_EMBOSS_PROP">
    <summary>
      <para>Identifiers for properties of the Emboss effect.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1effects_2/ne-d2d1effects_2-d2d1_emboss_prop" /></para>
    </summary>
  </member>
  <member name="D2D1_EMBOSS_PROP::D2D1_EMBOSS_PROP_HEIGHT">
    <summary>The D2D1_EMBOSS_PROP_HEIGHT property is a float value controlling the strength of the embossing effect.  The allowed range is 0.0 to 10.0.  The default value is 1.0.</summary>
  </member>
  <member name="D2D1_EMBOSS_PROP::D2D1_EMBOSS_PROP_DIRECTION">
    <summary>The D2D1_EMBOSS_PROP_DIRECTION property is a float value specifying the light direction used to create the effect. The allowed range is 0.0 to 360.0.  The default value is 0.0.</summary>
  </member>
  <member name="ID2D1SvgElement::GetTextValue">
    <summary>
      <para>Gets the value of a text content element.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1svg/nf-d2d1svg-id2d1svgelement-gettextvalue" /></para>
      <param name="name">The value of the text content element.</param>
      <param name="nameCount">The length of the value in the name argument.</param>
    </summary>
  </member>
  <member name="D2D1_DPICOMPENSATION_INTERPOLATION_MODE">
    <summary>
      <para>The interpolation mode the DPI compensation effect uses to scale the image.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1effects/ne-d2d1effects-d2d1_dpicompensation_interpolation_mode" /></para>
    </summary>
  </member>
  <member name="D2D1_DPICOMPENSATION_INTERPOLATION_MODE::D2D1_DPICOMPENSATION_INTERPOLATION_MODE_NEAREST_NEIGHBOR">
    <summary>Samples the nearest single point and uses that. This mode uses less processing time, but outputs the lowest quality image.</summary>
  </member>
  <member name="D2D1_DPICOMPENSATION_INTERPOLATION_MODE::D2D1_DPICOMPENSATION_INTERPOLATION_MODE_LINEAR">
    <summary>Uses a four point sample and linear interpolation. This mode uses more processing time than the nearest neighbor mode, but outputs a higher quality image.</summary>
  </member>
  <member name="D2D1_DPICOMPENSATION_INTERPOLATION_MODE::D2D1_DPICOMPENSATION_INTERPOLATION_MODE_CUBIC">
    <summary>Uses a 16 sample cubic kernel for interpolation. This mode uses the most processing time, but outputs a higher quality image.</summary>
  </member>
  <member name="D2D1_DPICOMPENSATION_INTERPOLATION_MODE::D2D1_DPICOMPENSATION_INTERPOLATION_MODE_MULTI_SAMPLE_LINEAR">
    <summary>Uses 4 linear samples within a single pixel for good edge anti-aliasing. This mode is good for scaling down by small amounts on images with few pixels.</summary>
  </member>
  <member name="D2D1_DPICOMPENSATION_INTERPOLATION_MODE::D2D1_DPICOMPENSATION_INTERPOLATION_MODE_ANISOTROPIC">
    <summary>Uses anisotropic filtering to sample a pattern according to the transformed shape of the bitmap.</summary>
  </member>
  <member name="D2D1_DPICOMPENSATION_INTERPOLATION_MODE::D2D1_DPICOMPENSATION_INTERPOLATION_MODE_HIGH_QUALITY_CUBIC">
    <summary>Uses a variable size high quality cubic kernel to perform a pre-downscale the image if downscaling is involved in the transform matrix. Then uses the cubic interpolation mode for the final output.</summary>
  </member>
  <member name="D2D1_BITMAP_BRUSH_PROPERTIES">
    <summary>
      <para>Describes the extend modes and the interpolation mode of an ID2D1BitmapBrush.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1/ns-d2d1-d2d1_bitmap_brush_properties" /></para>
    </summary>
  </member>
  <member name="D2D1_BITMAP_BRUSH_PROPERTIES::extendModeX">
    <summary>A value that describes how the brush horizontally tiles those areas that extend past its bitmap.</summary>
  </member>
  <member name="D2D1_BITMAP_BRUSH_PROPERTIES::extendModeY">
    <summary>A value that describes how the brush vertically tiles those areas that extend past its bitmap.</summary>
  </member>
  <member name="D2D1_BITMAP_BRUSH_PROPERTIES::interpolationMode">
    <summary>A value that specifies how the bitmap is interpolated when it is scaled or rotated.</summary>
  </member>
  <member name="ID2D1BitmapBrush::GetExtendModeX">
    <summary>
      <para>Gets the method by which the brush horizontally tiles those areas that extend past its bitmap.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1/nf-d2d1-id2d1bitmapbrush-getextendmodex" /></para>
    </summary>
  </member>
  <member name="ID2D1EffectContext::FindResourceTexture">
    <summary>
      <para>Finds the given resource texture if it has already been created with ID2D1EffectContext::CreateResourceTexture with the same GUID.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1effectauthor/nf-d2d1effectauthor-id2d1effectcontext-findresourcetexture" /></para>
      <param name="resourceId">The unique id that identifies the resource texture.</param>
      <param name="resourceTexture">The returned texture that can be used as a resource in a Direct2D effect.</param>
    </summary>
  </member>
  <member name="ID2D1DeviceContext2::DrawGradientMesh">
    <summary>
      <para>Renders a given gradient mesh to the target.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1_3/nf-d2d1_3-id2d1devicecontext2-drawgradientmesh" /></para>
      <param name="gradientMesh">The gradient mesh to be rendered.</param>
    </summary>
  </member>
  <member name="ID2D1StrokeStyle::GetEndCap">
    <summary>
      <para>Retrieves the type of shape used at the end of a stroke.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1/nf-d2d1-id2d1strokestyle-getendcap" /></para>
    </summary>
  </member>
  <member name="D2D1_3DTRANSFORM_PROP">
    <summary>
      <para>Identifiers for properties of the 3D transform effect.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1effects/ne-d2d1effects-d2d1_3dtransform_prop" /></para>
    </summary>
  </member>
  <member name="D2D1_3DTRANSFORM_PROP::D2D1_3DTRANSFORM_PROP_INTERPOLATION_MODE">
    <summary>The interpolation mode the effect uses on the image. There are 5 scale modes that range in quality and speed.
            

Type is D2D1_3DTRANSFORM_INTERPOLATION_MODE.

Default value is D2D1_3DTRANSFORM_INTERPOLATION_MODE_LINEAR.</summary>
  </member>
  <member name="D2D1_3DTRANSFORM_PROP::D2D1_3DTRANSFORM_PROP_BORDER_MODE">
    <summary>The mode used to calculate the border of the image, soft or hard. See Border modes for more info.
            

Type is D2D1_BORDER_MODE.

Default value is D2D1_BORDER_MODE_SOFT.</summary>
  </member>
  <member name="D2D1_3DTRANSFORM_PROP::D2D1_3DTRANSFORM_PROP_TRANSFORM_MATRIX">
    <summary>A 4x4 transform matrix applied to the projection plane. The following matrix calculation is used to map points from one 3D coordinate system
              to the transformed 2D coordinate system.
            

<img alt="3D Depth Matrix" src="./images/3d_transform_matrix1.png"/>
Where:<dl>
<dd>X, Y, Z = Input projection plane coordinates</dd>
<dd>M<sub>x,y</sub> = Transform Matrix elements
                </dd>
<dd>X’, Y’, Z’ =Output projection plane coordinates</dd>
</dl>


The individual matrix elements are not bounded and are unitless. 

Type is D2D1_MATRIX_4X4_F.

Default value is Matrix4x4F(1, 0, 0, 0,
              0, 1, 0, 0,
              0, 0, 1, 0,
              0, 0, 0, 1).</summary>
  </member>
  <member name="ID2D1AnalysisTransform">
    <summary>
      <para>Supplies data to an analysis effect.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1effectauthor/nn-d2d1effectauthor-id2d1analysistransform" /></para>
    </summary>
  </member>
  <member name="ID2D1SvgDocument::GetRoot">
    <summary>
      <para>Gets the root element of the document.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1svg/nf-d2d1svg-id2d1svgdocument-getroot" /></para>
      <param name="root">Outputs the root element of the document.</param>
    </summary>
  </member>
  <member name="D2D1_PRINT_FONT_SUBSET_MODE">
    <summary>
      <para>Defines when font resources should be subset during printing.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1_1/ne-d2d1_1-d2d1_print_font_subset_mode" /></para>
    </summary>
  </member>
  <member name="D2D1_PRINT_FONT_SUBSET_MODE::D2D1_PRINT_FONT_SUBSET_MODE_DEFAULT">
    <summary>Uses a heuristic strategy to decide when to subset fonts. 

&gt; [!NOTE]
&gt; If the print driver has requested archive-optimized content, then Direct2D will subset fonts once, for the entire document.</summary>
  </member>
  <member name="D2D1_PRINT_FONT_SUBSET_MODE::D2D1_PRINT_FONT_SUBSET_MODE_EACHPAGE">
    <summary>Subsets and embeds font resources in each page, then discards that font subset after the page is printed out.</summary>
  </member>
  <member name="D2D1_PRINT_FONT_SUBSET_MODE::D2D1_PRINT_FONT_SUBSET_MODE_NONE">
    <summary>Sends out the original font resources without subsetting along with the page that first uses the font, and re-uses the font resources for later pages without resending them.</summary>
  </member>
  <member name="D2D1_PRINT_FONT_SUBSET_MODE::D2D1_PRINT_FONT_SUBSET_MODE_FORCE_DWORD">
    <summary>A value that's guaranteed to be a DWORD.</summary>
  </member>
  <member name="ID2D1ImageBrush::SetInterpolationMode">
    <summary>
      <para>Sets the interpolation mode for the image brush.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1_1/nf-d2d1_1-id2d1imagebrush-setinterpolationmode" /></para>
      <param name="interpolationMode">How the contents of the image will be interpolated to handle the brush transform.</param>
    </summary>
  </member>
  <member name="ID2D1RadialGradientBrush::SetRadiusX">
    <summary>
      <para>Specifies the x-radius of the gradient ellipse, in the brush's coordinate space.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1/nf-d2d1-id2d1radialgradientbrush-setradiusx" /></para>
      <param name="radiusX">The x-radius of the gradient ellipse. This value is in the brush's coordinate space.</param>
    </summary>
  </member>
  <member name="ID2D1Bitmap::GetSize">
    <summary>
      <para>Returns the size, in device-independent pixels (DIPs), of the bitmap.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1/nf-d2d1-id2d1bitmap-getsize" /></para>
    </summary>
  </member>
  <member name="D2D1MakeRotateMatrix">
    <summary>
      <para>Creates a rotation transformation that rotates by the specified angle about the specified point.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1/nf-d2d1-d2d1makerotatematrix" /></para>
      <param name="angle">The clockwise rotation angle, in degrees.</param>
      <param name="center">The point about which to rotate.</param>
      <param name="matrix">When this method returns, contains the new rotation transformation. You must allocate storage for this parameter.</param>
    </summary>
  </member>
  <member name="D2D1_FEATURE_LEVEL">
    <summary>
      <para>Describes the minimum DirectX support required for hardware rendering by a render target.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1/ne-d2d1-d2d1_feature_level" /></para>
    </summary>
  </member>
  <member name="D2D1_FEATURE_LEVEL::D2D1_FEATURE_LEVEL_DEFAULT">
    <summary>Direct2D determines whether the video card provides adequate hardware rendering support.</summary>
  </member>
  <member name="D2D1_FEATURE_LEVEL::D2D1_FEATURE_LEVEL_9">
    <summary>The video card must support DirectX 9.</summary>
  </member>
  <member name="D2D1_FEATURE_LEVEL::D2D1_FEATURE_LEVEL_10">
    <summary>The video card must support DirectX 10.</summary>
  </member>
  <member name="ID2D1EffectContext::GetMaximumSupportedFeatureLevel">
    <summary>
      <para>This indicates the maximum feature level from the provided list which is supported by the device.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1effectauthor/nf-d2d1effectauthor-id2d1effectcontext-getmaximumsupportedfeaturelevel" /></para>
      <param name="featureLevels">The feature levels provided by the application.</param>
      <param name="featureLevelsCount">The count of feature levels provided by the application</param>
      <param name="maximumSupportedFeatureLevel">The maximum feature level from the <i>featureLevels</i> list which is supported by the D2D device.</param>
    </summary>
  </member>
  <member name="ID2D1DeviceContext5::CreateSvgDocument">
    <summary>
      <para>Creates an SVG document from a stream.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1_3/nf-d2d1_3-id2d1devicecontext5-createsvgdocument" /></para>
      <param name="inputXmlStream">An input stream containing the SVG XML document. If null, an empty document is created.</param>
      <param name="viewportSize">Size of the initial viewport of the document.</param>
      <param name="svgDocument">When this method returns, contains a pointer to the created SVG document.</param>
    </summary>
  </member>
  <member name="D2D1_SVG_ASPECT_ALIGN">
    <summary>
      <para>The alignment portion of the SVG preserveAspectRatio attribute.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1svg/ne-d2d1svg-d2d1_svg_aspect_align" /></para>
    </summary>
  </member>
  <member name="D2D1_SVG_ASPECT_ALIGN::D2D1_SVG_ASPECT_ALIGN_NONE">
    <summary>The alignment is set to SVG's 'none' value.</summary>
  </member>
  <member name="D2D1_SVG_ASPECT_ALIGN::D2D1_SVG_ASPECT_ALIGN_X_MIN_Y_MIN">
    <summary>The alignment is set to SVG's 'xMinYMin' value.</summary>
  </member>
  <member name="D2D1_SVG_ASPECT_ALIGN::D2D1_SVG_ASPECT_ALIGN_X_MID_Y_MIN">
    <summary>The alignment is set to SVG's 'xMidYMin' value.</summary>
  </member>
  <member name="D2D1_SVG_ASPECT_ALIGN::D2D1_SVG_ASPECT_ALIGN_X_MAX_Y_MIN">
    <summary>The alignment is set to SVG's 'xMaxYMin' value.</summary>
  </member>
  <member name="D2D1_SVG_ASPECT_ALIGN::D2D1_SVG_ASPECT_ALIGN_X_MIN_Y_MID">
    <summary>The alignment is set to SVG's 'xMinYMid' value.</summary>
  </member>
  <member name="D2D1_SVG_ASPECT_ALIGN::D2D1_SVG_ASPECT_ALIGN_X_MID_Y_MID">
    <summary>The alignment is set to SVG's 'xMidYMid' value.</summary>
  </member>
  <member name="D2D1_SVG_ASPECT_ALIGN::D2D1_SVG_ASPECT_ALIGN_X_MAX_Y_MID">
    <summary>The alignment is set to SVG's 'xMaxYMid' value.</summary>
  </member>
  <member name="D2D1_SVG_ASPECT_ALIGN::D2D1_SVG_ASPECT_ALIGN_X_MIN_Y_MAX">
    <summary>The alignment is set to SVG's 'xMinYMax' value.</summary>
  </member>
  <member name="D2D1_SVG_ASPECT_ALIGN::D2D1_SVG_ASPECT_ALIGN_X_MID_Y_MAX">
    <summary>The alignment is set to SVG's 'xMidYMax' value.</summary>
  </member>
  <member name="D2D1_SVG_ASPECT_ALIGN::D2D1_SVG_ASPECT_ALIGN_X_MAX_Y_MAX">
    <summary>The alignment is set to SVG's 'xMaxYMax' value.</summary>
  </member>
  <member name="ID2D1ConcreteTransform::SetOutputBuffer">
    <summary>
      <para>Sets the properties of the output buffer of the specified transform node.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1effectauthor/nf-d2d1effectauthor-id2d1concretetransform-setoutputbuffer" /></para>
      <param name="bufferPrecision">The number of bits and the type of the output buffer.</param>
      <param name="channelDepth">The number of channels in the output buffer (1 or 4).</param>
    </summary>
  </member>
  <member name="D2D1_VERTEX_RANGE">
    <summary>
      <para>Defines a range of vertices that are used when rendering less than the full contents of a vertex buffer.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1effectauthor/ns-d2d1effectauthor-d2d1_vertex_range" /></para>
    </summary>
  </member>
  <member name="D2D1_VERTEX_RANGE::startVertex">
    <summary>The first vertex in the range to process.</summary>
  </member>
  <member name="D2D1_VERTEX_RANGE::vertexCount">
    <summary>The number of vertices to use.</summary>
  </member>
  <member name="D2D1_RESOURCE_TEXTURE_PROPERTIES">
    <summary>
      <para>Defines a resource texture when the original resource texture is created.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1effectauthor/ns-d2d1effectauthor-d2d1_resource_texture_properties" /></para>
    </summary>
  </member>
  <member name="D2D1_RESOURCE_TEXTURE_PROPERTIES::extents">
    <summary>The extents of the resource table in each dimension.</summary>
  </member>
  <member name="D2D1_RESOURCE_TEXTURE_PROPERTIES::dimensions">
    <summary>The number of dimensions in the resource texture. This must be a number from 1 to 3.</summary>
  </member>
  <member name="D2D1_RESOURCE_TEXTURE_PROPERTIES::bufferPrecision">
    <summary>The precision of the resource texture to create.</summary>
  </member>
  <member name="D2D1_RESOURCE_TEXTURE_PROPERTIES::channelDepth">
    <summary>The number of channels in the resource texture.</summary>
  </member>
  <member name="D2D1_RESOURCE_TEXTURE_PROPERTIES::filter">
    <summary>The filtering mode to use on the texture.</summary>
  </member>
  <member name="D2D1_RESOURCE_TEXTURE_PROPERTIES::extendModes">
    <summary>Specifies how pixel values beyond the extent of the texture will be sampled, in every dimension.</summary>
  </member>
  <member name="D2D1_BLEND_MODE">
    <summary>
      <para>The blend mode used for the Blend effect.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1effects/ne-d2d1effects-d2d1_blend_mode" /></para>
    </summary>
  </member>
  <member name="D2D1_BLEND_MODE::D2D1_BLEND_MODE_MULTIPLY">
    <summary>Basic blend formula for alpha only. 

<img alt="Mathematical formula for a mutiply effect." src="./images/blend_mode_multiply_1.png"/></summary>
  </member>
  <member name="D2D1_BLEND_MODE::D2D1_BLEND_MODE_SCREEN">
    <summary>Basic blend formula for alpha only. 

<img alt="Mathematical formula for a screen effect." src="./images/blend_mode_screen_1.png"/></summary>
  </member>
  <member name="D2D1_BLEND_MODE::D2D1_BLEND_MODE_DARKEN">
    <summary>Basic blend formula for alpha only.  

<img alt="mathematical formula for a darken effect." src="./images/blend_mode_darken_1.png"/></summary>
  </member>
  <member name="D2D1_BLEND_MODE::D2D1_BLEND_MODE_LIGHTEN">
    <summary>Basic blend formula for alpha only. 

<img alt="Mathematical formula for a lighten effect." src="./images/blend_mode_lighten_1.png"/></summary>
  </member>
  <member name="D2D1_BLEND_MODE::D2D1_BLEND_MODE_DISSOLVE">
    <summary>Given:
            

<ul>
<li>A scene coordinate XY for the current pixel</li>
<li>A deterministic pseudo-random number generator rand(XY) based on seed coordinate XY, with unbiased distribution of values from [0, 1]</li>
</ul>
<img alt="Mathematical formula for a dissolve blend effect." src="./images/blend_mode_dissolve_1.png"/></summary>
  </member>
  <member name="D2D1_BLEND_MODE::D2D1_BLEND_MODE_COLOR_BURN">
    <summary>Basic blend formulas with <i>f</i>(F<sub>RGB</sub>, B<sub>RGB</sub>) =  

<img alt="Mathematical formula for a coor burn effect." src="./images/blend_mode_colorburn_1.png"/></summary>
  </member>
  <member name="D2D1_BLEND_MODE::D2D1_BLEND_MODE_LINEAR_BURN">
    <summary>Basic blend formulas with <i>f</i>(F<sub>RGB</sub>, B<sub>RGB</sub>) =  

<img alt="Mathematical formula for a linear burn effect." src="./images/blend_mode_linearburn_1.png"/></summary>
  </member>
  <member name="D2D1_BLEND_MODE::D2D1_BLEND_MODE_DARKER_COLOR">
    <summary>Basic blend formula for alpha only. 

<img alt="Mathematical formla for a darken color effect." src="./images/blend_mode_darkencolor_1.png"/></summary>
  </member>
  <member name="D2D1_BLEND_MODE::D2D1_BLEND_MODE_LIGHTER_COLOR">
    <summary>Basic blend formula for alpha only. 

<img alt="Mathematical formula for a lighter color effect." src="./images/blend_mode_lightercolor_1.png"/></summary>
  </member>
  <member name="D2D1_BLEND_MODE::D2D1_BLEND_MODE_COLOR_DODGE">
    <summary>Basic blend formulas with <i>f</i>(F<sub>RGB</sub>, B<sub>RGB</sub>) =  

<img alt="Mathematical formula for a color dodge effect." src="./images/blend_mode_colordodge_1.png"/></summary>
  </member>
  <member name="D2D1_BLEND_MODE::D2D1_BLEND_MODE_LINEAR_DODGE">
    <summary>Basic blend formulas with <i>f</i>(F<sub>RGB</sub>, B<sub>RGB</sub>) = 

<img alt="Mathematical formula for a linear dodge effect." src="./images/blend_mode_lineardodge_1.png"/></summary>
  </member>
  <member name="D2D1_BLEND_MODE::D2D1_BLEND_MODE_OVERLAY">
    <summary>Basic blend formulas with <i>f</i>(F<sub>RGB</sub>, B<sub>RGB</sub>) = 

<img alt="Mathematical formula for an overlay effect." src="./images/blend_mode_overlay_1.png"/></summary>
  </member>
  <member name="D2D1_BLEND_MODE::D2D1_BLEND_MODE_SOFT_LIGHT">
    <summary>Basic blend formulas with <i>f</i>(F<sub>RGB</sub>, B<sub>RGB</sub>) = 

<img alt="Mathematical formula for a soft light effect." src="./images/blend_mode_softlight_1.png"/></summary>
  </member>
  <member name="D2D1_BLEND_MODE::D2D1_BLEND_MODE_HARD_LIGHT">
    <summary>Basic blend formulas with <i>f</i>(F<sub>RGB</sub>, B<sub>RGB</sub>) = 

<img alt="Mathematical formula for a hard light effect." src="./images/blend_mode_hardlight_1.png"/></summary>
  </member>
  <member name="D2D1_BLEND_MODE::D2D1_BLEND_MODE_VIVID_LIGHT">
    <summary>Basic blend formulas with <i>f</i>(F<sub>RGB</sub>, B<sub>RGB</sub>) = 

<img alt="Mathematical formula for a vivid light effect." src="./images/blend_mode_vividlight_1.png"/></summary>
  </member>
  <member name="D2D1_BLEND_MODE::D2D1_BLEND_MODE_LINEAR_LIGHT">
    <summary>Basic blend formulas with <i>f</i>(F<sub>RGB</sub>, B<sub>RGB</sub>) = 

<img alt="Mathematical formula for a linear light effect." src="./images/blend_mode_linearlight_1.png"/></summary>
  </member>
  <member name="D2D1_BLEND_MODE::D2D1_BLEND_MODE_PIN_LIGHT">
    <summary>Basic blend formulas with <i>f</i>(F<sub>RGB</sub>, B<sub>RGB</sub>) = 

<img alt="Mathematical formula for a pin light effect." src="./images/blend_mode_pinlight_1.png"/></summary>
  </member>
  <member name="D2D1_BLEND_MODE::D2D1_BLEND_MODE_HARD_MIX">
    <summary>Basic blend formulas with <i>f</i>(F<sub>RGB</sub>, B<sub>RGB</sub>) = 

<img alt="Mathematical formula for a hard mix effect." src="./images/blend_mode_hardmix_1.png"/></summary>
  </member>
  <member name="D2D1_BLEND_MODE::D2D1_BLEND_MODE_DIFFERENCE">
    <summary>Basic blend formulas with <i>f</i>(F<sub>RGB</sub>, B<sub>RGB</sub>) = abs(F<sub>RGB</sub> - B<sub>RGB</sub>)</summary>
  </member>
  <member name="D2D1_BLEND_MODE::D2D1_BLEND_MODE_EXCLUSION">
    <summary>Basic blend formulas with <i>f</i>(F<sub>RGB</sub>, B<sub>RGB</sub>) = F<sub>RGB</sub> + B<sub>RGB</sub> – 2 * F<sub>RGB</sub> * B<sub>RGB</sub></summary>
  </member>
  <member name="D2D1_BLEND_MODE::D2D1_BLEND_MODE_HUE">
    <summary>Basic blend formula for alpha only. 

<img alt="Mathematical formula for a hue blend effect." src="./images/blend_mode_hue_1.png"/></summary>
  </member>
  <member name="D2D1_BLEND_MODE::D2D1_BLEND_MODE_SATURATION">
    <summary>Basic blend formula for alpha only. 

<img alt="Mathematical formula for a sturation blend effect." src="./images/blend_mode_saturation_1.png"/></summary>
  </member>
  <member name="D2D1_BLEND_MODE::D2D1_BLEND_MODE_COLOR">
    <summary>Basic blend formula for alpha only. 

<img alt="Mathematical formula for a color blend effect." src="./images/blend_mode_color_1.png"/></summary>
  </member>
  <member name="D2D1_BLEND_MODE::D2D1_BLEND_MODE_LUMINOSITY">
    <summary>Basic blend formula for alpha only. 

<img alt="Mathematical formula for a luminosity blend effect." src="./images/blend_mode_luminosity_1.png"/></summary>
  </member>
  <member name="D2D1_BLEND_MODE::D2D1_BLEND_MODE_SUBTRACT">
    <summary>Basic blend formula for alpha only. 

<img alt="Mathematical formula for a subtract blend effect." src="./images/blend_mode_subtract_1.png"/></summary>
  </member>
  <member name="D2D1_BLEND_MODE::D2D1_BLEND_MODE_DIVISION">
    <summary>Basic blend formula for alpha only. 

<img alt="Mathematical formula for a division blend effect." src="./images/blend_mode_division_1.png"/></summary>
  </member>
  <member name="ID2D1SvgElement::GetDocument">
    <summary>
      <para>Gets the document that contains this element.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1svg/nf-d2d1svg-id2d1svgelement-getdocument" /></para>
      <param name="document">Ouputs the document that contains this element. This argument will be null if the element has been removed from the tree.</param>
    </summary>
  </member>
  <member name="ID2D1SvgPointCollection">
    <summary>
      <para>Interface describing an SVG points value in a polyline or polygon element.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1svg/nn-d2d1svg-id2d1svgpointcollection" /></para>
    </summary>
  </member>
  <member name="ID2D1GradientStopCollection::GetExtendMode">
    <summary>
      <para>Indicates the behavior of the gradient outside the normalized gradient range.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1/nf-d2d1-id2d1gradientstopcollection-getextendmode" /></para>
    </summary>
  </member>
  <member name="ID2D1Layer::GetSize">
    <summary>
      <para>Gets the size of the layer in device-independent pixels.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1/nf-d2d1-id2d1layer-getsize" /></para>
    </summary>
  </member>
  <member name="ID2D1CommandSink2">
    <summary>
      <para>This interface performs all the same functions as the existing ID2D1CommandSink1 interface. It also enables access to ink rendering and gradient mesh rendering.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1_3/nn-d2d1_3-id2d1commandsink2" /></para>
    </summary>
  </member>
  <member name="ID2D1GradientStopCollection1::GetColorInterpolationMode">
    <summary>
      <para>Retrieves the color interpolation mode that the gradient stop collection uses.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1_1/nf-d2d1_1-id2d1gradientstopcollection1-getcolorinterpolationmode" /></para>
    </summary>
  </member>
  <member name="ID2D1BoundsAdjustmentTransform::GetOutputBounds">
    <summary>
      <para>Returns the output rectangle of the support transform.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1effectauthor/nf-d2d1effectauthor-id2d1boundsadjustmenttransform-getoutputbounds" /></para>
      <param name="outputBounds">The output bounds.</param>
    </summary>
  </member>
  <member name="D2D1_SVG_DISPLAY">
    <summary>
      <para>Specifies a value for the SVG display property.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1svg/ne-d2d1svg-d2d1_svg_display" /></para>
    </summary>
  </member>
  <member name="D2D1_SVG_DISPLAY::D2D1_SVG_DISPLAY_INLINE">
    <summary>The element uses the default display behavior.</summary>
  </member>
  <member name="D2D1_SVG_DISPLAY::D2D1_SVG_DISPLAY_NONE">
    <summary>The element and all children are not rendered directly.</summary>
  </member>
  <member name="D2D1IsMatrixInvertible">
    <summary>
      <para>Indicates whether the specified matrix is invertible.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1/nf-d2d1-d2d1ismatrixinvertible" /></para>
      <param name="matrix">The matrix to test.</param>
    </summary>
  </member>
  <member name="ID2D1CommandSink::DrawGeometry">
    <summary>
      <para>Indicates the geometry to be drawn to the command sink.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1_1/nf-d2d1_1-id2d1commandsink-drawgeometry" /></para>
      <param name="geometry">The geometry to be stroked.</param>
      <param name="brush">The brush that will be used to fill the stroked geometry.</param>
      <param name="strokeWidth">The width of the stroke.</param>
      <param name="strokeStyle">The style of the stroke.</param>
    </summary>
  </member>
  <member name="D2D1_SPOTDIFFUSE_SCALE_MODE">
    <summary>
      <para>The interpolation mode the Spot-diffuse lighting effect uses to scale the image to the corresponding kernel unit length. There are six scale modes that range in quality and speed.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1effects/ne-d2d1effects-d2d1_spotdiffuse_scale_mode" /></para>
    </summary>
  </member>
  <member name="D2D1_SPOTDIFFUSE_SCALE_MODE::D2D1_SPOTDIFFUSE_SCALE_MODE_NEAREST_NEIGHBOR">
    <summary>Samples the nearest single point and uses that. This mode uses less processing time, but outputs the lowest quality image.</summary>
  </member>
  <member name="D2D1_SPOTDIFFUSE_SCALE_MODE::D2D1_SPOTDIFFUSE_SCALE_MODE_LINEAR">
    <summary>Uses a four point sample and linear interpolation. This mode outputs a higher quality image than nearest neighbor.</summary>
  </member>
  <member name="D2D1_SPOTDIFFUSE_SCALE_MODE::D2D1_SPOTDIFFUSE_SCALE_MODE_CUBIC">
    <summary>Uses a 16 sample cubic kernel for interpolation. This mode uses the most processing time, but outputs a higher quality image.</summary>
  </member>
  <member name="D2D1_SPOTDIFFUSE_SCALE_MODE::D2D1_SPOTDIFFUSE_SCALE_MODE_MULTI_SAMPLE_LINEAR">
    <summary>Uses 4 linear samples within a single pixel for good edge anti-aliasing. This mode is good for scaling down by small amounts on images with few pixels.</summary>
  </member>
  <member name="D2D1_SPOTDIFFUSE_SCALE_MODE::D2D1_SPOTDIFFUSE_SCALE_MODE_ANISOTROPIC">
    <summary>Uses anisotropic filtering to sample a pattern according to the transformed shape of the bitmap.</summary>
  </member>
  <member name="D2D1_SPOTDIFFUSE_SCALE_MODE::D2D1_SPOTDIFFUSE_SCALE_MODE_HIGH_QUALITY_CUBIC">
    <summary>Uses a variable size high quality cubic kernel to perform a pre-downscale the image if downscaling is involved in the transform matrix. 
          Then uses the cubic interpolation mode for the final output.</summary>
  </member>
  <member name="D2D1_SHADOW_PROP">
    <summary>
      <para>Identifiers for properties of the Shadow effect.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1effects/ne-d2d1effects-d2d1_shadow_prop" /></para>
    </summary>
  </member>
  <member name="D2D1_SHADOW_PROP::D2D1_SHADOW_PROP_BLUR_STANDARD_DEVIATION">
    <summary>The amount of blur to be applied to the alpha channel of the image. You can compute the blur radius of the kernel by multiplying the standard deviation by 3.
            The units of both the standard deviation and blur radius are DIPs.
            

This property is the same as the Gaussian Blur standard deviation property.

The type is FLOAT.

The default value is 3.0f.</summary>
  </member>
  <member name="D2D1_SHADOW_PROP::D2D1_SHADOW_PROP_COLOR">
    <summary>The color of the drop shadow. This property is a D2D1_VECTOR_4F defined as: (R, G, B, A). You must specify this color in straight alpha.
            

The type is <a href="https://docs.microsoft.com/windows/desktop/api/dcommon/ns-dcommon-d2d_vector_4f">D2D1_VECTOR_4F</a>.

The default value is {0.0f, 0.0f, 0.0f, 1.0f}.</summary>
  </member>
  <member name="D2D1_SHADOW_PROP::D2D1_SHADOW_PROP_OPTIMIZATION">
    <summary>The level of performance optimization.
            

The type is <a href="https://docs.microsoft.com/windows/desktop/api/d2d1effects/ne-d2d1effects-d2d1_shadow_optimization">D2D1_SHADOW_OPTIMIZATION</a>.

The default value is D2D1_SHADOW_OPTIMIZATION_BALANCED.</summary>
  </member>
  <member name="D2D1_3DPERSPECTIVETRANSFORM_INTERPOLATION_MODE">
    <summary>
      <para>The interpolation mode the 3D perspective transform effect uses on the image. There are 5 scale modes that range in quality and speed.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1effects/ne-d2d1effects-d2d1_3dperspectivetransform_interpolation_mode" /></para>
    </summary>
  </member>
  <member name="D2D1_3DPERSPECTIVETRANSFORM_INTERPOLATION_MODE::D2D1_3DPERSPECTIVETRANSFORM_INTERPOLATION_MODE_NEAREST_NEIGHBOR">
    <summary>Samples the nearest single point and uses that. This mode uses less processing time, but outputs the lowest quality image.</summary>
  </member>
  <member name="D2D1_3DPERSPECTIVETRANSFORM_INTERPOLATION_MODE::D2D1_3DPERSPECTIVETRANSFORM_INTERPOLATION_MODE_LINEAR">
    <summary>Uses a four point sample and linear interpolation. This mode uses more processing time than the nearest neighbor mode, but outputs a higher quality image.</summary>
  </member>
  <member name="D2D1_3DPERSPECTIVETRANSFORM_INTERPOLATION_MODE::D2D1_3DPERSPECTIVETRANSFORM_INTERPOLATION_MODE_CUBIC">
    <summary>Uses a 16 sample cubic kernel for interpolation. This mode uses the most processing time, but outputs a higher quality image.</summary>
  </member>
  <member name="D2D1_3DPERSPECTIVETRANSFORM_INTERPOLATION_MODE::D2D1_3DPERSPECTIVETRANSFORM_INTERPOLATION_MODE_MULTI_SAMPLE_LINEAR">
    <summary>Uses 4 linear samples within a single pixel for good edge anti-aliasing. This mode is good for scaling down by small amounts on images with few pixels.</summary>
  </member>
  <member name="D2D1_3DPERSPECTIVETRANSFORM_INTERPOLATION_MODE::D2D1_3DPERSPECTIVETRANSFORM_INTERPOLATION_MODE_ANISOTROPIC">
    <summary>Uses anisotropic filtering to sample a pattern according to the transformed shape of the bitmap.</summary>
  </member>
  <member name="ID2D1SimplifiedGeometrySink::SetFillMode">
    <summary>
      <para>Specifies the method used to determine which points are inside the geometry described by this geometry sink and which points are outside.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1/nf-d2d1-id2d1simplifiedgeometrysink-setfillmode" /></para>
      <param name="fillMode">The method used to determine whether a given point is part of the geometry.</param>
    </summary>
  </member>
  <member name="D2D1ConvertColorSpace">
    <summary>
      <para>Converts the given color from one colorspace to another.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1_1/nf-d2d1_1-d2d1convertcolorspace" /></para>
      <param name="sourceColorSpace">The source color space.</param>
      <param name="destinationColorSpace">The destination color space.</param>
      <param name="color">The source color.</param>
    </summary>
  </member>
  <member name="ID2D1LinearGradientBrush::GetGradientStopCollection">
    <summary>
      <para>Retrieves the ID2D1GradientStopCollection associated with this linear gradient brush.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1/nf-d2d1-id2d1lineargradientbrush-getgradientstopcollection" /></para>
      <param name="gradientStopCollection">The  <a href="https://docs.microsoft.com/windows/win32/api/d2d1/nn-d2d1-id2d1gradientstopcollection">ID2D1GradientStopCollection</a> object associated with this linear gradient brush object. This parameter is passed uninitialized.</param>
    </summary>
  </member>
  <member name="ID2D1SvgAttribute">
    <summary>
      <para>Interface describing an SVG attribute.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1svg/nn-d2d1svg-id2d1svgattribute" /></para>
    </summary>
  </member>
  <member name="ID2D1Factory3">
    <summary>
      <para>Creates Direct2D resources. This interface also enables the creation of ID2D1Device2 objects.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1_3/nn-d2d1_3-id2d1factory3" /></para>
    </summary>
  </member>
  <member name="ID2D1DeviceContext::GetDevice">
    <summary>
      <para>Gets the device associated with a device context.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1_1/nf-d2d1_1-id2d1devicecontext-getdevice" /></para>
      <param name="device">When this method returns, contains the address of a pointer to a Direct2D device associated with this device context.</param>
    </summary>
  </member>
  <member name="ID2D1PrintControl::Close">
    <summary>
      <para>Passes all remaining resources to the print sub-system, then clean up and close the current print job.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1_1/nf-d2d1_1-id2d1printcontrol-close" /></para>
    </summary>
  </member>
  <member name="D2D1_COLORMATRIX_PROP">
    <summary>
      <para>Identifiers for the properties of the Color matrix effect.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1effects/ne-d2d1effects-d2d1_colormatrix_prop" /></para>
    </summary>
  </member>
  <member name="D2D1_COLORMATRIX_PROP::D2D1_COLORMATRIX_PROP_COLOR_MATRIX">
    <summary>A 5x4 matrix of float values. The elements in the matrix are not bounded and are unitless.
          

The type is <a href="https://docs.microsoft.com/windows/desktop/Direct2D/d2d1-matrix-5x4-f">D2D1_MATRIX_5X4_F</a>.

The default value is the identity matrix, Matrix5x4F(1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0).</summary>
  </member>
  <member name="D2D1_COLORMATRIX_PROP::D2D1_COLORMATRIX_PROP_ALPHA_MODE">
    <summary>The alpha mode of the output. 
          

The type is <a href="https://docs.microsoft.com/windows/desktop/api/d2d1effects/ne-d2d1effects-d2d1_colormatrix_alpha_mode">D2D1_COLORMATRIX_ALPHA_MODE</a>.

The default value is D2D1_COLORMATRIX_ALPHA_MODE_PREMULTIPLIED.</summary>
  </member>
  <member name="D2D1_COLORMATRIX_PROP::D2D1_COLORMATRIX_PROP_CLAMP_OUTPUT">
    <summary>Whether the effect clamps color values to between 0 and 1 before the effect passes the values to the next effect in the graph. 
          The effect clamps the values before it premultiplies the alpha.
          

If you set this to TRUE the effect will clamp the values. If you set this to FALSE, the effect will not clamp the color values, 
          but other effects and the output surface may clamp the values if they are not of high enough precision.

The type is BOOL.

The default value is FALSE.</summary>
  </member>
  <member name="ID2D1RenderTarget::SaveDrawingState">
    <summary>
      <para>Saves the current drawing state to the specified ID2D1DrawingStateBlock.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1/nf-d2d1-id2d1rendertarget-savedrawingstate" /></para>
      <param name="drawingStateBlock">When this method returns, contains the current drawing state of the render target. This parameter must be initialized before passing it to the method.</param>
    </summary>
  </member>
  <member name="D2D1_ATLAS_PROP">
    <summary>
      <para>Identifiers for properties of the Atlas effect.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1effects/ne-d2d1effects-d2d1_atlas_prop" /></para>
    </summary>
  </member>
  <member name="D2D1_ATLAS_PROP::D2D1_ATLAS_PROP_INPUT_RECT">
    <summary>The portion of the image passed to the next effect.
            Type is D2D1_VECTOR_4F.
            Default value is (-FLT_MAX, -FLT_MAX, FLT_MAX, FLT_MAX).</summary>
  </member>
  <member name="D2D1_ATLAS_PROP::D2D1_ATLAS_PROP_INPUT_PADDING_RECT">
    <summary>The maximum size sampled for the output rectangle.
            Type is D2D1_VECTOR_4F.
            Default value is (-FLT_MAX, -FLT_MAX, FLT_MAX, FLT_MAX).</summary>
  </member>
  <member name="ID2D1CommandSink::EndDraw">
    <summary>
      <para>Indicates when ID2D1CommandSink processing has completed.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1_1/nf-d2d1_1-id2d1commandsink-enddraw" /></para>
    </summary>
  </member>
  <member name="ID2D1BitmapBrush::SetInterpolationMode">
    <summary>
      <para>Specifies the interpolation mode used when the brush bitmap is scaled or rotated.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1/nf-d2d1-id2d1bitmapbrush-setinterpolationmode" /></para>
      <param name="interpolationMode">The interpolation mode used when the brush bitmap is scaled or rotated.</param>
    </summary>
  </member>
  <member name="ID2D1Device">
    <summary>
      <para>Represents a resource domain whose objects and device contexts can be used together.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1_1/nn-d2d1_1-id2d1device" /></para>
    </summary>
  </member>
  <member name="ID2D1GdiMetafile1">
    <summary>
      <para>This interface performs all the same functions as the existing ID2D1GdiMetafile interface. It also enables accessing the metafile DPI and bounds.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1_3/nn-d2d1_3-id2d1gdimetafile1" /></para>
    </summary>
  </member>
  <member name="D2D1_BLEND">
    <summary>
      <para>Specifies how one of the color sources is to be derived and optionally specifies a preblend operation on the color source.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1effectauthor/ne-d2d1effectauthor-d2d1_blend" /></para>
    </summary>
  </member>
  <member name="D2D1_BLEND::D2D1_BLEND_ZERO">
    <summary>The data source is black (0, 0, 0, 0). There is no preblend operation.</summary>
  </member>
  <member name="D2D1_BLEND::D2D1_BLEND_ONE">
    <summary>The data source is white (1, 1, 1, 1). There is no preblend operation.</summary>
  </member>
  <member name="D2D1_BLEND::D2D1_BLEND_SRC_COLOR">
    <summary>The data source is color data (RGB) from the second input of the blend transform. There is not a preblend operation.</summary>
  </member>
  <member name="D2D1_BLEND::D2D1_BLEND_INV_SRC_COLOR">
    <summary>The data source is color data (RGB) from second input of the blend transform. The preblend operation inverts the data, generating 1 - RGB.</summary>
  </member>
  <member name="D2D1_BLEND::D2D1_BLEND_SRC_ALPHA">
    <summary>The data source is alpha data (A) from second input of the blend transform. There is no preblend operation.</summary>
  </member>
  <member name="D2D1_BLEND::D2D1_BLEND_INV_SRC_ALPHA">
    <summary>The data source is alpha data (A) from the second input of the blend transform. The preblend operation inverts the data, generating 1 - A.</summary>
  </member>
  <member name="D2D1_BLEND::D2D1_BLEND_DEST_ALPHA">
    <summary>The data source is alpha data (A) from the first input of the blend transform. There is no preblend operation.</summary>
  </member>
  <member name="D2D1_BLEND::D2D1_BLEND_INV_DEST_ALPHA">
    <summary>The data source is alpha data (A) from the first input of the blend transform. The preblend operation inverts the data, generating 1 - A.</summary>
  </member>
  <member name="D2D1_BLEND::D2D1_BLEND_DEST_COLOR">
    <summary>The data source is color data from the first input of the blend transform. There is no preblend operation.</summary>
  </member>
  <member name="D2D1_BLEND::D2D1_BLEND_INV_DEST_COLOR">
    <summary>The data source is color data from the first input of the blend transform. The preblend operation inverts the data, generating 1 - RGB.</summary>
  </member>
  <member name="D2D1_BLEND::D2D1_BLEND_SRC_ALPHA_SAT">
    <summary>The data source is alpha data from the second input of the blend transform. The preblend operation clamps the data to 1 or less.</summary>
  </member>
  <member name="D2D1_BLEND::D2D1_BLEND_BLEND_FACTOR">
    <summary>The data source is the blend factor. There is no preblend operation.</summary>
  </member>
  <member name="D2D1_BLEND::D2D1_BLEND_INV_BLEND_FACTOR">
    <summary>The data source is the blend factor. The preblend operation inverts the blend factor, generating 1 - blend_factor.</summary>
  </member>
  <member name="D2D1_DISTANTDIFFUSE_SCALE_MODE">
    <summary>
      <para>The interpolation mode the effect uses to scale the image to the corresponding kernel unit length. There are six scale modes that range in quality and speed.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1effects/ne-d2d1effects-d2d1_distantdiffuse_scale_mode" /></para>
    </summary>
  </member>
  <member name="D2D1_DISTANTDIFFUSE_SCALE_MODE::D2D1_DISTANTDIFFUSE_SCALE_MODE_NEAREST_NEIGHBOR">
    <summary>Samples the nearest single point and uses that. This mode uses less processing time, but outputs the lowest quality image.</summary>
  </member>
  <member name="D2D1_DISTANTDIFFUSE_SCALE_MODE::D2D1_DISTANTDIFFUSE_SCALE_MODE_LINEAR">
    <summary>Uses a four point sample and linear interpolation. This mode outputs a higher quality image than nearest neighbor.</summary>
  </member>
  <member name="D2D1_DISTANTDIFFUSE_SCALE_MODE::D2D1_DISTANTDIFFUSE_SCALE_MODE_CUBIC">
    <summary>Uses a 16 sample cubic kernel for interpolation. This mode uses the most processing time, but outputs a higher quality image.</summary>
  </member>
  <member name="D2D1_DISTANTDIFFUSE_SCALE_MODE::D2D1_DISTANTDIFFUSE_SCALE_MODE_MULTI_SAMPLE_LINEAR">
    <summary>Uses 4 linear samples within a single pixel for good edge anti-aliasing. This mode is good for scaling down by small amounts on images with few pixels.</summary>
  </member>
  <member name="D2D1_DISTANTDIFFUSE_SCALE_MODE::D2D1_DISTANTDIFFUSE_SCALE_MODE_ANISOTROPIC">
    <summary>Uses anisotropic filtering to sample a pattern according to the transformed shape of the bitmap.</summary>
  </member>
  <member name="D2D1_DISTANTDIFFUSE_SCALE_MODE::D2D1_DISTANTDIFFUSE_SCALE_MODE_HIGH_QUALITY_CUBIC">
    <summary>Uses a variable size high quality cubic kernel to perform a pre-downscale the image if downscaling is involved in the transform matrix. 
          Then uses the cubic interpolation mode for the final output.</summary>
  </member>
  <member name="ID2D1DeviceContext::GetImageLocalBounds">
    <summary>
      <para>Gets the bounds of an image without the world transform of the context applied.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1_1/nf-d2d1_1-id2d1devicecontext-getimagelocalbounds" /></para>
      <param name="image">The image whose bounds will be calculated.</param>
      <param name="localBounds">When this method returns, contains a pointer to the bounds of the image in device independent pixels (DIPs) and in local space.</param>
    </summary>
  </member>
  <member name="ID2D1DeviceContext::SetTarget">
    <summary>
      <para>The bitmap or command list to which the Direct2D device context will now render.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1_1/nf-d2d1_1-id2d1devicecontext-settarget" /></para>
      <param name="image">The surface or command list to which the Direct2D device context will render.</param>
    </summary>
  </member>
  <member name="ID2D1DeviceContext::CreateColorContextFromWicColorContext">
    <summary>
      <para>Creates a color context from an IWICColorContext. The D2D1ColorContext space of the resulting context varies, see Remarks for more info.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1_1/nf-d2d1_1-id2d1devicecontext-createcolorcontextfromwiccolorcontext" /></para>
      <param name="wicColorContext">The <a href="https://docs.microsoft.com/windows/desktop/api/wincodec/nn-wincodec-iwiccolorcontext">IWICColorContext</a> used to initialize the color context.</param>
      <param name="colorContext">When this method returns, contains the address of a pointer to a new color context.</param>
    </summary>
  </member>
  <member name="D2D1_HIGHLIGHTSANDSHADOWS_INPUT_GAMMA">
    <summary>
      <para>Values for the D2D1_HIGHLIGHTSANDSHADOWS_PROP_INPUT_GAMMA property of the Highlights and Shadows effect.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1effects_2/ne-d2d1effects_2-d2d1_highlightsandshadows_input_gamma" /></para>
    </summary>
  </member>
  <member name="D2D1_HIGHLIGHTSANDSHADOWS_INPUT_GAMMA::D2D1_HIGHLIGHTSANDSHADOWS_INPUT_GAMMA_LINEAR">
    <summary>Indicates the input image is in linear gamma space.</summary>
  </member>
  <member name="D2D1_HIGHLIGHTSANDSHADOWS_INPUT_GAMMA::D2D1_HIGHLIGHTSANDSHADOWS_INPUT_GAMMA_SRGB">
    <summary>Indicates the input image is sRGB gamma space.</summary>
  </member>
  <member name="ID2D1ImageSourceFromWic::GetSource">
    <summary>
      <para>Retrieves the underlying bitmap image source from the Windows Imaging Component (WIC).</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1_3/nf-d2d1_3-id2d1imagesourcefromwic-getsource" /></para>
      <param name="wicBitmapSource">On return contains the bitmap image source.</param>
    </summary>
  </member>
  <member name="ID2D1TransformNode::GetInputCount">
    <summary>
      <para>Gets the number of inputs to the transform node.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1effectauthor/nf-d2d1effectauthor-id2d1transformnode-getinputcount" /></para>
    </summary>
  </member>
  <member name="ID2D1SvgPathData::UpdateSegmentData">
    <summary>
      <para>Updates the segment data array. Existing segment data not updated by this method are preserved. The array is resized larger if necessary to accomodate the new segment data.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1svg/nf-d2d1svg-id2d1svgpathdata-updatesegmentdata" /></para>
      <param name="data">The data array.</param>
      <param name="dataCount">The number of data to update.</param>
      <param name="startIndex">The index at which to begin updating segment data. Must be less than or equal to the size of the segment data array.</param>
    </summary>
  </member>
  <member name="ID2D1DrawTransform::SetDrawInfo">
    <summary>
      <para>Provides the GPU render info interface to the transform implementation.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1effectauthor/nf-d2d1effectauthor-id2d1drawtransform-setdrawinfo" /></para>
      <param name="drawInfo">The interface supplied back to the calling method to allow it to specify the GPU based transform pass.</param>
    </summary>
  </member>
  <member name="D2D1_DRAW_TEXT_OPTIONS">
    <summary>
      <para>Specifies whether text snapping is suppressed or clipping to the layout rectangle is enabled. This enumeration allows a bitwise combination of its member values.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1/ne-d2d1-d2d1_draw_text_options" /></para>
    </summary>
  </member>
  <member name="D2D1_DRAW_TEXT_OPTIONS::D2D1_DRAW_TEXT_OPTIONS_NO_SNAP">
    <summary>Text is not vertically snapped to pixel boundaries. This setting is recommended for text that is being animated.</summary>
  </member>
  <member name="D2D1_DRAW_TEXT_OPTIONS::D2D1_DRAW_TEXT_OPTIONS_CLIP">
    <summary>Text is clipped to the layout rectangle.</summary>
  </member>
  <member name="D2D1_DRAW_TEXT_OPTIONS::D2D1_DRAW_TEXT_OPTIONS_ENABLE_COLOR_FONT">
    <summary>In Windows 8.1 and later, text is rendered using color versions of glyphs, if defined by the font.</summary>
  </member>
  <member name="D2D1_DRAW_TEXT_OPTIONS::D2D1_DRAW_TEXT_OPTIONS_DISABLE_COLOR_BITMAP_SNAPPING">
    <summary>Bitmap origins of color glyph bitmaps are not snapped.</summary>
  </member>
  <member name="D2D1_DRAW_TEXT_OPTIONS::D2D1_DRAW_TEXT_OPTIONS_NONE">
    <summary>Text is vertically snapped to pixel boundaries and is not clipped to the layout rectangle.</summary>
  </member>
  <member name="ID2D1GdiMetafileSink1">
    <summary>
      <para>This interface performs all the same functions as the existing ID2D1GdiMetafileSink interface. It also enables access to metafile records.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1_3/nn-d2d1_3-id2d1gdimetafilesink1" /></para>
    </summary>
  </member>
  <member name="ID2D1SvgPaint::SetPaintType">
    <summary>
      <para>Sets the paint type.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1svg/nf-d2d1svg-id2d1svgpaint-setpainttype" /></para>
      <param name="paintType">The new paint type.</param>
    </summary>
  </member>
  <member name="ID2D1EffectImpl::SetGraph">
    <summary>
      <para>The renderer calls this method to provide the effect implementation with a way to specify its transform graph and transform graph changes.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1effectauthor/nf-d2d1effectauthor-id2d1effectimpl-setgraph" /></para>
      <param name="transformGraph">The graph to which the effect describes its transform topology through the SetDescription call.</param>
    </summary>
  </member>
  <member name="ID2D1SvgPointCollection::UpdatePoints">
    <summary>
      <para>Updates the points array. Existing points not updated by this method are preserved. The array is resized larger if necessary to accomodate the new points.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1svg/nf-d2d1svg-id2d1svgpointcollection-updatepoints" /></para>
      <param name="points">The points array.</param>
      <param name="pointsCount">The number of points to update.</param>
      <param name="startIndex">The index at which to begin updating points. Must be less than or equal to the size of the array.</param>
    </summary>
  </member>
  <member name="ID2D1ImageSource::OfferResources">
    <summary>
      <para>Allows the operating system to free the video memory of resources by discarding their content.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1_3/nf-d2d1_3-id2d1imagesource-offerresources" /></para>
    </summary>
  </member>
  <member name="ID2D1Bitmap::CopyFromRenderTarget">
    <summary>
      <para>Copies the specified region from the specified render target into the current bitmap.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1/nf-d2d1-id2d1bitmap-copyfromrendertarget" /></para>
      <param name="destPoint">In the current bitmap, the upper-left corner of the area to which the region specified by <i>srcRect</i> is copied.</param>
      <param name="renderTarget">The render target that contains the region to copy.</param>
      <param name="srcRect">The area of <i>renderTarget</i> to copy.</param>
    </summary>
  </member>
  <member name="D2D1_YCBCR_CHROMA_SUBSAMPLING">
    <summary>
      <para>Specifies the chroma subsampling of the input chroma image used by the YCbCr effect.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1effects_1/ne-d2d1effects_1-d2d1_ycbcr_chroma_subsampling" /></para>
    </summary>
  </member>
  <member name="D2D1_YCBCR_CHROMA_SUBSAMPLING::D2D1_YCBCR_CHROMA_SUBSAMPLING_AUTO">
    <summary>This mode attempts to infer the chroma subsampling from the bounds of the input images. When this option is selected, 
          the smaller plane is upsampled to the size of the larger plane and this effect’s output rectangle is the intersection of the two planes. 
          When using this mode, care should be taken when applying effects to the input planes that change the image bounds, such as the border transform, 
          so that the desired size ratio between the planes is maintained.</summary>
  </member>
  <member name="D2D1_YCBCR_CHROMA_SUBSAMPLING::D2D1_YCBCR_CHROMA_SUBSAMPLING_420">
    <summary>The chroma plane is horizontally subsampled by 1/2 and vertically subsampled by 1/2. 
          When this option is selected, the chroma plane is horizontally and vertically upsampled by 2x and this effect's output rectangle is the intersection of the two planes.</summary>
  </member>
  <member name="D2D1_YCBCR_CHROMA_SUBSAMPLING::D2D1_YCBCR_CHROMA_SUBSAMPLING_422">
    <summary>The chroma plane is horizontally subsampled by 1/2. When this option is selected, 
          the chroma plane is horizontally upsampled by 2x and this effect's output rectangle is the intersection of the two planes.</summary>
  </member>
  <member name="D2D1_YCBCR_CHROMA_SUBSAMPLING::D2D1_YCBCR_CHROMA_SUBSAMPLING_444">
    <summary>The chroma plane is not subsampled. When this option is selected this effect’s output rectangle is the intersection of the two planes.</summary>
  </member>
  <member name="D2D1_YCBCR_CHROMA_SUBSAMPLING::D2D1_YCBCR_CHROMA_SUBSAMPLING_440">
    <summary>The chroma plane is vertically subsampled by 1/2. When this option is selected, the chroma plane is vertically upsampled by 2x and this effect's 
          output rectangle is the intersection of the two planes.</summary>
  </member>
  <member name="ID2D1RoundedRectangleGeometry">
    <summary>
      <para>Describes a rounded rectangle.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1/nn-d2d1-id2d1roundedrectanglegeometry" /></para>
    </summary>
  </member>
  <member name="ID2D1Factory::CreatePathGeometry">
    <summary>
      <para>Creates an empty ID2D1PathGeometry.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1/nf-d2d1-id2d1factory-createpathgeometry" /></para>
      <param name="pathGeometry">When this method returns, contains the address to a pointer to the path geometry created by this method.</param>
    </summary>
  </member>
  <member name="ID2D1ColorContext1">
    <summary>
      <para>Represents a color context to be used with the Color Management Effect.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1_3/nn-d2d1_3-id2d1colorcontext1" /></para>
    </summary>
  </member>
  <member name="D2D1_BLEND_DESCRIPTION">
    <summary>
      <para>Defines a blend description to be used in a particular blend transform.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1effectauthor/ns-d2d1effectauthor-d2d1_blend_description" /></para>
    </summary>
  </member>
  <member name="D2D1_BLEND_DESCRIPTION::sourceBlend">
    <summary>Specifies the first RGB data source and includes an optional preblend operation.</summary>
  </member>
  <member name="D2D1_BLEND_DESCRIPTION::destinationBlend">
    <summary>Specifies the second RGB data source and includes an optional preblend operation.</summary>
  </member>
  <member name="D2D1_BLEND_DESCRIPTION::blendOperation">
    <summary>Specifies how to combine the RGB data sources.</summary>
  </member>
  <member name="D2D1_BLEND_DESCRIPTION::sourceBlendAlpha">
    <summary>Specifies the first alpha data source and includes an optional preblend operation. Blend options that end in _COLOR are not allowed.</summary>
  </member>
  <member name="D2D1_BLEND_DESCRIPTION::destinationBlendAlpha">
    <summary>Specifies the second alpha data source and includes an optional preblend operation. Blend options that end in _COLOR are not allowed.</summary>
  </member>
  <member name="D2D1_BLEND_DESCRIPTION::blendOperationAlpha">
    <summary>Specifies how to combine the alpha data sources.</summary>
  </member>
  <member name="D2D1_BLEND_DESCRIPTION::blendFactor">
    <summary>Parameters to the blend operations. The blend must use <b>D2D1_BLEND_BLEND_FACTOR</b> for this to be used.</summary>
  </member>
  <member name="D2D1CreateDevice">
    <summary>
      <para>Creates a new Direct2D device associated with the provided DXGI device.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1_1/nf-d2d1_1-d2d1createdevice" /></para>
      <param name="dxgiDevice">The DXGI device the Direct2D device is associated with.</param>
      <param name="creationProperties">The properties to apply to the Direct2D device.</param>
      <param name="d2dDevice">When this function returns, contains the address of a pointer to a Direct2D device.</param>
    </summary>
  </member>
  <member name="ID2D1ComputeInfo">
    <summary>
      <para>Enables specification of information for a compute-shader rendering pass.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1effectauthor/nn-d2d1effectauthor-id2d1computeinfo" /></para>
    </summary>
  </member>
  <member name="ID2D1SpriteBatch::GetSprites">
    <summary>
      <para>Retrieves the specified subset of sprites from this sprite batch. For the best performance, use nullptr for properties that you do not need to retrieve.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1_3/nf-d2d1_3-id2d1spritebatch-getsprites" /></para>
      <param name="startIndex">The index of the first sprite in this sprite batch to retrieve.</param>
      <param name="spriteCount">The number of sprites to retrieve.</param>
      <param name="destinationRectangles">When this method returns, contains a pointer to an array containing the destination rectangles for the retrieved sprites.</param>
      <param name="sourceRectangles">When this method returns, contains a pointer to an array containing the source rectangles for the retrieved sprites.

          

The InfiniteRectU is returned for any sprites that were not assigned a source rectangle.</param>
      <param name="colors">When this method returns, contains a pointer to an array containing the colors to be applied to the retrieved sprites.

          

The color {1.0f, 1.0f, 1.0f, 1.0f} is returned for any sprites that were not assigned a color.</param>
      <param name="transforms">When this method returns, contains a pointer to an array containing the transforms to be applied to the retrieved sprites.

            

The identity matrix is returned for any sprites that were not assigned a transform.</param>
    </summary>
  </member>
  <member name="ID2D1DeviceContext2::CreateGradientMesh">
    <summary>
      <para>Creates a new ID2D1GradientMesh instance using the given array of patches.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1_3/nf-d2d1_3-id2d1devicecontext2-creategradientmesh" /></para>
      <param name="patches">A pointer to the array containing the patches to be used in this mesh.</param>
      <param name="patchesCount">The number of patches in the patches argument to read.</param>
      <param name="gradientMesh">When this method returns, contains the address of a pointer to the new gradient mesh.</param>
    </summary>
  </member>
  <member name="ID2D1ComputeTransform::CalculateThreadgroups">
    <summary>
      <para>This method allows a compute-shader–based transform to select the number of thread groups to execute based on the number of output pixels it needs to fill.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1effectauthor/nf-d2d1effectauthor-id2d1computetransform-calculatethreadgroups" /></para>
      <param name="outputRect">The output rectangle that will be filled by the compute transform.</param>
      <param name="dimensionX">The number of threads in the x dimension.</param>
      <param name="dimensionY">The number of threads in the y dimension.</param>
      <param name="dimensionZ">The number of threads in the z dimension.</param>
    </summary>
  </member>
  <member name="ID2D1SvgDocument::Deserialize">
    <summary>
      <para>Deserializes a subtree from the stream. The stream must have only one root element, but that root element need not be an 'svg' element. The output element is not inserted into this document tree.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1svg/nf-d2d1svg-id2d1svgdocument-deserialize" /></para>
      <param name="inputXmlStream">An input stream containing the SVG XML subtree.</param>
      <param name="subtree">The root of the subtree.</param>
    </summary>
  </member>
  <member name="ID2D1DrawingStateBlock1::SetDescription">
    <summary>
      <para>Sets the D2D1_DRAWING_STATE_DESCRIPTION1 associated with this drawing state block.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1_1/nf-d2d1_1-id2d1drawingstateblock1-setdescription" /></para>
      <param name="stateDescription">The <a href="https://docs.microsoft.com/windows/desktop/api/d2d1_1/ns-d2d1_1-d2d1_drawing_state_description1">D2D1_DRAWING_STATE_DESCRIPTION1</a> to be set associated with  this drawing state block.</param>
    </summary>
  </member>
  <member name="ID2D1InkStyle">
    <summary>
      <para>Represents a collection of style properties to be used by methods like ID2D1DeviceContext2::DrawInkwhen rendering ink. The ink style defines the nib (pen tip) shape and transform.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1_3/nn-d2d1_3-id2d1inkstyle" /></para>
    </summary>
  </member>
  <member name="ID2D1SvgElement::ReplaceChild">
    <summary>
      <para>Replaces the oldChild element with the newChild.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1svg/nf-d2d1svg-id2d1svgelement-replacechild" /></para>
      <param name="newChild">The element to be inserted.</param>
      <param name="oldChild">The child element to be replaced. The oldChild element must be an immediate child of this element.</param>
    </summary>
  </member>
  <member name="D2D1_DISCRETETRANSFER_PROP">
    <summary>
      <para>Identifiers for properties of the Discrete transfer effect.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1effects/ne-d2d1effects-d2d1_discretetransfer_prop" /></para>
    </summary>
  </member>
  <member name="D2D1_DISCRETETRANSFER_PROP::D2D1_DISCRETETRANSFER_PROP_RED_TABLE">
    <summary>The list of values used to define the transfer function for the Red channel.
          

The type is FLOAT[].

The default value is {0.0f, 1.0f}.</summary>
  </member>
  <member name="D2D1_DISCRETETRANSFER_PROP::D2D1_DISCRETETRANSFER_PROP_RED_DISABLE">
    <summary>If you set this to TRUE the effect does not apply the transfer function to the Red channel. 
          If you set this to FALSE the effect applies the RedDiscreteTransfer function to the Red channel.
          

The type is BOOL.

The default value if FALSE.</summary>
  </member>
  <member name="D2D1_DISCRETETRANSFER_PROP::D2D1_DISCRETETRANSFER_PROP_GREEN_TABLE">
    <summary>The list of values used to define the transfer function for the Green channel.
          

The type is FLOAT[].

The default value is {0.0f, 1.0f}.</summary>
  </member>
  <member name="D2D1_DISCRETETRANSFER_PROP::D2D1_DISCRETETRANSFER_PROP_GREEN_DISABLE">
    <summary>If you set this to TRUE the effect does not apply the transfer function to the Green channel. 
          If you set this to FALSE the effect applies the GreenDiscreteTransfer function to the Green channel.
          

The type is BOOL.

The default value if FALSE.</summary>
  </member>
  <member name="D2D1_DISCRETETRANSFER_PROP::D2D1_DISCRETETRANSFER_PROP_BLUE_TABLE">
    <summary>The list of values used to define the transfer function for the Blue channel.
          

The type is FLOAT[].

The default value is {0.0f, 1.0f}.</summary>
  </member>
  <member name="D2D1_DISCRETETRANSFER_PROP::D2D1_DISCRETETRANSFER_PROP_BLUE_DISABLE">
    <summary>If you set this to TRUE the effect does not apply the transfer function to the Blue channel. 
          If you set this to FALSE the effect applies the BlueDiscreteTransfer function to the Blue channel.
          

The type is BOOL.

The default value if FALSE.</summary>
  </member>
  <member name="D2D1_DISCRETETRANSFER_PROP::D2D1_DISCRETETRANSFER_PROP_ALPHA_TABLE">
    <summary>The list of values used to define the transfer function for the Alpha channel.
          

The type is FLOAT[].

The default value is {0.0f, 1.0f}.</summary>
  </member>
  <member name="D2D1_DISCRETETRANSFER_PROP::D2D1_DISCRETETRANSFER_PROP_ALPHA_DISABLE">
    <summary>If you set this to TRUE the effect does not apply the transfer function to the Alpha channel. 
          If you set this to FALSE the effect applies the AlphaDiscreteTransfer function to the Alpha channel.
          

The type is BOOL.

The default value if FALSE.</summary>
  </member>
  <member name="D2D1_DISCRETETRANSFER_PROP::D2D1_DISCRETETRANSFER_PROP_CLAMP_OUTPUT">
    <summary>Whether the effect clamps color values to between 0 and 1 before the effect passes the values to the next effect in the graph. 
          The effect clamps the values before it premultiplies the alpha.

          

If you set this to TRUE the effect will clamp the values. If you set this to FALSE, the effect will not clamp the color values, 
          but other effects and the output surface may clamp the values if they are not of high enough precision.

The type is BOOL.

The default value if FALSE.</summary>
  </member>
  <member name="ID2D1SvgElement::GetAttributeValueLength">
    <summary>
      <para>Gets the string length of an attribute of this element.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1svg/nf-d2d1svg-id2d1svgelement-getattributevaluelength" /></para>
      <param name="name">The name of the attribute.</param>
      <param name="type">The string type of the attribute.</param>
      <param name="valueLength">The lengthe of the attribute. The returned string length does not include room for the null terminator.</param>
    </summary>
  </member>
  <member name="ID2D1Factory5">
    <summary>
      <para>Creates Direct2D resources. This interface also enables the creation of ID2D1Device4 objects.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1_3/nn-d2d1_3-id2d1factory5" /></para>
    </summary>
  </member>
  <member name="ID2D1ImageBrush::SetImage">
    <summary>
      <para>Sets the image associated with the provided image brush.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1_1/nf-d2d1_1-id2d1imagebrush-setimage" /></para>
      <param name="image">The image to be associated with the image brush.</param>
    </summary>
  </member>
  <member name="ID2D1GradientStopCollection1::GetGradientStops1">
    <summary>
      <para>Copies the gradient stops from the collection into memory.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1_1/nf-d2d1_1-id2d1gradientstopcollection1-getgradientstops1" /></para>
      <param name="gradientStops">When this method returns, contains a pointer to a one-dimensional array of <a href="https://docs.microsoft.com/windows/desktop/api/d2d1/ns-d2d1-d2d1_gradient_stop">D2D1_GRADIENT_STOP</a> structures.</param>
      <param name="gradientStopsCount">The number of gradient stops to copy.</param>
    </summary>
  </member>
  <member name="ID2D1CommandSink::Clear">
    <summary>
      <para>Clears the drawing area to the specified color.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1_1/nf-d2d1_1-id2d1commandsink-clear" /></para>
      <param name="color">The color to which the command sink should be cleared.</param>
    </summary>
  </member>
  <member name="ID2D1DeviceContext2::DrawInk">
    <summary>
      <para>Renders the given ink object using the given brush and ink style.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1_3/nf-d2d1_3-id2d1devicecontext2-drawink" /></para>
      <param name="ink">The ink object to be rendered.</param>
      <param name="brush">The brush with which to render the ink object.</param>
      <param name="inkStyle">The ink style to use when rendering the ink object.</param>
    </summary>
  </member>
  <member name="ID2D1Bitmap1::Map">
    <summary>
      <para>Maps the given bitmap into memory.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1_1/nf-d2d1_1-id2d1bitmap1-map" /></para>
      <param name="options">The options used in mapping the bitmap into memory.</param>
      <param name="mappedRect">When this method returns, contains a reference to the rectangle that is mapped into memory.</param>
    </summary>
  </member>
  <member name="ID2D1SimplifiedGeometrySink::SetSegmentFlags">
    <summary>
      <para>Specifies stroke and join options to be applied to new segments added to the geometry sink.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1/nf-d2d1-id2d1simplifiedgeometrysink-setsegmentflags" /></para>
      <param name="vertexFlags">Stroke and join options to be applied to new segments added to the geometry sink.</param>
    </summary>
  </member>
  <member name="D2D1_COLORMATRIX_ALPHA_MODE">
    <summary>
      <para>The alpha mode of the output of the Color matrix effect.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1effects/ne-d2d1effects-d2d1_colormatrix_alpha_mode" /></para>
    </summary>
  </member>
  <member name="D2D1_COLORMATRIX_ALPHA_MODE::D2D1_COLORMATRIX_ALPHA_MODE_PREMULTIPLIED">
    <summary>The effect un-premultiplies the input, applies the color matrix, and premultiplies the output.</summary>
  </member>
  <member name="D2D1_COLORMATRIX_ALPHA_MODE::D2D1_COLORMATRIX_ALPHA_MODE_STRAIGHT">
    <summary>The effect applies the color matrix directly to the input, and doesn't premultiply the output.</summary>
  </member>
  <member name="ID2D1CommandSink::SetPrimitiveBlend">
    <summary>
      <para>Sets a new primitive blend mode.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1_1/nf-d2d1_1-id2d1commandsink-setprimitiveblend" /></para>
      <param name="primitiveBlend">The primitive blend that will apply to subsequent primitives.</param>
    </summary>
  </member>
  <member name="ID2D1Effect">
    <summary>
      <para>Represents a basic image-processing construct in Direct2D.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1_1/nn-d2d1_1-id2d1effect" /></para>
    </summary>
  </member>
  <member name="ID2D1TransformGraph::RemoveNode">
    <summary>
      <para>Removes the provided node from the transform graph.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1effectauthor/nf-d2d1effectauthor-id2d1transformgraph-removenode" /></para>
      <param name="node">The node that will be removed from the transform graph.</param>
    </summary>
  </member>
  <member name="D2D1_PIXEL_FORMAT">
    <summary>
      <para>Contains the data format and alpha mode for a bitmap or render target.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//dcommon/ns-dcommon-d2d1_pixel_format" /></para>
    </summary>
  </member>
  <member name="D2D1_PIXEL_FORMAT::format">
    <summary>A value that specifies the size and arrangement of channels in each pixel.</summary>
  </member>
  <member name="D2D1_PIXEL_FORMAT::alphaMode">
    <summary>A value that specifies whether the alpha channel is using pre-multiplied alpha, straight alpha, whether it should be ignored and considered opaque, or whether it is unkown.</summary>
  </member>
  <member name="ID2D1DeviceContext2::CreateImageSourceFromDxgi">
    <summary>
      <para>Creates an image source from a set of DXGI surface(s). The YCbCr surface(s) are converted to RGBA automatically during subsequent drawing.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1_3/nf-d2d1_3-id2d1devicecontext2-createimagesourcefromdxgi" /></para>
      <param name="surfaces">The DXGI surfaces to create the image source from.</param>
      <param name="surfaceCount">The number of surfaces provided; must be between one and three.</param>
      <param name="colorSpace">The color space of the input.</param>
      <param name="options">Options controlling color space conversions.</param>
      <param name="imageSource">Receives the new image source instance.</param>
    </summary>
  </member>
  <member name="ID2D1GeometryGroup::GetSourceGeometryCount">
    <summary>
      <para>Indicates the number of geometry objects in the geometry group.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1/nf-d2d1-id2d1geometrygroup-getsourcegeometrycount" /></para>
    </summary>
  </member>
  <member name="ID2D1DeviceContext::CreateGradientStopCollection">
    <summary>
      <para>Creates a gradient stop collection, enabling the gradient to contain color channels with values outside of [0,1] and also enabling rendering to a high-color render target with interpolation in sRGB space.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1_1/nf-d2d1_1-id2d1devicecontext-creategradientstopcollection" /></para>
      <param name="straightAlphaGradientStops">An array of color values and offsets.</param>
      <param name="straightAlphaGradientStopsCount">The number of elements in the <i>gradientStops</i> array.</param>
      <param name="preInterpolationSpace">Specifies both the input color space and the space in which the color interpolation occurs.</param>
      <param name="postInterpolationSpace">The color space that colors will be converted to after interpolation occurs.</param>
      <param name="bufferPrecision">The precision of the texture used to hold interpolated values.

<div class="alert"><b>Note</b>  This method will fail if the underlying Direct3D device does not support the requested buffer precision.  Use <a href="https://docs.microsoft.com/windows/desktop/api/d2d1_1/nf-d2d1_1-id2d1devicecontext-isbufferprecisionsupported">ID2D1DeviceContext::IsBufferPrecisionSupported</a> to determine what is supported.
</div>
<div> </div></param>
      <param name="extendMode">Defines how colors outside of the range defined by the stop collection are determined.</param>
      <param name="colorInterpolationMode">Defines how colors are interpolated.  D2D1_COLOR_INTERPOLATION_MODE_PREMULTIPLIED is the default, see Remarks for more info.</param>
      <param name="gradientStopCollection1">The new gradient stop collection.</param>
    </summary>
  </member>
  <member name="ID2D1DeviceContext::GetImageWorldBounds">
    <summary>
      <para>Gets the bounds of an image with the world transform of the context applied.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1_1/nf-d2d1_1-id2d1devicecontext-getimageworldbounds" /></para>
      <param name="image">The image whose bounds will be calculated.</param>
      <param name="worldBounds">When this method returns, contains a pointer to the bounds of the image in device independent pixels (DIPs).</param>
    </summary>
  </member>
  <member name="D2D1_VERTEX_BUFFER_PROPERTIES">
    <summary>
      <para>Defines the properties of a vertex buffer that are standard for all vertex shader definitions.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1effectauthor/ns-d2d1effectauthor-d2d1_vertex_buffer_properties" /></para>
    </summary>
  </member>
  <member name="D2D1_VERTEX_BUFFER_PROPERTIES::inputCount">
    <summary>The number of inputs to the vertex shader.</summary>
  </member>
  <member name="D2D1_VERTEX_BUFFER_PROPERTIES::usage">
    <summary>Indicates how frequently the vertex buffer is likely to be updated.</summary>
  </member>
  <member name="D2D1_VERTEX_BUFFER_PROPERTIES::data">
    <summary>The initial contents of the vertex buffer.</summary>
  </member>
  <member name="D2D1_VERTEX_BUFFER_PROPERTIES::byteWidth">
    <summary>The size of the vertex buffer, in bytes.</summary>
  </member>
  <member name="D2D1_FACTORY_OPTIONS">
    <summary>
      <para>Contains the debugging level of an ID2D1Factory object.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1/ns-d2d1-d2d1_factory_options" /></para>
    </summary>
  </member>
  <member name="D2D1_FACTORY_OPTIONS::debugLevel">
    <summary>The debugging level of the <a href="https://docs.microsoft.com/windows/win32/api/d2d1/nn-d2d1-id2d1factory">ID2D1Factory</a> object.</summary>
  </member>
  <member name="ID2D1DrawInfo::SetVertexProcessing">
    <summary>
      <para>Sets a vertex buffer, a corresponding vertex shader, and options to control how the vertices are to be handled by the Direct2D context.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1effectauthor/nf-d2d1effectauthor-id2d1drawinfo-setvertexprocessing" /></para>
      <param name="vertexBuffer">The vertex buffer, if this is cleared, the default vertex shader and mapping to the transform rectangles will be used.</param>
      <param name="vertexOptions">Options that influence how the renderer will interact with the vertex shader.</param>
      <param name="blendDescription">How the vertices will be blended with the output texture.</param>
      <param name="vertexRange">The set of vertices to use from the buffer.</param>
      <param name="vertexShader">The GUID of the vertex shader.</param>
    </summary>
  </member>
  <member name="ID2D1StrokeStyle1">
    <summary>
      <para>Describes the caps, miter limit, line join, and dash information for a stroke.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1_1/nn-d2d1_1-id2d1strokestyle1" /></para>
    </summary>
  </member>
  <member name="ID2D1SimplifiedGeometrySink">
    <summary>
      <para>Describes a geometric path that does not contain quadratic bezier curves or arcs.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1/nn-d2d1-id2d1simplifiedgeometrysink" /></para>
    </summary>
  </member>
  <member name="D2D1_OPACITY_MASK_CONTENT">
    <summary>
      <para>Describes whether an opacity mask contains graphics or text. Direct2D uses this information to determine which gamma space to use when blending the opacity mask.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1/ne-d2d1-d2d1_opacity_mask_content" /></para>
    </summary>
  </member>
  <member name="D2D1_OPACITY_MASK_CONTENT::D2D1_OPACITY_MASK_CONTENT_GRAPHICS">
    <summary>The opacity mask contains graphics. The opacity mask is blended in the gamma 2.2 color space.</summary>
  </member>
  <member name="D2D1_OPACITY_MASK_CONTENT::D2D1_OPACITY_MASK_CONTENT_TEXT_NATURAL">
    <summary>The opacity mask contains non-GDI text. The gamma space used for blending is obtained from the render target's text rendering parameters. (<a href="https://docs.microsoft.com/windows/win32/api/d2d1/nf-d2d1-id2d1rendertarget-settextrenderingparams">ID2D1RenderTarget::SetTextRenderingParams</a>).</summary>
  </member>
  <member name="D2D1_OPACITY_MASK_CONTENT::D2D1_OPACITY_MASK_CONTENT_TEXT_GDI_COMPATIBLE">
    <summary>The opacity mask contains text rendered using the GDI-compatible rendering mode. The opacity mask is blended using the gamma for GDI rendering.</summary>
  </member>
  <member name="ID2D1GeometryRealization">
    <summary>
      <para>Encapsulates a device- and transform-dependent representation of a filled or stroked geometry.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1_2/nn-d2d1_2-id2d1geometryrealization" /></para>
    </summary>
  </member>
  <member name="D2D1_PRIMITIVE_BLEND">
    <summary>
      <para>Used to specify the geometric blend mode for all Direct2D primitives.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1_1/ne-d2d1_1-d2d1_primitive_blend" /></para>
    </summary>
  </member>
  <member name="D2D1_PRIMITIVE_BLEND::D2D1_PRIMITIVE_BLEND_SOURCE_OVER">
    <summary>The standard source-over-destination blend mode.</summary>
  </member>
  <member name="D2D1_PRIMITIVE_BLEND::D2D1_PRIMITIVE_BLEND_COPY">
    <summary>The source is copied to the destination; the destination pixels are ignored.</summary>
  </member>
  <member name="D2D1_PRIMITIVE_BLEND::D2D1_PRIMITIVE_BLEND_MIN">
    <summary>The resulting pixel values use the minimum of the source and destination pixel values. Available in Windows 8 and later.</summary>
  </member>
  <member name="D2D1_PRIMITIVE_BLEND::D2D1_PRIMITIVE_BLEND_ADD">
    <summary>The resulting pixel values are the sum of the source and destination pixel values. Available in Windows 8 and later.</summary>
  </member>
  <member name="D2D1_PRIMITIVE_BLEND::D2D1_PRIMITIVE_BLEND_MAX">
    <summary>The resulting pixel values use the maximum of the source and destination pixel values. 
          Available in Windows 10 and later (set using <a href="https://docs.microsoft.com/windows/desktop/api/d2d1_3/nf-d2d1_3-id2d1commandsink4-setprimitiveblend2">ID21CommandSink4::SetPrimitiveBlend2</a>).</summary>
  </member>
  <member name="ID2D1SvgElement">
    <summary>
      <para>Interface for all SVG elements.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1svg/nn-d2d1svg-id2d1svgelement" /></para>
    </summary>
  </member>
  <member name="ID2D1Brush">
    <summary>
      <para>Defines an object that paints an area. Interfaces that derive from ID2D1Brush describe how the area is painted.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1/nn-d2d1-id2d1brush" /></para>
    </summary>
  </member>
  <member name="ID2D1CommandSink3::DrawSpriteBatch">
    <summary>
      <para>Renders part or all of the given sprite batch to the device context using the specified drawing options.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1_3/nf-d2d1_3-id2d1commandsink3-drawspritebatch" /></para>
      <param name="spriteBatch">The sprite batch to draw.</param>
      <param name="startIndex">The index of the first sprite in the sprite batch to draw.</param>
      <param name="spriteCount">The number of sprites to draw.</param>
      <param name="bitmap">The bitmap from which the sprites are to be sourced. Each sprite’s source rectangle refers to a portion of this bitmap.</param>
      <param name="interpolationMode">The interpolation mode to use when drawing this sprite batch. This determines how Direct2D interpolates pixels within the drawn sprites if scaling is performed.</param>
      <param name="spriteOptions">The additional drawing options, if any, to be used for this sprite batch.</param>
    </summary>
  </member>
  <member name="ID2D1EffectContext::CreateTransformNodeFromEffect">
    <summary>
      <para>Wraps an effect graph into a single transform node and then inserted into a transform graph. This allows an effect to aggregate other effects.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1effectauthor/nf-d2d1effectauthor-id2d1effectcontext-createtransformnodefromeffect" /></para>
      <param name="effect">The effect to be wrapped in a transform node.</param>
      <param name="transformNode">The returned transform node that encapsulates the effect graph.</param>
    </summary>
  </member>
  <member name="D2D1_ARC_SEGMENT">
    <summary>
      <para>Describes an elliptical arc between two points.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1/ns-d2d1-d2d1_arc_segment" /></para>
    </summary>
  </member>
  <member name="D2D1_ARC_SEGMENT::point">
    <summary>The end point of the arc.</summary>
  </member>
  <member name="D2D1_ARC_SEGMENT::size">
    <summary>The x-radius and y-radius of the arc.</summary>
  </member>
  <member name="D2D1_ARC_SEGMENT::rotationAngle">
    <summary>A value that specifies how many degrees in the clockwise direction the ellipse is rotated relative to the current coordinate system.</summary>
  </member>
  <member name="D2D1_ARC_SEGMENT::sweepDirection">
    <summary>A value that specifies whether the arc sweep is clockwise or counterclockwise.</summary>
  </member>
  <member name="D2D1_ARC_SEGMENT::arcSize">
    <summary>A value that specifies whether the given arc is larger than 180 degrees.</summary>
  </member>
  <member name="ID2D1DrawingStateBlock::GetDescription">
    <summary>
      <para>Retrieves the antialiasing mode, transform, and tags portion of the drawing state.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1/nf-d2d1-id2d1drawingstateblock-getdescription" /></para>
      <param name="stateDescription">When this method returns, contains the antialiasing mode, transform, and tags portion of the drawing state. You must allocate storage for this parameter.</param>
    </summary>
  </member>
  <member name="ID2D1SvgPathData::RemoveCommandsAtEnd">
    <summary>
      <para>Removes commands from the end of the commands array.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1svg/nf-d2d1svg-id2d1svgpathdata-removecommandsatend" /></para>
      <param name="commandsCount">Specifies how many commands to remove.</param>
    </summary>
  </member>
  <member name="ID2D1SvgGlyphStyle">
    <summary>
      <para>This object supplies the values for context-fill, context-stroke, and context-value that are used when rendering SVG glyphs.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1_3/nn-d2d1_3-id2d1svgglyphstyle" /></para>
    </summary>
  </member>
  <member name="ID2D1HwndRenderTarget">
    <summary>
      <para>Renders drawing instructions to a window.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1/nn-d2d1-id2d1hwndrendertarget" /></para>
    </summary>
  </member>
  <member name="ID2D1CommandList::Close">
    <summary>
      <para>Instructs the command list to stop accepting commands so that you can use it as an input to an effect or in a call to ID2D1DeviceContext::DrawImage.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1_1/nf-d2d1_1-id2d1commandlist-close" /></para>
    </summary>
  </member>
  <member name="ID2D1RenderTarget::GetAntialiasMode">
    <summary>
      <para>Retrieves the current antialiasing mode for nontext drawing operations.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1/nf-d2d1-id2d1rendertarget-getantialiasmode" /></para>
    </summary>
  </member>
  <member name="D2D1_COLORMANAGEMENT_ALPHA_MODE">
    <summary>
      <para>Indicates how the Color management effect should interpret alpha data that is contained in the input image.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1effects/ne-d2d1effects-d2d1_colormanagement_alpha_mode" /></para>
    </summary>
  </member>
  <member name="D2D1_COLORMANAGEMENT_ALPHA_MODE::D2D1_COLORMANAGEMENT_ALPHA_MODE_PREMULTIPLIED">
    <summary>The effect assumes the alpha mode is premultiplied.</summary>
  </member>
  <member name="D2D1_COLORMANAGEMENT_ALPHA_MODE::D2D1_COLORMANAGEMENT_ALPHA_MODE_STRAIGHT">
    <summary>The effect assumes the alpha mode is straight.</summary>
  </member>
  <member name="ID2D1CommandSink::SetAntialiasMode">
    <summary>
      <para>Sets the antialiasing mode that will be used to render any subsequent geometry.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1_1/nf-d2d1_1-id2d1commandsink-setantialiasmode" /></para>
      <param name="antialiasMode">The antialiasing mode selected for the command list.</param>
    </summary>
  </member>
  <member name="ID2D1SvgPointCollection::GetPoints">
    <summary>
      <para>Gets points from the points array.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1svg/nf-d2d1svg-id2d1svgpointcollection-getpoints" /></para>
      <param name="points">Buffer to contain the points.</param>
      <param name="pointsCount">The element count of the buffer.</param>
      <param name="startIndex">The index of the first point to retrieve.</param>
    </summary>
  </member>
  <member name="ID2D1Device2">
    <summary>
      <para>Represents a resource domain whose objects and device contexts can be used together. This interface performs all the same functions as the existing ID2D1Device1 interface. It also enables the creation of ID2D1DeviceContext2 objects.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1_3/nn-d2d1_3-id2d1device2" /></para>
    </summary>
  </member>
  <member name="D2D1_SHADOW_OPTIMIZATION">
    <summary>
      <para>The level of performance optimization for the Shadow effect.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1effects/ne-d2d1effects-d2d1_shadow_optimization" /></para>
    </summary>
  </member>
  <member name="D2D1_SHADOW_OPTIMIZATION::D2D1_SHADOW_OPTIMIZATION_SPEED">
    <summary>Applies internal optimizations such as pre-scaling at relatively small radii. Uses linear filtering.</summary>
  </member>
  <member name="D2D1_SHADOW_OPTIMIZATION::D2D1_SHADOW_OPTIMIZATION_BALANCED">
    <summary>Uses the same optimization thresholds as Speed mode, but uses trilinear filtering.</summary>
  </member>
  <member name="D2D1_SHADOW_OPTIMIZATION::D2D1_SHADOW_OPTIMIZATION_QUALITY">
    <summary>Only uses internal optimizations with large blur radii, where approximations are less likely to be visible. Uses trilinear filtering.</summary>
  </member>
  <member name="ID2D1Effect::GetInputCount">
    <summary>
      <para>Gets the number of inputs to the effect.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1_1/nf-d2d1_1-id2d1effect-getinputcount" /></para>
    </summary>
  </member>
  <member name="ID2D1BitmapBrush1">
    <summary>
      <para>Paints an area with a bitmap.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1_1/nn-d2d1_1-id2d1bitmapbrush1" /></para>
    </summary>
  </member>
  <member name="D2D1_BITMAP_INTERPOLATION_MODE">
    <summary>
      <para>Specifies the algorithm that is used when images are scaled or rotated.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1/ne-d2d1-d2d1_bitmap_interpolation_mode" /></para>
    </summary>
  </member>
  <member name="D2D1_BITMAP_INTERPOLATION_MODE::D2D1_BITMAP_INTERPOLATION_MODE_NEAREST_NEIGHBOR">
    <summary>Use the exact color of the nearest bitmap pixel to the current rendering pixel.</summary>
  </member>
  <member name="D2D1_BITMAP_INTERPOLATION_MODE::D2D1_BITMAP_INTERPOLATION_MODE_LINEAR">
    <summary>Interpolate a color from the four bitmap pixels that are the nearest to the rendering pixel.</summary>
  </member>
  <member name="ID2D1Ink::AddSegments">
    <summary>
      <para>Adds the given segments to the end of this ink object.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1_3/nf-d2d1_3-id2d1ink-addsegments" /></para>
      <param name="segments">A pointer to an array of segments to be added to this ink object.</param>
      <param name="segmentsCount">The number of segments to be added to this ink object.</param>
    </summary>
  </member>
  <member name="D2D1_BRUSH_PROPERTIES">
    <summary>
      <para>Describes the opacity and transformation of a brush.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1/ns-d2d1-d2d1_brush_properties" /></para>
    </summary>
  </member>
  <member name="D2D1_BRUSH_PROPERTIES::opacity">
    <summary>A value between 0.0f and 1.0f, inclusive, that specifies the degree of opacity of the brush.</summary>
  </member>
  <member name="D2D1_BRUSH_PROPERTIES::transform">
    <summary>The transformation that is applied to the brush.</summary>
  </member>
  <member name="D2D1_HDRTONEMAP_PROP">
    <summary>
      <para>Defines constants that identify the top level properties of the HDR Tone Map effect.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1effects_2/ne-d2d1effects_2-d2d1_hdrtonemap_prop" /></para>
    </summary>
  </member>
  <member name="D2D1_HDRTONEMAP_PROP::D2D1_HDRTONEMAP_PROP_INPUT_MAX_LUMINANCE">
    <summary>Identifies the <c>InputMaxLuminance</c> property of the effect. The property is of type FLOAT, and is specified in nits.</summary>
  </member>
  <member name="D2D1_HDRTONEMAP_PROP::D2D1_HDRTONEMAP_PROP_OUTPUT_MAX_LUMINANCE">
    <summary>Identifies the <c>OutputMaxLuminance</c> property of the effect. The property is of type FLOAT, and is specified in nits.</summary>
  </member>
  <member name="D2D1_HDRTONEMAP_PROP::D2D1_HDRTONEMAP_PROP_DISPLAY_MODE">
    <summary>Identifies the <c>DisplayMode</c> property of the effect. The property is of type <a href="https://docs.microsoft.com/windows/desktop/api/d2d1effects_2/ne-d2d1effects_2-d2d1_hdrtonemap_display_mode"><strong>D2D1_HDRTONEMAP_DISPLAY_MODE</strong></a>.</summary>
  </member>
  <member name="D2D1_MORPHOLOGY_PROP">
    <summary>
      <para>Identifiers for properties of the Morphology effect.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1effects/ne-d2d1effects-d2d1_morphology_prop" /></para>
    </summary>
  </member>
  <member name="D2D1_MORPHOLOGY_PROP::D2D1_MORPHOLOGY_PROP_MODE">
    <summary>The morphology mode.
            

The type is D2D1_MORPHOLOGY_MODE.

The default value is D2D1_MORPHOLOGY_MODE_ERODE.</summary>
  </member>
  <member name="D2D1_MORPHOLOGY_PROP::D2D1_MORPHOLOGY_PROP_WIDTH">
    <summary>Size of the kernel in the X direction. The units are in DIPs. Values must be between 1 and 100 inclusive.
            

The type is UINT.

The default value is 1.</summary>
  </member>
  <member name="D2D1_MORPHOLOGY_PROP::D2D1_MORPHOLOGY_PROP_HEIGHT">
    <summary>Size of the kernel in the Y direction. The units are in DIPs. Values must be between 1 and 100 inclusive.
            

The type is UINT.

The default value is 1.</summary>
  </member>
  <member name="ID2D1TransformedImageSource">
    <summary>
      <para>Represents an image source which shares resources with an original image source.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1_3/nn-d2d1_3-id2d1transformedimagesource" /></para>
    </summary>
  </member>
  <member name="ID2D1BitmapBrush::SetExtendModeY">
    <summary>
      <para>Specifies how the brush vertically tiles those areas that extend past its bitmap.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1/nf-d2d1-id2d1bitmapbrush-setextendmodey" /></para>
      <param name="extendModeY">A value that specifies how the brush vertically tiles those areas that extend past its bitmap.</param>
    </summary>
  </member>
  <member name="D2D1_FIGURE_BEGIN">
    <summary>
      <para>Indicates whether a specific ID2D1SimplifiedGeometrySink figure is filled or hollow.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1/ne-d2d1-d2d1_figure_begin" /></para>
    </summary>
  </member>
  <member name="D2D1_FIGURE_BEGIN::D2D1_FIGURE_BEGIN_FILLED">
    <summary>Indicates the figure will be filled by the FillGeometry (<a href="https://docs.microsoft.com/windows/win32/api/d2d1_1/nf-d2d1_1-id2d1commandsink-fillgeometry">ID2D1CommandSink::FillGeometry</a> 
          or <a href="https://docs.microsoft.com/windows/win32/api/d2d1/nf-d2d1-id2d1rendertarget-fillgeometry">ID2D1RenderTarget::FillGeometry</a>) method.</summary>
  </member>
  <member name="D2D1_FIGURE_BEGIN::D2D1_FIGURE_BEGIN_HOLLOW">
    <summary>Indicates the figure will not be filled by the FillGeometry (<a href="https://docs.microsoft.com/windows/win32/api/d2d1_1/nf-d2d1_1-id2d1commandsink-fillgeometry">ID2D1CommandSink::FillGeometry</a> 
          or <a href="https://docs.microsoft.com/windows/win32/api/d2d1/nf-d2d1-id2d1rendertarget-fillgeometry">ID2D1RenderTarget::FillGeometry</a>) method and will only consist of an outline. 
          Moreover, the bounds of a hollow figure are zero. 
          D2D1_FIGURE_BEGIN_HOLLOW should be used for stroking, or for other geometry operations.</summary>
  </member>
  <member name="ID2D1BitmapBrush1::GetInterpolationMode1">
    <summary>
      <para>Returns the current interpolation mode of the brush.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1_1/nf-d2d1_1-id2d1bitmapbrush1-getinterpolationmode1" /></para>
    </summary>
  </member>
  <member name="ID2D1CommandSink::DrawLine">
    <summary>
      <para>Draws a line drawn between two points.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1_1/nf-d2d1_1-id2d1commandsink-drawline" /></para>
      <param name="point0">The start point of the line.</param>
      <param name="point1">The end point of the line.</param>
      <param name="brush">The brush used to fill the line.</param>
      <param name="strokeWidth">The width of the stroke to fill the line.</param>
      <param name="strokeStyle">The style of the stroke. If not specified, the stroke is solid.</param>
    </summary>
  </member>
  <member name="ID2D1Brush::GetOpacity">
    <summary>
      <para>Gets the degree of opacity of this brush.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1/nf-d2d1-id2d1brush-getopacity" /></para>
    </summary>
  </member>
  <member name="D2D1MakeSkewMatrix">
    <summary>
      <para>Creates a skew transformation that has the specified x-axis angle, y-axis angle, and center point.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1/nf-d2d1-d2d1makeskewmatrix" /></para>
      <param name="angleX">The x-axis skew angle, which is measured in degrees counterclockwise from the y-axis.</param>
      <param name="angleY">The y-axis skew angle, which is measured in degrees counterclockwise from the x-axis.</param>
      <param name="center">The center point of the skew operation.</param>
      <param name="matrix">When this method returns, contains the rotation transformation. You must allocate storate for this parameter.</param>
    </summary>
  </member>
  <member name="ID2D1EffectContext::CheckFeatureSupport">
    <summary>
      <para>This indicates whether an optional capability is supported by the D3D device.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1effectauthor/nf-d2d1effectauthor-id2d1effectcontext-checkfeaturesupport" /></para>
      <param name="feature">The feature to query support for.</param>
      <param name="featureSupportData">A structure indicating information about how or if the feature is supported.</param>
      <param name="featureSupportDataSize">The size of the <i>featureSupportData</i> parameter.</param>
    </summary>
  </member>
  <member name="ID2D1LinearGradientBrush">
    <summary>
      <para>Paints an area with a linear gradient.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1/nn-d2d1-id2d1lineargradientbrush" /></para>
    </summary>
  </member>
  <member name="ID2D1ImageSourceFromWic">
    <summary>
      <para>Produces 2D pixel data that has been sourced from WIC.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1_3/nn-d2d1_3-id2d1imagesourcefromwic" /></para>
    </summary>
  </member>
  <member name="ID2D1Mesh">
    <summary>
      <para>Represents a set of vertices that form a list of triangles.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1/nn-d2d1-id2d1mesh" /></para>
    </summary>
  </member>
  <member name="ID2D1Device1">
    <summary>
      <para>Represents a resource domain whose objects and device contexts can be used together.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1_2/nn-d2d1_2-id2d1device1" /></para>
    </summary>
  </member>
  <member name="D2D1_TEMPERATUREANDTINT_PROP">
    <summary>
      <para>Identifiers for properties of the Temperature and Tint effect.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1effects_2/ne-d2d1effects_2-d2d1_temperatureandtint_prop" /></para>
    </summary>
  </member>
  <member name="D2D1_TEMPERATUREANDTINT_PROP::D2D1_TEMPERATUREANDTINT_PROP_TEMPERATURE">
    <summary>The D2D1_TEMPERATUREANDTINT_PROP_TEMPERATURE property is a float value specifying how much to increase or decrease the temperature of the input image.  The allowed range is -1.0 to 1.0. The default value is 0.0.</summary>
  </member>
  <member name="D2D1_TEMPERATUREANDTINT_PROP::D2D1_TEMPERATUREANDTINT_PROP_TINT">
    <summary>The D2D1_TEMPERATUREANDTINT_PROP_TINT property is a float value specifying how much to increase or decrease the tint of the input image.  The allowed range is -1.0 to 1.0.  The default value is 0.0.</summary>
  </member>
  <member name="ID2D1DeviceContext4::GetColorBitmapGlyphImage">
    <summary>
      <para>Retrieves an image of the color bitmap glyph from the color glyph cache.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1_3/nf-d2d1_3-id2d1devicecontext4-getcolorbitmapglyphimage" /></para>
      <param name="glyphImageFormat">The format for the glyph image.
          If there is no image data in the requested format for the requested glyph, this method will return an error.</param>
      <param name="glyphOrigin">The origin for the glyph.</param>
      <param name="fontFace">Reference to a font face which contains font face type, appropriate file references, face identification data and various font data such as metrics, names and glyph outlines.</param>
      <param name="fontEmSize">The specified font size affects the choice of which bitmap to use from the font. It also affects the output glyphTransform, causing  it to properly scale the glyph.</param>
      <param name="glyphIndex">Index of the glyph.</param>
      <param name="isSideways">If true, specifies that glyphs are rotated 90 degrees to the left and vertical metrics are used. Vertical writing is achieved by specifying isSideways as true and rotating the entire run 90 degrees to the right via a rotate transform.</param>
      <param name="worldTransform">The transform to apply to the image. This input transform affects the choice of which bitmap to use from the font. It is also factored into the output glyphTransform.</param>
      <param name="dpiX">Dots per inch along the x-axis.</param>
      <param name="dpiY">Dots per inch along the y-axis.</param>
      <param name="glyphTransform">Output transform, which transforms from the glyph's space to the same output space as the worldTransform. This includes the input
          glyphOrigin, the glyph's offset from the glyphOrigin, and any other required transformations.</param>
      <param name="glyphImage">On completion contains the retrieved glyph image.</param>
    </summary>
  </member>
  <member name="D2D1_SVG_LENGTH">
    <summary>
      <para>Represents an SVG length.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1svg/ns-d2d1svg-d2d1_svg_length" /></para>
    </summary>
  </member>
  <member name="D2D1_MAP_OPTIONS">
    <summary>
      <para>Specifies how the memory to be mapped from the corresponding ID2D1Bitmap1 should be treated.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1_1/ne-d2d1_1-d2d1_map_options" /></para>
    </summary>
  </member>
  <member name="D2D1_MAP_OPTIONS::D2D1_MAP_OPTIONS_READ">
    <summary>Allow CPU Read access.</summary>
  </member>
  <member name="D2D1_MAP_OPTIONS::D2D1_MAP_OPTIONS_WRITE">
    <summary>Allow CPU Write access.</summary>
  </member>
  <member name="D2D1_MAP_OPTIONS::D2D1_MAP_OPTIONS_DISCARD">
    <summary>Discard the previous contents of the resource when it is mapped.</summary>
  </member>
  <member name="D2D1_DISTANTSPECULAR_PROP">
    <summary>
      <para>Identifiers for properties of the Distant-specular lighting effect.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1effects/ne-d2d1effects-d2d1_distantspecular_prop" /></para>
    </summary>
  </member>
  <member name="D2D1_DISTANTSPECULAR_PROP::D2D1_DISTANTSPECULAR_PROP_AZIMUTH">
    <summary>The direction angle of the light source in the XY plane relative to the X-axis in the counter clock wise direction. The units are in degrees and must be between 0 and 360 degrees.
            

The type is FLOAT.

The default value is 0.0f.</summary>
  </member>
  <member name="D2D1_DISTANTSPECULAR_PROP::D2D1_DISTANTSPECULAR_PROP_ELEVATION">
    <summary>The direction angle of the light source in the YZ plane relative to the Y-axis in the counter clock wise direction. The units are in degrees and must be between 0 and 360 degrees.
            

The type is FLOAT.

The default value is 0.0f.</summary>
  </member>
  <member name="D2D1_DISTANTSPECULAR_PROP::D2D1_DISTANTSPECULAR_PROP_SPECULAR_EXPONENT">
    <summary>The exponent for the specular term in the Phong lighting equation. A larger value corresponds to a more reflective surface. The value is unitless and must be between 1.0 and 128.
            

The type is FLOAT.

The default value is 1.0f.</summary>
  </member>
  <member name="D2D1_DISTANTSPECULAR_PROP::D2D1_DISTANTSPECULAR_PROP_SPECULAR_CONSTANT">
    <summary>The ratio of specular reflection to the incoming light. The value is unitless and must be between 0 and 10,000.
            

The type is FLOAT.

The default value is 1.0f.</summary>
  </member>
  <member name="D2D1_DISTANTSPECULAR_PROP::D2D1_DISTANTSPECULAR_PROP_SURFACE_SCALE">
    <summary>The scale factor in the Z direction. The value is unitless and must be between 0 and 10,000.
            

The type is FLOAT.

The default value is 1.0f.</summary>
  </member>
  <member name="D2D1_DISTANTSPECULAR_PROP::D2D1_DISTANTSPECULAR_PROP_COLOR">
    <summary>The color of the incoming light. This property is exposed as a D2D1_VECTOR_3F – (R, G, B) and used to compute LR, LG, LB.
            

The type is D2D1_VECTOR_3F.

The default value is {1.0f, 1.0f, 1.0f}.</summary>
  </member>
  <member name="D2D1_DISTANTSPECULAR_PROP::D2D1_DISTANTSPECULAR_PROP_KERNEL_UNIT_LENGTH">
    <summary>The size of an element in the Sobel kernel used to generate the surface normal in the X and Y direction. This property is a D2D1_VECTOR_2F (Kernel Unit Length X, Kernel Unit Length Y) and is defined in (device-independent pixels (DIPs)/Kernel Unit). The effect uses bilinear interpolation to scale the bitmap to match size of kernel elements.
            

The type is D2D1_VECTOR_2F.

The default value is {1.0f, 1.0f}.</summary>
  </member>
  <member name="D2D1_DISTANTSPECULAR_PROP::D2D1_DISTANTSPECULAR_PROP_SCALE_MODE">
    <summary>The interpolation mode the effect uses to scale the image to the corresponding kernel unit length. There are six scale modes that range in quality and speed.
            

The type is D2D1_DISTANTSPECULAR_SCALE_MODE.

The default value is D2D1_DISTANTSPECULAR_SCALE_MODE_LINEAR.</summary>
  </member>
  <member name="ID2D1EffectContext::GetDpi">
    <summary>
      <para>Gets the unit mapping that an effect will use for properties that could be in either dots per inch (dpi) or pixels.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1effectauthor/nf-d2d1effectauthor-id2d1effectcontext-getdpi" /></para>
      <param name="dpiX">The dpi on the x-axis.</param>
      <param name="dpiY">The dpi on the y-axis.</param>
    </summary>
  </member>
  <member name="ID2D1ComputeInfo::SetResourceTexture">
    <summary>
      <para>Sets the resource texture corresponding to the given shader texture index to the given texture resource.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1effectauthor/nf-d2d1effectauthor-id2d1computeinfo-setresourcetexture" /></para>
      <param name="textureIndex">The index to set the resource texture on.</param>
      <param name="resourceTexture">The resource texture object to set on the shader texture index.</param>
    </summary>
  </member>
  <member name="D2D1_COLOR_SPACE">
    <summary>
      <para>Defines options that should be applied to the color space.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1_1/ne-d2d1_1-d2d1_color_space" /></para>
    </summary>
  </member>
  <member name="D2D1_COLOR_SPACE::D2D1_COLOR_SPACE_CUSTOM">
    <summary>The color space is otherwise described, such as with a color profile.</summary>
  </member>
  <member name="D2D1_COLOR_SPACE::D2D1_COLOR_SPACE_SRGB">
    <summary>The color space is sRGB.</summary>
  </member>
  <member name="D2D1_COLOR_SPACE::D2D1_COLOR_SPACE_SCRGB">
    <summary>The color space is scRGB.</summary>
  </member>
  <member name="ID2D1EffectImpl::PrepareForRender">
    <summary>
      <para>Prepares an effect for the rendering process.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1effectauthor/nf-d2d1effectauthor-id2d1effectimpl-prepareforrender" /></para>
      <param name="changeType">Indicates the type of change the effect should expect.</param>
    </summary>
  </member>
  <member name="ID2D1EffectContext::CreateResourceTexture">
    <summary>
      <para>Creates or finds the given resource texture, depending on whether a resource id is specified.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1effectauthor/nf-d2d1effectauthor-id2d1effectcontext-createresourcetexture" /></para>
      <param name="resourceId">An optional pointer to the unique id that identifies the lookup table.</param>
      <param name="resourceTextureProperties">The properties used to create the resource texture.</param>
      <param name="data">The optional data to be loaded into the resource texture.</param>
      <param name="strides">An optional pointer to the stride to advance through the resource texture, according to dimension.</param>
      <param name="dataSize">The size, in bytes, of the data.</param>
      <param name="resourceTexture">The returned texture that can be used as a resource in a Direct2D effect.</param>
    </summary>
  </member>
  <member name="ID2D1TransformGraph::Clear">
    <summary>
      <para>Clears the transform nodes and all connections from the transform graph.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1effectauthor/nf-d2d1effectauthor-id2d1transformgraph-clear" /></para>
    </summary>
  </member>
  <member name="ID2D1BlendTransform::SetDescription">
    <summary>
      <para>Changes the blend description of the corresponding blend transform object.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1effectauthor/nf-d2d1effectauthor-id2d1blendtransform-setdescription" /></para>
      <param name="description">The new blend description specified for the blend transform.</param>
    </summary>
  </member>
  <member name="D2D1_DISTANTSPECULAR_SCALE_MODE">
    <summary>
      <para>The interpolation mode the Distant-specular lighting effect uses to scale the image to the corresponding kernel unit length. There are six scale modes that range in quality and speed.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1effects/ne-d2d1effects-d2d1_distantspecular_scale_mode" /></para>
    </summary>
  </member>
  <member name="D2D1_DISTANTSPECULAR_SCALE_MODE::D2D1_DISTANTSPECULAR_SCALE_MODE_NEAREST_NEIGHBOR">
    <summary>Samples the nearest single point and uses that. This mode uses less processing time, but outputs the lowest quality image.</summary>
  </member>
  <member name="D2D1_DISTANTSPECULAR_SCALE_MODE::D2D1_DISTANTSPECULAR_SCALE_MODE_LINEAR">
    <summary>Uses a four point sample and linear interpolation. This mode outputs a higher quality image than nearest neighbor.</summary>
  </member>
  <member name="D2D1_DISTANTSPECULAR_SCALE_MODE::D2D1_DISTANTSPECULAR_SCALE_MODE_CUBIC">
    <summary>Uses a 16 sample cubic kernel for interpolation. This mode uses the most processing time, but outputs a higher quality image.</summary>
  </member>
  <member name="D2D1_DISTANTSPECULAR_SCALE_MODE::D2D1_DISTANTSPECULAR_SCALE_MODE_MULTI_SAMPLE_LINEAR">
    <summary>Uses 4 linear samples within a single pixel for good edge anti-aliasing. This mode is good for scaling down by small amounts on images with few pixels.</summary>
  </member>
  <member name="D2D1_DISTANTSPECULAR_SCALE_MODE::D2D1_DISTANTSPECULAR_SCALE_MODE_ANISOTROPIC">
    <summary>Uses anisotropic filtering to sample a pattern according to the transformed shape of the bitmap.</summary>
  </member>
  <member name="D2D1_DISTANTSPECULAR_SCALE_MODE::D2D1_DISTANTSPECULAR_SCALE_MODE_HIGH_QUALITY_CUBIC">
    <summary>Uses a variable size high quality cubic kernel to perform a pre-downscale the image if downscaling is involved in the transform matrix. 
          Then uses the cubic interpolation mode for the final output.</summary>
  </member>
  <member name="D2D1_PROPERTY_BINDING">
    <summary>
      <para>Defines a property binding to a pair of functions which get and set the corresponding property.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1effectauthor/ns-d2d1effectauthor-d2d1_property_binding" /></para>
    </summary>
  </member>
  <member name="D2D1_PROPERTY_BINDING::propertyName">
    <summary>The name of the property.</summary>
  </member>
  <member name="D2D1_PROPERTY_BINDING::setFunction">
    <summary>The function that will receive the data to set.</summary>
  </member>
  <member name="D2D1_PROPERTY_BINDING::getFunction">
    <summary>The function that will be asked to write the output data.</summary>
  </member>
  <member name="ID2D1BorderTransform::GetExtendModeX">
    <summary>
      <para>Gets the extend mode in the x direction.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1effectauthor/nf-d2d1effectauthor-id2d1bordertransform-getextendmodex" /></para>
    </summary>
  </member>
  <member name="ID2D1Ink::GetSegments">
    <summary>
      <para>Retrieves the specified subset of segments stored in this ink object.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1_3/nf-d2d1_3-id2d1ink-getsegments" /></para>
      <param name="startSegment">The index of the first segment in this ink object to retrieve.</param>
      <param name="segments">When this method returns, contains a pointer to an array of retrieved segments.</param>
      <param name="segmentsCount">The number of segments to retrieve. Note that segmentsCount must be less than or equal to the number of segments in the ink object minus startSegment.</param>
    </summary>
  </member>
  <member name="ID2D1DeviceContext4::DrawTextLayout">
    <summary>
      <para>Draws a text layout object. If the layout is not subsequently changed, this can be more efficient than DrawText when drawing the same layout repeatedly.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1_3/nf-d2d1_3-id2d1devicecontext4-drawtextlayout" /></para>
      <param name="origin">The point, described in device-independent pixels, at which the upper-left corner of the text described by <i>textLayout</i> is drawn.</param>
      <param name="textLayout">The formatted text to draw. Any drawing effects that do not inherit from <a href="https://docs.microsoft.com/windows/desktop/api/d2d1/nn-d2d1-id2d1resource">ID2D1Resource</a> are ignored. If there are drawing effects that inherit from <b>ID2D1Resource</b> that are not brushes, this method fails and the render target is put in an error state.</param>
      <param name="defaultFillBrush">The brush used to paint the text.</param>
      <param name="svgGlyphStyle">The values for context-fill, context-stroke, and context-value that are used when rendering SVG glyphs.</param>
      <param name="colorPaletteIndex">The index used to select a color palette within a color font.</param>
      <param name="options">A value that indicates whether the text should be snapped to pixel boundaries and whether the text should be clipped to the layout rectangle. 
            The default value is <a href="https://docs.microsoft.com/windows/desktop/api/d2d1/ne-d2d1-d2d1_draw_text_options">D2D1_DRAW_TEXT_OPTIONS_NONE</a>, 
            which indicates that text should be snapped to pixel boundaries and it should not be clipped to the layout rectangle.</param>
    </summary>
  </member>
  <member name="ID2D1SimplifiedGeometrySink::AddBeziers">
    <summary>
      <para>Creates a sequence of cubic Bezier curves and adds them to the geometry sink.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1/nf-d2d1-id2d1simplifiedgeometrysink-addbeziers" /></para>
      <param name="beziers">A pointer to an array of Bezier segments that describes the Bezier curves to create. A curve is drawn from the geometry sink's current point (the end point of the last segment drawn or the location specified by <a href="https://docs.microsoft.com/windows/win32/api/d2d1/nf-d2d1-id2d1simplifiedgeometrysink-beginfigure">BeginFigure</a>) to the end point of the first Bezier segment in the array. if the array contains additional Bezier segments, each subsequent Bezier segment uses the end point of the preceding Bezier segment as its start point.</param>
      <param name="beziersCount">The number of Bezier segments in the <i>beziers</i> array.</param>
    </summary>
  </member>
  <member name="ID2D1DeviceContext::SetUnitMode">
    <summary>
      <para>Sets what units will be used to interpret values passed into the device context.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1_1/nf-d2d1_1-id2d1devicecontext-setunitmode" /></para>
      <param name="unitMode">An enumeration defining how passed-in units will be interpreted by the device context.</param>
    </summary>
  </member>
  <member name="ID2D1EffectImpl">
    <summary>
      <para>Allows a custom effect's interface and behavior to be specified by the effect author.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1effectauthor/nn-d2d1effectauthor-id2d1effectimpl" /></para>
    </summary>
  </member>
  <member name="D2D1_IMAGE_SOURCE_LOADING_OPTIONS">
    <summary>
      <para>Controls option flags for a new ID2D1ImageSource when it is created.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1_3/ne-d2d1_3-d2d1_image_source_loading_options" /></para>
    </summary>
  </member>
  <member name="D2D1_IMAGE_SOURCE_LOADING_OPTIONS::D2D1_IMAGE_SOURCE_LOADING_OPTIONS_NONE">
    <summary>No options are used.</summary>
  </member>
  <member name="D2D1_IMAGE_SOURCE_LOADING_OPTIONS::D2D1_IMAGE_SOURCE_LOADING_OPTIONS_RELEASE_SOURCE">
    <summary>Indicates the image source should release its reference to the WIC bitmap source after it has initialized. 
        By default, the image source retains a reference to the WIC bitmap source for the lifetime of the object to enable quality and speed optimizations for printing. 
        This option disables that optimization.</summary>
  </member>
  <member name="D2D1_IMAGE_SOURCE_LOADING_OPTIONS::D2D1_IMAGE_SOURCE_LOADING_OPTIONS_CACHE_ON_DEMAND">
    <summary>Indicates the image source should only populate subregions of the image cache on-demand. You can control this behavior using 
        the <a href="https://docs.microsoft.com/windows/win32/api/d2d1_3/nf-d2d1_3-id2d1imagesourcefromwic-ensurecached(constd2d1_rect_u)">EnsureCached</a> 
          and <a href="https://docs.microsoft.com/windows/win32/api/d2d1_3/nf-d2d1_3-id2d1imagesourcefromwic-trimcache(constd2d1_rect_u)">TrimCache</a> methods. 
        This options provides the ability to improve memory usage by only keeping needed portions of the image in memory. 
        This option requires that the image source has a reference to the WIC bitmap source, and is incompatible with D2D1_IMAGE_SOURCE_LOADING_OPTIONS_RELEASE_SOURCE.</summary>
  </member>
  <member name="ID2D1TransformGraph::SetOutputNode">
    <summary>
      <para>Sets the output node for the transform graph.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1effectauthor/nf-d2d1effectauthor-id2d1transformgraph-setoutputnode" /></para>
      <param name="node">The node that will be considered the output of the transform node.</param>
    </summary>
  </member>
  <member name="ID2D1ImageBrush::GetExtendModeY">
    <summary>
      <para>Gets the extend mode of the image brush on the y-axis of the image.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1_1/nf-d2d1_1-id2d1imagebrush-getextendmodey" /></para>
    </summary>
  </member>
  <member name="ID2D1DeviceContext6::BlendImage">
    <summary>
      <para>Draws an image to the device context using the specified blend mode. Results are equivalent to using Direct2D's built-in Blend effect.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1_3/nf-d2d1_3-id2d1devicecontext6-blendimage" /></para>
      <param name="image">The image to be drawn to the device context.</param>
      <param name="blendMode">The blend mode to be used. See <a href="https://docs.microsoft.com/windows/desktop/Direct2D/blend">Blend modes</a> for more info.</param>
      <param name="targetOffset">The offset in the destination space that the image will be rendered to. 
            The entire logical extent of the image will be rendered to the corresponding destination. 
            If not specified, the destination origin will be (0, 0). 
            The top-left corner of the image will be mapped to the target offset. 
            This will not necessarily be the origin. The default value is NULL.</param>
      <param name="imageRectangle">The corresponding rectangle in the image space will be mapped to the given origins when processing the image. The default value is NULL.</param>
      <param name="interpolationMode">The interpolation mode that will be used to scale the image if necessary. The default value is D2D1_INTERPOLATION_MODE_LINEAR.</param>
    </summary>
  </member>
</doc>