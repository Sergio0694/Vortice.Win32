<?xml version="1.0" encoding="utf-8"?>
<doc>
  <member name="IWICImagingFactory::CreateQueryWriter">
    <summary>
      <para>Creates a new instance of a query writer.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//wincodec/nf-wincodec-iwicimagingfactory-createquerywriter" /></para>
      <param name="guidMetadataFormat">The GUID for the desired metadata format.</param>
      <param name="pguidVendor">The GUID for the preferred metadata writer vendor. Use <b>NULL</b> if no preferred vendor.</param>
      <param name="ppIQueryWriter">When this method returns, contains a pointer to a new <a href="https://docs.microsoft.com/windows/desktop/api/wincodec/nn-wincodec-iwicmetadataquerywriter">IWICMetadataQueryWriter</a>.</param>
    </summary>
  </member>
  <member name="IWICImagingFactory::CreateFastMetadataEncoderFromFrameDecode">
    <summary>
      <para>Creates a new instance of the fast metadata encoder based on the given image frame.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//wincodec/nf-wincodec-iwicimagingfactory-createfastmetadataencoderfromframedecode" /></para>
      <param name="pIFrameDecoder">The <a href="https://docs.microsoft.com/windows/desktop/api/wincodec/nn-wincodec-iwicbitmapframedecode">IWICBitmapFrameDecode</a> to create the <a href="https://docs.microsoft.com/windows/desktop/api/wincodec/nn-wincodec-iwicfastmetadataencoder">IWICFastMetadataEncoder</a> from.</param>
      <param name="ppIFastEncoder">When this method returns, contains a pointer to a new fast metadata encoder.</param>
    </summary>
  </member>
  <member name="IWICBitmapDecoder::GetContainerFormat">
    <summary>
      <para>Retrieves the image's container format.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//wincodec/nf-wincodec-iwicbitmapdecoder-getcontainerformat" /></para>
      <param name="pguidContainerFormat">A pointer that receives the image's container format GUID.</param>
    </summary>
  </member>
  <member name="IWICPlanarBitmapSourceTransform::CopyPixels">
    <summary>
      <para>Copies pixels into the destination planes. Configured by the supplied input parameters.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//wincodec/nf-wincodec-iwicplanarbitmapsourcetransform-copypixels" /></para>
      <param name="prcSource">The source rectangle of pixels to copy.</param>
      <param name="uiWidth">The width to scale the source bitmap.  This parameter must be equal to a value obtainable through <a href="https://docs.microsoft.com/windows/desktop/api/wincodec/nf-wincodec-iwicplanarbitmapsourcetransform-doessupporttransform">IWICPlanarBitmapSourceTransform:: DoesSupportTransform</a>.</param>
      <param name="uiHeight">The height to scale the source bitmap.  This parameter must be equal to a value obtainable through <a href="https://docs.microsoft.com/windows/desktop/api/wincodec/nf-wincodec-iwicplanarbitmapsourcetransform-doessupporttransform">IWICPlanarBitmapSourceTransform:: DoesSupportTransform</a>.</param>
      <param name="dstTransform">The desired rotation or flip to perform prior to the pixel copy.  A rotate can be combined with a flip horizontal or a flip vertical, see <a href="https://docs.microsoft.com/windows/desktop/api/wincodec/ne-wincodec-wicbitmaptransformoptions">WICBitmapTransformOptions</a>.</param>
      <param name="dstPlanarOptions">Used to specify additional configuration options for the transform.  See <a href="https://docs.microsoft.com/windows/desktop/api/wincodec/ne-wincodec-wicplanaroptions">WICPlanarOptions</a> for more detail.

WIC JPEG Decoder:
<a href="https://docs.microsoft.com/windows/desktop/api/wincodec/ne-wincodec-wicplanaroptions">WICPlanarOptionsPreserveSubsampling</a> can be specified to retain the subsampling ratios when downscaling.  By default, the JPEG decoder attempts to preserve quality by downscaling only the Y plane in some cases, changing the image to 4:4:4 chroma subsampling.</param>
      <param name="pDstPlanes">Specifies the pixel format and output buffer for each component plane.  The number of planes and pixel format of each plane must match values obtainable through  <a href="https://docs.microsoft.com/windows/desktop/api/wincodec/nf-wincodec-iwicplanarbitmapsourcetransform-doessupporttransform">IWICPlanarBitmapSourceTransform::DoesSupportTransform</a>.</param>
      <param name="cPlanes">The number of component planes specified by the <i>pDstPlanes</i> parameter.</param>
    </summary>
  </member>
  <member name="WICSerializeMetadataContent">
    <summary>
      <para>Writes metadata into a given stream.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//wincodecsdk/nf-wincodecsdk-wicserializemetadatacontent" /></para>
      <param name="guidContainerFormat">The container format GUID.</param>
      <param name="pIWriter">The metadata writer to write metadata to the stream.</param>
      <param name="dwPersistOptions">The <a href="https://docs.microsoft.com/windows/desktop/api/wincodecsdk/ne-wincodecsdk-wicpersistoptions">WICPersistOptions</a> options to use when writing the metadata.</param>
      <param name="pIStream">A pointer to the stream in which to write the metadata.</param>
    </summary>
  </member>
  <member name="IWICMetadataBlockReader">
    <summary>
      <para>Exposes methods that provide access to all of the codec's top level metadata blocks.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//wincodecsdk/nn-wincodecsdk-iwicmetadatablockreader" /></para>
    </summary>
  </member>
  <member name="IWICComponentInfo::GetComponentType">
    <summary>
      <para>Retrieves the component's WICComponentType.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//wincodec/nf-wincodec-iwiccomponentinfo-getcomponenttype" /></para>
      <param name="pType">A pointer that receives the <a href="https://docs.microsoft.com/windows/desktop/api/wincodec/ne-wincodec-wiccomponenttype">WICComponentType</a>.</param>
    </summary>
  </member>
  <member name="WICJpegYCrCbSubsamplingOption">
    <summary>
      <para>Specifies the JPEG YCrCB subsampling options.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//wincodec/ne-wincodec-wicjpegycrcbsubsamplingoption" /></para>
    </summary>
  </member>
  <member name="WICJpegYCrCbSubsamplingOption::WICJpegYCrCbSubsamplingDefault">
    <summary>The default subsampling option.</summary>
  </member>
  <member name="WICJpegYCrCbSubsamplingOption::WICJpegYCrCbSubsampling420">
    <summary>Subsampling option that uses both horizontal and vertical decimation.</summary>
  </member>
  <member name="WICJpegYCrCbSubsamplingOption::WICJpegYCrCbSubsampling422">
    <summary>Subsampling option that uses horizontal decimation  .</summary>
  </member>
  <member name="WICJpegYCrCbSubsamplingOption::WICJpegYCrCbSubsampling444">
    <summary>Subsampling option that uses no decimation.</summary>
  </member>
  <member name="WICJpegYCrCbSubsamplingOption::WICJpegYCrCbSubsampling440">
    <summary>Subsampling option that uses 2x vertical downsampling only. This option is only available in Windows 8.1 and later.</summary>
  </member>
  <member name="IWICJpegFrameEncode::GetDcHuffmanTable">
    <summary>
      <para>Retrieves a copy of the DC Huffman table for the specified scan and table.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//wincodec/nf-wincodec-iwicjpegframeencode-getdchuffmantable" /></para>
      <param name="scanIndex">The zero-based index of the scan for which data is retrieved.</param>
      <param name="tableIndex">The index of the DC Huffman table to retrieve.</param>
      <param name="pDcHuffmanTable">A pointer that receives the table data. This parameter must not be NULL.</param>
    </summary>
  </member>
  <member name="IWICBitmapFrameEncode::SetResolution">
    <summary>
      <para>Sets the physical resolution of the output image.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//wincodec/nf-wincodec-iwicbitmapframeencode-setresolution" /></para>
      <param name="dpiX">The horizontal resolution value.</param>
      <param name="dpiY">The vertical resolution value.</param>
    </summary>
  </member>
  <member name="IWICJpegFrameEncode">
    <summary>
      <para>Exposes methods for writing compressed JPEG scan data directly to the WIC encoder's output stream. Also provides access to the Huffman and quantization tables.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//wincodec/nn-wincodec-iwicjpegframeencode" /></para>
    </summary>
  </member>
  <member name="WICRawRotationCapabilities">
    <summary>
      <para>Specifies the rotation capabilities of the codec.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//wincodec/ne-wincodec-wicrawrotationcapabilities" /></para>
    </summary>
  </member>
  <member name="WICRawRotationCapabilities::WICRawRotationCapabilityNotSupported">
    <summary>Rotation is not supported.</summary>
  </member>
  <member name="WICRawRotationCapabilities::WICRawRotationCapabilityGetSupported">
    <summary>Set operations for rotation is not supported.</summary>
  </member>
  <member name="WICRawRotationCapabilities::WICRawRotationCapabilityNinetyDegreesSupported">
    <summary>90 degree rotations are supported.</summary>
  </member>
  <member name="WICRawRotationCapabilities::WICRawRotationCapabilityFullySupported">
    <summary>All rotation angles are supported.</summary>
  </member>
  <member name="IWICBitmapCodecInfo::GetContainerFormat">
    <summary>
      <para>Retrieves the container GUID associated with the codec.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//wincodec/nf-wincodec-iwicbitmapcodecinfo-getcontainerformat" /></para>
      <param name="pguidContainerFormat">Receives the container GUID.</param>
    </summary>
  </member>
  <member name="WICJpegFrameHeader">
    <summary>
      <para>Represents a JPEG frame header.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//wincodec/ns-wincodec-wicjpegframeheader" /></para>
    </summary>
  </member>
  <member name="WICJpegFrameHeader::Width">
    <summary>The width of the JPEG frame.</summary>
  </member>
  <member name="WICJpegFrameHeader::Height">
    <summary>The height of the JPEG frame.</summary>
  </member>
  <member name="WICJpegFrameHeader::TransferMatrix">
    <summary>The transfer matrix of the JPEG frame.</summary>
  </member>
  <member name="WICJpegFrameHeader::ScanType">
    <summary>The scan type of the JPEG frame.</summary>
  </member>
  <member name="WICJpegFrameHeader::cComponents">
    <summary>The number of components in the frame.</summary>
  </member>
  <member name="WICJpegFrameHeader::ComponentIdentifiers">
    <summary>The component identifiers.</summary>
  </member>
  <member name="WICJpegFrameHeader::SampleFactors">
    <summary>The sample factors. Use one of the following constants, described in <a href="https://docs.microsoft.com/windows/desktop/wic/iwicjpegframedecode-constants">IWICJpegFrameDecode Constants</a>.

<ul>
<li>WIC_JPEG_SAMPLE_FACTORS_ONE</li>
<li>WIC_JPEG_SAMPLE_FACTORS_THREE_420</li>
<li>WIC_JPEG_SAMPLE_FACTORS_THREE_422</li>
<li>WIC_JPEG_SAMPLE_FACTORS_THREE_440</li>
<li>WIC_JPEG_SAMPLE_FACTORS_THREE_444</li>
</ul></summary>
  </member>
  <member name="WICJpegFrameHeader::QuantizationTableIndices">
    <summary>The format of the quantization table indices. Use one of the following constants, described in <a href="https://docs.microsoft.com/windows/desktop/wic/iwicjpegframedecode-constants">IWICJpegFrameDecode Constants</a>.

<ul>
<li>WIC_JPEG_QUANTIZATION_BASELINE_ONE</li>
<li>WIC_JPEG_QUANTIZATION_BASELINE_THREE </li>
</ul></summary>
  </member>
  <member name="IWICBitmapEncoder::SetPreview">
    <summary>
      <para>Sets the global preview for the image.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//wincodec/nf-wincodec-iwicbitmapencoder-setpreview" /></para>
      <param name="pIPreview">The <a href="https://docs.microsoft.com/windows/desktop/api/wincodec/nn-wincodec-iwicbitmapsource">IWICBitmapSource</a> to use as the global preview.</param>
    </summary>
  </member>
  <member name="IWICImagingFactory::CreateEncoder">
    <summary>
      <para>Creates a new instance of the IWICBitmapEncoder class.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//wincodec/nf-wincodec-iwicimagingfactory-createencoder" /></para>
      <param name="guidContainerFormat">The GUID for the desired container format.

<table>
<tr>
<th>Value</th>
<th>Meaning</th>
</tr>
<tr>
<td width="40%"><a id=""></a><dl>
<dt><b></b></dt>
<dt>GUID_ContainerFormatBmp</dt>
</dl>
</td>
<td width="60%">
The BMP container format GUID.

</td>
</tr>
<tr>
<td width="40%"><a id=""></a><dl>
<dt><b></b></dt>
<dt>GUID_ContainerFormatPng</dt>
</dl>
</td>
<td width="60%">
The PNG container format GUID.

</td>
</tr>
<tr>
<td width="40%"><a id=""></a><dl>
<dt><b></b></dt>
<dt>GUID_ContainerFormatIco</dt>
</dl>
</td>
<td width="60%">
The ICO container format GUID.

</td>
</tr>
<tr>
<td width="40%"><a id=""></a><dl>
<dt><b></b></dt>
<dt>GUID_ContainerFormatJpeg</dt>
</dl>
</td>
<td width="60%">
The JPEG container format GUID.

</td>
</tr>
<tr>
<td width="40%"><a id=""></a><dl>
<dt><b></b></dt>
<dt>GUID_ContainerFormatTiff</dt>
</dl>
</td>
<td width="60%">
The TIFF container format GUID.

</td>
</tr>
<tr>
<td width="40%"><a id=""></a><dl>
<dt><b></b></dt>
<dt>GUID_ContainerFormatGif</dt>
</dl>
</td>
<td width="60%">
The GIF container format GUID.

</td>
</tr>
<tr>
<td width="40%"><a id=""></a><dl>
<dt><b></b></dt>
<dt>GUID_ContainerFormatWmp</dt>
</dl>
</td>
<td width="60%">
The HD Photo container format GUID.

</td>
</tr>
</table></param>
      <param name="pguidVendor">The GUID for the preferred encoder vendor. 

<table>
<tr>
<th>Value</th>
<th>Meaning</th>
</tr>
<tr>
<td width="40%"><a id=""></a><dl>
<dt><b></b></dt>
<dt>NULL</dt>
</dl>
</td>
<td width="60%">
No preferred codec vendor.

</td>
</tr>
<tr>
<td width="40%"><a id=""></a><dl>
<dt><b></b></dt>
<dt>GUID_VendorMicrosoft</dt>
</dl>
</td>
<td width="60%">
Prefer to use Microsoft encoder.

</td>
</tr>
<tr>
<td width="40%"><a id=""></a><dl>
<dt><b></b></dt>
<dt>GUID_VendorMicrosoftBuiltIn</dt>
</dl>
</td>
<td width="60%">
Prefer to use the native Microsoft encoder.

</td>
</tr>
</table></param>
      <param name="ppIEncoder">A pointer that receives a pointer to a new <a href="https://docs.microsoft.com/windows/desktop/api/wincodec/nn-wincodec-iwicbitmapencoder">IWICBitmapEncoder</a>.</param>
    </summary>
  </member>
  <member name="IWICMetadataQueryWriter">
    <summary>
      <para>Exposes methods for setting or removing metadata blocks and items to an encoder or its image frames using a metadata query expression.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//wincodec/nn-wincodec-iwicmetadataquerywriter" /></para>
    </summary>
  </member>
  <member name="IWICDevelopRaw::GetTint">
    <summary>
      <para>Gets the tint value of the raw image.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//wincodec/nf-wincodec-iwicdevelopraw-gettint" /></para>
      <param name="pTint">A pointer that receives the tint value of the raw image. The default value is the "as-shot" setting if it exists or 0.0. The value range for sharpness is -1.0 through +1.0. The -1.0 lower limit represents a full green bias to the image, while the 1.0 upper limit represents a full magenta bias.</param>
    </summary>
  </member>
  <member name="IWICFormatConverterInfo::CreateInstance">
    <summary>
      <para>Creates a new IWICFormatConverter instance.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//wincodec/nf-wincodec-iwicformatconverterinfo-createinstance" /></para>
      <param name="ppIConverter">A pointer that receives a new <a href="https://docs.microsoft.com/windows/desktop/api/wincodec/nn-wincodec-iwicformatconverter">IWICFormatConverter</a> instance.</param>
    </summary>
  </member>
  <member name="WICRawCapabilitiesInfo">
    <summary>
      <para>Defines raw codec capabilites.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//wincodec/ns-wincodec-wicrawcapabilitiesinfo" /></para>
    </summary>
  </member>
  <member name="WICRawCapabilitiesInfo::cbSize">
    <summary>Size of the <b>WICRawCapabilitiesInfo</b> structure.</summary>
  </member>
  <member name="WICRawCapabilitiesInfo::CodecMajorVersion">
    <summary>The codec's major version.</summary>
  </member>
  <member name="WICRawCapabilitiesInfo::CodecMinorVersion">
    <summary>The codec's minor version.</summary>
  </member>
  <member name="WICRawCapabilitiesInfo::ExposureCompensationSupport">
    <summary>The <a href="https://docs.microsoft.com/windows/desktop/api/wincodec/ne-wincodec-wicrawcapabilities">WICRawCapabilities</a> of exposure compensation support.</summary>
  </member>
  <member name="WICRawCapabilitiesInfo::ContrastSupport">
    <summary>The <a href="https://docs.microsoft.com/windows/desktop/api/wincodec/ne-wincodec-wicrawcapabilities">WICRawCapabilities</a> of contrast support.</summary>
  </member>
  <member name="WICRawCapabilitiesInfo::RGBWhitePointSupport">
    <summary>The <a href="https://docs.microsoft.com/windows/desktop/api/wincodec/ne-wincodec-wicrawcapabilities">WICRawCapabilities</a> of RGB white point support.</summary>
  </member>
  <member name="WICRawCapabilitiesInfo::NamedWhitePointSupport">
    <summary>The <a href="https://docs.microsoft.com/windows/desktop/api/wincodec/ne-wincodec-wicrawcapabilities">WICRawCapabilities</a> of <a href="https://docs.microsoft.com/windows/desktop/api/wincodec/ne-wincodec-wicnamedwhitepoint">WICNamedWhitePoint</a> support.</summary>
  </member>
  <member name="WICRawCapabilitiesInfo::NamedWhitePointSupportMask">
    <summary>The <a href="https://docs.microsoft.com/windows/desktop/api/wincodec/ne-wincodec-wicnamedwhitepoint">WICNamedWhitePoint</a> mask.</summary>
  </member>
  <member name="WICRawCapabilitiesInfo::KelvinWhitePointSupport">
    <summary>The <a href="https://docs.microsoft.com/windows/desktop/api/wincodec/ne-wincodec-wicrawcapabilities">WICRawCapabilities</a> of kelvin white point support.</summary>
  </member>
  <member name="WICRawCapabilitiesInfo::GammaSupport">
    <summary>The <a href="https://docs.microsoft.com/windows/desktop/api/wincodec/ne-wincodec-wicrawcapabilities">WICRawCapabilities</a> of gamma support.</summary>
  </member>
  <member name="WICRawCapabilitiesInfo::TintSupport">
    <summary>The <a href="https://docs.microsoft.com/windows/desktop/api/wincodec/ne-wincodec-wicrawcapabilities">WICRawCapabilities</a> of tint support.</summary>
  </member>
  <member name="WICRawCapabilitiesInfo::SaturationSupport">
    <summary>The <a href="https://docs.microsoft.com/windows/desktop/api/wincodec/ne-wincodec-wicrawcapabilities">WICRawCapabilities</a> of saturation support.</summary>
  </member>
  <member name="WICRawCapabilitiesInfo::SharpnessSupport">
    <summary>The <a href="https://docs.microsoft.com/windows/desktop/api/wincodec/ne-wincodec-wicrawcapabilities">WICRawCapabilities</a> of sharpness support.</summary>
  </member>
  <member name="WICRawCapabilitiesInfo::NoiseReductionSupport">
    <summary>The <a href="https://docs.microsoft.com/windows/desktop/api/wincodec/ne-wincodec-wicrawcapabilities">WICRawCapabilities</a> of noise reduction support.</summary>
  </member>
  <member name="WICRawCapabilitiesInfo::DestinationColorProfileSupport">
    <summary>The <a href="https://docs.microsoft.com/windows/desktop/api/wincodec/ne-wincodec-wicrawcapabilities">WICRawCapabilities</a> of destination color profile support.</summary>
  </member>
  <member name="WICRawCapabilitiesInfo::ToneCurveSupport">
    <summary>The <a href="https://docs.microsoft.com/windows/desktop/api/wincodec/ne-wincodec-wicrawcapabilities">WICRawCapabilities</a> of tone curve support.</summary>
  </member>
  <member name="WICRawCapabilitiesInfo::RotationSupport">
    <summary>The <a href="https://docs.microsoft.com/windows/desktop/api/wincodec/ne-wincodec-wicrawrotationcapabilities">WICRawRotationCapabilities</a> of rotation support.</summary>
  </member>
  <member name="WICRawCapabilitiesInfo::RenderModeSupport">
    <summary>The <a href="https://docs.microsoft.com/windows/desktop/api/wincodec/ne-wincodec-wicrawcapabilities">WICRawCapabilities</a> of <a href="https://docs.microsoft.com/windows/desktop/api/wincodec/ne-wincodec-wicrawrendermode">WICRawRenderMode</a> support.</summary>
  </member>
  <member name="IWICImagingFactory::CreateBitmapScaler">
    <summary>
      <para>Creates a new instance of an IWICBitmapScaler.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//wincodec/nf-wincodec-iwicimagingfactory-createbitmapscaler" /></para>
      <param name="ppIBitmapScaler">A pointer that receives a pointer to a new <a href="https://docs.microsoft.com/windows/desktop/api/wincodec/nn-wincodec-iwicbitmapscaler">IWICBitmapScaler</a>.</param>
    </summary>
  </member>
  <member name="IWICMetadataHandlerInfo::GetDeviceModels">
    <summary>
      <para>Retrieves the device models that support the metadata handler.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//wincodecsdk/nf-wincodecsdk-iwicmetadatahandlerinfo-getdevicemodels" /></para>
      <param name="cchDeviceModels">The length of the <i>wzDeviceModels</i> buffer.</param>
      <param name="wzDeviceModels">Pointer that receives the device models supported by the metadata handler.</param>
      <param name="pcchActual">The actual length needed to retrieve the device models.</param>
    </summary>
  </member>
  <member name="WICWebpAnmfProperties">
    <summary>
      <para>Specifies the animation frame properties of a WebP image.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//wincodec/ne-wincodec-wicwebpanmfproperties" /></para>
    </summary>
  </member>
  <member name="WICWebpAnmfProperties::WICWebpAnmfFrameDuration">
    <summary>The time to wait before displaying the next frame, in milliseconds.</summary>
  </member>
  <member name="IWICBitmapFrameEncode::WritePixels">
    <summary>
      <para>Copies scan-line data from a caller-supplied buffer to the IWICBitmapFrameEncode object.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//wincodec/nf-wincodec-iwicbitmapframeencode-writepixels" /></para>
      <param name="lineCount">The number of lines to encode.</param>
      <param name="cbStride">The <a href="https://docs.microsoft.com/">stride</a> of the image pixels.</param>
      <param name="cbBufferSize">The size of the pixel buffer.</param>
      <param name="pbPixels">A pointer to the pixel buffer.</param>
    </summary>
  </member>
  <member name="IWICComponentInfo::GetSpecVersion">
    <summary>
      <para>Retrieves the component's specification version.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//wincodec/nf-wincodec-iwiccomponentinfo-getspecversion" /></para>
      <param name="cchSpecVersion">The size of the <i>wzSpecVersion</i> buffer.</param>
      <param name="wzSpecVersion">When this method returns, contain a culture invarient string of the component's specification version. The version form is NN.NN.NN.NN.</param>
      <param name="pcchActual">A pointer that receives the actual length of the component's specification version. The specification version is optional; if a value is not specified by the component, the length returned is 0.</param>
    </summary>
  </member>
  <member name="IWICBitmapEncoder::GetMetadataQueryWriter">
    <summary>
      <para>Retrieves a metadata query writer for the encoder.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//wincodec/nf-wincodec-iwicbitmapencoder-getmetadataquerywriter" /></para>
      <param name="ppIMetadataQueryWriter">When this method returns, contains a pointer to the encoder's metadata query writer.</param>
    </summary>
  </member>
  <member name="IWICImagingFactory::CreateDecoderFromFilename">
    <summary>
      <para>Creates a new instance of the IWICBitmapDecoder class based on the given file.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//wincodec/nf-wincodec-iwicimagingfactory-createdecoderfromfilename" /></para>
      <param name="wzFilename">A pointer to a null-terminated string that specifies the name of an object to create or open.</param>
      <param name="pguidVendor">The GUID for the preferred decoder vendor. Use <b>NULL</b> if no preferred vendor.</param>
      <param name="dwDesiredAccess">The access to the object, which can be read, write, or both.
               

<table>
<tr>
<th>Value</th>
<th>Meaning</th>
</tr>
<tr>
<td width="40%">
<dl>
<dt>GENERIC_READ</dt>
</dl>
</td>
<td width="60%">
Read access.

</td>
</tr>
<tr>
<td width="40%">
<dl>
<dt>GENERIC_WRITE</dt>
</dl>
</td>
<td width="60%">
Write access.

</td>
</tr>
</table>
 

For more information, see <a href="https://docs.microsoft.com/windows/desktop/SecAuthZ/generic-access-rights">Generic Access Rights</a>.</param>
      <param name="metadataOptions">The <a href="https://docs.microsoft.com/windows/desktop/api/wincodec/ne-wincodec-wicdecodeoptions">WICDecodeOptions</a> to use when creating the decoder.</param>
      <param name="ppIDecoder">A pointer that receives a pointer to the new <a href="https://docs.microsoft.com/windows/desktop/api/wincodec/nn-wincodec-iwicbitmapdecoder">IWICBitmapDecoder</a>.</param>
    </summary>
  </member>
  <member name="IWICProgressiveLevelControl">
    <summary>
      <para>Exposes methods for obtaining information about and controlling progressive decoding.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//wincodec/nn-wincodec-iwicprogressivelevelcontrol" /></para>
    </summary>
  </member>
  <member name="IWICBitmapCodecInfo::GetColorManagementVersion">
    <summary>
      <para>Retrieves the color manangement version number the codec supports.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//wincodec/nf-wincodec-iwicbitmapcodecinfo-getcolormanagementversion" /></para>
      <param name="cchColorManagementVersion">The size of the version buffer. Use <c>0</c> on first call to determine needed buffer size.</param>
      <param name="wzColorManagementVersion">Receives the color management version number. Use <c>NULL</c> on first call to determine needed buffer size.</param>
      <param name="pcchActual">The actual buffer size needed to retrieve the full color management version number.</param>
    </summary>
  </member>
  <member name="IWICPlanarBitmapFrameEncode">
    <summary>
      <para>Allows planar component image pixels to be written to an encoder.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//wincodec/nn-wincodec-iwicplanarbitmapframeencode" /></para>
    </summary>
  </member>
  <member name="WICWebpAnimProperties">
    <summary>
      <para>Specifies the animation properties of a WebP image.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//wincodec/ne-wincodec-wicwebpanimproperties" /></para>
    </summary>
  </member>
  <member name="WICWebpAnimProperties::WICWebpAnimLoopCount">
    <summary>The number of times the animation loops. A value of 0 indicates that the animation will loop infinitely.</summary>
  </member>
  <member name="WICCreateBitmapFromSection">
    <summary>
      <para>Returns a IWICBitmapSource that is backed by the pixels of a Windows Graphics Device Interface (GDI) section handle.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//wincodec/nf-wincodec-wiccreatebitmapfromsection" /></para>
      <param name="width">The width of the bitmap pixels.</param>
      <param name="height">The height of the bitmap pixels.</param>
      <param name="pixelFormat">The pixel format of the bitmap.</param>
      <param name="hSection">The section handle. This is a file mapping object handle returned by the <a href="https://docs.microsoft.com/windows/desktop/api/winbase/nf-winbase-createfilemappinga">CreateFileMapping</a> function.</param>
      <param name="stride">The byte count of each scanline.</param>
      <param name="offset">The offset into the section.</param>
      <param name="ppIBitmap">A pointer that receives the bitmap.</param>
    </summary>
  </member>
  <member name="WICPngBkgdProperties">
    <summary>
      <para>Specifies the Portable Network Graphics (PNG) background (bKGD) chunk metadata properties.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//wincodec/ne-wincodec-wicpngbkgdproperties" /></para>
    </summary>
  </member>
  <member name="WICPngBkgdProperties::WICPngBkgdBackgroundColor">
    <summary>Indicates the background color. There are three possible types, depending on the image's pixel format.</summary>
  </member>
  <member name="IWICMetadataHandlerInfo">
    <summary>
      <para>Exposes methods that provide basic information about the registered metadata handler.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//wincodecsdk/nn-wincodecsdk-iwicmetadatahandlerinfo" /></para>
    </summary>
  </member>
  <member name="WICPngGamaProperties">
    <summary>
      <para>Specifies the Portable Network Graphics (PNG) gAMA chunk metadata properties.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//wincodec/ne-wincodec-wicpnggamaproperties" /></para>
    </summary>
  </member>
  <member name="WICPngGamaProperties::WICPngGamaGamma">
    <summary>[VT_UI4] Indicates the gamma value.</summary>
  </member>
  <member name="WICGifApplicationExtensionProperties">
    <summary>
      <para>Specifies the application extension metadata properties for a Graphics Interchange Format (GIF) image.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//wincodec/ne-wincodec-wicgifapplicationextensionproperties" /></para>
    </summary>
  </member>
  <member name="WICGifApplicationExtensionProperties::WICGifApplicationExtensionApplication">
    <summary>[VT_UI1 | VT_VECTOR] Indicates a string that identifies the application.</summary>
  </member>
  <member name="WICGifApplicationExtensionProperties::WICGifApplicationExtensionData">
    <summary>[VT_UI1 \| VT_VECTOR] Indicates data that is exposed by the application.</summary>
  </member>
  <member name="IWICBitmapClipper">
    <summary>
      <para>Exposes methods that produce a clipped version of the input bitmap for a specified rectangular region of interest.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//wincodec/nn-wincodec-iwicbitmapclipper" /></para>
    </summary>
  </member>
  <member name="IWICFormatConverterInfo">
    <summary>
      <para>Exposes methods that provide information about a pixel format converter.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//wincodec/nn-wincodec-iwicformatconverterinfo" /></para>
    </summary>
  </member>
  <member name="IWICDevelopRaw::QueryRawCapabilitiesInfo">
    <summary>
      <para>Retrieves information about which capabilities are supported for a raw image.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//wincodec/nf-wincodec-iwicdevelopraw-queryrawcapabilitiesinfo" /></para>
      <param name="pInfo">A pointer that receives <a href="https://docs.microsoft.com/windows/desktop/api/wincodec/ns-wincodec-wicrawcapabilitiesinfo">WICRawCapabilitiesInfo</a> that provides the capabilities supported by the raw image.</param>
    </summary>
  </member>
  <member name="IWICFormatConverter">
    <summary>
      <para>Represents an IWICBitmapSource that converts the image data from one pixel format to another, handling dithering and halftoning to indexed formats, palette translation and alpha thresholding.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//wincodec/nn-wincodec-iwicformatconverter" /></para>
    </summary>
  </member>
  <member name="IWICMetadataQueryReader::GetLocation">
    <summary>
      <para>Retrieves the current path relative to the root metadata block.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//wincodec/nf-wincodec-iwicmetadataqueryreader-getlocation" /></para>
      <param name="cchMaxLength">The length of the <i>wzNamespace</i> buffer.</param>
      <param name="wzNamespace">Pointer that receives the current namespace location.</param>
      <param name="pcchActualLength">The actual buffer length that was needed to retrieve the current namespace location.</param>
    </summary>
  </member>
  <member name="IWICPixelFormatInfo::GetFormatGUID">
    <summary>
      <para>Gets the pixel format GUID.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//wincodec/nf-wincodec-iwicpixelformatinfo-getformatguid" /></para>
      <param name="pFormat">Pointer that receives the pixel format GUID.</param>
    </summary>
  </member>
  <member name="IWICEnumMetadataItem::Skip">
    <summary>
      <para>Skips to given number of objects.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//wincodec/nf-wincodec-iwicenummetadataitem-skip" /></para>
      <param name="celt">The number of objects to skip.</param>
    </summary>
  </member>
  <member name="IWICMetadataWriter::SetValueByIndex">
    <summary>
      <para>Sets the metadata item to the specified index.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//wincodecsdk/nf-wincodecsdk-iwicmetadatawriter-setvaluebyindex" /></para>
      <param name="nIndex">The index to place the metadata item.</param>
      <param name="pvarSchema">Pointer to the schema property of the metadata item.</param>
      <param name="pvarId">Pointer to the id property of the metadata item.</param>
      <param name="pvarValue">Pointer to the metadata value to set at the given index.</param>
    </summary>
  </member>
  <member name="IWICBitmapCodecInfo::DoesSupportLossless">
    <summary>
      <para>Retrieves a value indicating whether the codec supports lossless formats.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//wincodec/nf-wincodec-iwicbitmapcodecinfo-doessupportlossless" /></para>
      <param name="pfSupportLossless">Receives <b>TRUE</b> if the codec supports lossless formats; otherwise, <b>FALSE</b>.</param>
    </summary>
  </member>
  <member name="IWICBitmapCodecInfo::GetMimeTypes">
    <summary>
      <para>Retrieves a comma delimited sequence of mime types associated with the codec.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//wincodec/nf-wincodec-iwicbitmapcodecinfo-getmimetypes" /></para>
      <param name="cchMimeTypes">The size of the mime types buffer.  Use <c>0</c> on first call to determine needed buffer size.</param>
      <param name="wzMimeTypes">Receives the mime types associated with the codec. Use <c>NULL</c> on first call to determine needed buffer size.</param>
      <param name="pcchActual">The actual buffer size needed to retrieve all mime types associated with the codec.</param>
    </summary>
  </member>
  <member name="IWICImagingFactory::CreateColorContext">
    <summary>
      <para>Creates a new instance of the IWICColorContext class.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//wincodec/nf-wincodec-iwicimagingfactory-createcolorcontext" /></para>
      <param name="ppIWICColorContext">A pointer that receives a pointer to a new <a href="https://docs.microsoft.com/windows/desktop/api/wincodec/nn-wincodec-iwiccolorcontext">IWICColorContext</a>.</param>
    </summary>
  </member>
  <member name="IWICPalette::InitializeFromPalette">
    <summary>
      <para>Initialize the palette based on a given palette.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//wincodec/nf-wincodec-iwicpalette-initializefrompalette" /></para>
      <param name="pIPalette">Pointer to the source palette.</param>
    </summary>
  </member>
  <member name="WICRawRenderMode">
    <summary>
      <para>Specifies the render intent of the next CopyPixels call.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//wincodec/ne-wincodec-wicrawrendermode" /></para>
    </summary>
  </member>
  <member name="WICRawRenderMode::WICRawRenderModeDraft">
    <summary>Use speed priority mode.</summary>
  </member>
  <member name="WICRawRenderMode::WICRawRenderModeNormal">
    <summary>Use normal priority mode. Balance of speed and quality.</summary>
  </member>
  <member name="WICRawRenderMode::WICRawRenderModeBestQuality">
    <summary>Use best quality mode.</summary>
  </member>
  <member name="IWICBitmapEncoder::GetContainerFormat">
    <summary>
      <para>Retrieves the encoder's container format.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//wincodec/nf-wincodec-iwicbitmapencoder-getcontainerformat" /></para>
      <param name="pguidContainerFormat">A pointer that receives the encoder's container format GUID.</param>
    </summary>
  </member>
  <member name="IWICBitmapScaler::Initialize">
    <summary>
      <para>Initializes the bitmap scaler with the provided parameters.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//wincodec/nf-wincodec-iwicbitmapscaler-initialize" /></para>
      <param name="pISource">The input bitmap source.</param>
      <param name="uiWidth">The destination width.</param>
      <param name="uiHeight">The desination height.</param>
      <param name="mode">The <a href="https://docs.microsoft.com/windows/desktop/api/wincodec/ne-wincodec-wicbitmapinterpolationmode">WICBitmapInterpolationMode</a> to use when scaling.</param>
    </summary>
  </member>
  <member name="IWICFormatConverter::CanConvert">
    <summary>
      <para>Determines if the source pixel format can be converted to the destination pixel format.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//wincodec/nf-wincodec-iwicformatconverter-canconvert" /></para>
      <param name="srcPixelFormat">The source pixel format.</param>
      <param name="dstPixelFormat">The destionation pixel format.</param>
      <param name="pfCanConvert">A pointer that receives a value indicating whether the source pixel format can be converted to the destination pixel format.</param>
    </summary>
  </member>
  <member name="IWICImageEncoder">
    <summary>
      <para>Encodes ID2D1Image interfaces to an IWICBitmapEncoder.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//wincodec/nn-wincodec-iwicimageencoder" /></para>
    </summary>
  </member>
  <member name="IWICDdsFrameDecode">
    <summary>
      <para>Provides access to a single frame of DDS image data in its native DXGI_FORMAT form, as well as information about the image data.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//wincodec/nn-wincodec-iwicddsframedecode" /></para>
    </summary>
  </member>
  <member name="IWICMetadataReader">
    <summary>
      <para>Exposes methods that provide access to underlining metadata content. This interface is implemented by independent software vendors (ISVs) to create new metadata readers.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//wincodecsdk/nn-wincodecsdk-iwicmetadatareader" /></para>
    </summary>
  </member>
  <member name="IWICMetadataQueryReader::GetEnumerator">
    <summary>
      <para>Gets an enumerator of all metadata items at the current relative location within the metadata hierarchy.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//wincodec/nf-wincodec-iwicmetadataqueryreader-getenumerator" /></para>
      <param name="ppIEnumString">A pointer to a variable that receives a pointer to the <a href="https://docs.microsoft.com/windows/desktop/api/objidl/nn-objidl-ienumstring">IEnumString</a> interface for the enumerator that contains query strings that can be used in the current <a href="https://docs.microsoft.com/windows/desktop/api/wincodec/nn-wincodec-iwicmetadataqueryreader">IWICMetadataQueryReader</a>.</param>
    </summary>
  </member>
  <member name="IWICColorContext::GetExifColorSpace">
    <summary>
      <para>Retrieves the Exchangeable Image File (EXIF) color space color context.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//wincodec/nf-wincodec-iwiccolorcontext-getexifcolorspace" /></para>
      <param name="pValue">A pointer that receives the EXIF color space color context.

<table>
<tr>
<th>Value</th>
<th>Meaning</th>
</tr>
<tr>
<td width="40%"><a id=""></a><dl>
<dt><b></b></dt>
<dt>1</dt>
</dl>
</td>
<td width="60%">
A sRGB color space.

</td>
</tr>
<tr>
<td width="40%"><a id=""></a><dl>
<dt><b></b></dt>
<dt>2</dt>
</dl>
</td>
<td width="60%">
An Adobe RGB color space.

</td>
</tr>
<tr>
<td width="40%"><a id=""></a><dl>
<dt><b></b></dt>
<dt>3 through 65534</dt>
</dl>
</td>
<td width="60%">
Unused.

</td>
</tr>
</table></param>
    </summary>
  </member>
  <member name="IWICDevelopRaw::SetRenderMode">
    <summary>
      <para>Sets the current WICRawRenderMode.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//wincodec/nf-wincodec-iwicdevelopraw-setrendermode" /></para>
      <param name="RenderMode">The render mode to use.</param>
    </summary>
  </member>
  <member name="IWICDevelopRaw::SetGamma">
    <summary>
      <para>Sets the desired gamma value.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//wincodec/nf-wincodec-iwicdevelopraw-setgamma" /></para>
      <param name="Gamma">The desired gamma value.</param>
    </summary>
  </member>
  <member name="IWICImagingFactory">
    <summary>
      <para>Exposes methods used to create components for the Windows Imaging Component (WIC) such as decoders, encoders and pixel format converters.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//wincodec/nn-wincodec-iwicimagingfactory" /></para>
    </summary>
  </member>
  <member name="IWICMetadataWriterInfo">
    <summary>
      <para>Exposes methods that provide basic information about the registered metadata writer.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//wincodecsdk/nn-wincodecsdk-iwicmetadatawriterinfo" /></para>
    </summary>
  </member>
  <member name="IWICBitmapDecoder::GetMetadataQueryReader">
    <summary>
      <para>Retrieves the metadata query reader from the decoder.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//wincodec/nf-wincodec-iwicbitmapdecoder-getmetadataqueryreader" /></para>
      <param name="ppIMetadataQueryReader">Receives a pointer to the decoder's <a href="https://docs.microsoft.com/windows/desktop/api/wincodec/nn-wincodec-iwicmetadataqueryreader">IWICMetadataQueryReader</a>.</param>
    </summary>
  </member>
  <member name="IWICComponentFactory::CreateQueryReaderFromBlockReader">
    <summary>
      <para>Creates a IWICMetadataQueryReader from the given IWICMetadataBlockReader.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//wincodecsdk/nf-wincodecsdk-iwiccomponentfactory-createqueryreaderfromblockreader" /></para>
      <param name="pIBlockReader">Pointer to the block reader to base the query reader on.</param>
      <param name="ppIQueryReader">A pointer that receives a pointer to the new metadata query reader.</param>
    </summary>
  </member>
  <member name="IWICPlanarBitmapFrameEncode::WriteSource">
    <summary>
      <para>Writes lines from the source planes to the encoded format.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//wincodec/nf-wincodec-iwicplanarbitmapframeencode-writesource" /></para>
      <param name="ppPlanes">Specifies an array of <a href="https://docs.microsoft.com/windows/desktop/api/wincodec/nn-wincodec-iwicbitmapsource">IWICBitmapSource</a> that represent image planes.</param>
      <param name="cPlanes">The number of component planes specified by the planes parameter.</param>
      <param name="prcSource">The source rectangle of pixels to encode from the <a href="https://docs.microsoft.com/windows/desktop/api/wincodec/nn-wincodec-iwicbitmapsource">IWICBitmapSource</a> planes.  Null indicates the entire source.  The source rect width must match the width set through <a href="https://docs.microsoft.com/windows/desktop/api/wincodec/nf-wincodec-iwicbitmapframeencode-setsize">SetSize</a>. Repeated <b>WriteSource</b> calls can be made as long as the total accumulated source rect height is the same as set through <b>SetSize</b>.</param>
    </summary>
  </member>
  <member name="IWICProgressiveLevelControl::GetLevelCount">
    <summary>
      <para>Gets the number of levels of progressive decoding supported by the CODEC.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//wincodec/nf-wincodec-iwicprogressivelevelcontrol-getlevelcount" /></para>
      <param name="pcLevels">Indicates the number of levels supported by the CODEC.</param>
    </summary>
  </member>
  <member name="WICBitmapPaletteType">
    <summary>
      <para>Specifies the type of palette used for an indexed image format.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//wincodec/ne-wincodec-wicbitmappalettetype" /></para>
    </summary>
  </member>
  <member name="WICBitmapPaletteType::WICBitmapPaletteTypeCustom">
    <summary>An arbitrary custom palette provided by caller.</summary>
  </member>
  <member name="WICBitmapPaletteType::WICBitmapPaletteTypeMedianCut">
    <summary>An optimal palette generated using a median-cut algorithm. Derived from the colors in an image.</summary>
  </member>
  <member name="WICBitmapPaletteType::WICBitmapPaletteTypeFixedBW">
    <summary>A black and white palette.</summary>
  </member>
  <member name="WICBitmapPaletteType::WICBitmapPaletteTypeFixedHalftone8">
    <summary>A palette that has its 8-color on-off primaries and the 16 system colors added. With duplicates removed, 16 colors are available.</summary>
  </member>
  <member name="WICBitmapPaletteType::WICBitmapPaletteTypeFixedHalftone27">
    <summary>A palette that has 3 intensity levels of each primary: 27-color on-off primaries and the 16 system colors added. With duplicates removed, 35 colors are available.</summary>
  </member>
  <member name="WICBitmapPaletteType::WICBitmapPaletteTypeFixedHalftone64">
    <summary>A palette that has 4 intensity levels of each primary: 64-color on-off primaries and the 16 system colors added. With duplicates removed, 72 colors are available.</summary>
  </member>
  <member name="WICBitmapPaletteType::WICBitmapPaletteTypeFixedHalftone125">
    <summary>A palette that has 5 intensity levels of each primary: 125-color on-off primaries and the 16 system colors added. With duplicates removed, 133 colors are available.</summary>
  </member>
  <member name="WICBitmapPaletteType::WICBitmapPaletteTypeFixedHalftone216">
    <summary>A palette that has 6 intensity levels of each primary: 216-color on-off primaries and the 16 system colors added. With duplicates removed, 224 colors are available. This is the same as <b>WICBitmapPaletteFixedHalftoneWeb</b>.</summary>
  </member>
  <member name="WICBitmapPaletteType::WICBitmapPaletteTypeFixedWebPalette">
    <summary>A palette that has 6 intensity levels of each primary: 216-color on-off primaries and the 16 system colors added. With duplicates removed, 224 colors are available. This is the same as <b>WICBitmapPaletteTypeFixedHalftone216</b>.</summary>
  </member>
  <member name="WICBitmapPaletteType::WICBitmapPaletteTypeFixedHalftone252">
    <summary>A palette that has its 252-color on-off primaries and the 16 system colors added. With duplicates removed, 256 colors are available.</summary>
  </member>
  <member name="WICBitmapPaletteType::WICBitmapPaletteTypeFixedHalftone256">
    <summary>A palette that has its 256-color on-off primaries and the 16 system colors added. With duplicates removed, 256 colors are available.</summary>
  </member>
  <member name="WICBitmapPaletteType::WICBitmapPaletteTypeFixedGray4">
    <summary>A palette that has 4 shades of gray.</summary>
  </member>
  <member name="WICBitmapPaletteType::WICBitmapPaletteTypeFixedGray16">
    <summary>A palette that has 16 shades of gray.</summary>
  </member>
  <member name="WICBitmapPaletteType::WICBitmapPaletteTypeFixedGray256">
    <summary>A palette that has 256 shades of gray.</summary>
  </member>
  <member name="IWICBitmapFlipRotator::Initialize">
    <summary>
      <para>Initializes the bitmap flip rotator with the provided parameters.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//wincodec/nf-wincodec-iwicbitmapfliprotator-initialize" /></para>
      <param name="pISource">The input bitmap source.</param>
      <param name="options">The <a href="https://docs.microsoft.com/windows/desktop/api/wincodec/ne-wincodec-wicbitmaptransformoptions">WICBitmapTransformOptions</a> to flip or rotate the image.</param>
    </summary>
  </member>
  <member name="IWICImagingFactory::CreateQueryWriterFromReader">
    <summary>
      <para>Creates a new instance of a query writer based on the given query reader. The query writer will be pre-populated with metadata from the query reader.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//wincodec/nf-wincodec-iwicimagingfactory-createquerywriterfromreader" /></para>
      <param name="pIQueryReader">The <a href="https://docs.microsoft.com/windows/desktop/api/wincodec/nn-wincodec-iwicmetadataqueryreader">IWICMetadataQueryReader</a> to create the <a href="https://docs.microsoft.com/windows/desktop/api/wincodec/nn-wincodec-iwicmetadataquerywriter">IWICMetadataQueryWriter</a> from.</param>
      <param name="pguidVendor">The GUID for the preferred metadata writer vendor. Use <b>NULL</b> if no preferred vendor.</param>
      <param name="ppIQueryWriter">When this method returns, contains a pointer to a new metadata writer.</param>
    </summary>
  </member>
  <member name="WICMetadataCreationOptions">
    <summary>
      <para>Specifies metadata creation options.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//wincodecsdk/ne-wincodecsdk-wicmetadatacreationoptions" /></para>
    </summary>
  </member>
  <member name="WICMetadataCreationOptions::WICMetadataCreationDefault">
    <summary>The default metadata creation options. The default value is <b>WICMetadataCreationAllowUnknown</b>.</summary>
  </member>
  <member name="WICMetadataCreationOptions::WICMetadataCreationAllowUnknown">
    <summary>Allow unknown metadata creation.</summary>
  </member>
  <member name="WICMetadataCreationOptions::WICMetadataCreationFailUnknown">
    <summary>Fail on unknown metadata creation.</summary>
  </member>
  <member name="WICMetadataCreationOptions::WICMetadataCreationMask">
    <summary>The <a href="https://docs.microsoft.com/windows/desktop/api/wincodecsdk/ne-wincodecsdk-wicmetadatacreationoptions">WICMetadataCreationOptions</a> mask.</summary>
  </member>
  <member name="IWICMetadataHandlerInfo::DoesRequireFullStream">
    <summary>
      <para>Determines if the handler requires a full stream.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//wincodecsdk/nf-wincodecsdk-iwicmetadatahandlerinfo-doesrequirefullstream" /></para>
      <param name="pfRequiresFullStream">Pointer that receives <b>TRUE</b> if a full stream is required; otherwise, <b>FALSE</b>.</param>
    </summary>
  </member>
  <member name="IWICImagingFactory::CreateFastMetadataEncoderFromDecoder">
    <summary>
      <para>Creates a new instance of the fast metadata encoder based on the given IWICBitmapDecoder.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//wincodec/nf-wincodec-iwicimagingfactory-createfastmetadataencoderfromdecoder" /></para>
      <param name="pIDecoder">The decoder to create the fast metadata encoder from.</param>
      <param name="ppIFastEncoder">When this method returns, contains a pointer to the new <a href="https://docs.microsoft.com/windows/desktop/api/wincodec/nn-wincodec-iwicfastmetadataencoder">IWICFastMetadataEncoder</a>.</param>
    </summary>
  </member>
  <member name="IWICBitmapFrameDecode">
    <summary>
      <para>Defines methods for decoding individual image frames of an encoded file.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//wincodec/nn-wincodec-iwicbitmapframedecode" /></para>
    </summary>
  </member>
  <member name="IWICDevelopRaw::SetSaturation">
    <summary>
      <para>Sets the saturation value of the raw image.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//wincodec/nf-wincodec-iwicdevelopraw-setsaturation" /></para>
      <param name="Saturation">The saturation value of the raw image. The value range for saturation is 0.0 through 1.0. A value of 0.0 represents an image with a fully de-saturated image, while a value of 1.0 represents the highest amount of saturation that can be applied.</param>
    </summary>
  </member>
  <member name="IWICMetadataReader::GetMetadataHandlerInfo">
    <summary>
      <para>Gets the metadata handler info associated with the reader.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//wincodecsdk/nf-wincodecsdk-iwicmetadatareader-getmetadatahandlerinfo" /></para>
      <param name="ppIHandler">Pointer that receives a pointer to the <a href="https://docs.microsoft.com/windows/desktop/api/wincodecsdk/nn-wincodecsdk-iwicmetadatahandlerinfo">IWICMetadataHandlerInfo</a>.</param>
    </summary>
  </member>
  <member name="IWICBitmapLock::GetStride">
    <summary>
      <para>Provides access to the stride value for the memory.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//wincodec/nf-wincodec-iwicbitmaplock-getstride" /></para>
      <param name="pcbStride" />
    </summary>
  </member>
  <member name="IWICPlanarFormatConverter">
    <summary>
      <para>Allows a format converter to be initialized with a planar source.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//wincodec/nn-wincodec-iwicplanarformatconverter" /></para>
    </summary>
  </member>
  <member name="IWICDevelopRaw::SetNamedWhitePoint">
    <summary>
      <para>Sets the named white point of the raw file.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//wincodec/nf-wincodec-iwicdevelopraw-setnamedwhitepoint" /></para>
      <param name="WhitePoint">A bitwise combination of the enumeration values.</param>
    </summary>
  </member>
  <member name="IWICBitmapEncoderInfo">
    <summary>
      <para>Exposes methods that provide information about an encoder.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//wincodec/nn-wincodec-iwicbitmapencoderinfo" /></para>
    </summary>
  </member>
  <member name="IWICFastMetadataEncoder::GetMetadataQueryWriter">
    <summary>
      <para>Retrieves a metadata query writer for fast metadata encoding.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//wincodec/nf-wincodec-iwicfastmetadataencoder-getmetadataquerywriter" /></para>
      <param name="ppIMetadataQueryWriter">When this method returns, contains a pointer to the fast metadata encoder's metadata query writer.</param>
    </summary>
  </member>
  <member name="IWICBitmapEncoder::Initialize">
    <summary>
      <para>Initializes the encoder with an IStream which tells the encoder where to encode the bits.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//wincodec/nf-wincodec-iwicbitmapencoder-initialize" /></para>
      <param name="pIStream">The output stream.</param>
      <param name="cacheOption">The <a href="https://docs.microsoft.com/windows/desktop/api/wincodec/ne-wincodec-wicbitmapencodercacheoption">WICBitmapEncoderCacheOption</a> used on initialization.</param>
    </summary>
  </member>
  <member name="WICRawCapabilities">
    <summary>
      <para>Specifies the capability support of a raw image.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//wincodec/ne-wincodec-wicrawcapabilities" /></para>
    </summary>
  </member>
  <member name="WICRawCapabilities::WICRawCapabilityNotSupported">
    <summary>The capability is not supported.</summary>
  </member>
  <member name="WICRawCapabilities::WICRawCapabilityGetSupported">
    <summary>The capability supports only get operations.</summary>
  </member>
  <member name="WICRawCapabilities::WICRawCapabilityFullySupported">
    <summary>The capability supports get and set operations.</summary>
  </member>
  <member name="WICGifCommentExtensionProperties">
    <summary>
      <para>Specifies the comment extension metadata properties for a Graphics Interchange Format (GIF) image.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//wincodec/ne-wincodec-wicgifcommentextensionproperties" /></para>
    </summary>
  </member>
  <member name="WICGifCommentExtensionProperties::WICGifCommentExtensionText">
    <summary>[VT_LPSTR] Indicates the comment text.</summary>
  </member>
  <member name="IWICBitmapScaler">
    <summary>
      <para>Represents a resized version of the input bitmap using a resampling or filtering algorithm.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//wincodec/nn-wincodec-iwicbitmapscaler" /></para>
    </summary>
  </member>
  <member name="IWICMetadataReaderInfo::MatchesPattern">
    <summary>
      <para>Determines if a stream contains a metadata item pattern.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//wincodecsdk/nf-wincodecsdk-iwicmetadatareaderinfo-matchespattern" /></para>
      <param name="guidContainerFormat">The container format of the metadata item.</param>
      <param name="pIStream">The stream to search for the metadata pattern.</param>
      <param name="pfMatches">Pointer that receives <c>TRUE</c> if the stream contains the pattern; otherwise, <code>FALSE</code>.</param>
    </summary>
  </member>
  <member name="IWICColorContext::InitializeFromExifColorSpace">
    <summary>
      <para>Initializes the color context using an Exchangeable Image File (EXIF) color space.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//wincodec/nf-wincodec-iwiccolorcontext-initializefromexifcolorspace" /></para>
      <param name="value">The value of the EXIF color space.

<table>
<tr>
<th>Value</th>
<th>Meaning</th>
</tr>
<tr>
<td width="40%"><a id=""></a><dl>
<dt><b></b></dt>
<dt>1</dt>
</dl>
</td>
<td width="60%">
A sRGB color space.

</td>
</tr>
<tr>
<td width="40%"><a id=""></a><dl>
<dt><b></b></dt>
<dt>2</dt>
</dl>
</td>
<td width="60%">
An Adobe RGB color space.

</td>
</tr>
</table></param>
    </summary>
  </member>
  <member name="IWICPalette::HasAlpha">
    <summary>
      <para>Indicates whether the palette contains an entry that is non-opaque (that is, an entry with an alpha that is less than 1).</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//wincodec/nf-wincodec-iwicpalette-hasalpha" /></para>
      <param name="pfHasAlpha">Pointer that receives <c>TRUE</c> if the palette contains a transparent color; otherwise, <c>FALSE</c>.</param>
    </summary>
  </member>
  <member name="IWICDdsFrameDecode::CopyBlocks">
    <summary>
      <para>Requests pixel data as it is natively stored within the DDS file.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//wincodec/nf-wincodec-iwicddsframedecode-copyblocks" /></para>
      <param name="prcBoundsInBlocks">The rectangle to copy from the source. A NULL value specifies the entire texture.

If the texture uses a block-compressed <a href="https://docs.microsoft.com/windows/desktop/api/dxgiformat/ne-dxgiformat-dxgi_format">DXGI_FORMAT</a>, all values of the rectangle are expressed in number of blocks, not pixels.</param>
      <param name="cbStride">The stride, in bytes, of the destination buffer. This represents the number of bytes from the buffer pointer to the next row of data. If the texture uses a block-compressed <a href="https://docs.microsoft.com/windows/desktop/api/dxgiformat/ne-dxgiformat-dxgi_format">DXGI_FORMAT</a>, a "row of data" is defined as a row of blocks which contains multiple pixel scanlines.</param>
      <param name="cbBufferSize">The size, in bytes, of the destination buffer.</param>
      <param name="pbBuffer">A pointer to the destination buffer.</param>
    </summary>
  </member>
  <member name="IWICDevelopRaw::SetToneCurve">
    <summary>
      <para>Sets the tone curve for the raw image.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//wincodec/nf-wincodec-iwicdevelopraw-settonecurve" /></para>
      <param name="cbToneCurveSize">The size of the <i>pToneCurve</i> structure.</param>
      <param name="pToneCurve">The desired tone curve.</param>
    </summary>
  </member>
  <member name="IWICComponentFactory::CreateQueryWriterFromBlockWriter">
    <summary>
      <para>Creates a IWICMetadataQueryWriter from the given IWICMetadataBlockWriter.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//wincodecsdk/nf-wincodecsdk-iwiccomponentfactory-createquerywriterfromblockwriter" /></para>
      <param name="pIBlockWriter">Pointer to the metadata block reader to base the metadata query writer on.</param>
      <param name="ppIQueryWriter">A pointer that receives a pointer to the new metadata query writer.</param>
    </summary>
  </member>
  <member name="IWICFormatConverterInfo::GetPixelFormats">
    <summary>
      <para>Retrieves a list of GUIDs that signify which pixel formats the converter supports.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//wincodec/nf-wincodec-iwicformatconverterinfo-getpixelformats" /></para>
      <param name="cFormats">The size of the <i>pPixelFormatGUIDs</i> array.</param>
      <param name="pPixelFormatGUIDs">Pointer to a GUID array that receives the pixel formats the converter supports.</param>
      <param name="pcActual">The actual array size needed to retrieve all pixel formats supported by the converter.</param>
    </summary>
  </member>
  <member name="WICMetadataPattern">
    <summary>
      <para>Represents a metadata pattern.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//wincodecsdk/ns-wincodecsdk-wicmetadatapattern" /></para>
    </summary>
  </member>
  <member name="WICMetadataPattern::Position">
    <summary>The position of the pattern.</summary>
  </member>
  <member name="WICMetadataPattern::Length">
    <summary>The length of the pattern.</summary>
  </member>
  <member name="WICMetadataPattern::Pattern">
    <summary>Pointer to the pattern.</summary>
  </member>
  <member name="WICMetadataPattern::Mask">
    <summary>Pointer to the pattern mask.</summary>
  </member>
  <member name="WICMetadataPattern::DataOffset">
    <summary>The offset location of the pattern.</summary>
  </member>
  <member name="IWICBitmapDecoder">
    <summary>
      <para>Exposes methods that represent a decoder.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//wincodec/nn-wincodec-iwicbitmapdecoder" /></para>
    </summary>
  </member>
  <member name="IWICMetadataReaderInfo::GetPatterns">
    <summary>
      <para>Gets the metadata patterns associated with the metadata reader.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//wincodecsdk/nf-wincodecsdk-iwicmetadatareaderinfo-getpatterns" /></para>
      <param name="guidContainerFormat">The cointainer format GUID.</param>
      <param name="cbSize">The size, in bytes, of the <i>pPattern</i> buffer.</param>
      <param name="pPattern">Pointer that receives the metadata patterns.</param>
      <param name="pcCount">Pointer that receives the number of metadata patterns.</param>
      <param name="pcbActual">Pointer that receives the size, in bytes, needed to obtain the metadata patterns.</param>
    </summary>
  </member>
  <member name="WICPngChrmProperties">
    <summary>
      <para>Specifies the Portable Network Graphics (PNG) cHRM chunk metadata properties for CIE XYZ chromaticity.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//wincodec/ne-wincodec-wicpngchrmproperties" /></para>
    </summary>
  </member>
  <member name="WICPngChrmProperties::WICPngChrmWhitePointX">
    <summary>[VT_UI4] Indicates the whitepoint x value ratio.</summary>
  </member>
  <member name="WICPngChrmProperties::WICPngChrmWhitePointY">
    <summary>[VT_UI4] Indicates the whitepoint y value ratio.</summary>
  </member>
  <member name="WICPngChrmProperties::WICPngChrmRedX">
    <summary>[VT_UI4] Indicates the red x value ratio.</summary>
  </member>
  <member name="WICPngChrmProperties::WICPngChrmRedY">
    <summary>[VT_UI4] Indicates the red y value ratio.</summary>
  </member>
  <member name="WICPngChrmProperties::WICPngChrmGreenX">
    <summary>[VT_UI4] Indicates the green x value ratio.</summary>
  </member>
  <member name="WICPngChrmProperties::WICPngChrmGreenY">
    <summary>[VT_UI4] Indicates the green y value ratio.</summary>
  </member>
  <member name="WICPngChrmProperties::WICPngChrmBlueX">
    <summary>[VT_UI4] Indicates the blue x value ratio.</summary>
  </member>
  <member name="WICPngChrmProperties::WICPngChrmBlueY">
    <summary>[VT_UI4] Indicates the blue y value ratio.</summary>
  </member>
  <member name="IWICProgressCallback">
    <summary>
      <para>IWICProgressCallback interface is documented only for compliance; its use is not recommended and may be altered or unavailable in the future. Instead, and use RegisterProgressNotification.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//wincodec/nn-wincodec-iwicprogresscallback" /></para>
    </summary>
  </member>
  <member name="IWICPixelFormatInfo::GetBitsPerPixel">
    <summary>
      <para>Gets the bits per pixel (BPP) of the pixel format.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//wincodec/nf-wincodec-iwicpixelformatinfo-getbitsperpixel" /></para>
      <param name="puiBitsPerPixel">Pointer that receives the BPP of the pixel format.</param>
    </summary>
  </member>
  <member name="WICCreateBitmapFromSectionEx">
    <summary>
      <para>Returns a IWICBitmapSource that is backed by the pixels of a Windows Graphics Device Interface (GDI) section handle.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//wincodec/nf-wincodec-wiccreatebitmapfromsectionex" /></para>
      <param name="width">The width of the bitmap pixels.</param>
      <param name="height">The height of the bitmap pixels.</param>
      <param name="pixelFormat">The pixel format of the bitmap.</param>
      <param name="hSection">The section handle. This is a file mapping object handle returned by the <a href="https://docs.microsoft.com/windows/desktop/api/winbase/nf-winbase-createfilemappinga">CreateFileMapping</a> function.</param>
      <param name="stride">The byte count of each scanline.</param>
      <param name="offset">The offset into the section.</param>
      <param name="desiredAccessLevel">The desired access level.</param>
      <param name="ppIBitmap">A pointer that receives the bitmap.</param>
    </summary>
  </member>
  <member name="IWICStream::InitializeFromIStream">
    <summary>
      <para>Initializes a stream from another stream. Access rights are inherited from the underlying stream.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//wincodec/nf-wincodec-iwicstream-initializefromistream" /></para>
      <param name="pIStream">The initialize stream.</param>
    </summary>
  </member>
  <member name="IWICMetadataWriterInfo::CreateInstance">
    <summary>
      <para>Creates an instance of an IWICMetadataWriter.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//wincodecsdk/nf-wincodecsdk-iwicmetadatawriterinfo-createinstance" /></para>
      <param name="ppIWriter">Pointer that receives a pointer to a metadata writer.</param>
    </summary>
  </member>
  <member name="IWICMetadataQueryReader::GetContainerFormat">
    <summary>
      <para>Gets the metadata query readers container format.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//wincodec/nf-wincodec-iwicmetadataqueryreader-getcontainerformat" /></para>
      <param name="pguidContainerFormat">Pointer that receives the cointainer format GUID.</param>
    </summary>
  </member>
  <member name="IWICPixelFormatInfo::GetChannelCount">
    <summary>
      <para>Gets the number of channels the pixel format contains.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//wincodec/nf-wincodec-iwicpixelformatinfo-getchannelcount" /></para>
      <param name="puiChannelCount">Pointer that receives the channel count.</param>
    </summary>
  </member>
  <member name="IWICColorContext::GetType">
    <summary>
      <para>Retrieves the color context type.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//wincodec/nf-wincodec-iwiccolorcontext-gettype" /></para>
      <param name="pType">A pointer that receives the <a href="https://docs.microsoft.com/windows/desktop/api/wincodec/ne-wincodec-wiccolorcontexttype">WICColorContextType</a> of the color context.</param>
    </summary>
  </member>
  <member name="IWICStreamProvider::GetPreferredVendorGUID">
    <summary>
      <para>Gets the preferred vendor GUID.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//wincodecsdk/nf-wincodecsdk-iwicstreamprovider-getpreferredvendorguid" /></para>
      <param name="pguidPreferredVendor">Pointer that receives the preferred vendor GUID.</param>
    </summary>
  </member>
  <member name="IWICImagingFactory::CreateFormatConverter">
    <summary>
      <para>Creates a new instance of the IWICFormatConverter class.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//wincodec/nf-wincodec-iwicimagingfactory-createformatconverter" /></para>
      <param name="ppIFormatConverter">A pointer that receives a pointer to a new <a href="https://docs.microsoft.com/windows/desktop/api/wincodec/nn-wincodec-iwicformatconverter">IWICFormatConverter</a>.</param>
    </summary>
  </member>
  <member name="IWICBitmapLock::GetPixelFormat">
    <summary>
      <para>Gets the pixel format of for the locked area of pixels. This can be used to compute the number of bytes-per-pixel in the locked area.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//wincodec/nf-wincodec-iwicbitmaplock-getpixelformat" /></para>
      <param name="pPixelFormat">A pointer that receives the pixel format GUID of the locked area.</param>
    </summary>
  </member>
  <member name="IWICImagingFactory::CreateBitmapFromSource">
    <summary>
      <para>Creates a IWICBitmap from a IWICBitmapSource.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//wincodec/nf-wincodec-iwicimagingfactory-createbitmapfromsource" /></para>
      <param name="pIBitmapSource">The <a href="https://docs.microsoft.com/windows/desktop/api/wincodec/nn-wincodec-iwicbitmapsource">IWICBitmapSource</a> to create the bitmap from.</param>
      <param name="option">The cache options of the new bitmap.  This can be one of the values in the <a href="https://docs.microsoft.com/windows/desktop/api/wincodec/ne-wincodec-wicbitmapcreatecacheoption">WICBitmapCreateCacheOption</a> enumeration.

<table>
<tr>
<th>Value</th>
<th>Meaning</th>
</tr>
<tr>
<td width="40%"><a id="WICBitmapNoCache"></a><a id="wicbitmapnocache"></a><a id="WICBITMAPNOCACHE"></a><dl>
<dt><b>WICBitmapNoCache</b></dt>
</dl>
</td>
<td width="60%">
Do not create a system memory copy. Share the bitmap with the source.


</td>
</tr>
<tr>
<td width="40%"><a id="WICBitmapCacheOnDemand"></a><a id="wicbitmapcacheondemand"></a><a id="WICBITMAPCACHEONDEMAND"></a><dl>
<dt><b>WICBitmapCacheOnDemand</b></dt>
</dl>
</td>
<td width="60%">
Create a system memory copy when the bitmap is first used.


</td>
</tr>
<tr>
<td width="40%"><a id="WICBitmapCacheOnLoad"></a><a id="wicbitmapcacheonload"></a><a id="WICBITMAPCACHEONLOAD"></a><dl>
<dt><b>WICBitmapCacheOnLoad</b></dt>
</dl>
</td>
<td width="60%">
Create a system memory copy when this method is called.


</td>
</tr>
</table></param>
      <param name="ppIBitmap">A pointer that receives a pointer to the new bitmap.</param>
    </summary>
  </member>
  <member name="IWICImagingFactory::CreateBitmapFromHICON">
    <summary>
      <para>Creates an IWICBitmap from an icon handle.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//wincodec/nf-wincodec-iwicimagingfactory-createbitmapfromhicon" /></para>
      <param name="hIcon">The icon handle to create the new bitmap from.</param>
      <param name="ppIBitmap">A pointer that receives a pointer to the new bitmap.</param>
    </summary>
  </member>
  <member name="WICHeifHdrProperties">
    <summary>
      <para>Specifies the HDR properties of a High Efficiency Image Format (HEIF) image.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//wincodec/ne-wincodec-wicheifhdrproperties" /></para>
    </summary>
  </member>
  <member name="WICHeifHdrProperties::WICHeifHdrMaximumLuminanceLevel">
    <summary>[VT_UI2] Specifies the maximum luminance level of the content in Nits.</summary>
  </member>
  <member name="WICHeifHdrProperties::WICHeifHdrMaximumFrameAverageLuminanceLevel">
    <summary>[VT_UI2] Specifies the maximum average per-frame luminance level of the content in Nits.</summary>
  </member>
  <member name="WICHeifHdrProperties::WICHeifHdrMinimumMasteringDisplayLuminanceLevel">
    <summary>[VT_UI2] Specifies the maximum luminance of the display on which the content was authored, in Nits.</summary>
  </member>
  <member name="WICHeifHdrProperties::WICHeifHdrMaximumMasteringDisplayLuminanceLevel">
    <summary>[VT_UI2] Specifies the maximum luminance of the display on which the content was authored, in Nits.</summary>
  </member>
  <member name="WICHeifHdrProperties::WICHeifHdrCustomVideoPrimaries">
    <summary>[VT_BLOB] Specifies custom color primaries for a video media type. The value of this property is a <a href="https://docs.microsoft.com/windows/desktop/api/mfapi/ns-mfapi-mt_custom_video_primaries">MT_CUSTOM_VIDEO_PRIMARIES</a>structure, returned as an array of bytes (VT_BLOB).</summary>
  </member>
  <member name="IWICBitmapDecoder::GetColorContexts">
    <summary>
      <para>Retrieves the IWICColorContext objects of the image.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//wincodec/nf-wincodec-iwicbitmapdecoder-getcolorcontexts" /></para>
      <param name="cCount">The number of color contexts to retrieve.

This value must be the size of, or smaller than, the size available to <i>ppIColorContexts</i>.</param>
      <param name="ppIColorContexts">A pointer that receives a pointer to the <a href="https://docs.microsoft.com/windows/desktop/api/wincodec/nn-wincodec-iwiccolorcontext">IWICColorContext</a>.</param>
      <param name="pcActualCount">A pointer that receives the number of color contexts contained in the image.</param>
    </summary>
  </member>
  <member name="WICDecodeOptions">
    <summary>
      <para>Specifies decode options.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//wincodec/ne-wincodec-wicdecodeoptions" /></para>
    </summary>
  </member>
  <member name="WICDecodeOptions::WICDecodeMetadataCacheOnDemand">
    <summary>Cache metadata when needed.</summary>
  </member>
  <member name="WICDecodeOptions::WICDecodeMetadataCacheOnLoad">
    <summary>Cache metadata when decoder is loaded.</summary>
  </member>
  <member name="IWICFastMetadataEncoder">
    <summary>
      <para>Exposes methods used for in-place metadata editing. A fast metadata encoder enables you to add and remove metadata to an image without having to fully re-encode the image.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//wincodec/nn-wincodec-iwicfastmetadataencoder" /></para>
    </summary>
  </member>
  <member name="IWICImagingFactory::CreateBitmapFromMemory">
    <summary>
      <para>Creates an IWICBitmap from a memory block.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//wincodec/nf-wincodec-iwicimagingfactory-createbitmapfrommemory" /></para>
      <param name="uiWidth">The width of the new bitmap.</param>
      <param name="uiHeight">The height of the new bitmap.</param>
      <param name="pixelFormat">The pixel format of the new bitmap.  For valid pixel formats, see <a href="https://docs.microsoft.com/windows/desktop/wic/-wic-codec-native-pixel-formats">Native Pixel Formats</a>.</param>
      <param name="cbStride">The number of bytes between successive scanlines in <i>pbBuffer</i>.</param>
      <param name="cbBufferSize">The size of <i>pbBuffer</i>.</param>
      <param name="pbBuffer">The buffer used to create the bitmap.</param>
      <param name="ppIBitmap">A pointer that receives a pointer to the new bitmap.</param>
    </summary>
  </member>
  <member name="IWICColorContext::InitializeFromFilename">
    <summary>
      <para>Initializes the color context from the given file.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//wincodec/nf-wincodec-iwiccolorcontext-initializefromfilename" /></para>
      <param name="wzFilename">The name of the file.</param>
    </summary>
  </member>
  <member name="WICHeifProperties">
    <summary>
      <para>Specifies the properties of a High Efficiency Image Format (HEIF) image.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//wincodec/ne-wincodec-wicheifproperties" /></para>
    </summary>
  </member>
  <member name="WICHeifProperties::WICHeifOrientation">
    <summary>[VT_UI2] Indicates the orientation of the image.

The value of this property uses the same numbering scheme as the <a href="https://docs.microsoft.com/windows/desktop/properties/props-system-photo-orientation">System.Photo.Orientation</a> property. For example, a value of 1 (PHOTO_ORIENTATION_NORMAL) indicates a 0 degree rotation.</summary>
  </member>
  <member name="IWICBitmapDecoder::QueryCapability">
    <summary>
      <para>Retrieves the capabilities of the decoder based on the specified stream.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//wincodec/nf-wincodec-iwicbitmapdecoder-querycapability" /></para>
      <param name="pIStream">The stream to retrieve the decoder capabilities from.</param>
      <param name="pdwCapability">The <a href="https://docs.microsoft.com/windows/desktop/api/wincodec/ne-wincodec-wicbitmapdecodercapabilities">WICBitmapDecoderCapabilities</a> of the decoder.</param>
    </summary>
  </member>
  <member name="IWICPixelFormatInfo2::SupportsTransparency">
    <summary>
      <para>Returns whether the format supports transparent pixels.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//wincodec/nf-wincodec-iwicpixelformatinfo2-supportstransparency" /></para>
      <param name="pfSupportsTransparency">Returns <b>TRUE</b> if the pixel format supports transparency; otherwise, <b>FALSE</b>.</param>
    </summary>
  </member>
  <member name="WICPngFilterOption">
    <summary>
      <para>Specifies the Portable Network Graphics (PNG) filters available for compression optimization.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//wincodec/ne-wincodec-wicpngfilteroption" /></para>
    </summary>
  </member>
  <member name="WICPngFilterOption::WICPngFilterUnspecified">
    <summary>Indicates an unspecified PNG filter. This enables WIC to algorithmically choose the best filtering option for the image.</summary>
  </member>
  <member name="WICPngFilterOption::WICPngFilterNone">
    <summary>Indicates no PNG filter.</summary>
  </member>
  <member name="WICPngFilterOption::WICPngFilterSub">
    <summary>Indicates a PNG sub filter.</summary>
  </member>
  <member name="WICPngFilterOption::WICPngFilterUp">
    <summary>Indicates a PNG up filter.</summary>
  </member>
  <member name="WICPngFilterOption::WICPngFilterAverage">
    <summary>Indicates a PNG average filter.</summary>
  </member>
  <member name="WICPngFilterOption::WICPngFilterPaeth">
    <summary>Indicates a PNG paeth filter.</summary>
  </member>
  <member name="WICPngFilterOption::WICPngFilterAdaptive">
    <summary>Indicates a PNG adaptive filter. This enables WIC to choose the best filtering mode on a per-scanline basis.</summary>
  </member>
  <member name="IWICPalette::InitializeCustom">
    <summary>
      <para>Initializes a palette to the custom color entries provided.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//wincodec/nf-wincodec-iwicpalette-initializecustom" /></para>
      <param name="pColors">Pointer to the color array.</param>
      <param name="cCount">The number of colors in <i>pColors</i>.</param>
    </summary>
  </member>
  <member name="IWICImagingFactory::CreateDecoderFromStream">
    <summary>
      <para>Creates a new instance of the IWICBitmapDecoder class based on the given IStream.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//wincodec/nf-wincodec-iwicimagingfactory-createdecoderfromstream" /></para>
      <param name="pIStream">The stream to create the decoder from.</param>
      <param name="pguidVendor">The GUID for the preferred decoder vendor. Use <b>NULL</b> if no preferred vendor.</param>
      <param name="metadataOptions">The <a href="https://docs.microsoft.com/windows/desktop/api/wincodec/ne-wincodec-wicdecodeoptions">WICDecodeOptions</a> to use when creating the decoder.</param>
      <param name="ppIDecoder">A pointer that receives a pointer to a new <a href="https://docs.microsoft.com/windows/desktop/api/wincodec/nn-wincodec-iwicbitmapdecoder">IWICBitmapDecoder</a>.</param>
    </summary>
  </member>
  <member name="IWICBitmapLock::GetSize">
    <summary>
      <para>Retrieves the width and height, in pixels, of the locked rectangle.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//wincodec/nf-wincodec-iwicbitmaplock-getsize" /></para>
      <param name="puiWidth">A pointer that receives the width of the locked rectangle.</param>
      <param name="puiHeight">A pointer that receives the height of the locked rectangle.</param>
    </summary>
  </member>
  <member name="WICDdsDimension">
    <summary>
      <para>Specifies the dimension type of the data contained in DDS image.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//wincodec/ne-wincodec-wicddsdimension" /></para>
    </summary>
  </member>
  <member name="WICDdsDimension::WICDdsTexture1D">
    <summary>DDS image contains a 1-dimensional texture .</summary>
  </member>
  <member name="WICDdsDimension::WICDdsTexture2D">
    <summary>DDS image contains a 2-dimensional texture .</summary>
  </member>
  <member name="WICDdsDimension::WICDdsTexture3D">
    <summary>DDS image contains a 3-dimensional texture .</summary>
  </member>
  <member name="WICDdsDimension::WICDdsTextureCube">
    <summary>The DDS image contains a cube texture represented as an array of 6 faces.</summary>
  </member>
  <member name="IWICFastMetadataEncoder::Commit">
    <summary>
      <para>Finalizes metadata changes to the image stream.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//wincodec/nf-wincodec-iwicfastmetadataencoder-commit" /></para>
    </summary>
  </member>
  <member name="IWICBitmapDecoderInfo::GetPatterns">
    <summary>
      <para>Retrieves the file pattern signatures supported by the decoder.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//wincodec/nf-wincodec-iwicbitmapdecoderinfo-getpatterns" /></para>
      <param name="cbSizePatterns">The array size of the <i>pPatterns</i> array.</param>
      <param name="pPatterns">Receives a list of <a href="https://docs.microsoft.com/windows/desktop/api/wincodec/ns-wincodec-wicbitmappattern">WICBitmapPattern</a> objects supported by the decoder.</param>
      <param name="pcPatterns">Receives the number of patterns the decoder supports.</param>
      <param name="pcbPatternsActual">Receives the actual buffer size needed to retrieve all pattern signatures supported by the decoder.</param>
    </summary>
  </member>
  <member name="IWICMetadataBlockWriter::AddWriter">
    <summary>
      <para>Adds a top-level metadata block by adding a IWICMetadataWriter for it.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//wincodecsdk/nf-wincodecsdk-iwicmetadatablockwriter-addwriter" /></para>
      <param name="pIMetadataWriter">A pointer to the metadata writer to add to the image.</param>
    </summary>
  </member>
  <member name="IWICPalette::GetColorCount">
    <summary>
      <para>Retrieves the number of colors in the color table.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//wincodec/nf-wincodec-iwicpalette-getcolorcount" /></para>
      <param name="pcCount">Pointer that receives the number of colors in the color table.</param>
    </summary>
  </member>
  <member name="IWICDdsEncoder">
    <summary>
      <para>Enables writing DDS format specific information to an encoder.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//wincodec/nn-wincodec-iwicddsencoder" /></para>
    </summary>
  </member>
  <member name="IWICMetadataBlockWriter::InitializeFromBlockReader">
    <summary>
      <para>Initializes an IWICMetadataBlockWriter from the given IWICMetadataBlockReader. This will prepopulate the metadata block writer with all the metadata in the metadata block reader.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//wincodecsdk/nf-wincodecsdk-iwicmetadatablockwriter-initializefromblockreader" /></para>
      <param name="pIMDBlockReader">Pointer to the <a href="https://docs.microsoft.com/windows/desktop/api/wincodecsdk/nn-wincodecsdk-iwicmetadatablockreader">IWICMetadataBlockReader</a> used to initialize the block writer.</param>
    </summary>
  </member>
  <member name="WICPngSrgbProperties">
    <summary>
      <para>Specifies the Portable Network Graphics (PNG) sRGB chunk metadata properties.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//wincodec/ne-wincodec-wicpngsrgbproperties" /></para>
    </summary>
  </member>
  <member name="WICPngSrgbProperties::WICPngSrgbRenderingIntent">
    <summary>[VT_UI1] Indicates the rendering intent for an sRGB color space image. The rendering intents have the following meaning.

<table>
<tr>
<th>Value</th>
<th>Meaning</th>
</tr>
<tr>
<td>0</td>
<td>Perceptual</td>
</tr>
<tr>
<td>1</td>
<td>Relative colorimetric</td>
</tr>
<tr>
<td>2</td>
<td>Saturation</td>
</tr>
<tr>
<td>3</td>
<td>Absolute colorimetric</td>
</tr>
</table></summary>
  </member>
  <member name="IWICDevelopRaw::GetRenderMode">
    <summary>
      <para>Gets the current WICRawRenderMode.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//wincodec/nf-wincodec-iwicdevelopraw-getrendermode" /></para>
      <param name="pRenderMode">A pointer that receives the current <a href="https://docs.microsoft.com/windows/desktop/api/wincodec/ne-wincodec-wicrawrendermode">WICRawRenderMode</a>.</param>
    </summary>
  </member>
  <member name="IWICDdsEncoder::GetParameters">
    <summary>
      <para>Gets DDS-specific data.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//wincodec/nf-wincodec-iwicddsencoder-getparameters" /></para>
      <param name="pParameters">Points to the structure where the information is returned.</param>
    </summary>
  </member>
  <member name="IWICDevelopRaw::GetKelvinRangeInfo">
    <summary>
      <para>Gets the information about the current Kelvin range of the raw image.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//wincodec/nf-wincodec-iwicdevelopraw-getkelvinrangeinfo" /></para>
      <param name="pMinKelvinTemp">A pointer that receives the minimum Kelvin temperature.</param>
      <param name="pMaxKelvinTemp">A pointer that receives the maximum Kelvin temperature.</param>
      <param name="pKelvinTempStepValue">A pointer that receives the Kelvin step value.</param>
    </summary>
  </member>
  <member name="WICMetadataHeader">
    <summary>
      <para>Represents metadata header.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//wincodecsdk/ns-wincodecsdk-wicmetadataheader" /></para>
    </summary>
  </member>
  <member name="WICMetadataHeader::Position">
    <summary>The position of the header.</summary>
  </member>
  <member name="WICMetadataHeader::Length">
    <summary>The length of the header.</summary>
  </member>
  <member name="WICMetadataHeader::Header">
    <summary>Pointer to the header.</summary>
  </member>
  <member name="WICMetadataHeader::DataOffset">
    <summary>The offset of the header.</summary>
  </member>
  <member name="IWICDevelopRaw::GetCurrentParameterSet">
    <summary>
      <para>Gets the current set of parameters.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//wincodec/nf-wincodec-iwicdevelopraw-getcurrentparameterset" /></para>
      <param name="ppCurrentParameterSet">A pointer that receives a pointer to the current set of parameters.</param>
    </summary>
  </member>
  <member name="IWICBitmapFrameEncode::SetPixelFormat">
    <summary>
      <para>Requests that the encoder use the specified pixel format.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//wincodec/nf-wincodec-iwicbitmapframeencode-setpixelformat" /></para>
      <param name="pPixelFormat">On input, the requested pixel format GUID. On output, the closest pixel format GUID supported by the encoder; this may be different than the requested format. For a list of pixel format GUIDs, see <a href="https://docs.microsoft.com/windows/desktop/wic/-wic-codec-native-pixel-formats">Native Pixel Formats</a>.</param>
    </summary>
  </member>
  <member name="IWICBitmapEncoder">
    <summary>
      <para>Defines methods for setting an encoder's properties such as thumbnails, frames, and palettes.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//wincodec/nn-wincodec-iwicbitmapencoder" /></para>
    </summary>
  </member>
  <member name="IWICBitmapSourceTransform::CopyPixels">
    <summary>
      <para>Copies pixel data using the supplied input parameters.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//wincodec/nf-wincodec-iwicbitmapsourcetransform-copypixels" /></para>
      <param name="prc">The rectangle of pixels to copy.</param>
      <param name="uiWidth">The width to scale the source bitmap. This parameter must equal the value obtainable through <a href="https://docs.microsoft.com/windows/desktop/api/wincodec/nf-wincodec-iwicbitmapsourcetransform-getclosestsize">IWICBitmapSourceTransform::GetClosestSize</a>.</param>
      <param name="uiHeight">The height to scale the source bitmap. This parameter must equal the value obtainable through <a href="https://docs.microsoft.com/windows/desktop/api/wincodec/nf-wincodec-iwicbitmapsourcetransform-getclosestsize">IWICBitmapSourceTransform::GetClosestSize</a>.</param>
      <param name="pguidDstFormat">The GUID of desired pixel format in which the pixels should be returned. 
               

This GUID must be a format obtained through an <a href="https://docs.microsoft.com/windows/desktop/api/wincodec/nf-wincodec-iwicbitmapsourcetransform-getclosestpixelformat">GetClosestPixelFormat</a> call.</param>
      <param name="dstTransform">The desired rotation or flip to perform prior to the pixel copy.
               

The transform must be an operation supported by an <a href="https://docs.microsoft.com/windows/desktop/api/wincodec/nf-wincodec-iwicbitmapsourcetransform-doessupporttransform">DoesSupportTransform</a> call.

If a <i>dstTransform</i> is specified, <i>nStride</i> is the <i>transformed stride</i> and is based on the <i>pguidDstFormat</i> pixel format, not the original source's pixel format.</param>
      <param name="nStride">The <a href="https://docs.microsoft.com/">stride</a> of the destination buffer.</param>
      <param name="cbBufferSize">The size of the destination buffer.</param>
      <param name="pbBuffer">The output buffer.</param>
    </summary>
  </member>
  <member name="IWICPlanarBitmapSourceTransform">
    <summary>
      <para>Provides access to planar Y’CbCr pixel formats where pixel components are stored in separate component planes.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//wincodec/nn-wincodec-iwicplanarbitmapsourcetransform" /></para>
    </summary>
  </member>
  <member name="WICPlanarOptions">
    <summary>
      <para>Specifies additional options to an IWICPlanarBitmapSourceTransform implementation.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//wincodec/ne-wincodec-wicplanaroptions" /></para>
    </summary>
  </member>
  <member name="WICPlanarOptions::WICPlanarOptionsDefault">
    <summary>No options specified.  



WIC JPEG Decoder:  The default behavior for iDCT scaling is to preserve quality when downscaling by downscaling only the Y plane in some cases, and the image may change to 4:4:4 chroma subsampling.</summary>
  </member>
  <member name="WICPlanarOptions::WICPlanarOptionsPreserveSubsampling">
    <summary>Asks the source to preserve the size ratio between planes when scaling.

WIC JPEG Decoder:  Specifying this option causes the JPEG decoder to scale luma and chroma planes by the same amount, so a 4:2:0 chroma subsampled image outputs 4:2:0 data when downscaling by 2x, 4x, or 8x.</summary>
  </member>
  <member name="IWICDdsFrameDecode::GetSizeInBlocks">
    <summary>
      <para>Gets the width and height, in blocks, of the DDS image.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//wincodec/nf-wincodec-iwicddsframedecode-getsizeinblocks" /></para>
      <param name="pWidthInBlocks">The width of the DDS image in blocks.</param>
      <param name="pHeightInBlocks">The height of the DDS image in blocks.</param>
    </summary>
  </member>
  <member name="IWICBitmapCodecInfo::DoesSupportAnimation">
    <summary>
      <para>Retrieves a value indicating whether the codec supports animation.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//wincodec/nf-wincodec-iwicbitmapcodecinfo-doessupportanimation" /></para>
      <param name="pfSupportAnimation">Receives <b>TRUE</b> if the codec supports images with timing information; otherwise, <b>FALSE</b>.</param>
    </summary>
  </member>
  <member name="IWICImagingFactory::CreateBitmap">
    <summary>
      <para>Creates an IWICBitmap object.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//wincodec/nf-wincodec-iwicimagingfactory-createbitmap" /></para>
      <param name="uiWidth">The width of the new bitmap .</param>
      <param name="uiHeight">The height of the new bitmap.</param>
      <param name="pixelFormat">The pixel format of the new bitmap.</param>
      <param name="option">The cache creation options of the new bitmap. This can be one of the values in the <a href="https://docs.microsoft.com/windows/desktop/api/wincodec/ne-wincodec-wicbitmapcreatecacheoption">WICBitmapCreateCacheOption</a> enumeration.

<table>
<tr>
<th>Value</th>
<th>Meaning</th>
</tr>
<tr>
<td width="40%"><a id="WICBitmapCacheOnDemand"></a><a id="wicbitmapcacheondemand"></a><a id="WICBITMAPCACHEONDEMAND"></a><dl>
<dt><b>WICBitmapCacheOnDemand</b></dt>
</dl>
</td>
<td width="60%">
Allocates system memory for the bitmap at initialization.

</td>
</tr>
<tr>
<td width="40%"><a id="WICBitmapCacheOnLoad"></a><a id="wicbitmapcacheonload"></a><a id="WICBITMAPCACHEONLOAD"></a><dl>
<dt><b>WICBitmapCacheOnLoad</b></dt>
</dl>
</td>
<td width="60%">
Allocates system memory for the bitmap when the bitmap is first used.

</td>
</tr>
<tr>
<td width="40%"><a id="WICBitmapNoCache"></a><a id="wicbitmapnocache"></a><a id="WICBITMAPNOCACHE"></a><dl>
<dt><b>WICBitmapNoCache</b></dt>
</dl>
</td>
<td width="60%">
This option is not valid for this method and should not be used.

</td>
</tr>
</table></param>
      <param name="ppIBitmap">A pointer that receives a pointer to the new bitmap.</param>
    </summary>
  </member>
  <member name="IWICJpegFrameDecode::GetAcHuffmanTable">
    <summary>
      <para>Retrieves a copy of the AC Huffman table for the specified scan and table.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//wincodec/nf-wincodec-iwicjpegframedecode-getachuffmantable" /></para>
      <param name="scanIndex">The zero-based index of the scan for which data is retrieved.</param>
      <param name="tableIndex">The index of the AC Huffman table to retrieve. Valid indices for a given scan can be determined by retrieving the scan header with <a href="https://docs.microsoft.com/windows/desktop/api/wincodec/nf-wincodec-iwicjpegframedecode-getscanheader">IWICJpegFrameDecode::GetScanHeader</a>.</param>
      <param name="pAcHuffmanTable">A pointer that receives the table data. This parameter must not be NULL.</param>
    </summary>
  </member>
  <member name="IWICDevelopRaw::LoadParameterSet">
    <summary>
      <para>Sets the desired WICRawParameterSet option.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//wincodec/nf-wincodec-iwicdevelopraw-loadparameterset" /></para>
      <param name="ParameterSet">The desired <a href="https://docs.microsoft.com/windows/desktop/api/wincodec/ne-wincodec-wicrawparameterset">WICRawParameterSet</a> option.</param>
    </summary>
  </member>
  <member name="IWICBitmapSourceTransform::DoesSupportTransform">
    <summary>
      <para>Determines whether a specific transform option is supported natively by the implementation of the IWICBitmapSourceTransform interface.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//wincodec/nf-wincodec-iwicbitmapsourcetransform-doessupporttransform" /></para>
      <param name="dstTransform">The <a href="https://docs.microsoft.com/windows/desktop/api/wincodec/ne-wincodec-wicbitmaptransformoptions">WICBitmapTransformOptions</a> to check if they are supported.</param>
      <param name="pfIsSupported">A pointer that receives a value specifying whether the transform option is supported.</param>
    </summary>
  </member>
  <member name="IWICPalette::IsGrayscale">
    <summary>
      <para>Retrieves a value that describes whether a palette is grayscale.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//wincodec/nf-wincodec-iwicpalette-isgrayscale" /></para>
      <param name="pfIsGrayscale">A pointer to a variable that receives a boolean value that indicates whether the palette is grayscale. <b>TRUE</b> indicates that the palette is grayscale; otherwise <b>FALSE</b>.</param>
    </summary>
  </member>
  <member name="IWICImagingFactory2">
    <summary>
      <para>An extension of the WIC factory interface that includes the ability to create an IWICImageEncoder.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//wincodec/nn-wincodec-iwicimagingfactory2" /></para>
    </summary>
  </member>
  <member name="IWICBitmapFrameEncode::SetThumbnail">
    <summary>
      <para>Sets the frame thumbnail if supported by the codec.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//wincodec/nf-wincodec-iwicbitmapframeencode-setthumbnail" /></para>
      <param name="pIThumbnail">The bitmap source to use as the thumbnail.</param>
    </summary>
  </member>
  <member name="IWICPalette::GetType">
    <summary>
      <para>Retrieves the WICBitmapPaletteType that describes the palette.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//wincodec/nf-wincodec-iwicpalette-gettype" /></para>
      <param name="pePaletteType">Pointer that receives the palette type of the bimtap.</param>
    </summary>
  </member>
  <member name="WICProgressOperation">
    <summary>
      <para>Specifies the progress operations to receive notifications for.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//wincodec/ne-wincodec-wicprogressoperation" /></para>
    </summary>
  </member>
  <member name="WICProgressOperation::WICProgressOperationCopyPixels">
    <summary>Receive copy pixel operation.</summary>
  </member>
  <member name="WICProgressOperation::WICProgressOperationWritePixels">
    <summary>Receive write pixel operation.</summary>
  </member>
  <member name="WICProgressOperation::WICProgressOperationAll">
    <summary>Receive all progress operations available.</summary>
  </member>
  <member name="IWICImagingFactory::CreateColorTransformer">
    <summary>
      <para>Creates a new instance of the IWICColorTransform class.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//wincodec/nf-wincodec-iwicimagingfactory-createcolortransformer" /></para>
      <param name="ppIWICColorTransform">A pointer that receives a pointer to a new <a href="https://docs.microsoft.com/windows/desktop/api/wincodec/nn-wincodec-iwiccolortransform">IWICColorTransform</a>.</param>
    </summary>
  </member>
  <member name="IWICMetadataBlockWriter::GetWriterByIndex">
    <summary>
      <para>Retrieves the IWICMetadataWriter that resides at the specified index.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//wincodecsdk/nf-wincodecsdk-iwicmetadatablockwriter-getwriterbyindex" /></para>
      <param name="nIndex">The index of the metadata writer to be retrieved. This index is zero-based.</param>
      <param name="ppIMetadataWriter">When this method returns, contains a pointer to the metadata writer that resides at the specified index.</param>
    </summary>
  </member>
  <member name="IWICPixelFormatInfo">
    <summary>
      <para>Exposes methods that provide information about a pixel format.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//wincodec/nn-wincodec-iwicpixelformatinfo" /></para>
    </summary>
  </member>
  <member name="IWICBitmapEncoder::GetEncoderInfo">
    <summary>
      <para>Retrieves an IWICBitmapEncoderInfo for the encoder.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//wincodec/nf-wincodec-iwicbitmapencoder-getencoderinfo" /></para>
      <param name="ppIEncoderInfo">A pointer that receives a pointer to an <a href="https://docs.microsoft.com/windows/desktop/api/wincodec/nn-wincodec-iwicbitmapencoderinfo">IWICBitmapEncoderInfo</a>.</param>
    </summary>
  </member>
  <member name="IWICBitmapDecoder::GetFrameCount">
    <summary>
      <para>Retrieves the total number of frames in the image.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//wincodec/nf-wincodec-iwicbitmapdecoder-getframecount" /></para>
      <param name="pCount">A pointer that receives the total number of frames in the image.</param>
    </summary>
  </member>
  <member name="IWICMetadataBlockWriter">
    <summary>
      <para>Exposes methods that enable the encoding of metadata. This interface is implemented by the decoder and its image frames.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//wincodecsdk/nn-wincodecsdk-iwicmetadatablockwriter" /></para>
    </summary>
  </member>
  <member name="IWICJpegFrameDecode::GetDcHuffmanTable">
    <summary>
      <para>Retrieves a copy of the DC Huffman table for the specified scan and table.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//wincodec/nf-wincodec-iwicjpegframedecode-getdchuffmantable" /></para>
      <param name="scanIndex">The zero-based index of the scan for which data is retrieved.</param>
      <param name="tableIndex">The index of the DC Huffman table to retrieve. Valid indices for a given scan can be determined by retrieving the scan header with <a href="https://docs.microsoft.com/windows/desktop/api/wincodec/nf-wincodec-iwicjpegframedecode-getscanheader">IWICJpegFrameDecode::GetScanHeader</a>.</param>
      <param name="pDcHuffmanTable">A pointer that receives the table data. This parameter must not be NULL.</param>
    </summary>
  </member>
  <member name="IWICImageEncoder::WriteFrameThumbnail">
    <summary>
      <para>Encodes the image as a thumbnail to the frame given by the IWICBitmapFrameEncode.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//wincodec/nf-wincodec-iwicimageencoder-writeframethumbnail" /></para>
      <param name="pImage">The Direct2D image that will be encoded.</param>
      <param name="pFrameEncode">The frame encoder on which the thumbnail is set.</param>
      <param name="pImageParameters">Additional parameters to control encoding.</param>
    </summary>
  </member>
  <member name="WICPngIccpProperties">
    <summary>
      <para>Specifies the Portable Network Graphics (PNG) iCCP chunk metadata properties.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//wincodec/ne-wincodec-wicpngiccpproperties" /></para>
    </summary>
  </member>
  <member name="WICPngIccpProperties::WICPngIccpProfileName">
    <summary>[VT_LPSTR] Indicates the International Color Consortium (ICC) profile name.</summary>
  </member>
  <member name="WICPngIccpProperties::WICPngIccpProfileData">
    <summary>[VT_VECTOR \| VT_UI1] Indicates the embedded ICC profile.</summary>
  </member>
  <member name="IWICEnumMetadataItem">
    <summary>
      <para>Exposes methods that provide enumeration services for individual metadata items.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//wincodec/nn-wincodec-iwicenummetadataitem" /></para>
    </summary>
  </member>
  <member name="IWICImagingFactory::CreateBitmapFromSourceRect">
    <summary>
      <para>Creates an IWICBitmap from a specified rectangle of an IWICBitmapSource.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//wincodec/nf-wincodec-iwicimagingfactory-createbitmapfromsourcerect" /></para>
      <param name="pIBitmapSource">The <a href="https://docs.microsoft.com/windows/desktop/api/wincodec/nn-wincodec-iwicbitmapsource">IWICBitmapSource</a> to create the bitmap from.</param>
      <param name="x">The horizontal coordinate of the upper-left corner of the rectangle.</param>
      <param name="y">The vertical coordinate of the upper-left corner of the rectangle.</param>
      <param name="width">The width of the rectangle and the new bitmap.</param>
      <param name="height">The height of the rectangle and the new bitmap.</param>
      <param name="ppIBitmap">A pointer that receives a pointer to the new bitmap.</param>
    </summary>
  </member>
  <member name="WICBitmapDitherType">
    <summary>
      <para>Specifies the type of dither algorithm to apply when converting between image formats.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//wincodec/ne-wincodec-wicbitmapdithertype" /></para>
    </summary>
  </member>
  <member name="WICBitmapDitherType::WICBitmapDitherTypeNone">
    <summary>A solid color algorithm without dither.</summary>
  </member>
  <member name="WICBitmapDitherType::WICBitmapDitherTypeSolid">
    <summary>A solid color algorithm without dither.</summary>
  </member>
  <member name="WICBitmapDitherType::WICBitmapDitherTypeOrdered4x4">
    <summary>A 4x4 ordered dither algorithm.</summary>
  </member>
  <member name="WICBitmapDitherType::WICBitmapDitherTypeOrdered8x8">
    <summary>An 8x8 ordered dither algorithm.</summary>
  </member>
  <member name="WICBitmapDitherType::WICBitmapDitherTypeOrdered16x16">
    <summary>A 16x16 ordered dither algorithm.</summary>
  </member>
  <member name="WICBitmapDitherType::WICBitmapDitherTypeSpiral4x4">
    <summary>A 4x4 spiral dither algorithm.</summary>
  </member>
  <member name="WICBitmapDitherType::WICBitmapDitherTypeSpiral8x8">
    <summary>An 8x8 spiral dither algorithm.</summary>
  </member>
  <member name="WICBitmapDitherType::WICBitmapDitherTypeDualSpiral4x4">
    <summary>A 4x4 dual spiral dither algorithm.</summary>
  </member>
  <member name="WICBitmapDitherType::WICBitmapDitherTypeDualSpiral8x8">
    <summary>An 8x8 dual spiral dither algorithm.</summary>
  </member>
  <member name="WICBitmapDitherType::WICBitmapDitherTypeErrorDiffusion">
    <summary>An error diffusion algorithm.</summary>
  </member>
  <member name="IWICBitmapFrameDecode::GetThumbnail">
    <summary>
      <para>Retrieves a small preview of the frame, if supported by the codec.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//wincodec/nf-wincodec-iwicbitmapframedecode-getthumbnail" /></para>
      <param name="ppIThumbnail">A pointer that receives a pointer to the <a href="https://docs.microsoft.com/windows/desktop/api/wincodec/nn-wincodec-iwicbitmapsource">IWICBitmapSource</a> of the thumbnail.</param>
    </summary>
  </member>
  <member name="IWICBitmapDecoder::GetDecoderInfo">
    <summary>
      <para>Retrieves an IWICBitmapDecoderInfo for the image.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//wincodec/nf-wincodec-iwicbitmapdecoder-getdecoderinfo" /></para>
      <param name="ppIDecoderInfo">A pointer that receives a pointer to an <a href="https://docs.microsoft.com/windows/desktop/api/wincodec/nn-wincodec-iwicbitmapdecoderinfo">IWICBitmapDecoderInfo</a>.</param>
    </summary>
  </member>
  <member name="IWICBitmapCodecInfo::MatchesMimeType">
    <summary>
      <para>Retrieves a value indicating whether the given mime type matches the mime type of the codec.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//wincodec/nf-wincodec-iwicbitmapcodecinfo-matchesmimetype" /></para>
      <param name="wzMimeType">The mime type to compare.</param>
      <param name="pfMatches">Receives <b>TRUE</b> if the mime types match; otherwise, <b>FALSE</b>.</param>
    </summary>
  </member>
  <member name="IWICPlanarBitmapSourceTransform::DoesSupportTransform">
    <summary>
      <para>Use this method to determine if a desired planar output is supported and allow the caller to choose an optimized code path if it is.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//wincodec/nf-wincodec-iwicplanarbitmapsourcetransform-doessupporttransform" /></para>
      <param name="puiWidth">On input, the desired width.  On output, the closest supported width to the desired width; this is the same size or larger than the desired width.</param>
      <param name="puiHeight">On input, the desired height.  On output, the closest supported height to the desired height; this is the same size or larger than the desired width.</param>
      <param name="dstTransform">The desired rotation or flip operation.  Multiple  <a href="https://docs.microsoft.com/windows/desktop/api/wincodec/ne-wincodec-wicbitmaptransformoptions">WICBitmapTransformOptions</a> can be combined in this flag parameter, see <b>WICBitmapTransformOptions</b>.</param>
      <param name="dstPlanarOptions">Used to specify additional configuration options for the transform.  See <a href="https://docs.microsoft.com/windows/desktop/api/wincodec/ne-wincodec-wicplanaroptions">WICPlanarOptions</a> for more detail.



WIC JPEG Decoder:


<a href="https://docs.microsoft.com/windows/desktop/api/wincodec/ne-wincodec-wicplanaroptions">WICPlanarOptionsPreserveSubsampling</a> can be specified to retain the subsampling ratios when downscaling.  By default, the JPEG decoder attempts to preserve quality by downscaling only the Y plane in some cases, changing the image to 4:4:4 chroma subsampling.</param>
      <param name="pguidDstFormats">The requested pixel formats of the respective planes.</param>
      <param name="pPlaneDescriptions">When *<i>pfIsSupported</i> == TRUE, the array of plane descriptions contains the size and format of each of the planes.



WIC JPEG Decoder: The Cb and Cr planes can be a different size from the values returned by <i>puiWidth</i> and <i>puiHeight</i> due to chroma subsampling.</param>
      <param name="cPlanes">The number of component planes requested.</param>
      <param name="pfIsSupported">Set to TRUE if the requested transforms are natively supported.</param>
    </summary>
  </member>
  <member name="WICBitmapCreateCacheOption">
    <summary>
      <para>Specifies the desired cache usage.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//wincodec/ne-wincodec-wicbitmapcreatecacheoption" /></para>
    </summary>
  </member>
  <member name="WICBitmapCreateCacheOption::WICBitmapNoCache">
    <summary>Do not cache the bitmap.</summary>
  </member>
  <member name="WICBitmapCreateCacheOption::WICBitmapCacheOnDemand">
    <summary>Cache the bitmap when needed.</summary>
  </member>
  <member name="WICBitmapCreateCacheOption::WICBitmapCacheOnLoad">
    <summary>Cache the bitmap at initialization.</summary>
  </member>
  <member name="IWICMetadataBlockReader::GetContainerFormat">
    <summary>
      <para>Retrieves the container format of the decoder.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//wincodecsdk/nf-wincodecsdk-iwicmetadatablockreader-getcontainerformat" /></para>
      <param name="pguidContainerFormat">The container format of the decoder. The native container format GUIDs are listed in <a href="https://docs.microsoft.com/windows/desktop/wic/-wic-guids-clsids">WIC GUIDs and CLSIDs</a>.</param>
    </summary>
  </member>
  <member name="IWICStreamProvider">
    <summary>
      <para>Exposes methods for a stream provider.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//wincodecsdk/nn-wincodecsdk-iwicstreamprovider" /></para>
    </summary>
  </member>
  <member name="IWICComponentInfo">
    <summary>
      <para>Exposes methods that provide component information.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//wincodec/nn-wincodec-iwiccomponentinfo" /></para>
    </summary>
  </member>
  <member name="IWICBitmapCodecInfo::DoesSupportMultiframe">
    <summary>
      <para>Retrieves a value indicating whether the codec supports multi frame images.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//wincodec/nf-wincodec-iwicbitmapcodecinfo-doessupportmultiframe" /></para>
      <param name="pfSupportMultiframe">Receives <b>TRUE</b> if the codec supports multi frame images; otherwise, <b>FALSE</b>.</param>
    </summary>
  </member>
  <member name="IWICPlanarBitmapFrameEncode::WritePixels">
    <summary>
      <para>Writes lines from the source planes to the encoded format.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//wincodec/nf-wincodec-iwicplanarbitmapframeencode-writepixels" /></para>
      <param name="lineCount">The number of lines to encode.  See the Remarks section for WIC Jpeg specific line count restrictions.</param>
      <param name="pPlanes">Specifies the source buffers for each component plane encoded.</param>
      <param name="cPlanes">The number of component planes specified by the <i>pPlanes</i> parameter.</param>
    </summary>
  </member>
  <member name="IWICBitmapCodecInfo::GetFileExtensions">
    <summary>
      <para>Retrieves a comma delimited list of the file name extensions associated with the codec.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//wincodec/nf-wincodec-iwicbitmapcodecinfo-getfileextensions" /></para>
      <param name="cchFileExtensions">The size of the file name extension buffer. Use <c>0</c> on first call to determine needed buffer size.</param>
      <param name="wzFileExtensions">Receives a comma delimited list  of file name extensions associated with the codec. Use <c>NULL</c> on first call to determine needed buffer size.</param>
      <param name="pcchActual">The actual buffer size needed to retrieve all file name extensions associated with the codec.</param>
    </summary>
  </member>
  <member name="IWICDevelopRaw::GetWhitePointRGB">
    <summary>
      <para>Gets the white point RGB values.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//wincodec/nf-wincodec-iwicdevelopraw-getwhitepointrgb" /></para>
      <param name="pRed">A pointer that receives the red white point value.</param>
      <param name="pGreen">A pointer that receives the green white point value.</param>
      <param name="pBlue">A pointer that receives the blue white point value.</param>
    </summary>
  </member>
  <member name="IWICImagingFactory::CreatePalette">
    <summary>
      <para>Creates a new instance of the IWICPalette class.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//wincodec/nf-wincodec-iwicimagingfactory-createpalette" /></para>
      <param name="ppIPalette">A pointer that receives a pointer to a new <a href="https://docs.microsoft.com/windows/desktop/api/wincodec/nn-wincodec-iwicpalette">IWICPalette</a>.</param>
    </summary>
  </member>
  <member name="IWICEnumMetadataItem::Clone">
    <summary>
      <para>Creates a copy of the current IWICEnumMetadataItem.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//wincodec/nf-wincodec-iwicenummetadataitem-clone" /></para>
      <param name="ppIEnumMetadataItem">A pointer that receives a pointer to the <a href="https://docs.microsoft.com/windows/desktop/api/wincodec/nn-wincodec-iwicenummetadataitem">IWICEnumMetadataItem</a> copy.</param>
    </summary>
  </member>
  <member name="WICConvertBitmapSource">
    <summary>
      <para>Obtains a IWICBitmapSource in the desired pixel format from a given IWICBitmapSource.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//wincodec/nf-wincodec-wicconvertbitmapsource" /></para>
      <param name="dstFormat">The pixel format to convert to.</param>
      <param name="pISrc">The source bitmap.</param>
      <param name="ppIDst">A pointer to the <b>null</b>-initialized destination bitmap pointer.</param>
    </summary>
  </member>
  <member name="IWICDevelopRaw::SetNotificationCallback">
    <summary>
      <para>Sets the notification callback method.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//wincodec/nf-wincodec-iwicdevelopraw-setnotificationcallback" /></para>
      <param name="pCallback">Pointer to the notification callback method.</param>
    </summary>
  </member>
  <member name="WICJpegIndexingOptions">
    <summary>
      <para>Specifies the options for indexing a JPEG image.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//wincodec/ne-wincodec-wicjpegindexingoptions" /></para>
    </summary>
  </member>
  <member name="WICJpegIndexingOptions::WICJpegIndexingOptionsGenerateOnDemand">
    <summary>Index generation is deferred until <a href="https://docs.microsoft.com/windows/desktop/api/wincodec/nf-wincodec-iwicbitmapsource-copypixels">IWICBitmapSource::CopyPixels</a> is called on the image.</summary>
  </member>
  <member name="WICJpegIndexingOptions::WICJpegIndexingOptionsGenerateOnLoad">
    <summary>Index generation is performed when the when the image is initially loaded.</summary>
  </member>
  <member name="WICJpegIndexingOptions::WICJpegIndexingOptions_FORCE_DWORD">
    <summary>Forces this enumeration to compile to 32 bits in size. Without this value, some compilers would allow this enumeration to compile to a size other than 32 bits. This value is not used.</summary>
  </member>
  <member name="IWICDevelopRaw::GetToneCurve">
    <summary>
      <para>Gets the tone curve of the raw image.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//wincodec/nf-wincodec-iwicdevelopraw-gettonecurve" /></para>
      <param name="cbToneCurveBufferSize">The size of the <i>pToneCurve</i> buffer.</param>
      <param name="pToneCurve">A pointer that receives the <a href="https://docs.microsoft.com/windows/desktop/api/wincodec/ns-wincodec-wicrawtonecurve">WICRawToneCurve</a> of the raw image.</param>
      <param name="pcbActualToneCurveBufferSize">A pointer that receives the size needed to obtain the tone curve structure.</param>
    </summary>
  </member>
  <member name="WICBitmapInterpolationMode">
    <summary>
      <para>Specifies the sampling or filtering mode to use when scaling an image.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//wincodec/ne-wincodec-wicbitmapinterpolationmode" /></para>
    </summary>
  </member>
  <member name="WICBitmapInterpolationMode::WICBitmapInterpolationModeNearestNeighbor">
    <summary>A nearest neighbor interpolation algorithm. Also known as nearest pixel or point interpolation.
            

The output pixel is assigned the value of the pixel that the point falls within. No other pixels are considered.</summary>
  </member>
  <member name="WICBitmapInterpolationMode::WICBitmapInterpolationModeLinear">
    <summary>A bilinear interpolation algorithm.
            

The output pixel values are computed as a weighted average of the nearest four pixels in a 2x2 grid.</summary>
  </member>
  <member name="WICBitmapInterpolationMode::WICBitmapInterpolationModeCubic">
    <summary>A bicubic interpolation algorithm.
            

Destination pixel values are computed as a weighted average of the nearest sixteen pixels in a 4x4 grid.</summary>
  </member>
  <member name="WICBitmapInterpolationMode::WICBitmapInterpolationModeFant">
    <summary>A Fant resampling algorithm.
            

Destination pixel values are computed as a weighted average of the all the pixels that map to the new pixel.</summary>
  </member>
  <member name="WICBitmapInterpolationMode::WICBitmapInterpolationModeHighQualityCubic">
    <summary>A high quality bicubic interpolation algorithm. Destination pixel values are computed using a much denser sampling 
      kernel than regular cubic. The kernel is resized in response to the scale factor, making it suitable for downscaling by factors greater than 2.

<div class="alert"><b>Note</b>  This value is supported beginning with Windows 10.</div>
<div> </div></summary>
  </member>
  <member name="IWICImagingFactory::CreateBitmapClipper">
    <summary>
      <para>Creates a new instance of an IWICBitmapClipper object.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//wincodec/nf-wincodec-iwicimagingfactory-createbitmapclipper" /></para>
      <param name="ppIBitmapClipper">A pointer that receives a pointer to a new <a href="https://docs.microsoft.com/windows/desktop/api/wincodec/nn-wincodec-iwicbitmapclipper">IWICBitmapClipper</a>.</param>
    </summary>
  </member>
  <member name="WICImageParameters">
    <summary>
      <para>This defines parameters that you can use to override the default parameters normally used when encoding an image.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//wincodec/ns-wincodec-wicimageparameters" /></para>
    </summary>
  </member>
  <member name="WICImageParameters::PixelFormat">
    <summary>The pixel format to which the image is processed before it is written to the encoder.</summary>
  </member>
  <member name="WICImageParameters::DpiX">
    <summary>The DPI in the x dimension.</summary>
  </member>
  <member name="WICImageParameters::DpiY">
    <summary>The DPI in the y dimension.</summary>
  </member>
  <member name="WICImageParameters::Top">
    <summary>The top corner in pixels of the image space to be encoded to the destination.</summary>
  </member>
  <member name="WICImageParameters::Left">
    <summary>The left corner in pixels of the image space to be encoded to the destination.</summary>
  </member>
  <member name="WICImageParameters::PixelWidth">
    <summary>The width in pixels of the part of the image to write.</summary>
  </member>
  <member name="WICImageParameters::PixelHeight">
    <summary>The height in pixels of the part of the image to write.</summary>
  </member>
  <member name="IWICBitmapClipper::Initialize">
    <summary>
      <para>Initializes the bitmap clipper with the provided parameters.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//wincodec/nf-wincodec-iwicbitmapclipper-initialize" /></para>
      <param name="pISource">he input bitmap source.</param>
      <param name="prc">The rectangle of the bitmap source to clip.</param>
    </summary>
  </member>
  <member name="IWICDevelopRaw::GetNamedWhitePoint">
    <summary>
      <para>Gets the named white point of the raw image.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//wincodec/nf-wincodec-iwicdevelopraw-getnamedwhitepoint" /></para>
      <param name="pWhitePoint">A pointer that receives the bitwise combination of the enumeration values.</param>
    </summary>
  </member>
  <member name="IWICFormatConverter::Initialize">
    <summary>
      <para>Initializes the format converter.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//wincodec/nf-wincodec-iwicformatconverter-initialize" /></para>
      <param name="pISource">The input bitmap to convert</param>
      <param name="dstFormat">The destination pixel format GUID.</param>
      <param name="dither">The <a href="https://docs.microsoft.com/windows/desktop/api/wincodec/ne-wincodec-wicbitmapdithertype">WICBitmapDitherType</a> used for conversion.</param>
      <param name="pIPalette">The palette to use for conversion.</param>
      <param name="alphaThresholdPercent">The alpha threshold to use for conversion.</param>
      <param name="paletteTranslate">The palette translation type to use for conversion.</param>
    </summary>
  </member>
  <member name="IWICJpegFrameDecode::ClearIndexing">
    <summary>
      <para>Removes the indexing from a JPEG that has been indexed using IWICJpegFrameDecode::SetIndexing.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//wincodec/nf-wincodec-iwicjpegframedecode-clearindexing" /></para>
    </summary>
  </member>
  <member name="IWICDdsFrameDecode::GetFormatInfo">
    <summary>
      <para>Gets information about the format in which the DDS image is stored.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//wincodec/nf-wincodec-iwicddsframedecode-getformatinfo" /></para>
      <param name="pFormatInfo">Information about the DDS format.</param>
    </summary>
  </member>
  <member name="WICGifLogicalScreenDescriptorProperties">
    <summary>
      <para>Specifies the logical screen descriptor properties for Graphics Interchange Format (GIF) metadata.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//wincodec/ne-wincodec-wicgiflogicalscreendescriptorproperties" /></para>
    </summary>
  </member>
  <member name="WICGifLogicalScreenDescriptorProperties::WICGifLogicalScreenSignature">
    <summary>[VT_UI1 | VT_VECTOR] Indicates the signature property.</summary>
  </member>
  <member name="WICGifLogicalScreenDescriptorProperties::WICGifLogicalScreenDescriptorWidth">
    <summary>[VT_UI2] Indicates the width in pixels.</summary>
  </member>
  <member name="WICGifLogicalScreenDescriptorProperties::WICGifLogicalScreenDescriptorHeight">
    <summary>[VT_UI2] Indicates the height in pixels.</summary>
  </member>
  <member name="WICGifLogicalScreenDescriptorProperties::WICGifLogicalScreenDescriptorGlobalColorTableFlag">
    <summary>[VT_BOOL] Indicates the  global color table flag. <b>TRUE</b> if a global color table is present; otherwise, <b>FALSE</b>.</summary>
  </member>
  <member name="WICGifLogicalScreenDescriptorProperties::WICGifLogicalScreenDescriptorColorResolution">
    <summary>[VT_UI1] Indicates the color resolution in bits per pixel.</summary>
  </member>
  <member name="WICGifLogicalScreenDescriptorProperties::WICGifLogicalScreenDescriptorSortFlag">
    <summary>[VT_BOOL] Indicates the sorted color table flag. <b>TRUE</b> if the table is sorted; otherwise, <b>FALSE</b>.</summary>
  </member>
  <member name="WICGifLogicalScreenDescriptorProperties::WICGifLogicalScreenDescriptorGlobalColorTableSize">
    <summary>[VT_UI1] Indicates the value used to calculate the number of bytes contained in the global color table. 

To calculate the actual size of the color table, raise 2 to the value of the field + 1.</summary>
  </member>
  <member name="WICGifLogicalScreenDescriptorProperties::WICGifLogicalScreenDescriptorBackgroundColorIndex">
    <summary>[VT_UI1] Indicates the index within the color table to use for the background (pixels not defined in the image).</summary>
  </member>
  <member name="WICGifLogicalScreenDescriptorProperties::WICGifLogicalScreenDescriptorPixelAspectRatio">
    <summary>[VT_UI1] Indicates the factor used to compute an approximation of the aspect ratio.</summary>
  </member>
  <member name="IWICComponentInfo::GetVendorGUID">
    <summary>
      <para>Retrieves the vendor GUID.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//wincodec/nf-wincodec-iwiccomponentinfo-getvendorguid" /></para>
      <param name="pguidVendor">A pointer that receives the component's vendor GUID.</param>
    </summary>
  </member>
  <member name="IWICMetadataQueryWriter::SetMetadataByName">
    <summary>
      <para>Sets a metadata item to a specific location.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//wincodec/nf-wincodec-iwicmetadataquerywriter-setmetadatabyname" /></para>
      <param name="wzName">The name of the metadata item.</param>
      <param name="pvarValue">The metadata to set.</param>
    </summary>
  </member>
  <member name="IWICBitmapFrameEncode::GetMetadataQueryWriter">
    <summary>
      <para>Gets the metadata query writer for the encoder frame.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//wincodec/nf-wincodec-iwicbitmapframeencode-getmetadataquerywriter" /></para>
      <param name="ppIMetadataQueryWriter">When this method returns, contains a pointer to metadata query writer for the encoder frame.</param>
    </summary>
  </member>
  <member name="IWICBitmapLock">
    <summary>
      <para>Exposes methods that support the Lock method.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//wincodec/nn-wincodec-iwicbitmaplock" /></para>
    </summary>
  </member>
  <member name="IWICBitmap::Lock">
    <summary>
      <para>Provides access to a rectangular area of the bitmap.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//wincodec/nf-wincodec-iwicbitmap-lock" /></para>
      <param name="prcLock">The rectangle to be accessed.</param>
      <param name="flags">The access mode you wish to obtain for the lock. This is a bitwise combination of <a href="https://docs.microsoft.com/windows/desktop/api/wincodec/ne-wincodec-wicbitmaplockflags">WICBitmapLockFlags</a> for read, write, or read and write access.

<table>
<tr>
<th>Value</th>
<th>Meaning</th>
</tr>
<tr>
<td width="40%"><a id="WICBitmapLockRead"></a><a id="wicbitmaplockread"></a><a id="WICBITMAPLOCKREAD"></a><dl>
<dt><b>WICBitmapLockRead</b></dt>
</dl>
</td>
<td width="60%">
The read access lock.

</td>
</tr>
<tr>
<td width="40%"><a id="WICBitmapLockWrite"></a><a id="wicbitmaplockwrite"></a><a id="WICBITMAPLOCKWRITE"></a><dl>
<dt><b>WICBitmapLockWrite</b></dt>
</dl>
</td>
<td width="60%">
The write access lock.

</td>
</tr>
</table></param>
      <param name="ppILock">A pointer that receives the locked memory location.</param>
    </summary>
  </member>
  <member name="IWICBitmapCodecProgressNotification::RegisterProgressNotification">
    <summary>
      <para>Registers a progress notification callback function.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//wincodec/nf-wincodec-iwicbitmapcodecprogressnotification-registerprogressnotification" /></para>
      <param name="pfnProgressNotification">A function pointer to the application defined progress notification callback function. See <a href="https://docs.microsoft.com/windows/desktop/api/wincodec/nc-wincodec-pfnprogressnotification">ProgressNotificationCallback</a> for the callback signature.</param>
      <param name="pvData">A pointer to component data for the callback method.</param>
      <param name="dwProgressFlags">The <a href="https://docs.microsoft.com/windows/desktop/api/wincodec/ne-wincodec-wicprogressoperation">WICProgressOperation</a> and <a href="https://docs.microsoft.com/windows/desktop/api/wincodec/ne-wincodec-wicprogressnotification">WICProgressNotification</a> flags to use for progress notification.</param>
    </summary>
  </member>
  <member name="IWICMetadataBlockReader::GetReaderByIndex">
    <summary>
      <para>Retrieves an IWICMetadataReader for a specified top level metadata block.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//wincodecsdk/nf-wincodecsdk-iwicmetadatablockreader-getreaderbyindex" /></para>
      <param name="nIndex">The index of the desired top level metadata block to retrieve.</param>
      <param name="ppIMetadataReader">When this method returns, contains a pointer to the <a href="https://docs.microsoft.com/windows/desktop/api/wincodecsdk/nn-wincodecsdk-iwicmetadatareader">IWICMetadataReader</a> specified by <i>nIndex</i>.</param>
    </summary>
  </member>
  <member name="IWICBitmapSource::GetSize">
    <summary>
      <para>Retrieves the pixel width and height of the bitmap.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//wincodec/nf-wincodec-iwicbitmapsource-getsize" /></para>
      <param name="puiWidth">A pointer that receives the pixel width of the bitmap.</param>
      <param name="puiHeight">A pointer that receives the pixel height of the bitmap</param>
    </summary>
  </member>
  <member name="IWICStream::InitializeFromIStreamRegion">
    <summary>
      <para>Initializes the stream as a substream of another stream.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//wincodec/nf-wincodec-iwicstream-initializefromistreamregion" /></para>
      <param name="pIStream">Pointer to the input stream.</param>
      <param name="ulOffset">The stream offset used to create the new stream.</param>
      <param name="ulMaxSize">The maximum size of the stream.</param>
    </summary>
  </member>
  <member name="IWICComponentInfo::GetVersion">
    <summary>
      <para>Retrieves the component's version.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//wincodec/nf-wincodec-iwiccomponentinfo-getversion" /></para>
      <param name="cchVersion">The size of the <i>wzVersion</i> buffer.</param>
      <param name="wzVersion">A pointer that receives a culture invariant string of the component's version.</param>
      <param name="pcchActual">A pointer that receives the actual length of the component's version. The version is optional; if a value is not specified by the component, the length returned is 0.</param>
    </summary>
  </member>
  <member name="IWICMetadataBlockReader::GetEnumerator">
    <summary>
      <para>Retrieves an enumeration of IWICMetadataReader objects representing each of the top level metadata blocks.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//wincodecsdk/nf-wincodecsdk-iwicmetadatablockreader-getenumerator" /></para>
      <param name="ppIEnumMetadata">When this method returns, contains a pointer to an enumeration of <a href="https://docs.microsoft.com/windows/desktop/api/wincodecsdk/nn-wincodecsdk-iwicmetadatareader">IWICMetadataReader</a> objects.</param>
    </summary>
  </member>
  <member name="IWICDevelopRaw::SetNoiseReduction">
    <summary>
      <para>Sets the noise reduction value of the raw image.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//wincodec/nf-wincodec-iwicdevelopraw-setnoisereduction" /></para>
      <param name="NoiseReduction">The noise reduction value of the raw image.  The default value is the "as-shot" setting if it exists or 0.0. The value range for noise reduction is 0.0 through 1.0. The 0.0 lower limit represents no noise reduction applied to the image, while the 1.0 upper limit represents highest noise reduction amount that can be applied.</param>
    </summary>
  </member>
  <member name="IWICStreamProvider::GetPersistOptions">
    <summary>
      <para>Gets the persist options used when initializing the component with a stream.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//wincodecsdk/nf-wincodecsdk-iwicstreamprovider-getpersistoptions" /></para>
      <param name="pdwPersistOptions">Pointer that receives the persist options used when initializing the component with a stream. If none were provided, <b>WICPersistOptionDefault</b> is returned.</param>
    </summary>
  </member>
  <member name="IWICDdsDecoder">
    <summary>
      <para>Provides information and functionality specific to the DDS image format.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//wincodec/nn-wincodec-iwicddsdecoder" /></para>
    </summary>
  </member>
  <member name="IWICBitmapCodecInfo::DoesSupportChromakey">
    <summary>
      <para>Retrieves a value indicating whether the codec supports chromakeys.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//wincodec/nf-wincodec-iwicbitmapcodecinfo-doessupportchromakey" /></para>
      <param name="pfSupportChromakey">Receives <b>TRUE</b> if the codec supports chromakeys; otherwise, <b>FALSE</b>.</param>
    </summary>
  </member>
  <member name="WICJpegScanHeader">
    <summary>
      <para>Represents a JPEG frame header.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//wincodec/ns-wincodec-wicjpegscanheader" /></para>
    </summary>
  </member>
  <member name="WICJpegScanHeader::cComponents">
    <summary>The number of components in the scan.</summary>
  </member>
  <member name="WICJpegScanHeader::RestartInterval">
    <summary>The interval of reset markers within the scan.</summary>
  </member>
  <member name="WICJpegScanHeader::ComponentSelectors">
    <summary>The component identifiers.</summary>
  </member>
  <member name="WICJpegScanHeader::HuffmanTableIndices">
    <summary>The format of the quantization table indices. Use one of the following constants, described in <a href="https://docs.microsoft.com/windows/desktop/wic/iwicjpegframedecode-constants">IWICJpegFrameDecode Constants</a>.

<ul>
<li>WIC_JPEG_HUFFMAN_BASELINE_ONE</li>
<li>WIC_JPEG_HUFFMAN_BASELINE_THREE </li>
</ul></summary>
  </member>
  <member name="WICJpegScanHeader::StartSpectralSelection">
    <summary>The start of the spectral selection.</summary>
  </member>
  <member name="WICJpegScanHeader::EndSpectralSelection">
    <summary>The end of the spectral selection.</summary>
  </member>
  <member name="WICJpegScanHeader::SuccessiveApproximationHigh">
    <summary>The successive approximation high.</summary>
  </member>
  <member name="WICJpegScanHeader::SuccessiveApproximationLow">
    <summary>The successive approximation low.</summary>
  </member>
  <member name="IWICComponentFactory">
    <summary>
      <para>Exposes methods that create components used by component developers. This includes metadata readers, writers and other services for use by codec and metadata handler developers.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//wincodecsdk/nn-wincodecsdk-iwiccomponentfactory" /></para>
    </summary>
  </member>
  <member name="WIC8BIMIptcProperties">
    <summary>
      <para>Specifies the identifiers of the metadata items in an 8BIM IPTC block.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//wincodec/ne-wincodec-wic8bimiptcproperties" /></para>
    </summary>
  </member>
  <member name="WIC8BIMIptcProperties::WIC8BIMIptcPString">
    <summary>[VT_LPSTR] A name that identifies the 8BIM block.</summary>
  </member>
  <member name="IWICBitmapSourceTransform">
    <summary>
      <para>Exposes methods for offloading certain operations to the underlying IWICBitmapSource implementation.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//wincodec/nn-wincodec-iwicbitmapsourcetransform" /></para>
    </summary>
  </member>
  <member name="IWICBitmapFrameEncode::Commit">
    <summary>
      <para>Commits the frame to the image.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//wincodec/nf-wincodec-iwicbitmapframeencode-commit" /></para>
    </summary>
  </member>
  <member name="IWICJpegFrameDecode::GetFrameHeader">
    <summary>
      <para>Retrieves header data from the entire frame.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//wincodec/nf-wincodec-iwicjpegframedecode-getframeheader" /></para>
      <param name="pFrameHeader">A pointer that receives the frame header data.</param>
    </summary>
  </member>
  <member name="IWICColorContext::GetProfileBytes">
    <summary>
      <para>Retrieves the color context profile.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//wincodec/nf-wincodec-iwiccolorcontext-getprofilebytes" /></para>
      <param name="cbBuffer">The size of the <i>pbBuffer</i> buffer.</param>
      <param name="pbBuffer">A pointer that receives the color context profile.</param>
      <param name="pcbActual">A pointer that receives the actual buffer size needed to retrieve the entire color context profile.</param>
    </summary>
  </member>
  <member name="IWICColorTransform::Initialize">
    <summary>
      <para>Initializes an IWICColorTransform with a IWICBitmapSource and transforms it from one IWICColorContext to another.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//wincodec/nf-wincodec-iwiccolortransform-initialize" /></para>
      <param name="pIBitmapSource">The bitmap source used to initialize the color transform.</param>
      <param name="pIContextSource">The color context source.</param>
      <param name="pIContextDest">The color context destination.</param>
      <param name="pixelFmtDest">The GUID of the desired pixel format.

This parameter is limited to a subset of the native WIC pixel formats, see Remarks for a list.</param>
    </summary>
  </member>
  <member name="WICPixelFormatNumericRepresentation">
    <summary>
      <para>Defines constants that specify a primitive type for numeric representation of a WIC pixel format.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//wincodec/ne-wincodec-wicpixelformatnumericrepresentation" /></para>
    </summary>
  </member>
  <member name="WICPixelFormatNumericRepresentation::WICPixelFormatNumericRepresentationUnspecified">
    <summary>The format is not specified.</summary>
  </member>
  <member name="WICPixelFormatNumericRepresentation::WICPixelFormatNumericRepresentationIndexed">
    <summary>Specifies that the format is indexed.</summary>
  </member>
  <member name="WICPixelFormatNumericRepresentation::WICPixelFormatNumericRepresentationUnsignedInteger">
    <summary>Specifies that the format is represented as an unsigned integer.</summary>
  </member>
  <member name="WICPixelFormatNumericRepresentation::WICPixelFormatNumericRepresentationSignedInteger">
    <summary>Specifies that the format is represented as a signed integer.</summary>
  </member>
  <member name="WICPixelFormatNumericRepresentation::WICPixelFormatNumericRepresentationFixed">
    <summary>Specifies that the format is represented as a fixed-point number.</summary>
  </member>
  <member name="WICPixelFormatNumericRepresentation::WICPixelFormatNumericRepresentationFloat">
    <summary>Specifies that the format is represented as a floating-point number.</summary>
  </member>
  <member name="WICPixelFormatNumericRepresentation::WICPixelFormatNumericRepresentation_FORCE_DWORD">
    <summary>This constant contains the maximum <b>DWORD</b> value.</summary>
  </member>
  <member name="IWICDevelopRaw::GetWhitePointKelvin">
    <summary>
      <para>Gets the white point Kelvin temperature of the raw image.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//wincodec/nf-wincodec-iwicdevelopraw-getwhitepointkelvin" /></para>
      <param name="pWhitePointKelvin">A pointer that receives the white point Kelvin temperature of the raw image. The default is the "as-shot" setting value.</param>
    </summary>
  </member>
  <member name="WICJpegTransferMatrix">
    <summary>
      <para>Specifies conversion matrix from Y'Cb'Cr' to R'G'B'.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//wincodec/ne-wincodec-wicjpegtransfermatrix" /></para>
    </summary>
  </member>
  <member name="WICJpegTransferMatrix::WICJpegTransferMatrixIdentity">
    <summary>Specifies the identity transfer matrix.</summary>
  </member>
  <member name="WICJpegTransferMatrix::WICJpegTransferMatrixBT601">
    <summary>Specifies the BT601 transfer matrix.</summary>
  </member>
  <member name="WICJpegTransferMatrix::WICJpegTransferMatrix_FORCE_DWORD">
    <summary>Forces this enumeration to compile to 32 bits in size. Without this value, some compilers would allow this enumeration to compile to a size other than 32 bits. This value is not used.</summary>
  </member>
  <member name="IWICBitmapFrameEncode::SetPalette">
    <summary>
      <para>Sets the IWICPalette for indexed pixel formats.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//wincodec/nf-wincodec-iwicbitmapframeencode-setpalette" /></para>
      <param name="pIPalette">The <a href="https://docs.microsoft.com/windows/desktop/api/wincodec/nn-wincodec-iwicpalette">IWICPalette</a> to use for indexed pixel formats.

The encoder may change the palette to reflect the pixel formats the encoder supports.</param>
    </summary>
  </member>
  <member name="IWICMetadataQueryReader">
    <summary>
      <para>Exposes methods for retrieving metadata blocks and items from a decoder or its image frames using a metadata query expression.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//wincodec/nn-wincodec-iwicmetadataqueryreader" /></para>
    </summary>
  </member>
  <member name="IWICDevelopRaw::SetExposureCompensation">
    <summary>
      <para>Sets the exposure compensation stop value.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//wincodec/nf-wincodec-iwicdevelopraw-setexposurecompensation" /></para>
      <param name="ev">The exposure compensation value. The value range for exposure compensation is -5.0 through +5.0, which equates to 10 full stops.</param>
    </summary>
  </member>
  <member name="IWICMetadataWriter">
    <summary>
      <para>Exposes methods that provide access to writing metadata content. This is implemented by independent software vendors (ISVs) to create new metadata writers.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//wincodecsdk/nn-wincodecsdk-iwicmetadatawriter" /></para>
    </summary>
  </member>
  <member name="IWICBitmapFrameEncode::WriteSource">
    <summary>
      <para>Encodes a bitmap source.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//wincodec/nf-wincodec-iwicbitmapframeencode-writesource" /></para>
      <param name="pIBitmapSource">The bitmap source to encode.</param>
      <param name="prc">The size rectangle of the bitmap source.</param>
    </summary>
  </member>
  <member name="WICRect">
    <summary>
      <para>Represents a rectangle for Windows Imaging Component (WIC) API.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//wincodec/ns-wincodec-wicrect" /></para>
    </summary>
  </member>
  <member name="WICRect::X">
    <summary>The horizontal coordinate of the rectangle.</summary>
  </member>
  <member name="WICRect::Y">
    <summary>The vertical coordinate of the rectangle.</summary>
  </member>
  <member name="WICRect::Width">
    <summary>The width of the rectangle.</summary>
  </member>
  <member name="WICRect::Height">
    <summary>The height of the rectangle.</summary>
  </member>
  <member name="IWICMetadataHandlerInfo::GetContainerFormats">
    <summary>
      <para>Retrieves the container formats supported by the metadata handler.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//wincodecsdk/nf-wincodecsdk-iwicmetadatahandlerinfo-getcontainerformats" /></para>
      <param name="cContainerFormats">The size of the <i>pguidContainerFormats</i> array.</param>
      <param name="pguidContainerFormats">Pointer to an array that receives the container formats supported by the metadata handler.</param>
      <param name="pcchActual">The actual number of GUIDs added to the array.
               

To obtain the number of supported container formats, pass <c>NULL</c> to <i>pguidContainerFormats</i>.</param>
    </summary>
  </member>
  <member name="IWICComponentInfo::GetCLSID">
    <summary>
      <para>Retrieves the component's class identifier (CLSID)</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//wincodec/nf-wincodec-iwiccomponentinfo-getclsid" /></para>
      <param name="pclsid">A pointer that receives the component's CLSID.</param>
    </summary>
  </member>
  <member name="IWICPalette::InitializeFromBitmap">
    <summary>
      <para>Initializes a palette using a computed optimized values based on the reference bitmap.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//wincodec/nf-wincodec-iwicpalette-initializefrombitmap" /></para>
      <param name="pISurface">Pointer to the source bitmap.</param>
      <param name="cCount">The number of colors to initialize the palette with.</param>
      <param name="fAddTransparentColor">A value to indicate whether to add a transparent color.</param>
    </summary>
  </member>
  <member name="IWICDevelopRaw::GetSharpness">
    <summary>
      <para>Gets the sharpness value of the raw image.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//wincodec/nf-wincodec-iwicdevelopraw-getsharpness" /></para>
      <param name="pSharpness">A pointer that receives the sharpness value of the raw image. The default value is the "as-shot" setting. The value range for sharpness is 0.0 through 1.0. The 0.0 lower limit represents no sharpening applied to the image, while the 1.0 upper limit represents the highest amount of sharpness that can be applied.</param>
    </summary>
  </member>
  <member name="IWICPlanarFormatConverter::CanConvert">
    <summary>
      <para>Query if the format converter can convert from one format to another.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//wincodec/nf-wincodec-iwicplanarformatconverter-canconvert" /></para>
      <param name="pSrcPixelFormats">An array of WIC pixel formats that represents source image planes.</param>
      <param name="cSrcPlanes">The number of source pixel formats specified by the <i>pSrcFormats</i> parameter.</param>
      <param name="dstPixelFormat">The destination interleaved pixel format.</param>
      <param name="pfCanConvert">True if the conversion is supported.</param>
    </summary>
  </member>
  <member name="IWICBitmapSource">
    <summary>
      <para>Exposes methods that refers to a source from which pixels are retrieved, but cannot be written back to.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//wincodec/nn-wincodec-iwicbitmapsource" /></para>
    </summary>
  </member>
  <member name="IWICBitmapDecoder::Initialize">
    <summary>
      <para>Initializes the decoder with the provided stream.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//wincodec/nf-wincodec-iwicbitmapdecoder-initialize" /></para>
      <param name="pIStream">The stream to use for initialization.

The stream contains the encoded pixels which are decoded each time the <a href="https://docs.microsoft.com/windows/desktop/api/wincodec/nf-wincodec-iwicbitmapsource-copypixels">CopyPixels</a> method on the <a href="https://docs.microsoft.com/windows/desktop/api/wincodec/nn-wincodec-iwicbitmapframedecode">IWICBitmapFrameDecode</a> interface (see <a href="https://docs.microsoft.com/windows/desktop/api/wincodec/nf-wincodec-iwicbitmapdecoder-getframe">GetFrame</a>) is invoked.</param>
      <param name="cacheOptions">The <a href="https://docs.microsoft.com/windows/desktop/api/wincodec/ne-wincodec-wicdecodeoptions">WICDecodeOptions</a> to use for initialization.</param>
    </summary>
  </member>
  <member name="IWICBitmapCodecInfo::GetDeviceModels">
    <summary>
      <para>Retrieves a comma delimited list of device models associated with the codec.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//wincodec/nf-wincodec-iwicbitmapcodecinfo-getdevicemodels" /></para>
      <param name="cchDeviceModels">The size of the device models buffer. Use <c>0</c> on first call to determine needed buffer size.</param>
      <param name="wzDeviceModels">Receives a comma delimited list of device model names associated with the codec. Use <c>NULL</c> on first call to determine needed buffer size.</param>
      <param name="pcchActual">The actual buffer size needed to retrieve all of the device model names.</param>
    </summary>
  </member>
  <member name="IWICDevelopRawNotificationCallback::Notify">
    <summary>
      <para>An application-defined callback method used for raw image parameter change notifications.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//wincodec/nf-wincodec-iwicdeveloprawnotificationcallback-notify" /></para>
      <param name="NotificationMask">A set of <a href="https://docs.microsoft.com/windows/desktop/wic/-wic-codec-iwicdeveloprawnotification-constants">IWICDevelopRawNotificationCallback Constants</a> parameter notification flags.</param>
    </summary>
  </member>
  <member name="IWICJpegFrameDecode::DoesSupportIndexing">
    <summary>
      <para>Retrieves a value indicating whether this decoder supports indexing for efficient random access.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//wincodec/nf-wincodec-iwicjpegframedecode-doessupportindexing" /></para>
      <param name="pfIndexingSupported">True if indexing is supported; otherwise, false.</param>
    </summary>
  </member>
  <member name="IWICBitmapCodecProgressNotification">
    <summary>
      <para>Exposes methods used for progress notification for encoders and decoders.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//wincodec/nn-wincodec-iwicbitmapcodecprogressnotification" /></para>
    </summary>
  </member>
  <member name="IWICComponentFactory::CreateMetadataWriter">
    <summary>
      <para>Creates an IWICMetadataWriter based on the given parameters.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//wincodecsdk/nf-wincodecsdk-iwiccomponentfactory-createmetadatawriter" /></para>
      <param name="guidMetadataFormat">The GUID of the desired metadata format.</param>
      <param name="pguidVendor">Pointer to the GUID of the desired metadata reader vendor.</param>
      <param name="dwMetadataOptions">The <a href="https://docs.microsoft.com/windows/desktop/api/wincodecsdk/ne-wincodecsdk-wicpersistoptions">WICPersistOptions</a> and <a href="https://docs.microsoft.com/windows/desktop/api/wincodecsdk/ne-wincodecsdk-wicmetadatacreationoptions">WICMetadataCreationOptions</a> options to use when creating the metadata reader.</param>
      <param name="ppIWriter">A pointer that receives a pointer to the new metadata writer.</param>
    </summary>
  </member>
  <member name="IWICBitmapDecoder::GetPreview">
    <summary>
      <para>Retrieves a preview image, if supported.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//wincodec/nf-wincodec-iwicbitmapdecoder-getpreview" /></para>
      <param name="ppIBitmapSource">Receives a pointer to the preview bitmap if supported.</param>
    </summary>
  </member>
  <member name="IWICMetadataHandlerInfo::DoesRequireFixedSize">
    <summary>
      <para>Determines if the metadata handler requires a fixed size.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//wincodecsdk/nf-wincodecsdk-iwicmetadatahandlerinfo-doesrequirefixedsize" /></para>
      <param name="pfFixedSize">Pointer that receives <b>TRUE</b> if a fixed size is required; otherwise, <b>FALSE</b>.</param>
    </summary>
  </member>
  <member name="WIC8BIMResolutionInfoProperties">
    <summary>
      <para>Specifies the identifiers of the metadata items in an 8BIMResolutionInfo block.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//wincodec/ne-wincodec-wic8bimresolutioninfoproperties" /></para>
    </summary>
  </member>
  <member name="WIC8BIMResolutionInfoProperties::WIC8BIMResolutionInfoPString">
    <summary>[VT_LPSTR] A name that identifies the 8BIM block.</summary>
  </member>
  <member name="WIC8BIMResolutionInfoProperties::WIC8BIMResolutionInfoHResolution">
    <summary>[VT_UI4] The horizontal resolution of the image.</summary>
  </member>
  <member name="WIC8BIMResolutionInfoProperties::WIC8BIMResolutionInfoHResolutionUnit">
    <summary>[VT_UI2] The units that the horizontal resolution is specified in; a 1 indicates pixels per inch and a 2 indicates pixels per centimeter.</summary>
  </member>
  <member name="WIC8BIMResolutionInfoProperties::WIC8BIMResolutionInfoWidthUnit">
    <summary>[VT_UI2] The units that the image width is specified in; a 1 indicates inches, a 2 indicates centimeters, a 3 indicates points, a 4 specifies picas, and a 5 specifies columns.</summary>
  </member>
  <member name="WIC8BIMResolutionInfoProperties::WIC8BIMResolutionInfoVResolution">
    <summary>[VT_UI4] The vertical resolution of the image.</summary>
  </member>
  <member name="WIC8BIMResolutionInfoProperties::WIC8BIMResolutionInfoVResolutionUnit">
    <summary>[VT_UI2] The units that the vertical resolution is specified in; a 1 indicates pixels per inch and a 2 indicates pixels per centimeter.</summary>
  </member>
  <member name="WIC8BIMResolutionInfoProperties::WIC8BIMResolutionInfoHeightUnit">
    <summary>[VT_UI2] The units that the image height is specified in; a 1 indicates inches, a 2 indicates centimeters, a 3 indicates points, a 4 specifies picas, and a 5 specifies columns.</summary>
  </member>
  <member name="WICPngHistProperties">
    <summary>
      <para>Specifies the Portable Network Graphics (PNG) hIST chunk metadata properties.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//wincodec/ne-wincodec-wicpnghistproperties" /></para>
    </summary>
  </member>
  <member name="WICPngHistProperties::WICPngHistFrequencies">
    <summary>[VT_VECTOR | VT_UI2] Indicates the approximate usage frequency of each color in the color palette.</summary>
  </member>
  <member name="IWICComponentFactory::CreateMetadataWriterFromReader">
    <summary>
      <para>Creates an IWICMetadataWriter from the given IWICMetadataReader.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//wincodecsdk/nf-wincodecsdk-iwiccomponentfactory-createmetadatawriterfromreader" /></para>
      <param name="pIReader">Pointer to the metadata reader to base the metadata writer on.</param>
      <param name="pguidVendor">Pointer to the GUID of the desired metadata reader vendor.</param>
      <param name="ppIWriter">A pointer that receives a pointer to the new metadata writer.</param>
    </summary>
  </member>
  <member name="IWICDdsDecoder::GetParameters">
    <summary>
      <para>Gets DDS-specific data.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//wincodec/nf-wincodec-iwicddsdecoder-getparameters" /></para>
      <param name="pParameters">A pointer to the structure where the information is returned.</param>
    </summary>
  </member>
  <member name="IWICBitmapSourceTransform::GetClosestPixelFormat">
    <summary>
      <para>Retrieves the closest pixel format to which the implementation of IWICBitmapSourceTransform can natively copy pixels, given a desired format.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//wincodec/nf-wincodec-iwicbitmapsourcetransform-getclosestpixelformat" /></para>
      <param name="pguidDstFormat">A pointer that receives the GUID of the pixel format that is the closest supported pixel format of the desired format.</param>
    </summary>
  </member>
  <member name="IWICColorContext::InitializeFromMemory">
    <summary>
      <para>Initializes the color context from a memory block.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//wincodec/nf-wincodec-iwiccolorcontext-initializefrommemory" /></para>
      <param name="pbBuffer">The buffer used to initialize the <a href="https://docs.microsoft.com/windows/desktop/api/wincodec/nn-wincodec-iwiccolorcontext">IWICColorContext</a>.</param>
      <param name="cbBufferSize">The size of the <i>pbBuffer</i> buffer.</param>
    </summary>
  </member>
  <member name="WICBitmapLockFlags">
    <summary>
      <para>Specifies access to an IWICBitmap.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//wincodec/ne-wincodec-wicbitmaplockflags" /></para>
    </summary>
  </member>
  <member name="WICBitmapLockFlags::WICBitmapLockRead">
    <summary>A read access lock.</summary>
  </member>
  <member name="WICBitmapLockFlags::WICBitmapLockWrite">
    <summary>A write access lock.</summary>
  </member>
  <member name="IWICDevelopRaw::SetWhitePointKelvin">
    <summary>
      <para>Sets the white point Kelvin value.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//wincodec/nf-wincodec-iwicdevelopraw-setwhitepointkelvin" /></para>
      <param name="WhitePointKelvin">The white point Kelvin value. Acceptable Kelvin values are 1,500 through 30,000.</param>
    </summary>
  </member>
  <member name="IWICImageEncoder::WriteThumbnail">
    <summary>
      <para>Encodes the given image as the thumbnail to the given WIC bitmap encoder.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//wincodec/nf-wincodec-iwicimageencoder-writethumbnail" /></para>
      <param name="pImage">The Direct2D image that will be encoded.</param>
      <param name="pEncoder">The encoder on which the thumbnail is set.</param>
      <param name="pImageParameters">Additional parameters to control encoding.</param>
    </summary>
  </member>
  <member name="IWICMetadataReader::GetCount">
    <summary>
      <para>Gets the number of metadata items within the reader.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//wincodecsdk/nf-wincodecsdk-iwicmetadatareader-getcount" /></para>
      <param name="pcCount">Pointer that receives the number of metadata items within the reader.</param>
    </summary>
  </member>
  <member name="IWICImagingFactory::CreateComponentEnumerator">
    <summary>
      <para>Creates an IEnumUnknown object of the specified component types.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//wincodec/nf-wincodec-iwicimagingfactory-createcomponentenumerator" /></para>
      <param name="componentTypes">The types of <a href="https://docs.microsoft.com/windows/desktop/api/wincodec/ne-wincodec-wiccomponenttype">WICComponentType</a> to enumerate.</param>
      <param name="options">The <a href="https://docs.microsoft.com/windows/desktop/api/wincodec/ne-wincodec-wiccomponentenumerateoptions">WICComponentEnumerateOptions</a> used to enumerate the given component types.</param>
      <param name="ppIEnumUnknown">A pointer that receives a pointer to a new component enumerator.</param>
    </summary>
  </member>
  <member name="IWICMetadataReaderInfo::CreateInstance">
    <summary>
      <para>Creates an instance of an IWICMetadataReader.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//wincodecsdk/nf-wincodecsdk-iwicmetadatareaderinfo-createinstance" /></para>
      <param name="ppIReader">Pointer that receives a pointer to a metadata reader.</param>
    </summary>
  </member>
  <member name="IWICBitmap">
    <summary>
      <para>Defines methods that add the concept of writeability and static in-memory representations of bitmaps to IWICBitmapSource.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//wincodec/nn-wincodec-iwicbitmap" /></para>
    </summary>
  </member>
  <member name="IWICJpegFrameDecode::CopyScan">
    <summary>
      <para>Retrieves a copy of the compressed JPEG scan directly from the WIC decoder frame's output stream.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//wincodec/nf-wincodec-iwicjpegframedecode-copyscan" /></para>
      <param name="scanIndex">The zero-based index of the scan for which data is retrieved.</param>
      <param name="scanOffset">The byte position in the scan data to begin copying.  Use 0 on the first call.  If the output buffer size is insufficient to store the entire scan, this offset allows you to resume copying from the end of the previous copy operation.</param>
      <param name="cbScanData">The size, in bytes, of the <i>pbScanData</i> array.</param>
      <param name="pbScanData">A pointer that receives the table data. This parameter must not be NULL.</param>
      <param name="pcbScanDataActual">A pointer that receives the size of the scan data actually copied into <i>pbScanData</i>. The size returned may be smaller that the size of <i>cbScanData</i>. This  parameter may be NULL.</param>
    </summary>
  </member>
  <member name="IWICEnumMetadataItem::Next">
    <summary>
      <para>Advanced the current position in the enumeration.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//wincodec/nf-wincodec-iwicenummetadataitem-next" /></para>
      <param name="celt">The number of items to be retrieved.</param>
      <param name="rgeltSchema">An array of enumerated items. This parameter is optional.</param>
      <param name="rgeltId">An array of enumerated items.</param>
      <param name="rgeltValue">An array of enumerated items. This parameter is optional.</param>
      <param name="pceltFetched">The number of items that were retrieved. This value is always less than or equal to the number of items requested.</param>
    </summary>
  </member>
  <member name="IWICDevelopRaw::SetDestinationColorContext">
    <summary>
      <para>Sets the destination color context.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//wincodec/nf-wincodec-iwicdevelopraw-setdestinationcolorcontext" /></para>
      <param name="pColorContext">The destination color context.</param>
    </summary>
  </member>
  <member name="IWICComponentFactory::CreateMetadataReader">
    <summary>
      <para>Creates an IWICMetadataReader based on the given parameters.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//wincodecsdk/nf-wincodecsdk-iwiccomponentfactory-createmetadatareader" /></para>
      <param name="guidMetadataFormat">The GUID of the desired metadata format.</param>
      <param name="pguidVendor">Pointer to the GUID of the desired metadata reader vendor.</param>
      <param name="dwOptions">The <a href="https://docs.microsoft.com/windows/desktop/api/wincodecsdk/ne-wincodecsdk-wicpersistoptions">WICPersistOptions</a> and <a href="https://docs.microsoft.com/windows/desktop/api/wincodecsdk/ne-wincodecsdk-wicmetadatacreationoptions">WICMetadataCreationOptions</a> options to use when creating the metadata reader.</param>
      <param name="pIStream">Pointer to a stream in which to initialize the reader with. If <b>NULL</b>, the metadata reader will be empty.</param>
      <param name="ppIReader">A pointer that receives a pointer to the new metadata reader.</param>
    </summary>
  </member>
  <member name="IWICPalette::IsBlackWhite">
    <summary>
      <para>Retrieves a value that describes whether the palette is black and white.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//wincodec/nf-wincodec-iwicpalette-isblackwhite" /></para>
      <param name="pfIsBlackWhite">A pointer to a variable  that receives a boolean value that indicates whether the palette is black and white. <b>TRUE</b> indicates that the palette is black and white; otherwise, <b>FALSE</b>.</param>
    </summary>
  </member>
  <member name="WICPersistOptions">
    <summary>
      <para>Specifies Windows Imaging Component (WIC) options that are used when initializing a component with a stream.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//wincodecsdk/ne-wincodecsdk-wicpersistoptions" /></para>
    </summary>
  </member>
  <member name="WICPersistOptions::WICPersistOptionDefault">
    <summary>The default persist options. The default is <b>WICPersistOptionLittleEndian</b>.</summary>
  </member>
  <member name="WICPersistOptions::WICPersistOptionLittleEndian">
    <summary>The data byte order is little endian.</summary>
  </member>
  <member name="WICPersistOptions::WICPersistOptionBigEndian">
    <summary>The data byte order is big endian.</summary>
  </member>
  <member name="WICPersistOptions::WICPersistOptionStrictFormat">
    <summary>The data format must strictly conform to the specification.

<div class="alert"><b>Warning</b>  This option is inconsistently implement and should not be relied on.</div>
<div> </div></summary>
  </member>
  <member name="WICPersistOptions::WICPersistOptionNoCacheStream">
    <summary>No cache for the metadata stream.

Certain operations, such as <a href="https://docs.microsoft.com/windows/desktop/api/wincodecsdk/nf-wincodecsdk-iwiccomponentfactory-createmetadatawriterfromreader">IWICComponentFactory::CreateMetadataWriterFromReader</a> require that the reader have a stream. Therefore, these operations will be unavailable if the reader is initialized with <b>WICPersistOptionNoCacheStream</b>.</summary>
  </member>
  <member name="WICPersistOptions::WICPersistOptionPreferUTF8">
    <summary>Use UTF8 instead of the default UTF16.

<div class="alert"><b>Note</b>  This option is currently unused by WIC.</div>
<div> </div></summary>
  </member>
  <member name="WICPersistOptions::WICPersistOptionMask">
    <summary>The <a href="https://docs.microsoft.com/windows/desktop/api/wincodecsdk/ne-wincodecsdk-wicpersistoptions">WICPersistOptions</a> mask.</summary>
  </member>
  <member name="IWICBitmapEncoder::Commit">
    <summary>
      <para>Commits all changes for the image and closes the stream.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//wincodec/nf-wincodec-iwicbitmapencoder-commit" /></para>
    </summary>
  </member>
  <member name="IWICPlanarFormatConverter::Initialize">
    <summary>
      <para>Initializes a format converter with a planar source, and specifies the interleaved output pixel format.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//wincodec/nf-wincodec-iwicplanarformatconverter-initialize" /></para>
      <param name="ppPlanes">An array of <a href="https://docs.microsoft.com/windows/desktop/api/wincodec/nn-wincodec-iwicbitmapsource">IWICBitmapSource</a> that represents image planes.</param>
      <param name="cPlanes">The number of component planes specified by the planes parameter.</param>
      <param name="dstFormat">The destination interleaved pixel format.</param>
      <param name="dither">The <a href="https://docs.microsoft.com/windows/desktop/api/wincodec/ne-wincodec-wicbitmapdithertype">WICBitmapDitherType</a> used for conversion.</param>
      <param name="pIPalette">The palette to use for conversion.</param>
      <param name="alphaThresholdPercent">The alpha threshold to use for conversion.</param>
      <param name="paletteTranslate">The palette translation type to use for conversion.</param>
    </summary>
  </member>
  <member name="IWICImagingFactory::CreateBitmapFlipRotator">
    <summary>
      <para>Creates a new instance of an IWICBitmapFlipRotator object.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//wincodec/nf-wincodec-iwicimagingfactory-createbitmapfliprotator" /></para>
      <param name="ppIBitmapFlipRotator">A pointer that receives a pointer to a new <a href="https://docs.microsoft.com/windows/desktop/api/wincodec/nn-wincodec-iwicbitmapfliprotator">IWICBitmapFlipRotator</a>.</param>
    </summary>
  </member>
  <member name="WICBitmapPlaneDescription">
    <summary>
      <para>Specifies the pixel format and size of a component plane.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//wincodec/ns-wincodec-wicbitmapplanedescription" /></para>
    </summary>
  </member>
  <member name="WICBitmapPlaneDescription::Format">
    <summary>Describes the pixel format of the plane.</summary>
  </member>
  <member name="WICBitmapPlaneDescription::Width">
    <summary>Component width of the plane.</summary>
  </member>
  <member name="WICBitmapPlaneDescription::Height">
    <summary>Component height of the plane.</summary>
  </member>
  <member name="IWICPalette::InitializePredefined">
    <summary>
      <para>Initializes the palette to one of the pre-defined palettes specified by WICBitmapPaletteType and optionally adds a transparent color.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//wincodec/nf-wincodec-iwicpalette-initializepredefined" /></para>
      <param name="ePaletteType">The desired pre-defined palette type.</param>
      <param name="fAddTransparentColor">The optional transparent color to add to the palette. If no transparent color is needed, use 0. When initializing to a grayscale or black and white palette, set this parameter to <b>FALSE</b>.</param>
    </summary>
  </member>
  <member name="IWICDevelopRaw::GetExposureCompensation">
    <summary>
      <para>Gets the exposure compensation stop value of the raw image.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//wincodec/nf-wincodec-iwicdevelopraw-getexposurecompensation" /></para>
      <param name="pEV">A pointer that receives the exposure compensation stop value. The default is the "as-shot" setting.</param>
    </summary>
  </member>
  <member name="IWICBitmapFlipRotator">
    <summary>
      <para>Exposes methods that produce a flipped (horizontal or vertical) and/or rotated (by 90 degree increments) bitmap source. The flip is done before the rotation.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//wincodec/nn-wincodec-iwicbitmapfliprotator" /></para>
    </summary>
  </member>
  <member name="IWICDdsDecoder::GetFrame">
    <summary>
      <para>Retrieves the specified frame of the DDS image.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//wincodec/nf-wincodec-iwicddsdecoder-getframe" /></para>
      <param name="arrayIndex">The requested index within the texture array.</param>
      <param name="mipLevel">The requested mip level.</param>
      <param name="sliceIndex">The requested slice within the 3D texture.</param>
      <param name="ppIBitmapFrame">A pointer to a  <a href="https://docs.microsoft.com/windows/desktop/api/wincodec/nn-wincodec-iwicbitmapframedecode">IWICBitmapFrameDecode</a> object.</param>
    </summary>
  </member>
  <member name="WICTiffCompressionOption">
    <summary>
      <para>Specifies the Tagged Image File Format (TIFF) compression options.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//wincodec/ne-wincodec-wictiffcompressionoption" /></para>
    </summary>
  </member>
  <member name="WICTiffCompressionOption::WICTiffCompressionDontCare">
    <summary>Indicates a suitable compression algorithm based on the image and pixel format.</summary>
  </member>
  <member name="WICTiffCompressionOption::WICTiffCompressionNone">
    <summary>Indicates no compression.</summary>
  </member>
  <member name="WICTiffCompressionOption::WICTiffCompressionCCITT3">
    <summary>Indicates a CCITT3 compression algorithm. This algorithm is only valid for 1bpp pixel formats.</summary>
  </member>
  <member name="WICTiffCompressionOption::WICTiffCompressionCCITT4">
    <summary>Indicates a CCITT4 compression algorithm. This algorithm is only valid for 1bpp pixel formats.</summary>
  </member>
  <member name="WICTiffCompressionOption::WICTiffCompressionLZW">
    <summary>Indicates a LZW compression algorithm.</summary>
  </member>
  <member name="WICTiffCompressionOption::WICTiffCompressionRLE">
    <summary>Indicates a RLE compression algorithm. This algorithm is only valid for 1bpp pixel formats.</summary>
  </member>
  <member name="WICTiffCompressionOption::WICTiffCompressionZIP">
    <summary>Indicates a ZIP compression algorithm.</summary>
  </member>
  <member name="WICTiffCompressionOption::WICTiffCompressionLZWHDifferencing">
    <summary>Indicates an LZWH differencing algorithm.</summary>
  </member>
  <member name="IWICMetadataReader::GetValue">
    <summary>
      <para>Gets the metadata item value.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//wincodecsdk/nf-wincodecsdk-iwicmetadatareader-getvalue" /></para>
      <param name="pvarSchema">Pointer to the metadata item's schema property.</param>
      <param name="pvarId">Pointer to the metadata item's id.</param>
      <param name="pvarValue">Pointer that receives the metadata value.</param>
    </summary>
  </member>
  <member name="IWICBitmapEncoder::SetPalette">
    <summary>
      <para>Sets the global palette for the image.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//wincodec/nf-wincodec-iwicbitmapencoder-setpalette" /></para>
      <param name="pIPalette">The <a href="https://docs.microsoft.com/windows/desktop/api/wincodec/nn-wincodec-iwicpalette">IWICPalette</a> to use as the global palette.</param>
    </summary>
  </member>
  <member name="IWICDevelopRaw::SetTint">
    <summary>
      <para>Sets the tint value of the raw image.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//wincodec/nf-wincodec-iwicdevelopraw-settint" /></para>
      <param name="Tint">The tint value of the raw image. The default value is the "as-shot" setting if it exists or 0.0. The value range for sharpness is -1.0 through +1.0. The -1.0 lower limit represents a full green bias to the image, while the 1.0 upper limit represents a full magenta bias.</param>
    </summary>
  </member>
  <member name="WICBitmapEncoderCacheOption">
    <summary>
      <para>Specifies the cache options available for an encoder.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//wincodec/ne-wincodec-wicbitmapencodercacheoption" /></para>
    </summary>
  </member>
  <member name="WICBitmapEncoderCacheOption::WICBitmapEncoderCacheInMemory">
    <summary>The encoder is cached in memory. This option is not supported.</summary>
  </member>
  <member name="WICBitmapEncoderCacheOption::WICBitmapEncoderCacheTempFile">
    <summary>The encoder is cached to a temporary file. This option is not supported.</summary>
  </member>
  <member name="WICBitmapEncoderCacheOption::WICBitmapEncoderNoCache">
    <summary>The encoder is not cached.</summary>
  </member>
  <member name="WICJpegCommentProperties">
    <summary>
      <para>Specifies the JPEG comment properties.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//wincodec/ne-wincodec-wicjpegcommentproperties" /></para>
    </summary>
  </member>
  <member name="WICJpegCommentProperties::WICJpegCommentText">
    <summary>Indicates the metadata property is comment text.</summary>
  </member>
  <member name="IWICMetadataBlockWriter::SetWriterByIndex">
    <summary>
      <para>Replaces the metadata writer at the specified index location.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//wincodecsdk/nf-wincodecsdk-iwicmetadatablockwriter-setwriterbyindex" /></para>
      <param name="nIndex">The index position at which to place the metadata writer. This index is zero-based.</param>
      <param name="pIMetadataWriter">A pointer to the <a href="https://docs.microsoft.com/windows/desktop/api/wincodecsdk/nn-wincodecsdk-iwicmetadatawriter">IWICMetadataWriter</a>.</param>
    </summary>
  </member>
  <member name="WICDdsParameters">
    <summary>
      <para>Specifies the DDS image dimension, DXGI_FORMAT and alpha mode of contained data.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//wincodec/ns-wincodec-wicddsparameters" /></para>
    </summary>
  </member>
  <member name="WICDdsParameters::Width">
    <summary>The width, in pixels, of the texture at the largest mip size (mip level 0).</summary>
  </member>
  <member name="WICDdsParameters::Height">
    <summary>The height, in pixels, of the texture at the largest mip size (mip level 0). When the DDS image contains a 1-dimensional texture, this value is equal to 1.</summary>
  </member>
  <member name="WICDdsParameters::Depth">
    <summary>The number of slices in the 3D texture. This is equivalent to the depth, in pixels, of the 3D texture at the largest mip size (mip level 0). When the DDS image contains a 1- or 2-dimensional texture, this value is equal to 1.</summary>
  </member>
  <member name="WICDdsParameters::MipLevels">
    <summary>The number of mip levels contained in the DDS image.</summary>
  </member>
  <member name="WICDdsParameters::ArraySize">
    <summary>The number of textures in the array in the DDS image.</summary>
  </member>
  <member name="WICDdsParameters::DxgiFormat">
    <summary>The <a href="https://docs.microsoft.com/windows/desktop/api/dxgiformat/ne-dxgiformat-dxgi_format">DXGI_FORMAT</a> of the DDS pixel data.</summary>
  </member>
  <member name="WICDdsParameters::Dimension">
    <summary>Specifies the dimension type of the data contained in DDS image (1D, 2D, 3D or cube texture).</summary>
  </member>
  <member name="WICDdsParameters::AlphaMode">
    <summary>Specifies the alpha behavior of the DDS image.</summary>
  </member>
  <member name="WICPngTimeProperties">
    <summary>
      <para>Specifies the Portable Network Graphics (PNG) tIME chunk metadata properties.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//wincodec/ne-wincodec-wicpngtimeproperties" /></para>
    </summary>
  </member>
  <member name="WICPngTimeProperties::WICPngTimeYear">
    <summary>[VT_UI2] Indicates the year of the last modification.</summary>
  </member>
  <member name="WICPngTimeProperties::WICPngTimeMonth">
    <summary>[VT_UI1] Indicates the month of the last modification.</summary>
  </member>
  <member name="WICPngTimeProperties::WICPngTimeDay">
    <summary>[VT_UI1] Indicates day of the last modification.</summary>
  </member>
  <member name="WICPngTimeProperties::WICPngTimeHour">
    <summary>[VT_UI1] Indicates the hour of the last modification.</summary>
  </member>
  <member name="WICPngTimeProperties::WICPngTimeMinute">
    <summary>[VT_UI1] Indicates the minute of the last modification.</summary>
  </member>
  <member name="WICPngTimeProperties::WICPngTimeSecond">
    <summary>[VT_UI1] Indicates the second of the last modification.</summary>
  </member>
  <member name="WICComponentEnumerateOptions">
    <summary>
      <para>Specifies component enumeration options.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//wincodec/ne-wincodec-wiccomponentenumerateoptions" /></para>
    </summary>
  </member>
  <member name="WICComponentEnumerateOptions::WICComponentEnumerateDefault">
    <summary>Enumerate any components that are not disabled. Because this value is 0x0, it is always included with the other options.</summary>
  </member>
  <member name="WICComponentEnumerateOptions::WICComponentEnumerateRefresh">
    <summary>Force a read of the registry before enumerating components.</summary>
  </member>
  <member name="WICComponentEnumerateOptions::WICComponentEnumerateDisabled">
    <summary>Include disabled components in the enumeration. The set of disabled components is disjoint with the set of default enumerated components</summary>
  </member>
  <member name="WICComponentEnumerateOptions::WICComponentEnumerateUnsigned">
    <summary>Include unsigned components in the enumeration. This option has no effect.</summary>
  </member>
  <member name="WICComponentEnumerateOptions::WICComponentEnumerateBuiltInOnly">
    <summary>At the end of component enumeration, filter out any components that are not Windows provided.</summary>
  </member>
  <member name="IWICDevelopRaw">
    <summary>
      <para>Exposes methods that provide access to the capabilites of a raw codec format.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//wincodec/nn-wincodec-iwicdevelopraw" /></para>
    </summary>
  </member>
  <member name="IWICBitmapDecoderInfo">
    <summary>
      <para>Exposes methods that provide information about a decoder.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//wincodec/nn-wincodec-iwicbitmapdecoderinfo" /></para>
    </summary>
  </member>
  <member name="IWICBitmapCodecInfo::GetPixelFormats">
    <summary>
      <para>Retrieves the pixel formats the codec supports.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//wincodec/nf-wincodec-iwicbitmapcodecinfo-getpixelformats" /></para>
      <param name="cFormats">The size of the <i>pguidPixelFormats</i> array. Use <c>0</c> on first call to determine the needed array size.</param>
      <param name="pguidPixelFormats">Receives the supported pixel formats. Use <c>NULL</c> on first call to determine needed array size.</param>
      <param name="pcActual">The array size needed to retrieve all supported pixel formats.</param>
    </summary>
  </member>
  <member name="IWICBitmapDecoderInfo::CreateInstance">
    <summary>
      <para>Creates a new IWICBitmapDecoder instance.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//wincodec/nf-wincodec-iwicbitmapdecoderinfo-createinstance" /></para>
      <param name="ppIBitmapDecoder">A pointer that receives a pointer to a new instance of the <a href="https://docs.microsoft.com/windows/desktop/api/wincodec/nn-wincodec-iwicbitmapdecoder">IWICBitmapDecoder</a>.</param>
    </summary>
  </member>
  <member name="IWICBitmapEncoder::CreateNewFrame">
    <summary>
      <para>Creates a new IWICBitmapFrameEncode instance.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//wincodec/nf-wincodec-iwicbitmapencoder-createnewframe" /></para>
      <param name="ppIFrameEncode">A pointer that receives a pointer to the new instance of an <a href="https://docs.microsoft.com/windows/desktop/api/wincodec/nn-wincodec-iwicbitmapframeencode">IWICBitmapFrameEncode</a>.</param>
      <param name="ppIEncoderOptions">Optional. Receives the named properties to use for subsequent frame initialization. See Remarks.</param>
    </summary>
  </member>
  <member name="WICSectionAccessLevel">
    <summary>
      <para>Specifies the access level of a Windows Graphics Device Interface (GDI) section.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//wincodec/ne-wincodec-wicsectionaccesslevel" /></para>
    </summary>
  </member>
  <member name="WICSectionAccessLevel::WICSectionAccessLevelRead">
    <summary>Indicates a read only access level.</summary>
  </member>
  <member name="WICSectionAccessLevel::WICSectionAccessLevelReadWrite">
    <summary>Indicates a read/write access level.</summary>
  </member>
  <member name="IWICImageEncoder::WriteFrame">
    <summary>
      <para>Encodes the image to the frame given by the IWICBitmapFrameEncode.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//wincodec/nf-wincodec-iwicimageencoder-writeframe" /></para>
      <param name="pImage">The Direct2D image that will be encoded.</param>
      <param name="pFrameEncode">The frame encoder to which the image is written.</param>
      <param name="pImageParameters">Additional parameters to control encoding.</param>
    </summary>
  </member>
  <member name="WICDdsAlphaMode">
    <summary>
      <para>Specifies the the meaning of pixel color component values contained in the DDS image.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//wincodec/ne-wincodec-wicddsalphamode" /></para>
    </summary>
  </member>
  <member name="WICDdsAlphaMode::WICDdsAlphaModeUnknown">
    <summary>Alpha behavior is unspecified and must be determined by the reader.</summary>
  </member>
  <member name="WICDdsAlphaMode::WICDdsAlphaModeStraight">
    <summary>The alpha data is straight.</summary>
  </member>
  <member name="WICDdsAlphaMode::WICDdsAlphaModePremultiplied">
    <summary>The alpha data is premultiplied.</summary>
  </member>
  <member name="WICDdsAlphaMode::WICDdsAlphaModeOpaque">
    <summary>The alpha data is opaque (UNORM value of 1). This can be used by a compliant reader as a performance optimization. For example, blending operations can be converted to copies.</summary>
  </member>
  <member name="WICDdsAlphaMode::WICDdsAlphaModeCustom">
    <summary>The alpha channel contains custom data that is not alpha.</summary>
  </member>
  <member name="IWICComponentFactory::CreateEncoderPropertyBag">
    <summary>
      <para>Creates an encoder property bag.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//wincodecsdk/nf-wincodecsdk-iwiccomponentfactory-createencoderpropertybag" /></para>
      <param name="ppropOptions">Pointer to an array of <a href="https://docs.microsoft.com/previous-versions/windows/internet-explorer/ie-developer/platform-apis/aa768188(v=vs.85)">PROPBAG2</a> options used to create the encoder property bag.</param>
      <param name="cCount">The number of <a href="https://docs.microsoft.com/previous-versions/windows/internet-explorer/ie-developer/platform-apis/aa768188(v=vs.85)">PROPBAG2</a> structures in the <i>ppropOptions</i> array.</param>
      <param name="ppIPropertyBag">A pointer that receives a pointer to an encoder <a href="https://docs.microsoft.com/previous-versions/windows/internet-explorer/ie-developer/platform-apis/aa768192(v=vs.85)">IPropertyBag2</a>.</param>
    </summary>
  </member>
  <member name="WICBitmapPattern">
    <summary>
      <para>Contains members that identify a pattern within an image file which can be used to identify a particular format.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//wincodec/ns-wincodec-wicbitmappattern" /></para>
    </summary>
  </member>
  <member name="WICBitmapPattern::Position">
    <summary>The offset the pattern is located in the file.</summary>
  </member>
  <member name="WICBitmapPattern::Length">
    <summary>The pattern length.</summary>
  </member>
  <member name="WICBitmapPattern::Pattern">
    <summary>The actual pattern.</summary>
  </member>
  <member name="WICBitmapPattern::Mask">
    <summary>The pattern mask.</summary>
  </member>
  <member name="WICBitmapPattern::EndOfStream">
    <summary>The end of the stream.</summary>
  </member>
  <member name="WICMapShortNameToGuid">
    <summary>
      <para>Obtains the GUID associated with the given short name.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//wincodec/nf-wincodec-wicmapshortnametoguid" /></para>
      <param name="wzName">A pointer to the short name.</param>
      <param name="pguid">A pointer that receives the GUID associated with the given short name.</param>
    </summary>
  </member>
  <member name="WICBitmapPlane">
    <summary>
      <para>Specifies the pixel format, buffer, stride and size of a component plane for a planar pixel format.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//wincodec/ns-wincodec-wicbitmapplane" /></para>
    </summary>
  </member>
  <member name="WICBitmapPlane::Format">
    <summary>Describes the pixel format of the plane.</summary>
  </member>
  <member name="WICBitmapPlane::pbBuffer">
    <summary>Pointer to the buffer that holds the plane’s pixel components.</summary>
  </member>
  <member name="WICBitmapPlane::cbStride">
    <summary>The stride of the buffer ponted to by <i>pbData</i>.  Stride indicates the total number of bytes to go from the beginning of one scanline to the beginning of the next scanline.</summary>
  </member>
  <member name="WICBitmapPlane::cbBufferSize">
    <summary>The total size of the buffer pointed to by <i>pbBuffer</i>.</summary>
  </member>
  <member name="IWICMetadataReader::GetEnumerator">
    <summary>
      <para>Gets an enumerator of all the metadata items.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//wincodecsdk/nf-wincodecsdk-iwicmetadatareader-getenumerator" /></para>
      <param name="ppIEnumMetadata">Pointer that receives a pointer to the metadata enumerator.</param>
    </summary>
  </member>
  <member name="WICBitmapAlphaChannelOption">
    <summary>
      <para>Specifies the desired alpha channel usage.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//wincodec/ne-wincodec-wicbitmapalphachanneloption" /></para>
    </summary>
  </member>
  <member name="WICBitmapAlphaChannelOption::WICBitmapUseAlpha">
    <summary>Use alpha channel.</summary>
  </member>
  <member name="WICBitmapAlphaChannelOption::WICBitmapUsePremultipliedAlpha">
    <summary>Use a pre-multiplied alpha channel.</summary>
  </member>
  <member name="WICBitmapAlphaChannelOption::WICBitmapIgnoreAlpha">
    <summary>Ignore alpha channel.</summary>
  </member>
  <member name="WICBitmapAlphaChannelOption::WICBITMAPALPHACHANNELOPTIONS_FORCE_DWORD">
    <summary>Sentinel value.</summary>
  </member>
  <member name="IWICBitmapEncoderInfo::CreateInstance">
    <summary>
      <para>Creates a new IWICBitmapEncoder instance.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//wincodec/nf-wincodec-iwicbitmapencoderinfo-createinstance" /></para>
      <param name="ppIBitmapEncoder">A pointer that receives a pointer to a new <a href="https://docs.microsoft.com/windows/desktop/api/wincodec/nn-wincodec-iwicbitmapencoder">IWICBitmapEncoder</a> instance.</param>
    </summary>
  </member>
  <member name="IWICComponentInfo::GetAuthor">
    <summary>
      <para>Retrieves the name of component's author.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//wincodec/nf-wincodec-iwiccomponentinfo-getauthor" /></para>
      <param name="cchAuthor">The size of the <i>wzAuthor</i> buffer.</param>
      <param name="wzAuthor">A pointer that receives the name of the component's author.
               The locale of the string depends on the value that the codec wrote to the registry at install time. For built-in components, these strings are always in English.</param>
      <param name="pcchActual">A pointer that receives the actual length of the component's authors name. The author name is optional; if an author name is not specified by the component, the length returned is 0.</param>
    </summary>
  </member>
  <member name="IWICBitmapSource::GetResolution">
    <summary>
      <para>Retrieves the sampling rate between pixels and physical world measurements.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//wincodec/nf-wincodec-iwicbitmapsource-getresolution" /></para>
      <param name="pDpiX">A pointer that receives the x-axis dpi resolution.</param>
      <param name="pDpiY">A pointer that receives the y-axis dpi resolution.</param>
    </summary>
  </member>
  <member name="IWICComponentInfo::GetFriendlyName">
    <summary>
      <para>Retrieves the component's friendly name, which is a human-readable display name for the component.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//wincodec/nf-wincodec-iwiccomponentinfo-getfriendlyname" /></para>
      <param name="cchFriendlyName">The size of the <i>wzFriendlyName</i> buffer.</param>
      <param name="wzFriendlyName">A pointer that receives the friendly name of the component.
               The locale of the string depends on the value that the codec wrote to the registry at install time. For built-in components, these strings are always in English.</param>
      <param name="pcchActual">A pointer that receives the actual length of the component's friendly name.</param>
    </summary>
  </member>
  <member name="IWICStream">
    <summary>
      <para>Represents a Windows Imaging Component (WIC) stream for referencing imaging and metadata content.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//wincodec/nn-wincodec-iwicstream" /></para>
    </summary>
  </member>
  <member name="IWICStreamProvider::GetStream">
    <summary>
      <para>Gets the stream held by the component.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//wincodecsdk/nf-wincodecsdk-iwicstreamprovider-getstream" /></para>
      <param name="ppIStream">Pointer that receives a pointer to the stream held by the component.</param>
    </summary>
  </member>
  <member name="IWICMetadataHandlerInfo::GetMetadataFormat">
    <summary>
      <para>Retrieves the metadata format of the metadata handler.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//wincodecsdk/nf-wincodecsdk-iwicmetadatahandlerinfo-getmetadataformat" /></para>
      <param name="pguidMetadataFormat">Pointer that receives the metadata format GUID.</param>
    </summary>
  </member>
  <member name="IWICDevelopRaw::GetNoiseReduction">
    <summary>
      <para>Gets the noise reduction value of the raw image.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//wincodec/nf-wincodec-iwicdevelopraw-getnoisereduction" /></para>
      <param name="pNoiseReduction">A pointer that receives the noise reduction value of the raw image.  The default value is the "as-shot" setting if it exists or 0.0. The value range for noise reduction is 0.0 through 1.0. The 0.0 lower limit represents no noise reduction applied to the image, while the 1.0 upper limit represents full highest noise reduction amount that can be applied.</param>
    </summary>
  </member>
  <member name="WICComponentType">
    <summary>
      <para>Specifies the type of Windows Imaging Component (WIC) component.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//wincodec/ne-wincodec-wiccomponenttype" /></para>
    </summary>
  </member>
  <member name="WICComponentType::WICDecoder">
    <summary>A WIC decoder.</summary>
  </member>
  <member name="WICComponentType::WICEncoder">
    <summary>A WIC encoder.</summary>
  </member>
  <member name="WICComponentType::WICPixelFormatConverter">
    <summary>A WIC pixel converter.</summary>
  </member>
  <member name="WICComponentType::WICMetadataReader">
    <summary>A WIC metadata reader.</summary>
  </member>
  <member name="WICComponentType::WICMetadataWriter">
    <summary>A WIC metadata writer.</summary>
  </member>
  <member name="WICComponentType::WICPixelFormat">
    <summary>A WIC pixel format.</summary>
  </member>
  <member name="WICComponentType::WICAllComponents">
    <summary>All WIC components.</summary>
  </member>
  <member name="WICRawParameterSet">
    <summary>
      <para>Specifies the parameter set used by a raw codec.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//wincodec/ne-wincodec-wicrawparameterset" /></para>
    </summary>
  </member>
  <member name="WICRawParameterSet::WICAsShotParameterSet">
    <summary>An as shot parameter set.</summary>
  </member>
  <member name="WICRawParameterSet::WICUserAdjustedParameterSet">
    <summary>A user adjusted parameter set.</summary>
  </member>
  <member name="WICRawParameterSet::WICAutoAdjustedParameterSet">
    <summary>A codec adjusted parameter set.</summary>
  </member>
  <member name="IWICDevelopRaw::SetRotation">
    <summary>
      <para>Sets the desired rotation angle.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//wincodec/nf-wincodec-iwicdevelopraw-setrotation" /></para>
      <param name="Rotation">The desired rotation angle.</param>
    </summary>
  </member>
  <member name="IWICBitmap::SetResolution">
    <summary>
      <para>Changes the physical resolution of the image.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//wincodec/nf-wincodec-iwicbitmap-setresolution" /></para>
      <param name="dpiX">The horizontal resolution.</param>
      <param name="dpiY">The vertical resolution.</param>
    </summary>
  </member>
  <member name="IWICBitmapDecoder::GetThumbnail">
    <summary>
      <para>Retrieves a bitmap thumbnail of the image, if one exists</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//wincodec/nf-wincodec-iwicbitmapdecoder-getthumbnail" /></para>
      <param name="ppIThumbnail">Receives a pointer to the <a href="https://docs.microsoft.com/windows/desktop/api/wincodec/nn-wincodec-iwicbitmapsource">IWICBitmapSource</a> of the thumbnail.</param>
    </summary>
  </member>
  <member name="IWICBitmapDecoder::CopyPalette">
    <summary>
      <para>Copies the decoder's IWICPalette .</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//wincodec/nf-wincodec-iwicbitmapdecoder-copypalette" /></para>
      <param name="pIPalette">An<a href="https://docs.microsoft.com/windows/desktop/api/wincodec/nn-wincodec-iwicpalette">IWICPalette</a> to which the decoder's global palette is to be copied. Use <a href="https://docs.microsoft.com/windows/desktop/api/wincodec/nf-wincodec-iwicimagingfactory-createpalette">CreatePalette</a> to create the destination palette before calling <b>CopyPalette</b>.</param>
    </summary>
  </member>
  <member name="IWICBitmapCodecInfo">
    <summary>
      <para>Exposes methods that provide information about a particular codec.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//wincodec/nn-wincodec-iwicbitmapcodecinfo" /></para>
    </summary>
  </member>
  <member name="IWICJpegFrameDecode">
    <summary>
      <para>Exposes methods for decoding JPEG images. Provides access to the Start Of Frame (SOF) header, Start of Scan (SOS) header, the Huffman and Quantization tables, and the compressed JPEG JPEG data. Also enables indexing for efficient random access.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//wincodec/nn-wincodec-iwicjpegframedecode" /></para>
    </summary>
  </member>
  <member name="IWICStream::InitializeFromMemory">
    <summary>
      <para>Initializes a stream to treat a block of memory as a stream. The stream cannot grow beyond the buffer size.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//wincodec/nf-wincodec-iwicstream-initializefrommemory" /></para>
      <param name="pbBuffer">Pointer to the buffer used to initialize the stream.</param>
      <param name="cbBufferSize">The size of buffer.</param>
    </summary>
  </member>
  <member name="IWICStream::InitializeFromFilename">
    <summary>
      <para>Initializes a stream from a particular file.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//wincodec/nf-wincodec-iwicstream-initializefromfilename" /></para>
      <param name="wzFileName">The file used to initialize the stream.</param>
      <param name="dwDesiredAccess">The desired file access mode.

<table>
<tr>
<th>Value</th>
<th>Meaning</th>
</tr>
<tr>
<td width="40%"><a id="GENERIC_READ"></a><a id="generic_read"></a><dl>
<dt><b>GENERIC_READ</b></dt>
</dl>
</td>
<td width="60%">
Read access.

</td>
</tr>
<tr>
<td width="40%"><a id="GENERIC_WRITE"></a><a id="generic_write"></a><dl>
<dt><b>GENERIC_WRITE</b></dt>
</dl>
</td>
<td width="60%">
Write access.

</td>
</tr>
</table></param>
    </summary>
  </member>
  <member name="IWICPixelFormatInfo::GetChannelMask">
    <summary>
      <para>Gets the pixel format's channel mask.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//wincodec/nf-wincodec-iwicpixelformatinfo-getchannelmask" /></para>
      <param name="uiChannelIndex">The index to the channel mask to retrieve.</param>
      <param name="cbMaskBuffer">The size of the <i>pbMaskBuffer</i> buffer.</param>
      <param name="pbMaskBuffer">Pointer to the mask buffer.</param>
      <param name="pcbActual">The actual buffer size needed to obtain the channel mask.</param>
    </summary>
  </member>
  <member name="IWICDevelopRaw::GetContrast">
    <summary>
      <para>Gets the contrast value of the raw image.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//wincodec/nf-wincodec-iwicdevelopraw-getcontrast" /></para>
      <param name="pContrast">A pointer that receives the contrast value of the raw image. The default value is the "as-shot" setting. The value range for contrast is 0.0 through 1.0. The 0.0 lower limit represents no contrast applied to the image, while the 1.0 upper limit represents the highest amount of contrast that can be applied.</param>
    </summary>
  </member>
  <member name="WICComponentSigning">
    <summary>
      <para>Specifies the component signing status.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//wincodec/ne-wincodec-wiccomponentsigning" /></para>
    </summary>
  </member>
  <member name="WICComponentSigning::WICComponentSigned">
    <summary>A signed component.</summary>
  </member>
  <member name="WICComponentSigning::WICComponentUnsigned">
    <summary>An unsigned component</summary>
  </member>
  <member name="WICComponentSigning::WICComponentSafe">
    <summary>A component is safe.
            

Components that do not have a binary component to sign, such as a pixel format, should return this value.</summary>
  </member>
  <member name="WICComponentSigning::WICComponentDisabled">
    <summary>A component has been disabled.</summary>
  </member>
  <member name="IWICBitmapFrameEncode::SetSize">
    <summary>
      <para>Sets the output image dimensions for the frame.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//wincodec/nf-wincodec-iwicbitmapframeencode-setsize" /></para>
      <param name="uiWidth">The width of the output image.</param>
      <param name="uiHeight">The height of the output image.</param>
    </summary>
  </member>
  <member name="IWICMetadataBlockReader::GetCount">
    <summary>
      <para>Retrieves the number of top level metadata blocks.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//wincodecsdk/nf-wincodecsdk-iwicmetadatablockreader-getcount" /></para>
      <param name="pcCount">When this method returns, contains the number of top level metadata blocks.</param>
    </summary>
  </member>
  <member name="IWICBitmapSource::GetPixelFormat">
    <summary>
      <para>Retrieves the pixel format of the bitmap source..</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//wincodec/nf-wincodec-iwicbitmapsource-getpixelformat" /></para>
      <param name="pPixelFormat">Receives the pixel format GUID the bitmap is stored in. For a list of available pixel formats, see the <a href="https://docs.microsoft.com/windows/desktop/wic/-wic-codec-native-pixel-formats">Native Pixel Formats</a> topic.</param>
    </summary>
  </member>
  <member name="IWICJpegFrameDecode::GetScanHeader">
    <summary>
      <para>Retrieves parameters from the Start Of Scan (SOS) marker for the scan with the specified index.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//wincodec/nf-wincodec-iwicjpegframedecode-getscanheader" /></para>
      <param name="scanIndex">The index of the scan for which header data is retrieved.</param>
      <param name="pScanHeader">A pointer that receives the frame header data.</param>
    </summary>
  </member>
  <member name="IWICMetadataQueryReader::GetMetadataByName">
    <summary>
      <para>Retrieves the metadata block or item identified by a metadata query expression.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//wincodec/nf-wincodec-iwicmetadataqueryreader-getmetadatabyname" /></para>
      <param name="wzName">The query expression to the requested metadata block or item.</param>
      <param name="pvarValue">When this method returns, contains the metadata block or item requested.</param>
    </summary>
  </member>
  <member name="IWICComponentInfo::GetSigningStatus">
    <summary>
      <para>Retrieves the signing status of the component.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//wincodec/nf-wincodec-iwiccomponentinfo-getsigningstatus" /></para>
      <param name="pStatus">A pointer that receives the <a href="https://docs.microsoft.com/windows/desktop/api/wincodec/ne-wincodec-wiccomponentsigning">WICComponentSigning</a> status of the component.</param>
    </summary>
  </member>
  <member name="IWICPersistStream::SaveEx">
    <summary>
      <para>Saves the IWICPersistStream to the given input IStream using the given parameters.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//wincodecsdk/nf-wincodecsdk-iwicpersiststream-saveex" /></para>
      <param name="pIStream">The stream to save to.</param>
      <param name="dwPersistOptions">The <a href="https://docs.microsoft.com/windows/desktop/api/wincodecsdk/ne-wincodecsdk-wicpersistoptions">WICPersistOptions</a>  to use when saving.</param>
      <param name="fClearDirty">Indicates whether the "dirty" value will be cleared from all metadata after saving.</param>
    </summary>
  </member>
  <member name="WIC8BIMIptcDigestProperties">
    <summary>
      <para>Specifies the identifiers of the metadata items in an 8BIM IPTC digest metadata block.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//wincodec/ne-wincodec-wic8bimiptcdigestproperties" /></para>
    </summary>
  </member>
  <member name="WIC8BIMIptcDigestProperties::WIC8BIMIptcDigestPString">
    <summary>[VT_LPSTR] A name that identifies the 8BIM block.</summary>
  </member>
  <member name="WIC8BIMIptcDigestProperties::WIC8BIMIptcDigestIptcDigest">
    <summary>[VT_BLOB] The embedded IPTC digest value.</summary>
  </member>
  <member name="IWICJpegFrameDecode::SetIndexing">
    <summary>
      <para>Enables indexing of the JPEG for efficient random access.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//wincodec/nf-wincodec-iwicjpegframedecode-setindexing" /></para>
      <param name="options">A value specifying whether indexes should be generated immediately or deferred until a future call to <a href="https://docs.microsoft.com/windows/desktop/api/wincodec/nf-wincodec-iwicbitmapsource-copypixels">IWICBitmapSource::CopyPixels</a>.</param>
      <param name="horizontalIntervalSize">The granularity of the indexing, in pixels.</param>
    </summary>
  </member>
  <member name="IWICPersistStream::LoadEx">
    <summary>
      <para>Loads data from an input stream using the given parameters.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//wincodecsdk/nf-wincodecsdk-iwicpersiststream-loadex" /></para>
      <param name="pIStream">Pointer to the input stream.</param>
      <param name="pguidPreferredVendor">Pointer to the GUID of the preferred vendor .</param>
      <param name="dwPersistOptions">The <a href="https://docs.microsoft.com/windows/desktop/api/wincodecsdk/ne-wincodecsdk-wicpersistoptions">WICPersistOptions</a> used to load the stream.</param>
    </summary>
  </member>
  <member name="IWICProgressCallback::Notify">
    <summary>
      <para>Notify method is documented only for compliance; its use is not recommended and may be altered or unavailable in the future. Instead, and use RegisterProgressNotification.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//wincodec/nf-wincodec-iwicprogresscallback-notify" /></para>
      <param name="uFrameNum">The current frame number.</param>
      <param name="operation">The operation on which progress is being reported.</param>
      <param name="dblProgress">The progress value ranging from is 0.0 to 1.0. 0.0 indicates the beginning of the operation. 1.0 indicates the end of the operation.</param>
    </summary>
  </member>
  <member name="IWICMetadataReader::GetValueByIndex">
    <summary>
      <para>Gets the metadata item at the given index.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//wincodecsdk/nf-wincodecsdk-iwicmetadatareader-getvaluebyindex" /></para>
      <param name="nIndex">The index of the metadata item to retrieve.</param>
      <param name="pvarSchema">Pointer that receives the schema property.</param>
      <param name="pvarId">Pointer that receives the id property.</param>
      <param name="pvarValue">Pointer that receives the metadata value.</param>
    </summary>
  </member>
  <member name="IWICImagingFactory::CreateDecoder">
    <summary>
      <para>Creates a new instance of IWICBitmapDecoder.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//wincodec/nf-wincodec-iwicimagingfactory-createdecoder" /></para>
      <param name="guidContainerFormat">The GUID for the desired container format.

<table>
<tr>
<th>Value</th>
<th>Meaning</th>
</tr>
<tr>
<td width="40%"><a id=""></a><dl>
<dt><b></b></dt>
<dt>GUID_ContainerFormatBmp</dt>
</dl>
</td>
<td width="60%">
The BMP container format GUID.

</td>
</tr>
<tr>
<td width="40%"><a id=""></a><dl>
<dt><b></b></dt>
<dt>GUID_ContainerFormatPng</dt>
</dl>
</td>
<td width="60%">
The PNG container format GUID.

</td>
</tr>
<tr>
<td width="40%"><a id=""></a><dl>
<dt><b></b></dt>
<dt>GUID_ContainerFormatIco</dt>
</dl>
</td>
<td width="60%">
The ICO container format GUID.

</td>
</tr>
<tr>
<td width="40%"><a id=""></a><dl>
<dt><b></b></dt>
<dt>GUID_ContainerFormatJpeg</dt>
</dl>
</td>
<td width="60%">
The JPEG container format GUID.

</td>
</tr>
<tr>
<td width="40%"><a id=""></a><dl>
<dt><b></b></dt>
<dt>GUID_ContainerFormatTiff</dt>
</dl>
</td>
<td width="60%">
The TIFF container format GUID.

</td>
</tr>
<tr>
<td width="40%"><a id=""></a><dl>
<dt><b></b></dt>
<dt>GUID_ContainerFormatGif</dt>
</dl>
</td>
<td width="60%">
The GIF container format GUID.

</td>
</tr>
<tr>
<td width="40%"><a id=""></a><dl>
<dt><b></b></dt>
<dt>GUID_ContainerFormatWmp</dt>
</dl>
</td>
<td width="60%">
The HD Photo container format GUID.

</td>
</tr>
</table></param>
      <param name="pguidVendor">The GUID for the preferred encoder vendor. 

<table>
<tr>
<th>Value</th>
<th>Meaning</th>
</tr>
<tr>
<td width="40%"><a id=""></a><dl>
<dt><b></b></dt>
<dt>NULL</dt>
</dl>
</td>
<td width="60%">
No preferred codec vendor.

</td>
</tr>
<tr>
<td width="40%"><a id=""></a><dl>
<dt><b></b></dt>
<dt>GUID_VendorMicrosoft</dt>
</dl>
</td>
<td width="60%">
Prefer to use Microsoft encoder.

</td>
</tr>
<tr>
<td width="40%"><a id=""></a><dl>
<dt><b></b></dt>
<dt>GUID_VendorMicrosoftBuiltIn</dt>
</dl>
</td>
<td width="60%">
Prefer to use the native Microsoft encoder.

</td>
</tr>
</table></param>
      <param name="ppIDecoder">A pointer that receives a pointer to a new <a href="https://docs.microsoft.com/windows/desktop/api/wincodec/nn-wincodec-iwicbitmapdecoder">IWICBitmapDecoder</a>. You must initialize this <b>IWICBitmapDecoder</b> on a stream using the <a href="https://docs.microsoft.com/windows/desktop/api/wincodec/nf-wincodec-iwicbitmapdecoder-initialize">Initialize</a> method later.</param>
    </summary>
  </member>
  <member name="IWICProgressiveLevelControl::GetCurrentLevel">
    <summary>
      <para>Gets the decoder's current progressive level.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//wincodec/nf-wincodec-iwicprogressivelevelcontrol-getcurrentlevel" /></para>
      <param name="pnLevel">Indicates the current level specified.</param>
    </summary>
  </member>
  <member name="IWICDdsEncoder::SetParameters">
    <summary>
      <para>Sets DDS-specific data.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//wincodec/nf-wincodec-iwicddsencoder-setparameters" /></para>
      <param name="pParameters">Points to the structure where the information is described.</param>
    </summary>
  </member>
  <member name="IWICColorTransform">
    <summary>
      <para>Exposes methods that transforms an IWICBitmapSource from one color context to another.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//wincodec/nn-wincodec-iwiccolortransform" /></para>
    </summary>
  </member>
  <member name="WICGetMetadataContentSize">
    <summary>
      <para>Returns the size of the metadata content contained by the specified IWICMetadataWriter. The returned size accounts for the header and the length of the metadata.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//wincodecsdk/nf-wincodecsdk-wicgetmetadatacontentsize" /></para>
      <param name="guidContainerFormat">The container GUID.</param>
      <param name="pIWriter">The <a href="https://docs.microsoft.com/windows/desktop/api/wincodecsdk/nn-wincodecsdk-iwicmetadatawriter">IWICMetadataWriter</a> that contains the content.</param>
      <param name="pcbSize">A pointer that receives the size of the metadata content.</param>
    </summary>
  </member>
  <member name="IWICBitmapFrameDecode::GetColorContexts">
    <summary>
      <para>Retrieves the IWICColorContext associated with the image frame.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//wincodec/nf-wincodec-iwicbitmapframedecode-getcolorcontexts" /></para>
      <param name="cCount">The number of color contexts to retrieve.

This value must be the size of, or smaller than, the size available to <i>ppIColorContexts</i>.</param>
      <param name="ppIColorContexts">A pointer that receives a pointer to the <a href="https://docs.microsoft.com/windows/desktop/api/wincodec/nn-wincodec-iwiccolorcontext">IWICColorContext</a> objects.</param>
      <param name="pcActualCount">A pointer that receives the number of color contexts contained in the image frame.</param>
    </summary>
  </member>
  <member name="IWICBitmapLock::GetDataPointer">
    <summary>
      <para>Gets the pointer to the top left pixel in the locked rectangle.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//wincodec/nf-wincodec-iwicbitmaplock-getdatapointer" /></para>
      <param name="pcbBufferSize">A pointer that receives the size of the buffer.</param>
      <param name="ppbData">A pointer that receives a pointer to the top left pixel in the locked rectangle.</param>
    </summary>
  </member>
  <member name="WICGifGraphicControlExtensionProperties">
    <summary>
      <para>Specifies the graphic control extension metadata properties that define the transitions between each frame animation for Graphics Interchange Format (GIF) images.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//wincodec/ne-wincodec-wicgifgraphiccontrolextensionproperties" /></para>
    </summary>
  </member>
  <member name="WICGifGraphicControlExtensionProperties::WICGifGraphicControlExtensionDisposal">
    <summary>[VT_UI1] Indicates  the disposal requirements. 0 - no disposal, 1 - do not dispose, 2 - restore to background color, 3 - restore to previous.</summary>
  </member>
  <member name="WICGifGraphicControlExtensionProperties::WICGifGraphicControlExtensionUserInputFlag">
    <summary>[VT_BOOL] Indicates the user input flag. <b>TRUE</b> if user input should advance to the next frame; otherwise, <b>FALSE</b>.</summary>
  </member>
  <member name="WICGifGraphicControlExtensionProperties::WICGifGraphicControlExtensionTransparencyFlag">
    <summary>[VT_BOOL] Indicates the transparency flag. <b>TRUE</b> if a transparent color in is in the color table for this frame; otherwise, <b>FALSE</b>.</summary>
  </member>
  <member name="WICGifGraphicControlExtensionProperties::WICGifGraphicControlExtensionDelay">
    <summary>[VT_UI2] Indicates  how long to display the next frame before advancing to the next frame, in units of 1/100th of a second.</summary>
  </member>
  <member name="WICGifGraphicControlExtensionProperties::WICGifGraphicControlExtensionTransparentColorIndex">
    <summary>[VT_UI1] Indicates which color in the palette should be treated as transparent.</summary>
  </member>
  <member name="IWICDevelopRaw::GetGamma">
    <summary>
      <para>Gets the current gamma setting of the raw image.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//wincodec/nf-wincodec-iwicdevelopraw-getgamma" /></para>
      <param name="pGamma">A pointer that receives the current gamma setting.</param>
    </summary>
  </member>
  <member name="IWICDevelopRaw::GetSaturation">
    <summary>
      <para>Gets the saturation value of the raw image.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//wincodec/nf-wincodec-iwicdevelopraw-getsaturation" /></para>
      <param name="pSaturation">A pointer that receives the saturation value of the raw image. The default value is the "as-shot" setting. The value range for saturation is 0.0 through 1.0. A value of 0.0 represents an image with a fully de-saturated image, while a value of 1.0 represents the highest amount of saturation that can be applied.</param>
    </summary>
  </member>
  <member name="IWICEnumMetadataItem::Reset">
    <summary>
      <para>Resets the current position to the beginning of the enumeration.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//wincodec/nf-wincodec-iwicenummetadataitem-reset" /></para>
    </summary>
  </member>
  <member name="IWICProgressiveLevelControl::SetCurrentLevel">
    <summary>
      <para>Specifies the level to retrieve on the next call to CopyPixels.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//wincodec/nf-wincodec-iwicprogressivelevelcontrol-setcurrentlevel" /></para>
      <param name="nLevel">Specifies which level to return next. If greater than the total number of levels supported, an error will be returned.</param>
    </summary>
  </member>
  <member name="IWICJpegFrameEncode::WriteScan">
    <summary>
      <para>Writes scan data to a JPEG frame.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//wincodec/nf-wincodec-iwicjpegframeencode-writescan" /></para>
      <param name="cbScanData">The size of the data in the <i>pbScanData</i> parameter.</param>
      <param name="pbScanData">The scan data to write.</param>
    </summary>
  </member>
  <member name="IWICMetadataWriter::RemoveValueByIndex">
    <summary>
      <para>Removes the metadata item at the specified index.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//wincodecsdk/nf-wincodecsdk-iwicmetadatawriter-removevaluebyindex" /></para>
      <param name="nIndex">The index of the metadata item to remove.</param>
    </summary>
  </member>
  <member name="WICJpegLuminanceProperties">
    <summary>
      <para>Specifies the JPEG luminance table property.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//wincodec/ne-wincodec-wicjpegluminanceproperties" /></para>
    </summary>
  </member>
  <member name="WICJpegLuminanceProperties::WICJpegLuminanceTable">
    <summary>[VT_UI2|VT_VECTOR] Indicates the metadata property is a luminance table.</summary>
  </member>
  <member name="IWICStreamProvider::RefreshStream">
    <summary>
      <para>Informs the component that the content of the stream it's holding onto may have changed. The component should respond by dirtying any cached information from the stream.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//wincodecsdk/nf-wincodecsdk-iwicstreamprovider-refreshstream" /></para>
    </summary>
  </member>
  <member name="IWICPersistStream">
    <summary>
      <para>Exposes methods that provide additional load and save methods that take WICPersistOptions.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//wincodecsdk/nn-wincodecsdk-iwicpersiststream" /></para>
    </summary>
  </member>
  <member name="IWICJpegFrameEncode::GetAcHuffmanTable">
    <summary>
      <para>Retrieves a copy of the AC Huffman table for the specified scan and table.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//wincodec/nf-wincodec-iwicjpegframeencode-getachuffmantable" /></para>
      <param name="scanIndex">The zero-based index of the scan for which data is retrieved.</param>
      <param name="tableIndex">The index of the AC Huffman table to retrieve.</param>
      <param name="pAcHuffmanTable">A pointer that receives the table data. This parameter must not be NULL.</param>
    </summary>
  </member>
  <member name="IWICMetadataHandlerInfo::DoesSupportPadding">
    <summary>
      <para>Determines if the metadata handler supports padding.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//wincodecsdk/nf-wincodecsdk-iwicmetadatahandlerinfo-doessupportpadding" /></para>
      <param name="pfSupportsPadding">Pointer that receives <b>TRUE</b> if padding is supported; otherwise, <b>FALSE</b>.</param>
    </summary>
  </member>
  <member name="IWICPalette">
    <summary>
      <para>Exposes methods for accessing and building a color table, primarily for indexed pixel formats.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//wincodec/nn-wincodec-iwicpalette" /></para>
    </summary>
  </member>
  <member name="IWICBitmapFrameDecode::GetMetadataQueryReader">
    <summary>
      <para>Retrieves a metadata query reader for the frame.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//wincodec/nf-wincodec-iwicbitmapframedecode-getmetadataqueryreader" /></para>
      <param name="ppIMetadataQueryReader">When this method returns, contains a pointer to the frame's metadata query reader.</param>
    </summary>
  </member>
  <member name="WICDdsFormatInfo">
    <summary>
      <para>Specifies the DXGI_FORMAT and block information of a DDS format.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//wincodec/ns-wincodec-wicddsformatinfo" /></para>
    </summary>
  </member>
  <member name="WICDdsFormatInfo::DxgiFormat">
    <summary>The <a href="https://docs.microsoft.com/windows/desktop/api/dxgiformat/ne-dxgiformat-dxgi_format">DXGI_FORMAT</a></summary>
  </member>
  <member name="WICDdsFormatInfo::BytesPerBlock">
    <summary>The size of a single block in bytes. For <a href="https://docs.microsoft.com/windows/desktop/api/dxgiformat/ne-dxgiformat-dxgi_format">DXGI_FORMAT</a> values that are not block-based, the value is equal to the size of a single pixel in bytes.</summary>
  </member>
  <member name="WICDdsFormatInfo::BlockWidth">
    <summary>The width of a single block in pixels. For <a href="https://docs.microsoft.com/windows/desktop/api/dxgiformat/ne-dxgiformat-dxgi_format">DXGI_FORMAT</a> values that are not block-based, the value is 1.</summary>
  </member>
  <member name="WICDdsFormatInfo::BlockHeight">
    <summary>The height of a single block in pixels. For <a href="https://docs.microsoft.com/windows/desktop/api/dxgiformat/ne-dxgiformat-dxgi_format">DXGI_FORMAT</a> values that are not block-based, the value is 1.</summary>
  </member>
  <member name="IWICMetadataWriterInfo::GetHeader">
    <summary>
      <para>Gets the metadata header for the metadata writer.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//wincodecsdk/nf-wincodecsdk-iwicmetadatawriterinfo-getheader" /></para>
      <param name="guidContainerFormat">The format container GUID to obtain the header for.</param>
      <param name="cbSize">The size of the <i>pHeader</i> buffer.</param>
      <param name="pHeader">Pointer that receives the <a href="https://docs.microsoft.com/windows/desktop/api/wincodecsdk/ns-wincodecsdk-wicmetadataheader">WICMetadataHeader</a>.</param>
      <param name="pcbActual">The actual size of the header.</param>
    </summary>
  </member>
  <member name="IWICDevelopRaw::SetContrast">
    <summary>
      <para>Sets the contrast value of the raw image.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//wincodec/nf-wincodec-iwicdevelopraw-setcontrast" /></para>
      <param name="Contrast">The contrast value of the raw image.  The default value is the "as-shot" setting. The value range for contrast is 0.0 through 1.0. The 0.0 lower limit represents no contrast applied to the image, while the 1.0 upper limit represents the highest amount of contrast that can be applied.</param>
    </summary>
  </member>
  <member name="IWICBitmapFrameEncode">
    <summary>
      <para>Represents an encoder's individual image frames.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//wincodec/nn-wincodec-iwicbitmapframeencode" /></para>
    </summary>
  </member>
  <member name="IWICImagingFactory::CreateDecoderFromFileHandle">
    <summary>
      <para>Creates a new instance of the IWICBitmapDecoder based on the given file handle.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//wincodec/nf-wincodec-iwicimagingfactory-createdecoderfromfilehandle" /></para>
      <param name="hFile">The file handle to create the decoder from.</param>
      <param name="pguidVendor">The GUID for the preferred decoder vendor. Use <b>NULL</b> if no preferred vendor.</param>
      <param name="metadataOptions">The <a href="https://docs.microsoft.com/windows/desktop/api/wincodec/ne-wincodec-wicdecodeoptions">WICDecodeOptions</a> to use when creating the decoder.</param>
      <param name="ppIDecoder">A pointer that receives a pointer to a new <a href="https://docs.microsoft.com/windows/desktop/api/wincodec/nn-wincodec-iwicbitmapdecoder">IWICBitmapDecoder</a>.</param>
    </summary>
  </member>
  <member name="IWICPixelFormatInfo2">
    <summary>
      <para>Extends IWICPixelFormatInfo by providing additional information about a pixel format.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//wincodec/nn-wincodec-iwicpixelformatinfo2" /></para>
    </summary>
  </member>
  <member name="IWICDevelopRawNotificationCallback">
    <summary>
      <para>Exposes a callback method for raw image change nofications.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//wincodec/nn-wincodec-iwicdeveloprawnotificationcallback" /></para>
    </summary>
  </member>
  <member name="IWICColorContext">
    <summary>
      <para>Exposes methods for color management.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//wincodec/nn-wincodec-iwiccolorcontext" /></para>
    </summary>
  </member>
  <member name="IWICBitmapDecoderInfo::MatchesPattern">
    <summary>
      <para>Retrieves a value that indicates whether the codec recognizes the pattern within a specified stream.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//wincodec/nf-wincodec-iwicbitmapdecoderinfo-matchespattern" /></para>
      <param name="pIStream">The stream to pattern match within.</param>
      <param name="pfMatches">A pointer that receives <b>TRUE</b> if the patterns match; otherwise, <b>FALSE</b>.</param>
    </summary>
  </member>
  <member name="IWICImagingFactory::CreateStream">
    <summary>
      <para>Creates a new instance of the IWICStream class.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//wincodec/nf-wincodec-iwicimagingfactory-createstream" /></para>
      <param name="ppIWICStream">A pointer that receives a pointer to a new <a href="https://docs.microsoft.com/windows/desktop/api/wincodec/nn-wincodec-iwicstream">IWICStream</a>.</param>
    </summary>
  </member>
  <member name="IWICBitmapCodecInfo::GetDeviceManufacturer">
    <summary>
      <para>Retrieves the name of the device manufacture associated with the codec.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//wincodec/nf-wincodec-iwicbitmapcodecinfo-getdevicemanufacturer" /></para>
      <param name="cchDeviceManufacturer">The size of the device manufacture's name. Use <c>0</c> on first call to determine needed buffer size.</param>
      <param name="wzDeviceManufacturer">Receives the device manufacture's name. Use <c>NULL</c> on first call to determine needed buffer size.</param>
      <param name="pcchActual">The actual buffer size needed to retrieve the device manufacture's name.</param>
    </summary>
  </member>
  <member name="IWICBitmapSource::CopyPalette">
    <summary>
      <para>Retrieves the color table for indexed pixel formats.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//wincodec/nf-wincodec-iwicbitmapsource-copypalette" /></para>
      <param name="pIPalette">An <a href="https://docs.microsoft.com/windows/desktop/api/wincodec/nn-wincodec-iwicpalette">IWICPalette</a>. A palette can be created using the <a href="https://docs.microsoft.com/windows/desktop/api/wincodec/nf-wincodec-iwicimagingfactory-createpalette">CreatePalette</a> method.</param>
    </summary>
  </member>
  <member name="WICProgressNotification">
    <summary>
      <para>Specifies when the progress notification callback should be called.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//wincodec/ne-wincodec-wicprogressnotification" /></para>
    </summary>
  </member>
  <member name="WICProgressNotification::WICProgressNotificationBegin">
    <summary>The callback should be called when codec operations begin.</summary>
  </member>
  <member name="WICProgressNotification::WICProgressNotificationEnd">
    <summary>The callback should be called when codec operations end.</summary>
  </member>
  <member name="WICProgressNotification::WICProgressNotificationFrequent">
    <summary>The callback should be called frequently to report status.</summary>
  </member>
  <member name="WICProgressNotification::WICProgressNotificationAll">
    <summary>The callback should be called on all available progress notifications.</summary>
  </member>
  <member name="IWICMetadataReader::GetMetadataFormat">
    <summary>
      <para>Gets the metadata format associated with the reader.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//wincodecsdk/nf-wincodecsdk-iwicmetadatareader-getmetadataformat" /></para>
      <param name="pguidMetadataFormat">Pointer that receives the metadata format GUID.</param>
    </summary>
  </member>
  <member name="WICBitmapDecoderCapabilities">
    <summary>
      <para>Specifies the capabilities of the decoder.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//wincodec/ne-wincodec-wicbitmapdecodercapabilities" /></para>
    </summary>
  </member>
  <member name="WICBitmapDecoderCapabilities::WICBitmapDecoderCapabilitySameEncoder">
    <summary>Decoder recognizes the image was encoded with an encoder produced by the same vendor.</summary>
  </member>
  <member name="WICBitmapDecoderCapabilities::WICBitmapDecoderCapabilityCanDecodeAllImages">
    <summary>Decoder can decode all the images within an image container.</summary>
  </member>
  <member name="WICBitmapDecoderCapabilities::WICBitmapDecoderCapabilityCanDecodeSomeImages">
    <summary>Decoder can decode some of the images within an image container.</summary>
  </member>
  <member name="WICBitmapDecoderCapabilities::WICBitmapDecoderCapabilityCanEnumerateMetadata">
    <summary>Decoder can enumerate the metadata blocks within a container format.</summary>
  </member>
  <member name="WICBitmapDecoderCapabilities::WICBitmapDecoderCapabilityCanDecodeThumbnail">
    <summary>Decoder can find and decode a thumbnail.</summary>
  </member>
  <member name="IWICMetadataReaderInfo">
    <summary>
      <para>Exposes methods that provide basic information about the registered metadata reader.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//wincodecsdk/nn-wincodecsdk-iwicmetadatareaderinfo" /></para>
    </summary>
  </member>
  <member name="IWICPalette::GetColors">
    <summary>
      <para>Fills out the supplied color array with the colors from the internal color table. The color array should be sized according to the return results from GetColorCount.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//wincodec/nf-wincodec-iwicpalette-getcolors" /></para>
      <param name="cCount">The size of the <i>pColors</i> array.</param>
      <param name="pColors">Pointer that receives the colors of the palette.</param>
      <param name="pcActualColors">The actual size needed to obtain the palette colors.</param>
    </summary>
  </member>
  <member name="WICGifImageDescriptorProperties">
    <summary>
      <para>Specifies the image descriptor metadata properties for Graphics Interchange Format (GIF) frames.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//wincodec/ne-wincodec-wicgifimagedescriptorproperties" /></para>
    </summary>
  </member>
  <member name="WICGifImageDescriptorProperties::WICGifImageDescriptorLeft">
    <summary>[VT_UI2] Indicates the X offset at which to locate this frame within the logical screen.</summary>
  </member>
  <member name="WICGifImageDescriptorProperties::WICGifImageDescriptorTop">
    <summary>[VT_UI2] Indicates the Y offset at which to locate this frame within the logical screen.</summary>
  </member>
  <member name="WICGifImageDescriptorProperties::WICGifImageDescriptorWidth">
    <summary>[VT_UI2] Indicates width of this frame, in pixels.</summary>
  </member>
  <member name="WICGifImageDescriptorProperties::WICGifImageDescriptorHeight">
    <summary>[VT_UI2] Indicates height of this frame, in pixels.</summary>
  </member>
  <member name="WICGifImageDescriptorProperties::WICGifImageDescriptorLocalColorTableFlag">
    <summary>[VT_BOOL] Indicates the local color table flag. <b>TRUE</b> if global color table is present; otherwise, <b>FALSE</b>.</summary>
  </member>
  <member name="WICGifImageDescriptorProperties::WICGifImageDescriptorInterlaceFlag">
    <summary>[VT_BOOL] Indicates the interlace flag. <b>TRUE</b> if image is interlaced; otherwise, <b>FALSE</b>.</summary>
  </member>
  <member name="WICGifImageDescriptorProperties::WICGifImageDescriptorSortFlag">
    <summary>[VT_BOOL] Indicates the sorted color table flag. <b>TRUE</b> if the color table is sorted from most frequently to least frequently used color; otherwise, <b>FALSE</b>.</summary>
  </member>
  <member name="WICGifImageDescriptorProperties::WICGifImageDescriptorLocalColorTableSize">
    <summary>[VT_UI1] Indicates the value used to calculate the number of bytes contained in the global color table. 

To calculate the actual size of the color table, raise 2 to the value of the field + 1.</summary>
  </member>
  <member name="WICJpegScanType">
    <summary>
      <para>Specifies the memory layout of pixel data in a JPEG image scan.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//wincodec/ne-wincodec-wicjpegscantype" /></para>
    </summary>
  </member>
  <member name="WICJpegScanType::WICJpegScanTypeInterleaved">
    <summary>The pixel data is stored in an interleaved memory layout.</summary>
  </member>
  <member name="WICJpegScanType::WICJpegScanTypePlanarComponents">
    <summary>The pixel data is stored in a planar memory layout.</summary>
  </member>
  <member name="WICJpegScanType::WICJpegScanTypeProgressive">
    <summary>The pixel data is stored in a progressive layout.</summary>
  </member>
  <member name="WICJpegScanType::WICJpegScanType_FORCE_DWORD">
    <summary>Forces this enumeration to compile to 32 bits in size. Without this value, some compilers would allow this enumeration to compile to a size other than 32 bits. This value is not used.</summary>
  </member>
  <member name="WICMatchMetadataContent">
    <summary>
      <para>Obtains a metadata format GUID for a specified container format and vendor that best matches the content within a given stream.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//wincodecsdk/nf-wincodecsdk-wicmatchmetadatacontent" /></para>
      <param name="guidContainerFormat">The container format GUID.</param>
      <param name="pguidVendor">The vendor GUID.</param>
      <param name="pIStream">The content stream in which to match a metadata format.</param>
      <param name="pguidMetadataFormat">A pointer that receives a metadata format GUID for the given parameters.</param>
    </summary>
  </member>
  <member name="WICMapGuidToShortName">
    <summary>
      <para>Obtains the short name associated with a given GUID.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//wincodec/nf-wincodec-wicmapguidtoshortname" /></para>
      <param name="guid">The GUID to retrieve the short name for.</param>
      <param name="cchName">The size of the <i>wzName</i> buffer.</param>
      <param name="wzName">A pointer that receives the short name associated with the GUID.</param>
      <param name="pcchActual">The actual size needed to retrieve the entire short name associated with the GUID.</param>
    </summary>
  </member>
  <member name="IWICMetadataWriter::SetValue">
    <summary>
      <para>Sets the given metadata item.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//wincodecsdk/nf-wincodecsdk-iwicmetadatawriter-setvalue" /></para>
      <param name="pvarSchema">Pointer to the schema property of the metadata item.</param>
      <param name="pvarId">Pointer to the id property of the metadata item.</param>
      <param name="pvarValue">Pointer to the metadata value to set</param>
    </summary>
  </member>
  <member name="IWICMetadataQueryWriter::RemoveMetadataByName">
    <summary>
      <para>Removes a metadata item from a specific location using a metadata query expression.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//wincodec/nf-wincodec-iwicmetadataquerywriter-removemetadatabyname" /></para>
      <param name="wzName">The name of the metadata item to remove.</param>
    </summary>
  </member>
  <member name="IWICJpegFrameEncode::GetQuantizationTable">
    <summary>
      <para>Retrieves a copy of the quantization table.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//wincodec/nf-wincodec-iwicjpegframeencode-getquantizationtable" /></para>
      <param name="scanIndex">The zero-based index of the scan for which data is retrieved.</param>
      <param name="tableIndex">The index of the quantization table to retrieve.</param>
      <param name="pQuantizationTable">A pointer that receives the table data. This parameter must not be NULL.</param>
    </summary>
  </member>
  <member name="IWICImagingFactory2::CreateImageEncoder">
    <summary>
      <para>Creates a new image encoder object.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//wincodec/nf-wincodec-iwicimagingfactory2-createimageencoder" /></para>
      <param name="pD2DDevice">The <a href="https://docs.microsoft.com/windows/desktop/api/d2d1_1/nn-d2d1_1-id2d1device">ID2D1Device</a> object on which the corresponding image encoder is created.</param>
      <param name="ppWICImageEncoder">A pointer to a variable that receives a pointer to the <a href="https://docs.microsoft.com/windows/desktop/api/wincodec/nn-wincodec-iwicimageencoder">IWICImageEncoder</a> interface for the encoder object that you can use to encode <a href="https://docs.microsoft.com/windows/desktop/Direct2D/direct2d-portal">Direct2D</a> images.</param>
    </summary>
  </member>
  <member name="IWICDevelopRaw::SetSharpness">
    <summary>
      <para>Sets the sharpness value of the raw image.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//wincodec/nf-wincodec-iwicdevelopraw-setsharpness" /></para>
      <param name="Sharpness">The sharpness value of the raw image. The default value is the "as-shot" setting. The value range for sharpness is 0.0 through 1.0. The 0.0 lower limit represents no sharpening applied to the image, while the 1.0 upper limit represents the highest amount of sharpness that can be applied.</param>
    </summary>
  </member>
  <member name="IWICBitmapSourceTransform::GetClosestSize">
    <summary>
      <para>Returns the closest dimensions the implementation can natively scale to given the desired dimensions.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//wincodec/nf-wincodec-iwicbitmapsourcetransform-getclosestsize" /></para>
      <param name="puiWidth">The desired width. A pointer that receives the closest supported width.</param>
      <param name="puiHeight">The desired height. A pointer that receives the closest supported height.</param>
    </summary>
  </member>
  <member name="IWICBitmap::SetPalette">
    <summary>
      <para>Provides access for palette modifications.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//wincodec/nf-wincodec-iwicbitmap-setpalette" /></para>
      <param name="pIPalette">The palette to use for conversion.</param>
    </summary>
  </member>
  <member name="IWICDevelopRaw::SetWhitePointRGB">
    <summary>
      <para>Sets the white point RGB values.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//wincodec/nf-wincodec-iwicdevelopraw-setwhitepointrgb" /></para>
      <param name="Red">The red white point value.</param>
      <param name="Green">The green white point value.</param>
      <param name="Blue">The blue white point value.</param>
    </summary>
  </member>
  <member name="IWICBitmapFrameEncode::Initialize">
    <summary>
      <para>Initializes the frame encoder using the given properties.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//wincodec/nf-wincodec-iwicbitmapframeencode-initialize" /></para>
      <param name="pIEncoderOptions">The set of properties to use for <a href="https://docs.microsoft.com/windows/desktop/api/wincodec/nn-wincodec-iwicbitmapframeencode">IWICBitmapFrameEncode</a> initialization.</param>
    </summary>
  </member>
  <member name="IWICComponentFactory::CreateMetadataReaderFromContainer">
    <summary>
      <para>Creates an IWICMetadataReader based on the given parameters.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//wincodecsdk/nf-wincodecsdk-iwiccomponentfactory-createmetadatareaderfromcontainer" /></para>
      <param name="guidContainerFormat">The container format GUID to base the reader on.</param>
      <param name="pguidVendor">Pointer to the vendor GUID of the metadata reader.</param>
      <param name="dwOptions">The <a href="https://docs.microsoft.com/windows/desktop/api/wincodecsdk/ne-wincodecsdk-wicpersistoptions">WICPersistOptions</a> and <a href="https://docs.microsoft.com/windows/desktop/api/wincodecsdk/ne-wincodecsdk-wicmetadatacreationoptions">WICMetadataCreationOptions</a> options to use when creating the metadata reader.</param>
      <param name="pIStream">Pointer to a stream in which to initialize the reader with. If <b>NULL</b>, the metadata reader will be empty.</param>
      <param name="ppIReader">A pointer that receives a pointer to the new metadata reader</param>
    </summary>
  </member>
  <member name="IWICDevelopRaw::GetRotation">
    <summary>
      <para>Gets the current rotation angle.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//wincodec/nf-wincodec-iwicdevelopraw-getrotation" /></para>
      <param name="pRotation">A pointer that receives the current rotation angle.</param>
    </summary>
  </member>
  <member name="IWICJpegFrameDecode::GetQuantizationTable">
    <summary>
      <para>Retrieves a copy of the quantization table.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//wincodec/nf-wincodec-iwicjpegframedecode-getquantizationtable" /></para>
      <param name="scanIndex">The zero-based index of the scan for which data is retrieved.</param>
      <param name="tableIndex">The index of the quantization table to retrieve. Valid indices for a given scan can be determined by retrieving the scan header with <a href="https://docs.microsoft.com/windows/desktop/api/wincodec/nf-wincodec-iwicjpegframedecode-getscanheader">IWICJpegFrameDecode::GetScanHeader</a>.</param>
      <param name="pQuantizationTable">A pointer that receives the table data. This parameter must not be NULL.</param>
    </summary>
  </member>
  <member name="WICNamedWhitePoint">
    <summary>
      <para>Specifies named white balances for raw images.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//wincodec/ne-wincodec-wicnamedwhitepoint" /></para>
    </summary>
  </member>
  <member name="WICNamedWhitePoint::WICWhitePointDefault">
    <summary>The default white balance.</summary>
  </member>
  <member name="WICNamedWhitePoint::WICWhitePointDaylight">
    <summary>A daylight white balance.</summary>
  </member>
  <member name="WICNamedWhitePoint::WICWhitePointCloudy">
    <summary>A cloudy white balance.</summary>
  </member>
  <member name="WICNamedWhitePoint::WICWhitePointShade">
    <summary>A shade white balance.</summary>
  </member>
  <member name="WICNamedWhitePoint::WICWhitePointTungsten">
    <summary>A tungsten white balance.</summary>
  </member>
  <member name="WICNamedWhitePoint::WICWhitePointFluorescent">
    <summary>A fluorescent white balance.</summary>
  </member>
  <member name="WICNamedWhitePoint::WICWhitePointFlash">
    <summary>Daylight white balance.</summary>
  </member>
  <member name="WICNamedWhitePoint::WICWhitePointUnderwater">
    <summary>A flash white balance.</summary>
  </member>
  <member name="WICNamedWhitePoint::WICWhitePointCustom">
    <summary>A custom white balance. This is typically used when using a picture (grey-card) as white balance.</summary>
  </member>
  <member name="WICNamedWhitePoint::WICWhitePointAutoWhiteBalance">
    <summary>An automatic balance.</summary>
  </member>
  <member name="WICNamedWhitePoint::WICWhitePointAsShot">
    <summary>An "as shot" white balance.</summary>
  </member>
  <member name="WICBitmapTransformOptions">
    <summary>
      <para>Specifies the flip and rotation transforms.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//wincodec/ne-wincodec-wicbitmaptransformoptions" /></para>
    </summary>
  </member>
  <member name="WICBitmapTransformOptions::WICBitmapTransformRotate0">
    <summary>A rotation of 0 degrees.</summary>
  </member>
  <member name="WICBitmapTransformOptions::WICBitmapTransformRotate90">
    <summary>A clockwise rotation of 90 degrees.</summary>
  </member>
  <member name="WICBitmapTransformOptions::WICBitmapTransformRotate180">
    <summary>A clockwise rotation of 180 degrees.</summary>
  </member>
  <member name="WICBitmapTransformOptions::WICBitmapTransformRotate270">
    <summary>A clockwise rotation of 270 degrees.</summary>
  </member>
  <member name="WICBitmapTransformOptions::WICBitmapTransformFlipHorizontal">
    <summary>A horizontal flip. Pixels are flipped around the vertical y-axis.</summary>
  </member>
  <member name="WICBitmapTransformOptions::WICBitmapTransformFlipVertical">
    <summary>A vertical flip. Pixels are flipped around the horizontal x-axis.</summary>
  </member>
  <member name="IWICImagingFactory::CreateComponentInfo">
    <summary>
      <para>Creates a new instance of the IWICComponentInfo class for the given component class identifier (CLSID).</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//wincodec/nf-wincodec-iwicimagingfactory-createcomponentinfo" /></para>
      <param name="clsidComponent">The CLSID for the desired component.</param>
      <param name="ppIInfo">A pointer that receives a pointer to a new <a href="https://docs.microsoft.com/windows/desktop/api/wincodec/nn-wincodec-iwiccomponentinfo">IWICComponentInfo</a>.</param>
    </summary>
  </member>
  <member name="IWICBitmapSource::CopyPixels">
    <summary>
      <para>Instructs the object to produce pixels.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//wincodec/nf-wincodec-iwicbitmapsource-copypixels" /></para>
      <param name="prc">The rectangle to copy. A <b>NULL</b> value specifies the entire bitmap.</param>
      <param name="cbStride">The stride of the bitmap</param>
      <param name="cbBufferSize">The size of the buffer.</param>
      <param name="pbBuffer">A pointer to the buffer.</param>
    </summary>
  </member>
  <member name="WICRawToneCurve">
    <summary>
      <para>Represents a raw image tone curve.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//wincodec/ns-wincodec-wicrawtonecurve" /></para>
    </summary>
  </member>
  <member name="WICRawToneCurve::cPoints">
    <summary>The number of tone curve points.</summary>
  </member>
  <member name="WICRawToneCurve::aPoints">
    <summary>The array of tone curve points.</summary>
  </member>
  <member name="IWICBitmapDecoder::GetFrame">
    <summary>
      <para>Retrieves the specified frame of the image.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//wincodec/nf-wincodec-iwicbitmapdecoder-getframe" /></para>
      <param name="index">The particular frame to retrieve.</param>
      <param name="ppIBitmapFrame">A pointer that receives a pointer to the <a href="https://docs.microsoft.com/windows/desktop/api/wincodec/nn-wincodec-iwicbitmapframedecode">IWICBitmapFrameDecode</a>.</param>
    </summary>
  </member>
  <member name="IWICBitmapEncoder::SetColorContexts">
    <summary>
      <para>Sets the IWICColorContext objects for the encoder.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//wincodec/nf-wincodec-iwicbitmapencoder-setcolorcontexts" /></para>
      <param name="cCount">The number of <a href="https://docs.microsoft.com/windows/desktop/api/wincodec/nn-wincodec-iwiccolorcontext">IWICColorContext</a> to set.</param>
      <param name="ppIColorContext">A pointer an <a href="https://docs.microsoft.com/windows/desktop/api/wincodec/nn-wincodec-iwiccolorcontext">IWICColorContext</a> pointer containing the color contexts to set for the encoder.</param>
    </summary>
  </member>
  <member name="IWICPixelFormatInfo::GetColorContext">
    <summary>
      <para>Gets the pixel format's IWICColorContext.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//wincodec/nf-wincodec-iwicpixelformatinfo-getcolorcontext" /></para>
      <param name="ppIColorContext">Pointer that receives the pixel format's color context.</param>
    </summary>
  </member>
  <member name="IWICMetadataHandlerInfo::GetDeviceManufacturer">
    <summary>
      <para>Retrieves the device manufacturer of the metadata handler.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//wincodecsdk/nf-wincodecsdk-iwicmetadatahandlerinfo-getdevicemanufacturer" /></para>
      <param name="cchDeviceManufacturer">The size of the <i>wzDeviceManufacturer</i> buffer.</param>
      <param name="wzDeviceManufacturer">Pointer to the buffer that receives the name of the device manufacturer.</param>
      <param name="pcchActual">The actual string buffer length needed to obtain the entire name of the device manufacturer.</param>
    </summary>
  </member>
  <member name="IWICMetadataBlockWriter::RemoveWriterByIndex">
    <summary>
      <para>Removes the metadata writer from the specified index location.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//wincodecsdk/nf-wincodecsdk-iwicmetadatablockwriter-removewriterbyindex" /></para>
      <param name="nIndex">The index of the metadata writer to remove.</param>
    </summary>
  </member>
  <member name="IWICBitmapEncoder::SetThumbnail">
    <summary>
      <para>Sets the global thumbnail for the image.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//wincodec/nf-wincodec-iwicbitmapencoder-setthumbnail" /></para>
      <param name="pIThumbnail">The <a href="https://docs.microsoft.com/windows/desktop/api/wincodec/nn-wincodec-iwicbitmapsource">IWICBitmapSource</a> to set as the global thumbnail.</param>
    </summary>
  </member>
  <member name="WICColorContextType">
    <summary>
      <para>Specifies the color context types.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//wincodec/ne-wincodec-wiccolorcontexttype" /></para>
    </summary>
  </member>
  <member name="WICColorContextType::WICColorContextUninitialized">
    <summary>An uninitialized color context.</summary>
  </member>
  <member name="WICColorContextType::WICColorContextProfile">
    <summary>A color context that is a full ICC color profile.</summary>
  </member>
  <member name="WICColorContextType::WICColorContextExifColorSpace">
    <summary>A color context that is one of a number of set color spaces (sRGB, AdobeRGB) that are defined in the EXIF specification.</summary>
  </member>
  <member name="IWICBitmapFrameEncode::SetColorContexts">
    <summary>
      <para>Sets a given number IWICColorContext profiles to the frame.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//wincodec/nf-wincodec-iwicbitmapframeencode-setcolorcontexts" /></para>
      <param name="cCount">The number of <a href="https://docs.microsoft.com/windows/desktop/api/wincodec/nn-wincodec-iwiccolorcontext">IWICColorContext</a> profiles to set.</param>
      <param name="ppIColorContext">A pointer to an <a href="https://docs.microsoft.com/windows/desktop/api/wincodec/nn-wincodec-iwiccolorcontext">IWICColorContext</a> pointer containing the color contexts profiles to set to the frame.</param>
    </summary>
  </member>
  <member name="WICMapSchemaToName">
    <summary>
      <para>Obtains the name associated with a given schema.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//wincodec/nf-wincodec-wicmapschematoname" /></para>
      <param name="guidMetadataFormat">The metadata format GUID.</param>
      <param name="pwzSchema">The URI string of the schema for which the name is to be retrieved.</param>
      <param name="cchName">The size of the <i>wzName</i> buffer.</param>
      <param name="wzName">A pointer to a buffer that receives the schema's name.

To obtain the required buffer size, call <b>WICMapSchemaToName</b> with <i>cchName</i> set to 0 and <i>wzName</i> set to <b>NULL</b>.</param>
      <param name="pcchActual">The actual buffer size needed to retrieve the entire schema name.</param>
    </summary>
  </member>
  <member name="WICPngItxtProperties">
    <summary>
      <para>Specifies the Portable Network Graphics (PNG) iTXT chunk metadata properties.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//wincodec/ne-wincodec-wicpngitxtproperties" /></para>
    </summary>
  </member>
  <member name="WICPngItxtProperties::WICPngItxtKeyword">
    <summary>[VT_LPSTR] Indicates the keywords in the iTXT metadata chunk.</summary>
  </member>
  <member name="WICPngItxtProperties::WICPngItxtCompressionFlag">
    <summary>[VT_UI1] Indicates whether the text in the iTXT chunk is compressed. 1 if the text is compressed; otherwise, 0.</summary>
  </member>
  <member name="WICPngItxtProperties::WICPngItxtLanguageTag">
    <summary>[VT_LPSTR] Indicates the human language used by the translated keyword and the text.</summary>
  </member>
  <member name="WICPngItxtProperties::WICPngItxtTranslatedKeyword">
    <summary>[VT_LPWSTR] Indicates a translation of the keyword into the language indicated by the language tag.</summary>
  </member>
  <member name="WICPngItxtProperties::WICPngItxtText">
    <summary>[VT_LPWSTR] Indicates additional text in the iTXT metadata chunk.</summary>
  </member>
  <member name="IWICPixelFormatInfo2::GetNumericRepresentation">
    <summary>
      <para>TBD</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//wincodec/nf-wincodec-iwicpixelformatinfo2-getnumericrepresentation" /></para>
      <param name="pNumericRepresentation">The address of a <a href="https://docs.microsoft.com/windows/win32/api/wincodec/ne-wincodec-wicpixelformatnumericrepresentation">WICPixelFormatNumericRepresentation</a> variable that you've defined. On successful completion, the function sets your variable to the <b>WICPixelFormatNumericRepresentation</b> of the pixel format.</param>
    </summary>
  </member>
  <member name="IWICDdsEncoder::CreateNewFrame">
    <summary>
      <para>Creates a new frame to encode.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//wincodec/nf-wincodec-iwicddsencoder-createnewframe" /></para>
      <param name="ppIFrameEncode">A pointer to the newly created frame object.</param>
      <param name="pArrayIndex">Points to the location where the array index is returned.</param>
      <param name="pMipLevel">Points to the location where the mip level index is returned.</param>
      <param name="pSliceIndex">Points to the location where the slice index is returned.</param>
    </summary>
  </member>
  <member name="IWICImagingFactory::CreateBitmapFromHBITMAP">
    <summary>
      <para>Creates an IWICBitmap from a bitmap handle.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//wincodec/nf-wincodec-iwicimagingfactory-createbitmapfromhbitmap" /></para>
      <param name="hBitmap">A bitmap handle to create the bitmap from.</param>
      <param name="hPalette">A palette handle used to create the bitmap.</param>
      <param name="options">The alpha channel options to create the bitmap.</param>
      <param name="ppIBitmap">A pointer that receives a pointer to the new bitmap.</param>
    </summary>
  </member>
  <member name="WICJpegChrominanceProperties">
    <summary>
      <para>Specifies the JPEG chrominance table property.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//wincodec/ne-wincodec-wicjpegchrominanceproperties" /></para>
    </summary>
  </member>
  <member name="WICJpegChrominanceProperties::WICJpegChrominanceTable">
    <summary>[VT_UI2|VT_VECTOR] Indicates the metadata property is a chrominance table.</summary>
  </member>
  <member name="WICRawToneCurvePoint">
    <summary>
      <para>Represents a raw image tone curve point.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//wincodec/ns-wincodec-wicrawtonecurvepoint" /></para>
    </summary>
  </member>
  <member name="WICRawToneCurvePoint::Input">
    <summary>The tone curve input.</summary>
  </member>
  <member name="WICRawToneCurvePoint::Output">
    <summary>The tone curve output.</summary>
  </member>
  <member name="IWICMetadataWriter::RemoveValue">
    <summary>
      <para>Removes the metadata item that matches the given parameters.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//wincodecsdk/nf-wincodecsdk-iwicmetadatawriter-removevalue" /></para>
      <param name="pvarSchema">Pointer to the metadata schema property.</param>
      <param name="pvarId">Pointer to the metadata id property.</param>
    </summary>
  </member>
</doc>
