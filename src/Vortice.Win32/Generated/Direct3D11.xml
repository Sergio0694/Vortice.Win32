<?xml version="1.0" encoding="utf-8"?>
<doc>
  <member name="ID3D11VideoProcessor::GetContentDesc">
    <summary>
      <para>Gets the content description that was used to create the video processor.</para>
      <para>
        Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d11/nf-d3d11-id3d11videoprocessor-getcontentdesc" />
      </para>
      <param name="pDesc">
        A pointer to a <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ns-d3d11-d3d11_video_processor_content_desc">D3D11_VIDEO_PROCESSOR_CONTENT_DESC</a> structure that receives the content description.
      </param>
    </summary>
  </member>
  <member name="ID3D11ClassLinkage">
    <summary>
      <para>This interface encapsulates an HLSL dynamic linkage.</para>
      <para>
        Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d11/nn-d3d11-id3d11classlinkage" />
      </para>
    </summary>
  </member>
  <member name="D3D11_TILE_SHAPE">
    <summary>
      <para>Describes the shape of a tile by specifying its dimensions.</para>
      <para>
        Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d11_2/ns-d3d11_2-d3d11_tile_shape" />
      </para>
    </summary>
  </member>
  <member name="D3D11_TILE_SHAPE::WidthInTexels">
    <summary>The width in texels of the tile.</summary>
  </member>
  <member name="D3D11_TILE_SHAPE::HeightInTexels">
    <summary>The height in texels of the tile.</summary>
  </member>
  <member name="D3D11_TILE_SHAPE::DepthInTexels">
    <summary>The depth in texels of the tile.</summary>
  </member>
  <member name="D3D11_TEXTURE3D_DESC">
    <summary>
      <para>Describes a 3D texture.</para>
      <para>
        Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d11/ns-d3d11-d3d11_texture3d_desc" />
      </para>
    </summary>
  </member>
  <member name="D3D11_TEXTURE3D_DESC::Width">
    <summary>
      Texture width (in texels). The  range is from 1 to D3D11_REQ_TEXTURE3D_U_V_OR_W_DIMENSION (2048). However, the range is actually constrained by the <a href="https://docs.microsoft.com/windows/desktop/direct3d11/overviews-direct3d-11-devices-downlevel-intro">feature level</a> at which you create the rendering device. For more information about restrictions, see Remarks.
    </summary>
  </member>
  <member name="D3D11_TEXTURE3D_DESC::Height">
    <summary>
      Texture height (in texels). The  range is from 1 to D3D11_REQ_TEXTURE3D_U_V_OR_W_DIMENSION (2048). However, the range is actually constrained by the <a href="https://docs.microsoft.com/windows/desktop/direct3d11/overviews-direct3d-11-devices-downlevel-intro">feature level</a> at which you create the rendering device. For more information about restrictions, see Remarks.
    </summary>
  </member>
  <member name="D3D11_TEXTURE3D_DESC::Depth">
    <summary>
      Texture depth (in texels). The  range is from 1 to D3D11_REQ_TEXTURE3D_U_V_OR_W_DIMENSION (2048). However, the range is actually constrained by the <a href="https://docs.microsoft.com/windows/desktop/direct3d11/overviews-direct3d-11-devices-downlevel-intro">feature level</a> at which you create the rendering device. For more information about restrictions, see Remarks.
    </summary>
  </member>
  <member name="D3D11_TEXTURE3D_DESC::MipLevels">
    <summary>
      The maximum number of mipmap levels in the texture. See the remarks in <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ns-d3d11-d3d11_tex1d_srv">D3D11_TEX1D_SRV</a>. Use 1 for a multisampled texture; or 0 to generate a full set of subtextures.
    </summary>
  </member>
  <member name="D3D11_TEXTURE3D_DESC::Format">
    <summary>
      Texture format (see <a href="https://docs.microsoft.com/windows/desktop/api/dxgiformat/ne-dxgiformat-dxgi_format">DXGI_FORMAT</a>).
    </summary>
  </member>
  <member name="D3D11_TEXTURE3D_DESC::Usage">
    <summary>
      Value that identifies how the texture is to be read from and written to. The most common value is D3D11_USAGE_DEFAULT; see <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ne-d3d11-d3d11_usage">D3D11_USAGE</a> for all possible values.
    </summary>
  </member>
  <member name="D3D11_TEXTURE3D_DESC::BindFlags">
    <summary>
      Flags (see <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ne-d3d11-d3d11_bind_flag">D3D11_BIND_FLAG</a>) for binding to pipeline stages. The flags can be combined by a logical OR.
    </summary>
  </member>
  <member name="D3D11_TEXTURE3D_DESC::CPUAccessFlags">
    <summary>
      Flags (see <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ne-d3d11-d3d11_cpu_access_flag">D3D11_CPU_ACCESS_FLAG</a>) to specify the types of CPU access allowed. Use 0 if CPU access is not required. These flags can be combined with a logical OR.
    </summary>
  </member>
  <member name="D3D11_TEXTURE3D_DESC::MiscFlags">
    <summary>
      Flags (see <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ne-d3d11-d3d11_resource_misc_flag">D3D11_RESOURCE_MISC_FLAG</a>) that identify other, less common resource options. Use 0 if none of these flags apply. These flags can be combined with a logical OR.
    </summary>
  </member>
  <member name="D3D11_DEPTH_WRITE_MASK">
    <summary>
      <para>Identify the portion of a depth-stencil buffer for writing depth data.</para>
      <para>
        Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d11/ne-d3d11-d3d11_depth_write_mask" />
      </para>
    </summary>
  </member>
  <member name="D3D11_DEPTH_WRITE_MASK::D3D11_DEPTH_WRITE_MASK_ZERO">
    <summary>Turn off writes to the depth-stencil buffer.</summary>
  </member>
  <member name="D3D11_DEPTH_WRITE_MASK::D3D11_DEPTH_WRITE_MASK_ALL">
    <summary>Turn on writes to the depth-stencil buffer.</summary>
  </member>
  <member name="ID3D11InfoQueue::PopStorageFilter">
    <summary>
      <para>Pop a storage filter from the top of the storage-filter stack.</para>
      <para>
        Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d11sdklayers/nf-d3d11sdklayers-id3d11infoqueue-popstoragefilter" />
      </para>
    </summary>
  </member>
  <member name="ID3D11Device::CreateShaderResourceView">
    <summary>
      <para>Create a shader-resource view for accessing data in a resource.</para>
      <para>
        Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d11/nf-d3d11-id3d11device-createshaderresourceview" />
      </para>
      <param name="pResource">
        Pointer to the resource that will serve as input to a shader. This resource must have been created with the <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ne-d3d11-d3d11_bind_flag">
          D3D11_BIND_SHADER_RESOURCE
        </a> flag.
      </param>
      <param name="pDesc">
        Pointer to a shader-resource view description (see <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ns-d3d11-d3d11_shader_resource_view_desc">D3D11_SHADER_RESOURCE_VIEW_DESC</a>). Set this parameter to <b>NULL</b> to create a
        view that accesses the entire resource (using the format the resource was created with).
      </param>
      <param name="ppSRView">
        Address of a pointer to an <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nn-d3d11-id3d11shaderresourceview">ID3D11ShaderResourceView</a>. Set this parameter to <b>NULL</b> to validate the
        other input parameters (the method will return <b>S_FALSE</b> if the other input parameters pass validation).
      </param>
    </summary>
  </member>
  <member name="ID3D11VideoDevice::GetVideoDecoderConfig">
    <summary>
      <para>Gets a decoder configuration that is supported by the driver.</para>
      <para>
        Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d11/nf-d3d11-id3d11videodevice-getvideodecoderconfig" />
      </para>
      <param name="pDesc">
        A pointer to a  <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ns-d3d11-d3d11_video_decoder_desc">D3D11_VIDEO_DECODER_DESC</a> structure that describes the video stream.
      </param>
      <param name="Index">
        The zero-based index of the decoder configuration. To get the number of configurations that the driver supports, call <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nf-d3d11-id3d11videodevice-getvideodecoderconfigcount">ID3D11VideoDevice::GetVideoDecoderConfigCount</a>.
      </param>
      <param name="pConfig">
        A pointer to a <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ns-d3d11-d3d11_video_decoder_config">D3D11_VIDEO_DECODER_CONFIG</a> structure. The method fills in the structure with the decoder configuration.
      </param>
    </summary>
  </member>
  <member name="ID3D11VideoContext::VideoProcessorSetStreamFilter">
    <summary>
      <para>Enables or disables an image filter for an input stream on the video processor.</para>
      <para>
        Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d11/nf-d3d11-id3d11videocontext-videoprocessorsetstreamfilter" />
      </para>
      <param name="pVideoProcessor">
        A pointer to the <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nn-d3d11-id3d11videoprocessor">ID3D11VideoProcessor</a> interface. To get this pointer, call <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nf-d3d11-id3d11videodevice-createvideoprocessor">ID3D11VideoDevice::CreateVideoProcessor</a>.
      </param>
      <param name="StreamIndex">
        The zero-based index of the input stream. To get the maximum number of streams, call <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nf-d3d11-id3d11videoprocessorenumerator-getvideoprocessorcaps">ID3D11VideoProcessorEnumerator::GetVideoProcessorCaps</a> and check the <b>MaxStreamStates</b> structure member.
      </param>
      <param name="Filter">
        The filter, specified as a <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ne-d3d11-d3d11_video_processor_filter">D3D11_VIDEO_PROCESSOR_FILTER</a> value.

        To query which filters the driver supports, call <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nf-d3d11-id3d11videoprocessorenumerator-getvideoprocessorcaps">ID3D11VideoProcessorEnumerator::GetVideoProcessorCaps</a>.
      </param>
      <param name="Enable">Specifies whether to enable the filter.</param>
      <param name="Level">
        The filter level. If <i>Enable</i> is <b>FALSE</b>, this parameter is ignored.

        To find the valid range of levels for a specified filter, call <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nf-d3d11-id3d11videoprocessorenumerator-getvideoprocessorfilterrange">ID3D11VideoProcessorEnumerator::GetVideoProcessorFilterRange</a>.
      </param>
    </summary>
  </member>
  <member name="D3D11_VIDEO_DECODER_BUFFER_DESC1">
    <summary>
      <para>Describes a compressed buffer for decoding.</para>
      <para>
        Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d11_1/ns-d3d11_1-d3d11_video_decoder_buffer_desc1" />
      </para>
    </summary>
  </member>
  <member name="D3D11_VIDEO_DECODER_BUFFER_DESC1::BufferType">
    <summary>The type of buffer.</summary>
  </member>
  <member name="D3D11_VIDEO_DECODER_BUFFER_DESC1::DataOffset">
    <summary>The offset of the relevant data from the beginning of the buffer, in bytes. This value must be zero.</summary>
  </member>
  <member name="D3D11_VIDEO_DECODER_BUFFER_DESC1::DataSize">
    <summary>Size of the relevant data.</summary>
  </member>
  <member name="D3D11_VIDEO_DECODER_BUFFER_DESC1::pIV">
    <summary>A pointer to a buffer that contains an initialization vector (IV) for encrypted data. If the decode buffer does not contain encrypted data, set this member to NULL.</summary>
  </member>
  <member name="D3D11_VIDEO_DECODER_BUFFER_DESC1::IVSize">
    <summary>
      The size of the buffer specified in the <i>pIV</i> parameter. If <i>pIV</i> is NULL, set this member to zero.
    </summary>
  </member>
  <member name="D3D11_VIDEO_DECODER_BUFFER_DESC1::pSubSampleMappingBlock">
    <summary>
      A pointer to an array of <a href="https://docs.microsoft.com/windows/desktop/api/d3d11_1/ns-d3d11_1-d3d11_video_decoder_sub_sample_mapping_block">D3D11_VIDEO_DECODER_SUB_SAMPLE_MAPPING_BLOCK</a> structures, which indicates exactly which bytes in the decode buffer are encrypted and which are in the clear.  If the decode buffer does not contain encrypted data, set this member to NULL.

      Values in the sub sample mapping blocks are relative to the start of the decode buffer.
    </summary>
  </member>
  <member name="D3D11_VIDEO_DECODER_BUFFER_DESC1::SubSampleMappingCount">
    <summary>
      The number of <a href="https://docs.microsoft.com/windows/desktop/api/d3d11_1/ns-d3d11_1-d3d11_video_decoder_sub_sample_mapping_block">D3D11_VIDEO_DECODER_SUB_SAMPLE_MAPPING_BLOCK</a> structures specified in the <i>pSubSampleMappingBlocks</i> parameter. If <i>pSubSampleMappingBlocks</i> is NULL, set this member to zero.
    </summary>
  </member>
  <member name="ID3D11Device3::CreateShaderResourceView1">
    <summary>
      <para>Creates a shader-resource view for accessing data in a resource.</para>
      <para>
        Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d11_3/nf-d3d11_3-id3d11device3-createshaderresourceview1" />
      </para>
      <param name="pResource">
        Pointer to the resource that will serve as input to a shader. This resource must have been created with the <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ne-d3d11-d3d11_bind_flag">D3D11_BIND_SHADER_RESOURCE</a> flag.
      </param>
      <param name="pDesc1">
        A pointer to a <a href="https://docs.microsoft.com/windows/desktop/api/d3d11_3/ns-d3d11_3-cd3d11_shader_resource_view_desc1">D3D11_SHADER_RESOURCE_VIEW_DESC1</a> structure that describes a shader-resource view. Set this parameter to <b>NULL</b> to create a
        view that accesses the entire resource (using the format the resource was created with).
      </param>
      <param name="ppSRView1">
        A pointer to a memory block that receives a pointer to a <a href="https://docs.microsoft.com/windows/desktop/api/d3d11_3/nn-d3d11_3-id3d11shaderresourceview1">ID3D11ShaderResourceView1</a> interface for the created shader-resource view. Set this parameter to <b>NULL</b> to validate the other input parameters (the method will return <b>S_FALSE</b> if the other input parameters pass validation).
      </param>
    </summary>
  </member>
  <member name="ID3D11Device3::GetImmediateContext3">
    <summary>
      <para>Gets an immediate context, which can play back command lists.</para>
      <para>
        Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d11_3/nf-d3d11_3-id3d11device3-getimmediatecontext3" />
      </para>
      <param name="ppImmediateContext">
        Upon completion of the method, the passed pointer to an <a href="https://docs.microsoft.com/windows/desktop/api/d3d11_3/nn-d3d11_3-id3d11devicecontext3">ID3D11DeviceContext3</a> interface pointer is initialized.
      </param>
    </summary>
  </member>
  <member name="ID3D11VideoContext::VideoProcessorSetStreamColorSpace">
    <summary>
      <para>Sets the color space for an input stream on the video processor.</para>
      <para>
        Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d11/nf-d3d11-id3d11videocontext-videoprocessorsetstreamcolorspace" />
      </para>
      <param name="pVideoProcessor">
        A pointer to the <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nn-d3d11-id3d11videoprocessor">ID3D11VideoProcessor</a> interface. To get this pointer, call <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nf-d3d11-id3d11videodevice-createvideoprocessor">ID3D11VideoDevice::CreateVideoProcessor</a>.
      </param>
      <param name="StreamIndex">
        The zero-based index of the input stream. To get the maximum number of streams, call <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nf-d3d11-id3d11videoprocessorenumerator-getvideoprocessorcaps">ID3D11VideoProcessorEnumerator::GetVideoProcessorCaps</a> and check the <b>MaxStreamStates</b> structure member.
      </param>
      <param name="pColorSpace">
        A pointer to a <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ns-d3d11-d3d11_video_processor_color_space">D3D11_VIDEO_PROCESSOR_COLOR_SPACE</a> structure that specifies the color space.
      </param>
    </summary>
  </member>
  <member name="ID3D11VideoContext::VideoProcessorSetOutputTargetRect">
    <summary>
      <para>Sets the target rectangle for the video processor.</para>
      <para>
        Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d11/nf-d3d11-id3d11videocontext-videoprocessorsetoutputtargetrect" />
      </para>
      <param name="pVideoProcessor">
        A pointer to the <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nn-d3d11-id3d11videoprocessor">ID3D11VideoProcessor</a> interface. To get this pointer, call <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nf-d3d11-id3d11videodevice-createvideoprocessor">ID3D11VideoDevice::CreateVideoProcessor</a>.
      </param>
      <param name="Enable">Specifies whether to apply the target rectangle.</param>
      <param name="pRect">
        A pointer to a <a href="https://docs.microsoft.com/previous-versions/dd162897(v=vs.85)">RECT</a> structure that specifies the target rectangle.  If <i>Enable</i> is <b>FALSE</b>, this parameter is ignored.
      </param>
    </summary>
  </member>
  <member name="D3D11_AUTHENTICATED_CONFIGURE_PROTECTION_INPUT">
    <summary>
      <para>Contains input data for a D3D11_AUTHENTICATED_CONFIGURE_PROTECTION command.</para>
      <para>
        Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d11/ns-d3d11-d3d11_authenticated_configure_protection_input" />
      </para>
    </summary>
  </member>
  <member name="D3D11_AUTHENTICATED_CONFIGURE_PROTECTION_INPUT::Parameters">
    <summary>
      A <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ns-d3d11-d3d11_authenticated_configure_input">D3D11_AUTHENTICATED_CONFIGURE_INPUT</a> structure that contains the command GUID and other data.
    </summary>
  </member>
  <member name="D3D11_AUTHENTICATED_CONFIGURE_PROTECTION_INPUT::Protections">
    <summary>
      A <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ns-d3d11-d3d11_authenticated_protection_flags">D3D11_AUTHENTICATED_PROTECTION_FLAGS</a> union that specifies the protection level.
    </summary>
  </member>
  <member name="D3D11_BUFFER_SRV">
    <summary>
      <para>Specifies the elements in a buffer resource to use in a shader-resource view.</para>
      <para>
        Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d11/ns-d3d11-d3d11_buffer_srv" />
      </para>
    </summary>
  </member>
  <member name="D3D11_BUFFER_SRV::FirstElement">
    <summary>Index of the first element to access.</summary>
  </member>
  <member name="D3D11_BUFFER_SRV::ElementOffset">
    <summary>The offset of the first element in the view to access, relative to element 0.</summary>
  </member>
  <member name="D3D11_BUFFER_SRV::NumElements">
    <summary>The total number of elements in the view.</summary>
  </member>
  <member name="D3D11_BUFFER_SRV::ElementWidth">
    <summary>
      The width of each element (in bytes).
      This can be determined from the format stored in the shader-resource-view description.
    </summary>
  </member>
  <member name="D3D11_TEX2D_VPIV">
    <summary>
      <para>Identifies the texture resource for a video processor input view.</para>
      <para>
        Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d11/ns-d3d11-d3d11_tex2d_vpiv" />
      </para>
    </summary>
  </member>
  <member name="D3D11_TEX2D_VPIV::MipSlice">
    <summary>The zero-based index into the array of subtextures.</summary>
  </member>
  <member name="D3D11_TEX2D_VPIV::ArraySlice">
    <summary>The zero-based index of the texture.</summary>
  </member>
  <member name="ID3D11DeviceContext::OMSetRenderTargetsAndUnorderedAccessViews">
    <summary>
      <para>Binds resources to the output-merger stage.</para>
      <para>
        Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d11/nf-d3d11-id3d11devicecontext-omsetrendertargetsandunorderedaccessviews" />
      </para>
      <param name="NumRTVs">
        Number of render targets to bind (ranges between 0 and <b>D3D11_SIMULTANEOUS_RENDER_TARGET_COUNT</b>). If this parameter is nonzero, the number of entries in the array to which <i>ppRenderTargetViews</i> points must equal the number in this parameter. If you set <i>NumRTVs</i> to D3D11_KEEP_RENDER_TARGETS_AND_DEPTH_STENCIL (0xffffffff), this method does not modify the currently bound render-target views (RTVs) and also does not modify depth-stencil view (DSV).
      </param>
      <param name="ppRenderTargetViews">
        Pointer to an array of <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nn-d3d11-id3d11rendertargetview">ID3D11RenderTargetView</a>s that represent the render targets to bind to the device.
        If this parameter is <b>NULL</b> and <i>NumRTVs</i> is 0, no render targets are bound.
      </param>
      <param name="pDepthStencilView">
        Pointer to a <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nn-d3d11-id3d11depthstencilview">ID3D11DepthStencilView</a> that represents the depth-stencil view to bind to the device.
        If this parameter is <b>NULL</b>, the depth-stencil view is not bound.
      </param>
      <param name="UAVStartSlot">
        Index into a zero-based array to begin setting unordered-access views (ranges from 0 to D3D11_PS_CS_UAV_REGISTER_COUNT - 1).

        For the Direct3D 11.1 runtime, which is available starting with Windows 8, this value can range from 0 to D3D11_1_UAV_SLOT_COUNT - 1. D3D11_1_UAV_SLOT_COUNT is defined as 64.


        For pixel shaders, <i>UAVStartSlot</i> should be equal to the number of render-target views being bound.
      </param>
      <param name="NumUAVs">
        Number of unordered-access views (UAVs) in <i>ppUnorderedAccessViews</i>. If you set <i>NumUAVs</i> to D3D11_KEEP_UNORDERED_ACCESS_VIEWS (0xffffffff), this method does not modify the currently bound unordered-access views.


        For the Direct3D 11.1 runtime, which is available starting with Windows 8, this value can range from 0 to D3D11_1_UAV_SLOT_COUNT - <i>UAVStartSlot</i>.
      </param>
      <param name="ppUnorderedAccessViews">
        Pointer to an array of <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nn-d3d11-id3d11unorderedaccessview">ID3D11UnorderedAccessView</a>s that represent the unordered-access views to bind to the device.
        If this parameter is <b>NULL</b> and <i>NumUAVs</i> is 0, no unordered-access views are bound.
      </param>
      <param name="pUAVInitialCounts">
        An array of append and consume buffer offsets. A value of -1 indicates to keep the current offset. Any other values set the hidden counter
        for that appendable and consumable UAV. <i>pUAVInitialCounts</i> is  relevant only for UAVs that were created with either
        <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ne-d3d11-d3d11_buffer_uav_flag">D3D11_BUFFER_UAV_FLAG_APPEND</a> or <b>D3D11_BUFFER_UAV_FLAG_COUNTER</b> specified
        when the UAV was created; otherwise, the argument is ignored.
      </param>
    </summary>
  </member>
  <member name="ID3D11DeviceContext::Unmap">
    <summary>
      <para>Invalidate the pointer to a resource and reenable the GPU's access to that resource.</para>
      <para>
        Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d11/nf-d3d11-id3d11devicecontext-unmap" />
      </para>
      <param name="pResource">
        A pointer to a <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nn-d3d11-id3d11resource">ID3D11Resource</a> interface.
      </param>
      <param name="Subresource">A subresource to be unmapped.</param>
    </summary>
  </member>
  <member name="ID3D11VideoDevice1::CheckVideoDecoderDownsampling">
    <summary>
      <para>Indicates whether the video decoder supports downsampling with the specified input format, and whether real-time downsampling is supported.</para>
      <para>
        Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d11_1/nf-d3d11_1-id3d11videodevice1-checkvideodecoderdownsampling" />
      </para>
      <param name="pInputDesc">An object describing the decoding profile, the resolution, and format of the input stream.  This is the resolution and format to be downsampled.</param>
      <param name="InputColorSpace">
        A  <a href="https://docs.microsoft.com/windows/desktop/api/dxgicommon/ne-dxgicommon-dxgi_color_space_type">DXGI_COLOR_SPACE_TYPE</a> value that specifies the colorspace of the reference frame data.
      </param>
      <param name="pInputConfig">The configuration data associated with the decode profile.</param>
      <param name="pFrameRate">The frame rate of the video content. This is used by the driver to determine whether the video can be decoded in real-time.</param>
      <param name="pOutputDesc">An object describing the resolution, format, and colorspace of the output frames.  This is the destination resolution and format of the downsample operation.</param>
      <param name="pSupported">Pointer to a boolean value set by the driver that indicates if downsampling is supported with the specified input data. True if the driver supports the requested downsampling;  otherwise, false.</param>
      <param name="pRealTimeHint">Pointer to a boolean value set by the driver that indicates if real-time decoding is supported with the specified input data. True if the driver supports the requested real-time decoding;  otherwise, false. Note that the returned value is based on the current configuration of the video decoder and does not guarantee that real-time decoding will be supported for future downsampling operations.</param>
    </summary>
  </member>
  <member name="D3D11_VIDEO_SAMPLE_DESC">
    <summary>
      <para>Describes a video sample.</para>
      <para>
        Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d11_1/ns-d3d11_1-d3d11_video_sample_desc" />
      </para>
    </summary>
  </member>
  <member name="D3D11_VIDEO_SAMPLE_DESC::Width">
    <summary>The width of the video sample.</summary>
  </member>
  <member name="D3D11_VIDEO_SAMPLE_DESC::Height">
    <summary>The height of the video sample.</summary>
  </member>
  <member name="D3D11_VIDEO_SAMPLE_DESC::Format">
    <summary>The format of the video sample.</summary>
  </member>
  <member name="D3D11_VIDEO_SAMPLE_DESC::ColorSpace">
    <summary>The colorspace of the sample.</summary>
  </member>
  <member name="ID3D11DeviceContext::DrawIndexedInstanced">
    <summary>
      <para>Draw indexed, instanced primitives.</para>
      <para>
        Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d11/nf-d3d11-id3d11devicecontext-drawindexedinstanced" />
      </para>
      <param name="IndexCountPerInstance">Number of indices read from the index buffer for each instance.</param>
      <param name="InstanceCount">Number of instances to draw.</param>
      <param name="StartIndexLocation">The location of the first index read by the GPU from the index buffer.</param>
      <param name="BaseVertexLocation">A value added to each index before reading a vertex from the vertex buffer.</param>
      <param name="StartInstanceLocation">A value added to each index before reading per-instance data from a vertex buffer.</param>
    </summary>
  </member>
  <member name="D3D11_AUTHENTICATED_QUERY_CHANNEL_TYPE_OUTPUT">
    <summary>
      <para>Contains the response to a D3D11_AUTHENTICATED_QUERY_CHANNEL_TYPE query.</para>
      <para>
        Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d11/ns-d3d11-d3d11_authenticated_query_channel_type_output" />
      </para>
    </summary>
  </member>
  <member name="D3D11_AUTHENTICATED_QUERY_CHANNEL_TYPE_OUTPUT::Output">
    <summary>
      A <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ns-d3d11-d3d11_authenticated_query_output">D3D11_AUTHENTICATED_QUERY_OUTPUT</a> structure that contains a Message Authentication Code (MAC) and other data.
    </summary>
  </member>
  <member name="D3D11_AUTHENTICATED_QUERY_CHANNEL_TYPE_OUTPUT::ChannelType">
    <summary>
      A <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ne-d3d11-d3d11_authenticated_channel_type">D3D11_AUTHENTICATED_CHANNEL_TYPE</a> value that specifies the channel type.
    </summary>
  </member>
  <member name="ID3D11Device2::GetImmediateContext2">
    <summary>
      <para>Gets an immediate context, which can play back command lists.</para>
      <para>
        Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d11_2/nf-d3d11_2-id3d11device2-getimmediatecontext2" />
      </para>
      <param name="ppImmediateContext">
        Upon completion of the method, the passed pointer to an <a href="https://docs.microsoft.com/windows/desktop/api/d3d11_2/nn-d3d11_2-id3d11devicecontext2">ID3D11DeviceContext2</a> interface pointer is initialized.
      </param>
    </summary>
  </member>
  <member name="D3D11_BUS_TYPE">
    <summary>
      <para>Specifies the type of I/O bus that is used by the graphics adapter.</para>
      <para>
        Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d11/ne-d3d11-d3d11_bus_type" />
      </para>
    </summary>
  </member>
  <member name="D3D11_BUS_TYPE::D3D11_BUS_TYPE_OTHER">
    <summary>Indicates a type of bus other than the types listed here.</summary>
  </member>
  <member name="D3D11_BUS_TYPE::D3D11_BUS_TYPE_PCI">
    <summary>PCI bus.</summary>
  </member>
  <member name="D3D11_BUS_TYPE::D3D11_BUS_TYPE_PCIX">
    <summary>PCI-X bus.</summary>
  </member>
  <member name="D3D11_BUS_TYPE::D3D11_BUS_TYPE_PCIEXPRESS">
    <summary>PCI Express bus.</summary>
  </member>
  <member name="D3D11_BUS_TYPE::D3D11_BUS_TYPE_AGP">
    <summary>Accelerated Graphics Port (AGP) bus.</summary>
  </member>
  <member name="D3D11_BUS_TYPE::D3D11_BUS_IMPL_MODIFIER_INSIDE_OF_CHIPSET">
    <summary>The implementation for the graphics adapter is in a motherboard chipset's north bridge. This flag implies that data never goes over an expansion bus (such as PCI or AGP) when it is transferred from main memory to the graphics adapter.</summary>
  </member>
  <member name="D3D11_BUS_TYPE::D3D11_BUS_IMPL_MODIFIER_TRACKS_ON_MOTHER_BOARD_TO_CHIP">
    <summary>Indicates that the graphics adapter is connected to a motherboard chipset's north bridge by tracks on the motherboard, and all of the graphics adapter's chips are soldered to the motherboard. This flag implies that data never goes over an expansion bus (such as PCI or AGP) when it is transferred from main memory to the graphics adapter.</summary>
  </member>
  <member name="D3D11_BUS_TYPE::D3D11_BUS_IMPL_MODIFIER_TRACKS_ON_MOTHER_BOARD_TO_SOCKET">
    <summary>The graphics adapter is connected to a motherboard chipset's north bridge by tracks on the motherboard, and all of the graphics adapter's chips are connected through sockets to the motherboard.</summary>
  </member>
  <member name="D3D11_BUS_TYPE::D3D11_BUS_IMPL_MODIFIER_DAUGHTER_BOARD_CONNECTOR">
    <summary>The graphics adapter is connected to the motherboard through a daughterboard connector.</summary>
  </member>
  <member name="D3D11_BUS_TYPE::D3D11_BUS_IMPL_MODIFIER_DAUGHTER_BOARD_CONNECTOR_INSIDE_OF_NUAE">
    <summary>The graphics adapter is connected to the motherboard through a daughterboard connector, and the graphics adapter is inside an enclosure that is not user accessible.</summary>
  </member>
  <member name="D3D11_BUS_TYPE::D3D11_BUS_IMPL_MODIFIER_NON_STANDARD">
    <summary>
      One of the <b>D3D11_BUS_IMPL_MODIFIER_Xxx</b> flags is set.
    </summary>
  </member>
  <member name="ID3D11Device::GetPrivateData">
    <summary>
      <para>Get application-defined data from a device.</para>
      <para>
        Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d11/nf-d3d11-id3d11device-getprivatedata" />
      </para>
      <param name="guid">Guid associated with the data.</param>
      <param name="pDataSize">
        A pointer to a variable that on input contains the size, in bytes, of the buffer that <i>pData</i> points to, and on output contains the size, in bytes, of the amount of data that <b>GetPrivateData</b> retrieved.
      </param>
      <param name="pData">
        A pointer to a buffer that <b>GetPrivateData</b>  fills with data from the device if <i>pDataSize</i> points to a value that specifies a buffer large enough to hold the data.
      </param>
    </summary>
  </member>
  <member name="ID3D11VideoProcessorInputView">
    <summary>
      <para>Identifies the input surfaces that can be accessed during video processing.</para>
      <para>
        Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d11/nn-d3d11-id3d11videoprocessorinputview" />
      </para>
    </summary>
  </member>
  <member name="ID3D11VideoContext::VideoProcessorSetStreamAutoProcessingMode">
    <summary>
      <para>Enables or disables automatic processing features on the video processor.</para>
      <para>
        Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d11/nf-d3d11-id3d11videocontext-videoprocessorsetstreamautoprocessingmode" />
      </para>
      <param name="pVideoProcessor">
        A pointer to the <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nn-d3d11-id3d11videoprocessor">ID3D11VideoProcessor</a> interface. To get this pointer, call <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nf-d3d11-id3d11videodevice-createvideoprocessor">ID3D11VideoDevice::CreateVideoProcessor</a>.
      </param>
      <param name="StreamIndex">
        The zero-based index of the input stream. To get the maximum number of streams, call <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nf-d3d11-id3d11videoprocessorenumerator-getvideoprocessorcaps">ID3D11VideoProcessorEnumerator::GetVideoProcessorCaps</a> and check the <b>MaxStreamStates</b> structure member.
      </param>
      <param name="Enable">
        If <b>TRUE</b>, automatic processing features are enabled. If <b>FALSE</b>, the driver disables any  extra video processing that it might be performing.
      </param>
    </summary>
  </member>
  <member name="ID3D11InfoQueue::AddMessage">
    <summary>
      <para>Add a debug message to the message queue and send that message to debug output.</para>
      <para>
        Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d11sdklayers/nf-d3d11sdklayers-id3d11infoqueue-addmessage" />
      </para>
      <param name="Category">
        Category of a message (see <a href="https://docs.microsoft.com/windows/desktop/api/d3d11sdklayers/ne-d3d11sdklayers-d3d11_message_category">D3D11_MESSAGE_CATEGORY</a>).
      </param>
      <param name="Severity">
        Severity of a message (see <a href="https://docs.microsoft.com/windows/desktop/api/d3d11sdklayers/ne-d3d11sdklayers-d3d11_message_severity">D3D11_MESSAGE_SEVERITY</a>).
      </param>
      <param name="ID">
        Unique identifier of a message (see <a href="https://docs.microsoft.com/windows/desktop/api/d3d11sdklayers/ne-d3d11sdklayers-d3d11_message_id">D3D11_MESSAGE_ID</a>).
      </param>
      <param name="pDescription">User-defined message.</param>
    </summary>
  </member>
  <member name="ID3D11DeviceContext::SetPredication">
    <summary>
      <para>Set a rendering predicate.</para>
      <para>
        Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d11/nf-d3d11-id3d11devicecontext-setpredication" />
      </para>
      <param name="pPredicate">
        A pointer to the <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nn-d3d11-id3d11predicate">ID3D11Predicate</a> interface that represents the rendering predicate. A <b>NULL</b> value indicates "no" predication; in this case, the value of <i>PredicateValue</i> is irrelevant but will be preserved for <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nf-d3d11-id3d11devicecontext-getpredication">ID3D11DeviceContext::GetPredication</a>.
      </param>
      <param name="PredicateValue">
        If <b>TRUE</b>, rendering will be affected by when the predicate's conditions are met. If <b>FALSE</b>, rendering will be affected when the conditions are not met.
      </param>
    </summary>
  </member>
  <member name="ID3D11DeviceContext::DSGetShaderResources">
    <summary>
      <para>Get the domain-shader resources.</para>
      <para>
        Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d11/nf-d3d11-id3d11devicecontext-dsgetshaderresources" />
      </para>
      <param name="StartSlot">Index into the device's zero-based array to begin getting shader resources from (ranges from 0 to D3D11_COMMONSHADER_INPUT_RESOURCE_SLOT_COUNT - 1).</param>
      <param name="NumViews">The number of resources to get from the device. Up to a maximum of 128 slots are available for shader resources (ranges from 0 to D3D11_COMMONSHADER_INPUT_RESOURCE_SLOT_COUNT - StartSlot).</param>
      <param name="ppShaderResourceViews">
        Array of <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nn-d3d11-id3d11shaderresourceview">shader resource view</a> interfaces to be returned by the device.
      </param>
    </summary>
  </member>
  <member name="ID3D11VideoContext::DecoderExtension">
    <summary>
      <para>Performs an extended function for decoding.</para>
      <para>
        Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d11/nf-d3d11-id3d11videocontext-decoderextension" />
      </para>
      <param name="pDecoder">
        A pointer to the <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nn-d3d11-id3d11videodecoder">ID3D11VideoDecoder</a> interface. To get this pointer, call <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nf-d3d11-id3d11videodevice-createvideodecoder">ID3D11VideoDevice::CreateVideoDecoder</a>.
      </param>
      <param name="pExtensionData">
        A pointer to a <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ns-d3d11-d3d11_video_decoder_extension">D3D11_VIDEO_DECODER_EXTENSION</a> structure that contains data for the function.
      </param>
    </summary>
  </member>
  <member name="ID3D11Debug::GetPresentPerRenderOpDelay">
    <summary>
      <para>Get the number of milliseconds to sleep after IDXGISwapChain::Present is called.</para>
      <para>
        Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d11sdklayers/nf-d3d11sdklayers-id3d11debug-getpresentperrenderopdelay" />
      </para>
    </summary>
  </member>
  <member name="ID3D11InfoQueue::GetStorageFilterStackSize">
    <summary>
      <para>Get the size of the storage-filter stack in bytes.</para>
      <para>
        Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d11sdklayers/nf-d3d11sdklayers-id3d11infoqueue-getstoragefilterstacksize" />
      </para>
    </summary>
  </member>
  <member name="D3D11_TEX1D_ARRAY_RTV">
    <summary>
      <para>Specifies the subresources from an array of 1D textures to use in a render-target view.</para>
      <para>
        Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d11/ns-d3d11-d3d11_tex1d_array_rtv" />
      </para>
    </summary>
  </member>
  <member name="D3D11_TEX1D_ARRAY_RTV::MipSlice">
    <summary>The index of the mipmap level to use mip slice.</summary>
  </member>
  <member name="D3D11_TEX1D_ARRAY_RTV::FirstArraySlice">
    <summary>The index of the first texture to use in an array of textures.</summary>
  </member>
  <member name="D3D11_TEX1D_ARRAY_RTV::ArraySize">
    <summary>Number of textures to use.</summary>
  </member>
  <member name="ID3D11ModuleInstance">
    <summary>
      <para>A module-instance interface is used for resource rebinding.</para>
      <para>
        Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d11shader/nn-d3d11shader-id3d11moduleinstance" />
      </para>
    </summary>
  </member>
  <member name="ID3D11DeviceContext::CSGetShaderResources">
    <summary>
      <para>Get the compute-shader resources.</para>
      <para>
        Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d11/nf-d3d11-id3d11devicecontext-csgetshaderresources" />
      </para>
      <param name="StartSlot">Index into the device's zero-based array to begin getting shader resources from (ranges from 0 to D3D11_COMMONSHADER_INPUT_RESOURCE_SLOT_COUNT - 1).</param>
      <param name="NumViews">The number of resources to get from the device. Up to a maximum of 128 slots are available for shader resources (ranges from 0 to D3D11_COMMONSHADER_INPUT_RESOURCE_SLOT_COUNT - StartSlot).</param>
      <param name="ppShaderResourceViews">
        Array of <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nn-d3d11-id3d11shaderresourceview">shader resource view</a> interfaces to be returned by the device.
      </param>
    </summary>
  </member>
  <member name="ID3D11DeviceContext">
    <summary>
      <para>The ID3D11DeviceContext interface represents a device context which generates rendering commands.</para>
      <para>
        Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d11/nn-d3d11-id3d11devicecontext" />
      </para>
    </summary>
  </member>
  <member name="D3D11_AUTHENTICATED_QUERY_CURRENT_ACCESSIBILITY_ENCRYPTION_OUTPUT">
    <summary>
      <para>Contains the response to a D3D11_AUTHENTICATED_QUERY_CURRENT_ENCRYPTION_WHEN_ACCESSIBLE query.</para>
      <para>
        Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d11/ns-d3d11-d3d11_authenticated_query_current_accessibility_encryption_output" />
      </para>
    </summary>
  </member>
  <member name="D3D11_AUTHENTICATED_QUERY_CURRENT_ACCESSIBILITY_ENCRYPTION_OUTPUT::Output">
    <summary>
      A <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ns-d3d11-d3d11_authenticated_query_output">D3D11_AUTHENTICATED_QUERY_OUTPUT</a> structure that contains a Message Authentication Code (MAC) and other data.
    </summary>
  </member>
  <member name="D3D11_AUTHENTICATED_QUERY_CURRENT_ACCESSIBILITY_ENCRYPTION_OUTPUT::EncryptionGuid">
    <summary>A GUID that specifies the current encryption type.</summary>
  </member>
  <member name="D3D11_BUFFER_DESC">
    <summary>
      <para>Describes a buffer resource.</para>
      <para>
        Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d11/ns-d3d11-d3d11_buffer_desc" />
      </para>
    </summary>
  </member>
  <member name="D3D11_BUFFER_DESC::ByteWidth">
    <summary>Size of the buffer in bytes.</summary>
  </member>
  <member name="D3D11_BUFFER_DESC::Usage">
    <summary>
      Identify how the buffer is expected to be read from and written to. Frequency of update is a key factor. The most common value is typically D3D11_USAGE_DEFAULT; see <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ne-d3d11-d3d11_usage">D3D11_USAGE</a> for all possible values.
    </summary>
  </member>
  <member name="D3D11_BUFFER_DESC::BindFlags">
    <summary>
      Identify how the buffer will be bound to the pipeline. Flags (see <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ne-d3d11-d3d11_bind_flag">D3D11_BIND_FLAG</a>) can be combined with a logical OR.
    </summary>
  </member>
  <member name="D3D11_BUFFER_DESC::CPUAccessFlags">
    <summary>
      CPU access flags (see <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ne-d3d11-d3d11_cpu_access_flag">D3D11_CPU_ACCESS_FLAG</a>) or 0 if no CPU access is necessary. Flags can be combined with a logical OR.
    </summary>
  </member>
  <member name="D3D11_BUFFER_DESC::MiscFlags">
    <summary>
      Miscellaneous flags (see <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ne-d3d11-d3d11_resource_misc_flag">D3D11_RESOURCE_MISC_FLAG</a>) or 0 if unused. Flags can be combined with a logical OR.
    </summary>
  </member>
  <member name="D3D11_BUFFER_DESC::StructureByteStride">
    <summary>
      The size of each element in the buffer structure (in bytes) when the buffer represents a structured buffer. For more info about structured buffers, see <a href="https://docs.microsoft.com/windows/desktop/direct3d11/direct3d-11-advanced-stages-cs-resources">Structured Buffer</a>.

      The size value in <b>StructureByteStride</b> must match the size of the format that you use for views of the buffer. For example, if you use a shader resource view (SRV) to read a buffer in a pixel shader, the SRV format size must match the size value in <b>StructureByteStride</b>.
    </summary>
  </member>
  <member name="ID3D11VideoContext::VideoProcessorSetStreamSourceRect">
    <summary>
      <para>Sets the source rectangle for an input stream on the video processor.</para>
      <para>
        Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d11/nf-d3d11-id3d11videocontext-videoprocessorsetstreamsourcerect" />
      </para>
      <param name="pVideoProcessor">
        A pointer to the <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nn-d3d11-id3d11videoprocessor">ID3D11VideoProcessor</a> interface. To get this pointer, call <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nf-d3d11-id3d11videodevice-createvideoprocessor">ID3D11VideoDevice::CreateVideoProcessor</a>.
      </param>
      <param name="StreamIndex">
        The zero-based index of the input stream. To get the maximum number of streams, call <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nf-d3d11-id3d11videoprocessorenumerator-getvideoprocessorcaps">ID3D11VideoProcessorEnumerator::GetVideoProcessorCaps</a> and check the <b>MaxStreamStates</b> structure member.
      </param>
      <param name="Enable">Specifies whether to apply the source rectangle.</param>
      <param name="pRect">
        A pointer to a <a href="https://docs.microsoft.com/previous-versions/dd162897(v=vs.85)">RECT</a> structure that specifies the source rectangle. If <i>Enable</i> is <b>FALSE</b>, this parameter is ignored.
      </param>
    </summary>
  </member>
  <member name="ID3D11VideoProcessorEnumerator1">
    <summary>
      <para>Enumerates the video processor capabilities of a Microsoft Direct3D 11 device.</para>
      <para>
        Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d11_1/nn-d3d11_1-id3d11videoprocessorenumerator1" />
      </para>
    </summary>
  </member>
  <member name="D3D11_FILTER">
    <summary>
      <para>Filtering options during texture sampling.</para>
      <para>
        Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d11/ne-d3d11-d3d11_filter" />
      </para>
    </summary>
  </member>
  <member name="D3D11_FILTER::D3D11_FILTER_MIN_MAG_MIP_POINT">
    <summary>Use point sampling for minification, magnification, and mip-level sampling.</summary>
  </member>
  <member name="D3D11_FILTER::D3D11_FILTER_MIN_MAG_POINT_MIP_LINEAR">
    <summary>Use point sampling for minification and magnification; use linear interpolation for mip-level sampling.</summary>
  </member>
  <member name="D3D11_FILTER::D3D11_FILTER_MIN_POINT_MAG_LINEAR_MIP_POINT">
    <summary>Use point sampling for minification; use linear interpolation for magnification; use point sampling for mip-level sampling.</summary>
  </member>
  <member name="D3D11_FILTER::D3D11_FILTER_MIN_POINT_MAG_MIP_LINEAR">
    <summary>Use point sampling for minification; use linear interpolation for magnification and mip-level sampling.</summary>
  </member>
  <member name="D3D11_FILTER::D3D11_FILTER_MIN_LINEAR_MAG_MIP_POINT">
    <summary>Use linear interpolation for minification; use point sampling for magnification and mip-level sampling.</summary>
  </member>
  <member name="D3D11_FILTER::D3D11_FILTER_MIN_LINEAR_MAG_POINT_MIP_LINEAR">
    <summary>Use linear interpolation for minification; use point sampling for magnification; use linear interpolation for mip-level sampling.</summary>
  </member>
  <member name="D3D11_FILTER::D3D11_FILTER_MIN_MAG_LINEAR_MIP_POINT">
    <summary>Use linear interpolation for minification and magnification; use point sampling for mip-level sampling.</summary>
  </member>
  <member name="D3D11_FILTER::D3D11_FILTER_MIN_MAG_MIP_LINEAR">
    <summary>Use linear interpolation for minification, magnification, and mip-level sampling.</summary>
  </member>
  <member name="D3D11_FILTER::D3D11_FILTER_ANISOTROPIC">
    <summary>Use anisotropic interpolation for minification, magnification, and mip-level sampling.</summary>
  </member>
  <member name="D3D11_FILTER::D3D11_FILTER_COMPARISON_MIN_MAG_MIP_POINT">
    <summary>Use point sampling for minification, magnification, and mip-level sampling. Compare the result to the comparison value.</summary>
  </member>
  <member name="D3D11_FILTER::D3D11_FILTER_COMPARISON_MIN_MAG_POINT_MIP_LINEAR">
    <summary>Use point sampling for minification and magnification; use linear interpolation for mip-level sampling. Compare the result to the comparison value.</summary>
  </member>
  <member name="D3D11_FILTER::D3D11_FILTER_COMPARISON_MIN_POINT_MAG_LINEAR_MIP_POINT">
    <summary>Use point sampling for minification; use linear interpolation for magnification; use point sampling for mip-level sampling. Compare the result to the comparison value.</summary>
  </member>
  <member name="D3D11_FILTER::D3D11_FILTER_COMPARISON_MIN_POINT_MAG_MIP_LINEAR">
    <summary>Use point sampling for minification; use linear interpolation for magnification and mip-level sampling. Compare the result to the comparison value.</summary>
  </member>
  <member name="D3D11_FILTER::D3D11_FILTER_COMPARISON_MIN_LINEAR_MAG_MIP_POINT">
    <summary>Use linear interpolation for minification; use point sampling for magnification and mip-level sampling. Compare the result to the comparison value.</summary>
  </member>
  <member name="D3D11_FILTER::D3D11_FILTER_COMPARISON_MIN_LINEAR_MAG_POINT_MIP_LINEAR">
    <summary>Use linear interpolation for minification; use point sampling for magnification; use linear interpolation for mip-level sampling. Compare the result to the comparison value.</summary>
  </member>
  <member name="D3D11_FILTER::D3D11_FILTER_COMPARISON_MIN_MAG_LINEAR_MIP_POINT">
    <summary>Use linear interpolation for minification and magnification; use point sampling for mip-level sampling. Compare the result to the comparison value.</summary>
  </member>
  <member name="D3D11_FILTER::D3D11_FILTER_COMPARISON_MIN_MAG_MIP_LINEAR">
    <summary>Use linear interpolation for minification, magnification, and mip-level sampling. Compare the result to the comparison value.</summary>
  </member>
  <member name="D3D11_FILTER::D3D11_FILTER_COMPARISON_ANISOTROPIC">
    <summary>Use anisotropic interpolation for minification, magnification, and mip-level sampling. Compare the result to the comparison value.</summary>
  </member>
  <member name="D3D11_FILTER::D3D11_FILTER_MINIMUM_MIN_MAG_MIP_POINT">
    <summary>
      Fetch the same set of texels as <a href="https://docs.microsoft.com/">D3D11_FILTER_MIN_MAG_MIP_POINT</a> and instead of filtering them return the minimum of the texels.  Texels that are weighted 0 during filtering aren't counted towards the minimum.  You can query support for this filter type from the <b>MinMaxFiltering</b> member in the <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ns-d3d11-d3d11_feature_data_d3d11_options1">D3D11_FEATURE_DATA_D3D11_OPTIONS1</a> structure.
    </summary>
  </member>
  <member name="D3D11_FILTER::D3D11_FILTER_MINIMUM_MIN_MAG_POINT_MIP_LINEAR">
    <summary>
      Fetch the same set of texels as <a href="https://docs.microsoft.com/">D3D11_FILTER_MIN_MAG_POINT_MIP_LINEAR</a> and instead of filtering them return the minimum of the texels.  Texels that are weighted 0 during filtering aren't counted towards the minimum.  You can query support for this filter type from the <b>MinMaxFiltering</b> member in the <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ns-d3d11-d3d11_feature_data_d3d11_options1">D3D11_FEATURE_DATA_D3D11_OPTIONS1</a> structure.
    </summary>
  </member>
  <member name="D3D11_FILTER::D3D11_FILTER_MINIMUM_MIN_POINT_MAG_LINEAR_MIP_POINT">
    <summary>
      Fetch the same set of texels as <a href="https://docs.microsoft.com/">D3D11_FILTER_MIN_POINT_MAG_LINEAR_MIP_POINT</a> and instead of filtering them return the minimum of the texels.  Texels that are weighted 0 during filtering aren't counted towards the minimum.  You can query support for this filter type from the <b>MinMaxFiltering</b> member in the <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ns-d3d11-d3d11_feature_data_d3d11_options1">D3D11_FEATURE_DATA_D3D11_OPTIONS1</a> structure.
    </summary>
  </member>
  <member name="D3D11_FILTER::D3D11_FILTER_MINIMUM_MIN_POINT_MAG_MIP_LINEAR">
    <summary>
      Fetch the same set of texels as <a href="https://docs.microsoft.com/">D3D11_FILTER_MIN_POINT_MAG_MIP_LINEAR</a> and instead of filtering them return the minimum of the texels.  Texels that are weighted 0 during filtering aren't counted towards the minimum.  You can query support for this filter type from the <b>MinMaxFiltering</b> member in the <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ns-d3d11-d3d11_feature_data_d3d11_options1">D3D11_FEATURE_DATA_D3D11_OPTIONS1</a> structure.
    </summary>
  </member>
  <member name="D3D11_FILTER::D3D11_FILTER_MINIMUM_MIN_LINEAR_MAG_MIP_POINT">
    <summary>
      Fetch the same set of texels as <a href="https://docs.microsoft.com/">D3D11_FILTER_MIN_LINEAR_MAG_MIP_POINT</a> and instead of filtering them return the minimum of the texels.  Texels that are weighted 0 during filtering aren't counted towards the minimum.  You can query support for this filter type from the <b>MinMaxFiltering</b> member in the <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ns-d3d11-d3d11_feature_data_d3d11_options1">D3D11_FEATURE_DATA_D3D11_OPTIONS1</a> structure.
    </summary>
  </member>
  <member name="D3D11_FILTER::D3D11_FILTER_MINIMUM_MIN_LINEAR_MAG_POINT_MIP_LINEAR">
    <summary>
      Fetch the same set of texels as <a href="https://docs.microsoft.com/">D3D11_FILTER_MIN_LINEAR_MAG_POINT_MIP_LINEAR</a> and instead of filtering them return the minimum of the texels.  Texels that are weighted 0 during filtering aren't counted towards the minimum.  You can query support for this filter type from the <b>MinMaxFiltering</b> member in the <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ns-d3d11-d3d11_feature_data_d3d11_options1">D3D11_FEATURE_DATA_D3D11_OPTIONS1</a> structure.
    </summary>
  </member>
  <member name="D3D11_FILTER::D3D11_FILTER_MINIMUM_MIN_MAG_LINEAR_MIP_POINT">
    <summary>
      Fetch the same set of texels as <a href="https://docs.microsoft.com/">D3D11_FILTER_MIN_MAG_LINEAR_MIP_POINT</a> and instead of filtering them return the minimum of the texels.  Texels that are weighted 0 during filtering aren't counted towards the minimum.  You can query support for this filter type from the <b>MinMaxFiltering</b> member in the <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ns-d3d11-d3d11_feature_data_d3d11_options1">D3D11_FEATURE_DATA_D3D11_OPTIONS1</a> structure.
    </summary>
  </member>
  <member name="D3D11_FILTER::D3D11_FILTER_MINIMUM_MIN_MAG_MIP_LINEAR">
    <summary>
      Fetch the same set of texels as <a href="https://docs.microsoft.com/">D3D11_FILTER_MIN_MAG_MIP_LINEAR</a> and instead of filtering them return the minimum of the texels.  Texels that are weighted 0 during filtering aren't counted towards the minimum.  You can query support for this filter type from the <b>MinMaxFiltering</b> member in the <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ns-d3d11-d3d11_feature_data_d3d11_options1">D3D11_FEATURE_DATA_D3D11_OPTIONS1</a> structure.
    </summary>
  </member>
  <member name="D3D11_FILTER::D3D11_FILTER_MINIMUM_ANISOTROPIC">
    <summary>
      Fetch the same set of texels as <a href="https://docs.microsoft.com/">D3D11_FILTER_ANISOTROPIC</a> and instead of filtering them return the minimum of the texels.  Texels that are weighted 0 during filtering aren't counted towards the minimum.  You can query support for this filter type from the <b>MinMaxFiltering</b> member in the <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ns-d3d11-d3d11_feature_data_d3d11_options1">D3D11_FEATURE_DATA_D3D11_OPTIONS1</a> structure.
    </summary>
  </member>
  <member name="D3D11_FILTER::D3D11_FILTER_MAXIMUM_MIN_MAG_MIP_POINT">
    <summary>
      Fetch the same set of texels as <a href="https://docs.microsoft.com/">D3D11_FILTER_MIN_MAG_MIP_POINT</a> and instead of filtering them return the maximum of the texels.  Texels that are weighted 0 during filtering aren't counted towards the maximum.  You can query support for this filter type from the <b>MinMaxFiltering</b> member in the <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ns-d3d11-d3d11_feature_data_d3d11_options1">D3D11_FEATURE_DATA_D3D11_OPTIONS1</a> structure.
    </summary>
  </member>
  <member name="D3D11_FILTER::D3D11_FILTER_MAXIMUM_MIN_MAG_POINT_MIP_LINEAR">
    <summary>
      Fetch the same set of texels as <a href="https://docs.microsoft.com/">D3D11_FILTER_MIN_MAG_POINT_MIP_LINEAR</a> and instead of filtering them return the maximum of the texels.  Texels that are weighted 0 during filtering aren't counted towards the maximum.  You can query support for this filter type from the <b>MinMaxFiltering</b> member in the <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ns-d3d11-d3d11_feature_data_d3d11_options1">D3D11_FEATURE_DATA_D3D11_OPTIONS1</a> structure.
    </summary>
  </member>
  <member name="D3D11_FILTER::D3D11_FILTER_MAXIMUM_MIN_POINT_MAG_LINEAR_MIP_POINT">
    <summary>
      Fetch the same set of texels as <a href="https://docs.microsoft.com/">D3D11_FILTER_MIN_POINT_MAG_LINEAR_MIP_POINT</a> and instead of filtering them return the maximum of the texels.  Texels that are weighted 0 during filtering aren't counted towards the maximum.  You can query support for this filter type from the <b>MinMaxFiltering</b> member in the <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ns-d3d11-d3d11_feature_data_d3d11_options1">D3D11_FEATURE_DATA_D3D11_OPTIONS1</a> structure.
    </summary>
  </member>
  <member name="D3D11_FILTER::D3D11_FILTER_MAXIMUM_MIN_POINT_MAG_MIP_LINEAR">
    <summary>
      Fetch the same set of texels as <a href="https://docs.microsoft.com/">D3D11_FILTER_MIN_POINT_MAG_MIP_LINEAR</a> and instead of filtering them return the maximum of the texels.  Texels that are weighted 0 during filtering aren't counted towards the maximum.  You can query support for this filter type from the <b>MinMaxFiltering</b> member in the <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ns-d3d11-d3d11_feature_data_d3d11_options1">D3D11_FEATURE_DATA_D3D11_OPTIONS1</a> structure.
    </summary>
  </member>
  <member name="D3D11_FILTER::D3D11_FILTER_MAXIMUM_MIN_LINEAR_MAG_MIP_POINT">
    <summary>
      Fetch the same set of texels as <a href="https://docs.microsoft.com/">D3D11_FILTER_MIN_LINEAR_MAG_MIP_POINT</a> and instead of filtering them return the maximum of the texels.  Texels that are weighted 0 during filtering aren't counted towards the maximum.  You can query support for this filter type from the <b>MinMaxFiltering</b> member in the <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ns-d3d11-d3d11_feature_data_d3d11_options1">D3D11_FEATURE_DATA_D3D11_OPTIONS1</a> structure.
    </summary>
  </member>
  <member name="D3D11_FILTER::D3D11_FILTER_MAXIMUM_MIN_LINEAR_MAG_POINT_MIP_LINEAR">
    <summary>
      Fetch the same set of texels as <a href="https://docs.microsoft.com/">D3D11_FILTER_MIN_LINEAR_MAG_POINT_MIP_LINEAR</a> and instead of filtering them return the maximum of the texels.  Texels that are weighted 0 during filtering aren't counted towards the maximum.  You can query support for this filter type from the <b>MinMaxFiltering</b> member in the <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ns-d3d11-d3d11_feature_data_d3d11_options1">D3D11_FEATURE_DATA_D3D11_OPTIONS1</a> structure.
    </summary>
  </member>
  <member name="D3D11_FILTER::D3D11_FILTER_MAXIMUM_MIN_MAG_LINEAR_MIP_POINT">
    <summary>
      Fetch the same set of texels as <a href="https://docs.microsoft.com/">D3D11_FILTER_MIN_MAG_LINEAR_MIP_POINT</a> and instead of filtering them return the maximum of the texels.  Texels that are weighted 0 during filtering aren't counted towards the maximum.  You can query support for this filter type from the <b>MinMaxFiltering</b> member in the <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ns-d3d11-d3d11_feature_data_d3d11_options1">D3D11_FEATURE_DATA_D3D11_OPTIONS1</a> structure.
    </summary>
  </member>
  <member name="D3D11_FILTER::D3D11_FILTER_MAXIMUM_MIN_MAG_MIP_LINEAR">
    <summary>
      Fetch the same set of texels as <a href="https://docs.microsoft.com/">D3D11_FILTER_MIN_MAG_MIP_LINEAR</a> and instead of filtering them return the maximum of the texels.  Texels that are weighted 0 during filtering aren't counted towards the maximum.  You can query support for this filter type from the <b>MinMaxFiltering</b> member in the <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ns-d3d11-d3d11_feature_data_d3d11_options1">D3D11_FEATURE_DATA_D3D11_OPTIONS1</a> structure.
    </summary>
  </member>
  <member name="D3D11_FILTER::D3D11_FILTER_MAXIMUM_ANISOTROPIC">
    <summary>
      Fetch the same set of texels as <a href="https://docs.microsoft.com/">D3D11_FILTER_ANISOTROPIC</a> and instead of filtering them return the maximum of the texels.  Texels that are weighted 0 during filtering aren't counted towards the maximum.  You can query support for this filter type from the <b>MinMaxFiltering</b> member in the <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ns-d3d11-d3d11_feature_data_d3d11_options1">D3D11_FEATURE_DATA_D3D11_OPTIONS1</a> structure.
    </summary>
  </member>
  <member name="ID3D11DeviceContext::CopySubresourceRegion">
    <summary>
      <para>Copy a region from a source resource to a destination resource.</para>
      <para>
        Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d11/nf-d3d11-id3d11devicecontext-copysubresourceregion" />
      </para>
      <param name="pDstResource">
        A pointer to the destination resource (see <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nn-d3d11-id3d11resource">ID3D11Resource</a>).
      </param>
      <param name="DstSubresource">Destination subresource index.</param>
      <param name="DstX">The x-coordinate of the upper left corner of the destination region.</param>
      <param name="DstY">The y-coordinate of the upper left corner of the destination region. For a 1D subresource, this must be zero.</param>
      <param name="DstZ">The z-coordinate of the upper left corner of the destination region. For a 1D or 2D subresource, this must be zero.</param>
      <param name="pSrcResource">
        A pointer to the source resource (see <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nn-d3d11-id3d11resource">ID3D11Resource</a>).
      </param>
      <param name="SrcSubresource">Source subresource index.</param>
      <param name="pSrcBox">
        A pointer to a 3D box (see <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ns-d3d11-d3d11_box">D3D11_BOX</a>) that defines the source subresource that can be copied. If <b>NULL</b>, the entire source subresource is copied. The box must fit within the source resource.

        An empty box results in a no-op. A box is empty if the top value is greater than or equal to the bottom value, or the left value is greater than or equal to the right value, or the front value is greater than or equal to the back value. When the box is empty, <b>CopySubresourceRegion</b> doesn't perform a copy operation.
      </param>
    </summary>
  </member>
  <member name="D3D11_SHADER_MIN_PRECISION_SUPPORT">
    <summary>
      <para>Values that specify minimum precision levels at shader stages.</para>
      <para>
        Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d11/ne-d3d11-d3d11_shader_min_precision_support" />
      </para>
    </summary>
  </member>
  <member name="D3D11_SHADER_MIN_PRECISION_SUPPORT::D3D11_SHADER_MIN_PRECISION_10_BIT">
    <summary>Minimum precision level is 10-bit.</summary>
  </member>
  <member name="D3D11_SHADER_MIN_PRECISION_SUPPORT::D3D11_SHADER_MIN_PRECISION_16_BIT">
    <summary>Minimum precision level is 16-bit.</summary>
  </member>
  <member name="D3D11_FUNCTION_DESC">
    <summary>
      <para>Describes a function.</para>
      <para>
        Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d11shader/ns-d3d11shader-d3d11_function_desc" />
      </para>
    </summary>
  </member>
  <member name="D3D11_FUNCTION_DESC::Version">
    <summary>The shader version.</summary>
  </member>
  <member name="D3D11_FUNCTION_DESC::Creator">
    <summary>The name of the originator of the function.</summary>
  </member>
  <member name="D3D11_FUNCTION_DESC::Flags">
    <summary>
      A combination of <a href="https://docs.microsoft.com/windows/desktop/direct3dhlsl/d3dcompile-constants">D3DCOMPILE Constants</a> that are combined by using a bitwise OR operation. The resulting value specifies shader compilation and parsing.
    </summary>
  </member>
  <member name="D3D11_FUNCTION_DESC::ConstantBuffers">
    <summary>The number of constant buffers for the function.</summary>
  </member>
  <member name="D3D11_FUNCTION_DESC::BoundResources">
    <summary>The number of bound resources for the function.</summary>
  </member>
  <member name="D3D11_FUNCTION_DESC::InstructionCount">
    <summary>The number of emitted instructions for the function.</summary>
  </member>
  <member name="D3D11_FUNCTION_DESC::TempRegisterCount">
    <summary>The number of temporary registers used by the function.</summary>
  </member>
  <member name="D3D11_FUNCTION_DESC::TempArrayCount">
    <summary>The number of temporary arrays used by the function.</summary>
  </member>
  <member name="D3D11_FUNCTION_DESC::DefCount">
    <summary>The number of constant defines for the function.</summary>
  </member>
  <member name="D3D11_FUNCTION_DESC::DclCount">
    <summary>The number of declarations (input + output) for the function.</summary>
  </member>
  <member name="D3D11_FUNCTION_DESC::TextureNormalInstructions">
    <summary>The number of non-categorized texture instructions for the function.</summary>
  </member>
  <member name="D3D11_FUNCTION_DESC::TextureLoadInstructions">
    <summary>The number of texture load instructions for the function.</summary>
  </member>
  <member name="D3D11_FUNCTION_DESC::TextureCompInstructions">
    <summary>The number of texture comparison instructions for the function.</summary>
  </member>
  <member name="D3D11_FUNCTION_DESC::TextureBiasInstructions">
    <summary>The number of texture bias instructions for the function.</summary>
  </member>
  <member name="D3D11_FUNCTION_DESC::TextureGradientInstructions">
    <summary>The number of texture gradient instructions for the function.</summary>
  </member>
  <member name="D3D11_FUNCTION_DESC::FloatInstructionCount">
    <summary>The number of floating point arithmetic instructions used by the function.</summary>
  </member>
  <member name="D3D11_FUNCTION_DESC::IntInstructionCount">
    <summary>The number of signed integer arithmetic instructions used by the function.</summary>
  </member>
  <member name="D3D11_FUNCTION_DESC::UintInstructionCount">
    <summary>The number of unsigned integer arithmetic instructions used by the function.</summary>
  </member>
  <member name="D3D11_FUNCTION_DESC::StaticFlowControlCount">
    <summary>The number of static flow control instructions used by the function.</summary>
  </member>
  <member name="D3D11_FUNCTION_DESC::DynamicFlowControlCount">
    <summary>The number of dynamic flow control instructions used by the function.</summary>
  </member>
  <member name="D3D11_FUNCTION_DESC::MacroInstructionCount">
    <summary>The number of macro instructions used by the function.</summary>
  </member>
  <member name="D3D11_FUNCTION_DESC::ArrayInstructionCount">
    <summary>The number of array instructions used by the function.</summary>
  </member>
  <member name="D3D11_FUNCTION_DESC::MovInstructionCount">
    <summary>The number of mov instructions used by the function.</summary>
  </member>
  <member name="D3D11_FUNCTION_DESC::MovcInstructionCount">
    <summary>The number of movc instructions used by the function.</summary>
  </member>
  <member name="D3D11_FUNCTION_DESC::ConversionInstructionCount">
    <summary>The number of type conversion instructions used by the function.</summary>
  </member>
  <member name="D3D11_FUNCTION_DESC::BitwiseInstructionCount">
    <summary>The number of bitwise arithmetic instructions used by the function.</summary>
  </member>
  <member name="D3D11_FUNCTION_DESC::MinFeatureLevel">
    <summary>
      A <a href="https://docs.microsoft.com/windows/desktop/api/d3dcommon/ne-d3dcommon-d3d_feature_level">D3D_FEATURE_LEVEL</a>-typed value that specifies the minimum Direct3D feature level target of the function byte code.
    </summary>
  </member>
  <member name="D3D11_FUNCTION_DESC::RequiredFeatureFlags">
    <summary>
      A value that contains a combination of one or more shader requirements flags; each flag specifies a requirement of the shader. A default value of 0 means there are no requirements. For a list of values, see <a href="https://docs.microsoft.com/windows/desktop/api/d3d11shader/nf-d3d11shader-id3d11shaderreflection-getrequiresflags">ID3D11ShaderReflection::GetRequiresFlags</a>.
    </summary>
  </member>
  <member name="D3D11_FUNCTION_DESC::Name">
    <summary>The name of the function.</summary>
  </member>
  <member name="D3D11_FUNCTION_DESC::FunctionParameterCount">
    <summary>The number of logical parameters in the function signature, not including the return value.</summary>
  </member>
  <member name="D3D11_FUNCTION_DESC::HasReturn">
    <summary>
      Indicates whether the function returns a value. <b>TRUE</b> indicates it returns a value; otherwise, <b>FALSE</b> (it is a subroutine).
    </summary>
  </member>
  <member name="D3D11_FUNCTION_DESC::Has10Level9VertexShader">
    <summary>
      Indicates whether there is a Direct3D 10Level9 vertex shader blob. <b>TRUE</b> indicates there is a 10Level9 vertex shader blob; otherwise, <b>FALSE</b>.
    </summary>
  </member>
  <member name="D3D11_FUNCTION_DESC::Has10Level9PixelShader">
    <summary>
      Indicates whether there is a Direct3D 10Level9 pixel shader blob. <b>TRUE</b> indicates there is a 10Level9 pixel shader blob; otherwise, <b>FALSE</b>.
    </summary>
  </member>
  <member name="ID3D11AuthenticatedChannel::GetChannelHandle">
    <summary>
      <para>Gets a handle to the authenticated channel.</para>
      <para>
        Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d11/nf-d3d11-id3d11authenticatedchannel-getchannelhandle" />
      </para>
      <param name="pChannelHandle">Receives a handle to the channel.</param>
    </summary>
  </member>
  <member name="ID3D11ShaderReflection::GetMovcInstructionCount">
    <summary>
      <para>Gets the number of Movc instructions.</para>
      <para>
        Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d11shader/nf-d3d11shader-id3d11shaderreflection-getmovcinstructioncount" />
      </para>
    </summary>
  </member>
  <member name="ID3D11Texture3D">
    <summary>
      <para>A 3D texture interface accesses texel data, which is structured memory.</para>
      <para>
        Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d11/nn-d3d11-id3d11texture3d" />
      </para>
    </summary>
  </member>
  <member name="D3D11_AUTHENTICATED_QUERY_ACCESSIBILITY_ENCRYPTION_GUID_INPUT">
    <summary>
      <para>Contains input data for a D3D11_AUTHENTICATED_QUERY_ENCRYPTION_WHEN_ACCESSIBLE_GUID query.</para>
      <para>
        Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d11/ns-d3d11-d3d11_authenticated_query_accessibility_encryption_guid_input" />
      </para>
    </summary>
  </member>
  <member name="D3D11_AUTHENTICATED_QUERY_ACCESSIBILITY_ENCRYPTION_GUID_INPUT::Input">
    <summary>
      A <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ns-d3d11-d3d11_authenticated_query_input">D3D11_AUTHENTICATED_QUERY_INPUT</a> structure that contains the GUID for the query and other data.
    </summary>
  </member>
  <member name="D3D11_AUTHENTICATED_QUERY_ACCESSIBILITY_ENCRYPTION_GUID_INPUT::EncryptionGuidIndex">
    <summary>The index of the encryption GUID.</summary>
  </member>
  <member name="D3D11_KEY_EXCHANGE_HW_PROTECTION_OUTPUT_DATA">
    <summary>
      <para>Represents key exchange output data for hardware content protection.</para>
      <para>
        Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d11_1/ns-d3d11_1-d3d11_key_exchange_hw_protection_output_data" />
      </para>
    </summary>
  </member>
  <member name="D3D11_KEY_EXCHANGE_HW_PROTECTION_OUTPUT_DATA::PrivateDataSize">
    <summary>
      The size of the private data reserved for IHV usage. This size is determined from the <i>pPrivateOutputSize</i> parameter returned by the <a href="https://docs.microsoft.com/windows/desktop/api/d3d11_1/nf-d3d11_1-id3d11videodevice1-getcryptosessionprivatedatasize">ID3D11VideoDevice1::GetCryptoSessionPrivateDataSize</a> function.
    </summary>
  </member>
  <member name="D3D11_KEY_EXCHANGE_HW_PROTECTION_OUTPUT_DATA::MaxHWProtectionDataSize">
    <summary>
      The maximum size of data that the driver can return in the output buffer. The last byte that it can write to is <b>pbOuput</b>[<b>PrivateDataSize</b> + <b>MaxHWProtectionDataSize</b> – 1].
    </summary>
  </member>
  <member name="D3D11_KEY_EXCHANGE_HW_PROTECTION_OUTPUT_DATA::HWProtectionDataSize">
    <summary>The size of the output data written by the driver.</summary>
  </member>
  <member name="D3D11_KEY_EXCHANGE_HW_PROTECTION_OUTPUT_DATA::TransportTime">
    <summary>The number of 100 nanosecond units spent transporting the data.</summary>
  </member>
  <member name="D3D11_KEY_EXCHANGE_HW_PROTECTION_OUTPUT_DATA::ExecutionTime">
    <summary>The number of 100 nanosecond units spent executing the content protection command.</summary>
  </member>
  <member name="D3D11_KEY_EXCHANGE_HW_PROTECTION_OUTPUT_DATA::pbOutput">
    <summary>
      If <b>PrivateDataSize</b> is greater than 0,  pbInput[0] – <b>pbOutput</b>[<b>PrivateDataSize</b> - 1] is reserved for IHV use.

      <b>pbOutput</b>[<b>PrivateDataSize</b>] – <b>pbOutput</b>[<b>HWProtectionDataSize</b> + <b>PrivateDataSize</b> - 1] contains the input data for the DRM command. The format and size of the DRM command is defined by the DRM specification.
    </summary>
  </member>
  <member name="ID3D11VideoDevice1::RecommendVideoDecoderDownsampleParameters">
    <summary>
      <para>Allows the driver to recommend optimal output downsample parameters from the input parameters.</para>
      <para>
        Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d11_1/nf-d3d11_1-id3d11videodevice1-recommendvideodecoderdownsampleparameters" />
      </para>
      <param name="pInputDesc">
        A <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ns-d3d11-d3d11_video_decoder_desc">D3D11_VIDEO_DECODER_DESC</a> object describing the decoding profile, the resolution, and format of the input stream.  This is the resolution and format to be downsampled.
      </param>
      <param name="InputColorSpace">
        A  <a href="https://docs.microsoft.com/windows/desktop/api/dxgicommon/ne-dxgicommon-dxgi_color_space_type">DXGI_COLOR_SPACE_TYPE</a> value that specifies the colorspace of the reference frame data.
      </param>
      <param name="pInputConfig">The configuration data associated with the decode profile.</param>
      <param name="pFrameRate">The frame rate of the video content. This is used by the driver to determine whether the video can be decoded in real-time.</param>
      <param name="pRecommendedOutputDesc">
        Pointer to a <a href="https://docs.microsoft.com/windows/desktop/api/d3d11_1/ns-d3d11_1-d3d11_video_sample_desc">D3D11_VIDEO_SAMPLE_DESC</a> structure that the driver populates with the recommended output buffer parameters for a downsample operation. The driver will attempt to recommend parameters that can support real-time decoding. If it is unable to do so, the driver will recommend values that are as close to the real-time solution as possible.
      </param>
    </summary>
  </member>
  <member name="ID3D11Device::SetPrivateDataInterface">
    <summary>
      <para>Associate an IUnknown-derived interface with this device child and associate that interface with an application-defined guid.</para>
      <para>
        Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d11/nf-d3d11-id3d11device-setprivatedatainterface" />
      </para>
      <param name="guid">Guid associated with the interface.</param>
      <param name="pData">Pointer to an IUnknown-derived interface to be associated with the device child.</param>
    </summary>
  </member>
  <member name="ID3D11Texture3D::GetDesc">
    <summary>
      <para>Get the properties of the texture resource.</para>
      <para>
        Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d11/nf-d3d11-id3d11texture3d-getdesc" />
      </para>
      <param name="pDesc">
        Pointer to a resource description (see <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ns-d3d11-d3d11_texture3d_desc">D3D11_TEXTURE3D_DESC</a>).
      </param>
    </summary>
  </member>
  <member name="ID3D11DeviceContext::DrawIndexed">
    <summary>
      <para>Draw indexed, non-instanced primitives.</para>
      <para>
        Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d11/nf-d3d11-id3d11devicecontext-drawindexed" />
      </para>
      <param name="IndexCount">Number of indices to draw.</param>
      <param name="StartIndexLocation">The location of the first index read by the GPU from the index buffer.</param>
      <param name="BaseVertexLocation">A value added to each index before reading a vertex from the vertex buffer.</param>
    </summary>
  </member>
  <member name="D3D11_TEX2DMS_SRV">
    <summary>
      <para>Specifies the subresources from a multisampled 2D texture to use in a shader-resource view.</para>
      <para>
        Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d11/ns-d3d11-d3d11_tex2dms_srv" />
      </para>
    </summary>
  </member>
  <member name="D3D11_TEX2DMS_SRV::UnusedField_NothingToDefine">
    <summary>Integer of any value. See remarks.</summary>
  </member>
  <member name="ID3D11Resource::GetEvictionPriority">
    <summary>
      <para>Get the eviction priority of a resource.</para>
      <para>
        Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d11/nf-d3d11-id3d11resource-getevictionpriority" />
      </para>
    </summary>
  </member>
  <member name="ID3D11Device1::CreateDeferredContext1">
    <summary>
      <para>Creates a deferred context, which can record command lists.</para>
      <para>
        Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d11_1/nf-d3d11_1-id3d11device1-createdeferredcontext1" />
      </para>
      <param name="ContextFlags">
        Reserved for future use.
        Pass 0.
      </param>
      <param name="ppDeferredContext">
        Upon completion of the method, the passed pointer to an <a href="https://docs.microsoft.com/windows/desktop/api/d3d11_1/nn-d3d11_1-id3d11devicecontext1">ID3D11DeviceContext1</a> interface pointer is initialized.
      </param>
    </summary>
  </member>
  <member name="D3D11_TRACE_REGISTER_TYPE">
    <summary>
      <para>Identifies a type of trace register.</para>
      <para>
        Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d11shadertracing/ne-d3d11shadertracing-d3d11_trace_register_type" />
      </para>
    </summary>
  </member>
  <member name="D3D11_TRACE_REGISTER_TYPE::D3D11_TRACE_OUTPUT_NULL_REGISTER">
    <summary>
      Output <b>NULL</b> register.
    </summary>
  </member>
  <member name="D3D11_TRACE_REGISTER_TYPE::D3D11_TRACE_INPUT_REGISTER">
    <summary>Input register.</summary>
  </member>
  <member name="D3D11_TRACE_REGISTER_TYPE::D3D11_TRACE_INPUT_PRIMITIVE_ID_REGISTER">
    <summary>Input primitive ID register.</summary>
  </member>
  <member name="D3D11_TRACE_REGISTER_TYPE::D3D11_TRACE_IMMEDIATE_CONSTANT_BUFFER">
    <summary>Immediate constant buffer.</summary>
  </member>
  <member name="D3D11_TRACE_REGISTER_TYPE::D3D11_TRACE_TEMP_REGISTER">
    <summary>Temporary register.</summary>
  </member>
  <member name="D3D11_TRACE_REGISTER_TYPE::D3D11_TRACE_INDEXABLE_TEMP_REGISTER">
    <summary>Temporary register that can be indexed.</summary>
  </member>
  <member name="D3D11_TRACE_REGISTER_TYPE::D3D11_TRACE_OUTPUT_REGISTER">
    <summary>Output register.</summary>
  </member>
  <member name="D3D11_TRACE_REGISTER_TYPE::D3D11_TRACE_OUTPUT_DEPTH_REGISTER">
    <summary>Output oDepth register.</summary>
  </member>
  <member name="D3D11_TRACE_REGISTER_TYPE::D3D11_TRACE_CONSTANT_BUFFER">
    <summary>Constant buffer.</summary>
  </member>
  <member name="D3D11_TRACE_REGISTER_TYPE::D3D11_TRACE_IMMEDIATE32">
    <summary>Immediate32 register.</summary>
  </member>
  <member name="D3D11_TRACE_REGISTER_TYPE::D3D11_TRACE_SAMPLER">
    <summary>Sampler.</summary>
  </member>
  <member name="D3D11_TRACE_REGISTER_TYPE::D3D11_TRACE_RESOURCE">
    <summary>Resource.</summary>
  </member>
  <member name="D3D11_TRACE_REGISTER_TYPE::D3D11_TRACE_RASTERIZER">
    <summary>Rasterizer.</summary>
  </member>
  <member name="D3D11_TRACE_REGISTER_TYPE::D3D11_TRACE_OUTPUT_COVERAGE_MASK">
    <summary>Output coverage mask.</summary>
  </member>
  <member name="D3D11_TRACE_REGISTER_TYPE::D3D11_TRACE_STREAM">
    <summary>Stream.</summary>
  </member>
  <member name="D3D11_TRACE_REGISTER_TYPE::D3D11_TRACE_THIS_POINTER">
    <summary>This pointer.</summary>
  </member>
  <member name="D3D11_TRACE_REGISTER_TYPE::D3D11_TRACE_OUTPUT_CONTROL_POINT_ID_REGISTER">
    <summary>Output control point ID register (this is actually an input; it defines the output that the thread controls).</summary>
  </member>
  <member name="D3D11_TRACE_REGISTER_TYPE::D3D11_TRACE_INPUT_FORK_INSTANCE_ID_REGISTER">
    <summary>Input fork instance ID register.</summary>
  </member>
  <member name="D3D11_TRACE_REGISTER_TYPE::D3D11_TRACE_INPUT_JOIN_INSTANCE_ID_REGISTER">
    <summary>Input join instance ID register.</summary>
  </member>
  <member name="D3D11_TRACE_REGISTER_TYPE::D3D11_TRACE_INPUT_CONTROL_POINT_REGISTER">
    <summary>Input control point register.</summary>
  </member>
  <member name="D3D11_TRACE_REGISTER_TYPE::D3D11_TRACE_OUTPUT_CONTROL_POINT_REGISTER">
    <summary>Output control point register.</summary>
  </member>
  <member name="D3D11_TRACE_REGISTER_TYPE::D3D11_TRACE_INPUT_PATCH_CONSTANT_REGISTER">
    <summary>Input patch constant register.</summary>
  </member>
  <member name="D3D11_TRACE_REGISTER_TYPE::D3D11_TRACE_INPUT_DOMAIN_POINT_REGISTER">
    <summary>Input domain point register.</summary>
  </member>
  <member name="D3D11_TRACE_REGISTER_TYPE::D3D11_TRACE_UNORDERED_ACCESS_VIEW">
    <summary>Unordered-access view.</summary>
  </member>
  <member name="D3D11_TRACE_REGISTER_TYPE::D3D11_TRACE_THREAD_GROUP_SHARED_MEMORY">
    <summary>Thread group shared memory.</summary>
  </member>
  <member name="D3D11_TRACE_REGISTER_TYPE::D3D11_TRACE_INPUT_THREAD_ID_REGISTER">
    <summary>Input thread ID register.</summary>
  </member>
  <member name="D3D11_TRACE_REGISTER_TYPE::D3D11_TRACE_INPUT_THREAD_GROUP_ID_REGISTER">
    <summary>Thread group ID register.</summary>
  </member>
  <member name="D3D11_TRACE_REGISTER_TYPE::D3D11_TRACE_INPUT_THREAD_ID_IN_GROUP_REGISTER">
    <summary>Input thread ID in-group register.</summary>
  </member>
  <member name="D3D11_TRACE_REGISTER_TYPE::D3D11_TRACE_INPUT_COVERAGE_MASK_REGISTER">
    <summary>Input coverage mask register.</summary>
  </member>
  <member name="D3D11_TRACE_REGISTER_TYPE::D3D11_TRACE_INPUT_THREAD_ID_IN_GROUP_FLATTENED_REGISTER">
    <summary>Input thread ID in-group flattened register.</summary>
  </member>
  <member name="D3D11_TRACE_REGISTER_TYPE::D3D11_TRACE_INPUT_GS_INSTANCE_ID_REGISTER">
    <summary>Input geometry shader (GS) instance ID register.</summary>
  </member>
  <member name="D3D11_TRACE_REGISTER_TYPE::D3D11_TRACE_OUTPUT_DEPTH_GREATER_EQUAL_REGISTER">
    <summary>Output oDepth greater than or equal register.</summary>
  </member>
  <member name="D3D11_TRACE_REGISTER_TYPE::D3D11_TRACE_OUTPUT_DEPTH_LESS_EQUAL_REGISTER">
    <summary>Output oDepth less than or equal register.</summary>
  </member>
  <member name="D3D11_TRACE_REGISTER_TYPE::D3D11_TRACE_IMMEDIATE64">
    <summary>Immediate64 register.</summary>
  </member>
  <member name="D3D11_TRACE_REGISTER_TYPE::D3D11_TRACE_INPUT_CYCLE_COUNTER_REGISTER">
    <summary>Cycle counter register.</summary>
  </member>
  <member name="D3D11_TRACE_REGISTER_TYPE::D3D11_TRACE_INTERFACE_POINTER">
    <summary>Interface pointer.</summary>
  </member>
  <member name="ID3D11VideoContext::DecryptionBlt">
    <summary>
      <para>Writes encrypted data to a protected surface.</para>
      <para>
        Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d11/nf-d3d11-id3d11videocontext-decryptionblt" />
      </para>
      <param name="pCryptoSession">
        A pointer to the <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nn-d3d11-id3d11cryptosession">ID3D11CryptoSession</a> interface.
      </param>
      <param name="pSrcSurface">A pointer to the surface that contains the source data.</param>
      <param name="pDstSurface">A pointer to the protected surface where the encrypted data is written.</param>
      <param name="pEncryptedBlockInfo">
        A pointer to a <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ns-d3d11-d3d11_encrypted_block_info">D3D11_ENCRYPTED_BLOCK_INFO</a> structure, or <b>NULL</b>.

        If the driver supports partially encrypted buffers,  <i>pEncryptedBlockInfo</i> indicates which portions of the buffer are encrypted.  If the entire surface is encrypted, set this parameter to <b>NULL</b>.

        To check whether the driver supports partially encrypted buffers, call <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nf-d3d11-id3d11videodevice-getcontentprotectioncaps">ID3D11VideoDevice::GetContentProtectionCaps</a> and check for the <b>
          D3D11_CONTENT_PROTECTION_CAPS_PARTIAL_DECRYPTION
        </b> capabilities flag. If the driver does not support partially encrypted buffers, set this parameter to <b>NULL</b>.
      </param>
      <param name="ContentKeySize">The size of the encrypted content key, in bytes.</param>
      <param name="pContentKey">
        A pointer to a buffer that contains a content encryption key, or <b>NULL</b>. To query whether the driver supports the use of content keys, call <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nf-d3d11-id3d11videodevice-getcontentprotectioncaps">ID3D11VideoDevice::GetContentProtectionCaps</a> and check for the <b>D3D11_CONTENT_PROTECTION_CAPS_CONTENT_KEY</b> capabilities flag.

        If the driver supports content keys, use the content key to encrypt the surface. Encrypt the content key using the session key, and place the  resulting cipher text in <i>pContentKey</i>. If the driver does not support content keys, use the session key to encrypt the surface and set <i>pContentKey</i> to <b>NULL</b>.
      </param>
      <param name="IVSize">
        The size of the <i>pIV</i> buffer, in bytes.
      </param>
      <param name="pIV">
        A pointer to a buffer that contains the initialization vector (IV).

        For 128-bit AES-CTR encryption, <i>pIV</i> points to a <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ns-d3d11-d3d11_aes_ctr_iv">D3D11_AES_CTR_IV</a> structure. The caller allocates the structure and generates the IV. When you generate the first IV, initialize the structure to a random number. For each subsequent IV, simply increment the <b>IV</b> member of the structure, ensuring that the value always increases.  This procedure enables the driver to validate that the same IV is never used more than once with the same key pair.

        For other encryption types, a different structure might be used, or the encryption might not use an IV.
      </param>
    </summary>
  </member>
  <member name="D3D11_BUFFEREX_SRV_FLAG">
    <summary>
      <para>Identifies how to view a buffer resource.</para>
      <para>
        Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d11/ne-d3d11-d3d11_bufferex_srv_flag" />
      </para>
    </summary>
  </member>
  <member name="D3D11_BUFFEREX_SRV_FLAG::D3D11_BUFFEREX_SRV_FLAG_RAW">
    <summary>
      View the buffer as raw. For more info about raw viewing of buffers, see <a href="https://docs.microsoft.com/windows/desktop/direct3d11/overviews-direct3d-11-resources-intro">Raw Views of Buffers</a>.
    </summary>
  </member>
  <member name="ID3D11DepthStencilView::GetDesc">
    <summary>
      <para>Get the depth-stencil view.</para>
      <para>
        Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d11/nf-d3d11-id3d11depthstencilview-getdesc" />
      </para>
      <param name="pDesc">
        Pointer to a depth-stencil-view description (see <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ns-d3d11-d3d11_depth_stencil_view_desc">D3D11_DEPTH_STENCIL_VIEW_DESC</a>).
      </param>
    </summary>
  </member>
  <member name="D3D11_COMPUTE_SHADER_TRACE_DESC">
    <summary>
      <para>Describes an instance of a compute shader to trace.</para>
      <para>
        Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d11shadertracing/ns-d3d11shadertracing-d3d11_compute_shader_trace_desc" />
      </para>
    </summary>
  </member>
  <member name="D3D11_COMPUTE_SHADER_TRACE_DESC::Invocation">
    <summary>The invocation number of the instance of the compute shader.</summary>
  </member>
  <member name="D3D11_COMPUTE_SHADER_TRACE_DESC::ThreadIDInGroup">
    <summary>
      The <a href="https://docs.microsoft.com/windows/desktop/direct3dhlsl/sv-groupthreadid">SV_GroupThreadID</a> to trace. This value identifies indexes of individual threads within a thread group that a compute shader executes in.
    </summary>
  </member>
  <member name="D3D11_COMPUTE_SHADER_TRACE_DESC::ThreadGroupID">
    <summary>
      The <a href="https://docs.microsoft.com/windows/desktop/direct3dhlsl/sv-groupid">SV_GroupID</a> to trace. This value identifies indexes of a thread group that the compute shader executes in.
    </summary>
  </member>
  <member name="ID3D11On12Device::CreateWrappedResource">
    <summary>
      <para>This method creates D3D11 resources for use with D3D 11on12.</para>
      <para>
        Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d11on12/nf-d3d11on12-id3d11on12device-createwrappedresource" />
      </para>
      <param name="pResource12">A pointer to an already-created D3D12 resource or heap.</param>
      <param name="pFlags11">
        A <a href="https://docs.microsoft.com/windows/desktop/api/d3d11on12/ns-d3d11on12-d3d11_resource_flags">D3D11_RESOURCE_FLAGS</a> structure that enables an application to override flags that would be inferred by the resource/heap properties.
        The D3D11_RESOURCE_FLAGS structure contains bind flags, misc flags, and CPU access flags.
      </param>
      <param name="InState">
        The use of the resource on input, as a bitwise-OR'd combination of <a href="https://docs.microsoft.com/windows/desktop/api/d3d12/ne-d3d12-d3d12_resource_states">D3D12_RESOURCE_STATES</a> enumeration constants.
      </param>
      <param name="OutState">
        The use of the resource on output, as a bitwise-OR'd combination of <a href="https://docs.microsoft.com/windows/desktop/api/d3d12/ne-d3d12-d3d12_resource_states">D3D12_RESOURCE_STATES</a> enumeration constants.
      </param>
      <param name="riid">
        The globally unique identifier (<b>GUID</b>) for the wrapped resource interface.
        The <b>REFIID</b>, or <b>GUID</b>, of the interface to the wrapped resource can be obtained by using the __uuidof() macro.
        For example, __uuidof(<a href="https://docs.microsoft.com/windows/desktop/api/d3d12/nn-d3d12-id3d12resource">ID3D12Resource</a>) will get the <b>GUID</b> of the interface to a wrapped resource.
      </param>
      <param name="ppResource11">After the method returns, points to the newly created wrapped D3D11 resource or heap.</param>
    </summary>
  </member>
  <member name="ID3D11Fence::GetCompletedValue">
    <summary>
      <para>Gets the current value of the fence.</para>
      <para>
        Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d11_3/nf-d3d11_3-id3d11fence-getcompletedvalue" />
      </para>
    </summary>
  </member>
  <member name="ID3D11ModuleInstance::BindResourceByName">
    <summary>
      <para>Rebinds a texture or buffer by name to destination slots.</para>
      <para>
        Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d11shader/nf-d3d11shader-id3d11moduleinstance-bindresourcebyname" />
      </para>
      <param name="pName">The name of the texture or buffer for rebinding.</param>
      <param name="uDstSlot">The first destination slot number for rebinding.</param>
      <param name="uCount">The number of slots for rebinding.</param>
    </summary>
  </member>
  <member name="ID3D11DomainShader">
    <summary>
      <para>A domain-shader interface manages an executable program (a domain shader) that controls the domain-shader stage.</para>
      <para>
        Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d11/nn-d3d11-id3d11domainshader" />
      </para>
    </summary>
  </member>
  <member name="ID3D11Device1::OpenSharedResourceByName">
    <summary>
      <para>Gives a device access to a shared resource that is referenced by name and that was created on a different device.</para>
      <para>
        Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d11_1/nf-d3d11_1-id3d11device1-opensharedresourcebyname" />
      </para>
      <param name="lpName">
        The name of the resource to open. This parameter cannot be <b>NULL</b>.
      </param>
      <param name="dwDesiredAccess">
        The requested access rights to the resource.  In addition to the <a href="https://docs.microsoft.com/windows/desktop/SecAuthZ/generic-access-rights">generic access rights</a>, DXGI defines the following values:

        <ul>
          <li>
            <b>DXGI_SHARED_RESOURCE_READ</b> ( 0x80000000L ) - specifies read access to the resource.
          </li>
          <li>
            <b>DXGI_SHARED_RESOURCE_WRITE</b>	( 1 ) - specifies write access to the resource.
          </li>
        </ul>
        You can combine values by using a bitwise <b>OR</b> operation.
      </param>
      <param name="returnedInterface">The globally unique identifier (GUID) for the resource interface. For more info, see Remarks.</param>
      <param name="ppResource">A pointer to a variable that receives a pointer to the interface for the shared resource object to access.</param>
    </summary>
  </member>
  <member name="ID3D11DepthStencilState">
    <summary>
      <para>The depth-stencil-state interface holds a description for depth-stencil state that you can bind to the output-merger stage.</para>
      <para>
        Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d11/nn-d3d11-id3d11depthstencilstate" />
      </para>
    </summary>
  </member>
  <member name="D3D11_TEX2D_ARRAY_SRV">
    <summary>
      <para>Specifies the subresources from an array of 2D textures to use in a shader-resource view.</para>
      <para>
        Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d11/ns-d3d11-d3d11_tex2d_array_srv" />
      </para>
    </summary>
  </member>
  <member name="D3D11_TEX2D_ARRAY_SRV::MostDetailedMip">
    <summary>
      Index of the most detailed mipmap level to use; this number is between 0 and <b>MipLevels</b> (from the original Texture2D for which <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nf-d3d11-id3d11device-createshaderresourceview">ID3D11Device::CreateShaderResourceView</a> creates a view) -1.
    </summary>
  </member>
  <member name="D3D11_TEX2D_ARRAY_SRV::MipLevels">
    <summary>
      The maximum number of mipmap levels for the view of the texture. See the remarks in <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ns-d3d11-d3d11_tex1d_srv">D3D11_TEX1D_SRV</a>.

      Set to -1 to indicate all the mipmap levels from <b>MostDetailedMip</b> on down to least detailed.
    </summary>
  </member>
  <member name="D3D11_TEX2D_ARRAY_SRV::FirstArraySlice">
    <summary>The index of the first texture to use in an array of textures.</summary>
  </member>
  <member name="D3D11_TEX2D_ARRAY_SRV::ArraySize">
    <summary>Number of textures in the array.</summary>
  </member>
  <member name="ID3D11VideoContext1::CheckCryptoSessionStatus">
    <summary>
      <para>Checks the status of a crypto session.</para>
      <para>
        Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d11_1/nf-d3d11_1-id3d11videocontext1-checkcryptosessionstatus" />
      </para>
      <param name="pCryptoSession">
        Specifies a <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nn-d3d11-id3d11cryptosession">ID3D11CryptoSession</a> for which status is checked.
      </param>
      <param name="pStatus">A D3D11_CRYPTO_SESSION_STATUS that is populated with the crypto session status upon completion.</param>
    </summary>
  </member>
  <member name="D3D11_FEATURE_DATA_D3D11_OPTIONS1">
    <summary>
      <para>Describes Direct3D 11.2 feature options in the current graphics driver.</para>
      <para>
        Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d11/ns-d3d11-d3d11_feature_data_d3d11_options1" />
      </para>
    </summary>
  </member>
  <member name="D3D11_FEATURE_DATA_D3D11_OPTIONS1::TiledResourcesTier">
    <summary>
      Specifies whether the hardware and driver support tiled resources. The runtime sets this member to a <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ne-d3d11-d3d11_tiled_resources_tier">D3D11_TILED_RESOURCES_TIER</a>-typed value that indicates if the hardware and driver support tiled resources and at what tier level.
    </summary>
  </member>
  <member name="D3D11_FEATURE_DATA_D3D11_OPTIONS1::MinMaxFiltering">
    <summary>
      Specifies whether the hardware and driver support the filtering options (<a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ne-d3d11-d3d11_filter">D3D11_FILTER</a>) of comparing the result to the minimum or maximum value during texture sampling. The runtime sets this member to <b>TRUE</b> if the hardware and driver support these filtering options.
    </summary>
  </member>
  <member name="D3D11_FEATURE_DATA_D3D11_OPTIONS1::ClearViewAlsoSupportsDepthOnlyFormats">
    <summary>
      Specifies whether the hardware and driver also support the <a href="https://docs.microsoft.com/windows/desktop/api/d3d11_1/nf-d3d11_1-id3d11devicecontext1-clearview">ID3D11DeviceContext1::ClearView</a> method on depth formats. For info about valid depth formats, see <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ns-d3d11-d3d11_depth_stencil_view_desc">D3D11_DEPTH_STENCIL_VIEW_DESC</a>.
    </summary>
  </member>
  <member name="D3D11_FEATURE_DATA_D3D11_OPTIONS1::MapOnDefaultBuffers">
    <summary>
      Specifies support for creating <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nn-d3d11-id3d11buffer">ID3D11Buffer</a> resources that can be passed to the <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nf-d3d11-id3d11devicecontext-map">ID3D11DeviceContext::Map</a> and <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nf-d3d11-id3d11devicecontext-unmap">ID3D11DeviceContext::Unmap</a> methods. This means that the <b>CPUAccessFlags</b> member of the <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ns-d3d11-d3d11_buffer_desc">D3D11_BUFFER_DESC</a> structure may be set with the desired <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ne-d3d11-d3d11_cpu_access_flag">D3D11_CPU_ACCESS_FLAG</a> elements when the <b>Usage</b> member of <b>D3D11_BUFFER_DESC</b> is set to <b>D3D11_USAGE_DEFAULT</b>. The runtime sets this member to <b>TRUE</b> if the hardware is capable of at least <b>D3D_FEATURE_LEVEL_11_0</b> and the graphics device driver supports mappable default buffers.
    </summary>
  </member>
  <member name="ID3D11UnorderedAccessView1">
    <summary>
      <para>An unordered-access-view interface represents the parts of a resource the pipeline can access during rendering.</para>
      <para>
        Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d11_3/nn-d3d11_3-id3d11unorderedaccessview1" />
      </para>
    </summary>
  </member>
  <member name="ID3D11Device::CreatePixelShader">
    <summary>
      <para>Create a pixel shader.</para>
      <para>
        Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d11/nf-d3d11-id3d11device-createpixelshader" />
      </para>
      <param name="pShaderBytecode">A pointer to the compiled shader.</param>
      <param name="BytecodeLength">Size of the compiled pixel shader.</param>
      <param name="pClassLinkage">
        A pointer to a class linkage interface (see <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nn-d3d11-id3d11classlinkage">ID3D11ClassLinkage</a>); the value can be <b>NULL</b>.
      </param>
      <param name="ppPixelShader">
        Address of a pointer to a <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nn-d3d11-id3d11pixelshader">ID3D11PixelShader</a> interface. If this is <b>NULL</b>, all other parameters will be validated, and if all parameters pass validation this API will return S_FALSE instead of S_OK.
      </param>
    </summary>
  </member>
  <member name="ID3D11VideoDecoder::GetCreationParameters">
    <summary>
      <para>Gets the parameters that were used to create the decoder.</para>
      <para>
        Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d11/nf-d3d11-id3d11videodecoder-getcreationparameters" />
      </para>
      <param name="pVideoDesc">
        A pointer to a <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ns-d3d11-d3d11_video_decoder_desc">D3D11_VIDEO_DECODER_DESC</a> structure that receives a description of the video stream.
      </param>
      <param name="pConfig">
        A pointer to a <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ns-d3d11-d3d11_video_decoder_config">D3D11_VIDEO_DECODER_CONFIG</a> structure that receives the decoder configuration.
      </param>
    </summary>
  </member>
  <member name="D3D11CreateDeviceAndSwapChain">
    <summary>
      <para>Creates a device that represents the display adapter and a swap chain used for rendering.</para>
      <para>
        Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d11/nf-d3d11-d3d11createdeviceandswapchain" />
      </para>
      <param name="pAdapter">
        A pointer to the video adapter to use when creating a <a href="https://docs.microsoft.com/windows/desktop/direct3d11/overviews-direct3d-11-devices-intro">device</a>. Pass <b>NULL</b> to use the default adapter, which is the first adapter enumerated
        by <a href="https://docs.microsoft.com/windows/desktop/api/dxgi/nf-dxgi-idxgifactory-enumadapters">IDXGIFactory1::EnumAdapters</a>.

        <div class="alert">
          <b>Note</b>  Do not mix the use of DXGI 1.0 (<a href="https://docs.microsoft.com/windows/desktop/api/dxgi/nn-dxgi-idxgifactory">IDXGIFactory</a>) and DXGI 1.1 (<a href="https://docs.microsoft.com/windows/desktop/api/dxgi/nn-dxgi-idxgifactory1">IDXGIFactory1</a>) in an application. Use <b>IDXGIFactory</b> or <b>IDXGIFactory1</b>, but not both in an application.
        </div>
        <div> </div>
      </param>
      <param name="DriverType">
        The <a href="https://docs.microsoft.com/windows/desktop/api/d3dcommon/ne-d3dcommon-d3d_driver_type">D3D_DRIVER_TYPE</a>, which represents the driver type to create.
      </param>
      <param name="Software">
        A handle to a DLL that implements a software rasterizer.
        If <i>DriverType</i> is <i>D3D_DRIVER_TYPE_SOFTWARE</i>, <i>Software</i> must not be <b>NULL</b>. Get the handle by
        calling <a href="https://docs.microsoft.com/windows/desktop/api/libloaderapi/nf-libloaderapi-loadlibrarya">LoadLibrary</a>,
        <a href="https://docs.microsoft.com/windows/desktop/api/libloaderapi/nf-libloaderapi-loadlibraryexa">LoadLibraryEx</a> ,
        or <a href="https://docs.microsoft.com/windows/desktop/api/libloaderapi/nf-libloaderapi-getmodulehandlea">GetModuleHandle</a>. The value should be non-<b>NULL</b>when <a href="https://docs.microsoft.com/windows/desktop/api/d3dcommon/ne-d3dcommon-d3d_driver_type">D3D_DRIVER_TYPE</a> is <b>D3D_DRIVER_TYPE_SOFTWARE</b> and <b>NULL</b> otherwise.
      </param>
      <param name="Flags">
        The runtime <a href="https://docs.microsoft.com/windows/desktop/direct3d11/overviews-direct3d-11-devices-layers">layers</a> to enable (see <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ne-d3d11-d3d11_create_device_flag">D3D11_CREATE_DEVICE_FLAG</a>);
        values can be bitwise OR'd together.
      </param>
      <param name="pFeatureLevels">
        A pointer to an array of <a href="https://docs.microsoft.com/windows/desktop/api/d3dcommon/ne-d3dcommon-d3d_feature_level">D3D_FEATURE_LEVEL</a>s, which determine the order of feature levels to attempt to create.
        If <i>pFeatureLevels</i> is set to <b>NULL</b>,
        this function uses the following array of feature levels:



        <code>

          {
          D3D_FEATURE_LEVEL_11_0,
          D3D_FEATURE_LEVEL_10_1,
          D3D_FEATURE_LEVEL_10_0,
          D3D_FEATURE_LEVEL_9_3,
          D3D_FEATURE_LEVEL_9_2,
          D3D_FEATURE_LEVEL_9_1,
          };

        </code>


        <div class="alert">
          <b>Note</b>  If the Direct3D 11.1 runtime is present on the computer and <i>pFeatureLevels</i> is set to <b>NULL</b>, this function won't create a <a href="https://docs.microsoft.com/windows/desktop/api/d3dcommon/ne-d3dcommon-d3d_feature_level">D3D_FEATURE_LEVEL_11_1</a> device. To create a <b>D3D_FEATURE_LEVEL_11_1</b> device, you must explicitly provide a <b>D3D_FEATURE_LEVEL</b> array that includes <b>D3D_FEATURE_LEVEL_11_1</b>. If you provide a <b>D3D_FEATURE_LEVEL</b> array that contains <b>D3D_FEATURE_LEVEL_11_1</b> on a computer that doesn't have the Direct3D 11.1 runtime installed, this function immediately fails with E_INVALIDARG.
        </div>
        <div> </div>
      </param>
      <param name="FeatureLevels">
        The number of elements in <i>pFeatureLevels</i>.
      </param>
      <param name="SDKVersion">
        The SDK version; use <i>D3D11_SDK_VERSION</i>.
      </param>
      <param name="pSwapChainDesc">
        A pointer to a swap chain description (see <a href="https://docs.microsoft.com/windows/desktop/api/dxgi/ns-dxgi-dxgi_swap_chain_desc">DXGI_SWAP_CHAIN_DESC</a>) that contains initialization parameters for the swap chain.
      </param>
      <param name="ppSwapChain">
        Returns the address of a pointer to the <a href="https://docs.microsoft.com/windows/desktop/api/dxgi/nn-dxgi-idxgiswapchain">IDXGISwapChain</a> object that represents the swap chain used for rendering.
      </param>
      <param name="ppDevice">
        Returns the address of a pointer to an <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nn-d3d11-id3d11device">ID3D11Device</a> object that represents the device created. If this parameter is  <b>NULL</b>, no ID3D11Device will be returned'.
      </param>
      <param name="pFeatureLevel">
        Returns a pointer to a <a href="https://docs.microsoft.com/windows/desktop/api/d3dcommon/ne-d3dcommon-d3d_feature_level">D3D_FEATURE_LEVEL</a>, which represents the first element in an array of feature levels supported
        by the device. Supply <b>NULL</b> as an input if you don't need to determine which feature level is supported.
      </param>
      <param name="ppImmediateContext">
        Returns the address of a pointer to an <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nn-d3d11-id3d11devicecontext">ID3D11DeviceContext</a> object that represents the device context. If this parameter is <b>NULL</b>, no ID3D11DeviceContext will be returned.
      </param>
    </summary>
  </member>
  <member name="ID3D11Device2::CheckMultisampleQualityLevels1">
    <summary>
      <para>Get the number of quality levels available during multisampling.</para>
      <para>
        Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d11_2/nf-d3d11_2-id3d11device2-checkmultisamplequalitylevels1" />
      </para>
      <param name="Format">The texture format during multisampling.</param>
      <param name="SampleCount">The number of samples during multisampling.</param>
      <param name="Flags">
        A combination of <a href="https://docs.microsoft.com/windows/desktop/api/d3d11_2/ne-d3d11_2-d3d11_check_multisample_quality_levels_flag">D3D11_CHECK_MULTISAMPLE_QUALITY_LEVELS_FLAGS</a> values that are combined by using a bitwise OR operation. Currently, only <a href="https://docs.microsoft.com/windows/desktop/api/d3d11_2/ne-d3d11_2-d3d11_check_multisample_quality_levels_flag">D3D11_CHECK_MULTISAMPLE_QUALITY_LEVELS_TILED_RESOURCE</a> is supported.
      </param>
      <param name="pNumQualityLevels">A pointer to a variable the receives the number of quality levels supported by the adapter. See Remarks.</param>
    </summary>
  </member>
  <member name="D3D11_QUERY_DATA_TIMESTAMP_DISJOINT">
    <summary>
      <para>Query information about the reliability of a timestamp query.</para>
      <para>
        Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d11/ns-d3d11-d3d11_query_data_timestamp_disjoint" />
      </para>
    </summary>
  </member>
  <member name="D3D11_QUERY_DATA_TIMESTAMP_DISJOINT::Frequency">
    <summary>How frequently the GPU counter increments in Hz.</summary>
  </member>
  <member name="D3D11_QUERY_DATA_TIMESTAMP_DISJOINT::Disjoint">
    <summary>
      If this is <b>TRUE</b>, something occurred in between the query's <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nf-d3d11-id3d11devicecontext-begin">ID3D11DeviceContext::Begin</a> and <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nf-d3d11-id3d11devicecontext-end">ID3D11DeviceContext::End</a> calls that caused the timestamp counter to become discontinuous or disjoint, such as unplugging the AC cord on a laptop, overheating, or throttling up/down due to laptop savings events. The timestamp returned by <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nf-d3d11-id3d11devicecontext-getdata">ID3D11DeviceContext::GetData</a> for a timestamp query is only reliable if <b>Disjoint</b> is <b>FALSE</b>.
    </summary>
  </member>
  <member name="ID3D11DeviceContext3::SetHardwareProtectionState">
    <summary>
      <para>Sets the hardware protection state.</para>
      <para>
        Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d11_3/nf-d3d11_3-id3d11devicecontext3-sethardwareprotectionstate" />
      </para>
      <param name="HwProtectionEnable">Specifies whether to enable hardware protection.</param>
    </summary>
  </member>
  <member name="D3D11_BUFFEREX_SRV">
    <summary>
      <para>Describes the elements in a raw buffer resource to use in a shader-resource view.</para>
      <para>
        Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d11/ns-d3d11-d3d11_bufferex_srv" />
      </para>
    </summary>
  </member>
  <member name="D3D11_BUFFEREX_SRV::FirstElement">
    <summary>The index of the first element to be accessed by the view.</summary>
  </member>
  <member name="D3D11_BUFFEREX_SRV::NumElements">
    <summary>The number of elements in the resource.</summary>
  </member>
  <member name="D3D11_BUFFEREX_SRV::Flags">
    <summary>
      A <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ne-d3d11-d3d11_bufferex_srv_flag">D3D11_BUFFEREX_SRV_FLAG</a>-typed value that identifies view options for the buffer. Currently, the only option is to identify a raw view of the buffer. For more info about raw viewing of buffers, see <a href="https://docs.microsoft.com/windows/desktop/direct3d11/overviews-direct3d-11-resources-intro">Raw Views of Buffers</a>.
    </summary>
  </member>
  <member name="ID3D11Texture3D1::GetDesc1">
    <summary>
      <para>Gets the properties of the texture resource.</para>
      <para>
        Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d11_3/nf-d3d11_3-id3d11texture3d1-getdesc1" />
      </para>
      <param name="pDesc">
        A pointer to a <a href="https://docs.microsoft.com/windows/desktop/api/d3d11_3/ns-d3d11_3-cd3d11_texture3d_desc1">D3D11_TEXTURE3D_DESC1</a> structure that receives the description of the 3D texture.
      </param>
    </summary>
  </member>
  <member name="D3D11_CONTENT_PROTECTION_CAPS">
    <summary>
      <para>Contains flags that describe content-protection capabilities.</para>
      <para>
        Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d11/ne-d3d11-d3d11_content_protection_caps" />
      </para>
    </summary>
  </member>
  <member name="D3D11_CONTENT_PROTECTION_CAPS::D3D11_CONTENT_PROTECTION_CAPS_SOFTWARE">
    <summary>The content protection is implemented in software by the driver.</summary>
  </member>
  <member name="D3D11_CONTENT_PROTECTION_CAPS::D3D11_CONTENT_PROTECTION_CAPS_HARDWARE">
    <summary>The content protection is implemented in hardware by the GPU.</summary>
  </member>
  <member name="D3D11_CONTENT_PROTECTION_CAPS::D3D11_CONTENT_PROTECTION_CAPS_PROTECTION_ALWAYS_ON">
    <summary>Content protection is always applied to a protected surface, regardless of whether the application explicitly enables protection.</summary>
  </member>
  <member name="D3D11_CONTENT_PROTECTION_CAPS::D3D11_CONTENT_PROTECTION_CAPS_PARTIAL_DECRYPTION">
    <summary>The driver can use partially encrypted buffers. If this capability is not present, the entire buffer must be either encrypted or clear.</summary>
  </member>
  <member name="D3D11_CONTENT_PROTECTION_CAPS::D3D11_CONTENT_PROTECTION_CAPS_CONTENT_KEY">
    <summary>The driver can encrypt data using a separate content key that is encrypted using the session key.</summary>
  </member>
  <member name="D3D11_CONTENT_PROTECTION_CAPS::D3D11_CONTENT_PROTECTION_CAPS_FRESHEN_SESSION_KEY">
    <summary>The driver can refresh the session key without renegotiating the key.</summary>
  </member>
  <member name="D3D11_CONTENT_PROTECTION_CAPS::D3D11_CONTENT_PROTECTION_CAPS_ENCRYPTED_READ_BACK">
    <summary>
      The driver can read back encrypted data from a protected surface. For more information, see <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nf-d3d11-id3d11videocontext-encryptionblt">ID3D11VideoContext::EncryptionBlt</a>.
    </summary>
  </member>
  <member name="D3D11_CONTENT_PROTECTION_CAPS::D3D11_CONTENT_PROTECTION_CAPS_ENCRYPTED_READ_BACK_KEY">
    <summary>The driver requires a separate key to read encrypted data from a protected surface.</summary>
  </member>
  <member name="D3D11_CONTENT_PROTECTION_CAPS::D3D11_CONTENT_PROTECTION_CAPS_SEQUENTIAL_CTR_IV">
    <summary>
      If the encryption type is <b>D3DCRYPTOTYPE_AES128_CTR</b>, the application must use a sequential count in the <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ns-d3d11-d3d11_aes_ctr_iv">D3D11_AES_CTR_IV</a>  structure.
    </summary>
  </member>
  <member name="D3D11_CONTENT_PROTECTION_CAPS::D3D11_CONTENT_PROTECTION_CAPS_ENCRYPT_SLICEDATA_ONLY">
    <summary>
      The driver supports encrypted slice data, but does not support any other encrypted data in the compressed buffer.  The caller should not encrypt any data within the buffer other than the slice data.

      <div class="alert">
        <b>Note</b>  The driver should only report this flag for the specific profiles that have this limitation.
      </div>
      <div> </div>
    </summary>
  </member>
  <member name="D3D11_CONTENT_PROTECTION_CAPS::D3D11_CONTENT_PROTECTION_CAPS_DECRYPTION_BLT">
    <summary>The driver can copy encrypted data from one resource to another, decrypting the data as part of the process.</summary>
  </member>
  <member name="D3D11_CONTENT_PROTECTION_CAPS::D3D11_CONTENT_PROTECTION_CAPS_HARDWARE_PROTECT_UNCOMPRESSED">
    <summary>
      The hardware supports the protection of specific resources. This means that:

      <ul>
        <li>The contents of a protected allocation can never be read by the CPU.</li>
        <li>The hardware can ensure a protected resource cannot be copied to an unprotected resource.</li>
      </ul>
      <b>Note</b>  This enumeration value is supported starting with Windows 10.
    </summary>
  </member>
  <member name="D3D11_CONTENT_PROTECTION_CAPS::D3D11_CONTENT_PROTECTION_CAPS_HARDWARE_PROTECTED_MEMORY_PAGEABLE">
    <summary>
      Physical pages of a protected resource can be evicted and potentially paged to disk in low memory conditions without losing the contents of the resource when paged back in.

      <b>Note</b>  This enumeration value is supported starting with Windows 10.
    </summary>
  </member>
  <member name="D3D11_CONTENT_PROTECTION_CAPS::D3D11_CONTENT_PROTECTION_CAPS_HARDWARE_TEARDOWN">
    <summary>
      The hardware supports an automatic teardown mechanism that could trigger hardware keys or protected content to become lost in some conditions.  The application can register to be notified when these events occur.

      <b>Note</b>  This enumeration value is supported starting with Windows 10.
    </summary>
  </member>
  <member name="D3D11_CONTENT_PROTECTION_CAPS::D3D11_CONTENT_PROTECTION_CAPS_HARDWARE_DRM_COMMUNICATION">
    <summary>
      The secure environment is tightly coupled with the GPU and an <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nn-d3d11-id3d11cryptosession">ID3D11CryptoSession</a> should be used for communication between the user mode DRM component and the secure execution environment.

      <b>Note</b>  This enumeration value is supported starting with Windows 10.
    </summary>
  </member>
  <member name="ID3D11DeviceContext1::PSGetConstantBuffers1">
    <summary>
      <para>Gets the constant buffers that the pixel shader pipeline stage uses.</para>
      <para>
        Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d11_1/nf-d3d11_1-id3d11devicecontext1-psgetconstantbuffers1" />
      </para>
      <param name="StartSlot">Index into the device's zero-based array to begin retrieving constant buffers from (ranges from 0 to D3D11_COMMONSHADER_CONSTANT_BUFFER_API_SLOT_COUNT - 1).</param>
      <param name="NumBuffers">
        Number of buffers to retrieve (ranges from 0 to D3D11_COMMONSHADER_CONSTANT_BUFFER_API_SLOT_COUNT - <i>StartSlot</i>).
      </param>
      <param name="ppConstantBuffers">Array of constant buffer interface pointers to be returned by the method.</param>
      <param name="pFirstConstant">
        A pointer to an array that receives the offsets into the buffers that  <i>ppConstantBuffers</i> specifies. Each offset specifies where, from the shader's point of view, each constant buffer starts.  Each offset is measured in shader constants, which are 16 bytes (4*32-bit components).  Therefore, an offset of 2 indicates that the start of the associated constant buffer is 32 bytes into the constant buffer. The runtime sets <i>pFirstConstant</i> to <b>NULL</b> if the buffers do not have offsets.
      </param>
      <param name="pNumConstants">
        A pointer to an array that receives the numbers of constants in the buffers that  <i>ppConstantBuffers</i> specifies. Each number specifies the number of constants that are contained in the constant buffer that the shader uses. Each number of constants starts from its respective offset that is specified in the <i>pFirstConstant</i> array. The runtime sets <i>pNumConstants</i> to <b>NULL</b> if it doesn't specify the numbers of constants in each buffer.
      </param>
    </summary>
  </member>
  <member name="ID3D11VideoProcessorEnumerator::GetVideoProcessorContentDesc">
    <summary>
      <para>Gets the content description that was used to create this enumerator.</para>
      <para>
        Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d11/nf-d3d11-id3d11videoprocessorenumerator-getvideoprocessorcontentdesc" />
      </para>
      <param name="pContentDesc">
        A pointer to a <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ns-d3d11-d3d11_video_processor_content_desc">D3D11_VIDEO_PROCESSOR_CONTENT_DESC</a> structure that receives the content description.
      </param>
    </summary>
  </member>
  <member name="D3D11_QUERY_MISC_FLAG">
    <summary>
      <para>Flags that describe miscellaneous query behavior.</para>
      <para>
        Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d11/ne-d3d11-d3d11_query_misc_flag" />
      </para>
    </summary>
  </member>
  <member name="D3D11_QUERY_MISC_FLAG::D3D11_QUERY_MISC_PREDICATEHINT">
    <summary>
      Tell the hardware that if it is not yet sure if something is hidden or not to draw it anyway. This is only used with an occlusion predicate. Predication data cannot be returned to your application via <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nf-d3d11-id3d11devicecontext-getdata">ID3D11DeviceContext::GetData</a> when using this flag.
    </summary>
  </member>
  <member name="ID3D11InfoQueue::SetMuteDebugOutput">
    <summary>
      <para>Set a boolean that turns the debug output on or off.</para>
      <para>
        Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d11sdklayers/nf-d3d11sdklayers-id3d11infoqueue-setmutedebugoutput" />
      </para>
      <param name="bMute">
        Disable/Enable the debug output (<b>TRUE</b> to disable or mute the output, <b>FALSE</b> to enable the output).
      </param>
    </summary>
  </member>
  <member name="D3D11_VIDEO_PROCESSOR_ALPHA_FILL_MODE">
    <summary>
      <para>Specifies the alpha fill mode for video processing.</para>
      <para>
        Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d11/ne-d3d11-d3d11_video_processor_alpha_fill_mode" />
      </para>
    </summary>
  </member>
  <member name="D3D11_VIDEO_PROCESSOR_ALPHA_FILL_MODE::D3D11_VIDEO_PROCESSOR_ALPHA_FILL_MODE_OPAQUE">
    <summary>Alpha values inside the target rectangle are set to opaque.</summary>
  </member>
  <member name="D3D11_VIDEO_PROCESSOR_ALPHA_FILL_MODE::D3D11_VIDEO_PROCESSOR_ALPHA_FILL_MODE_BACKGROUND">
    <summary>
      Alpha values inside the target rectangle are set to the alpha value specified in the background color. To set the background color, call the <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nf-d3d11-id3d11videocontext-videoprocessorsetoutputbackgroundcolor">ID3D11VideoContext::VideoProcessorSetOutputBackgroundColor</a> method.
    </summary>
  </member>
  <member name="D3D11_VIDEO_PROCESSOR_ALPHA_FILL_MODE::D3D11_VIDEO_PROCESSOR_ALPHA_FILL_MODE_DESTINATION">
    <summary>Existing alpha values remain unchanged in the output surface.</summary>
  </member>
  <member name="D3D11_VIDEO_PROCESSOR_ALPHA_FILL_MODE::D3D11_VIDEO_PROCESSOR_ALPHA_FILL_MODE_SOURCE_STREAM">
    <summary>
      Alpha values are taken from an  input stream, scaled, and copied to the corresponding destination rectangle for that stream. The input stream is specified in the <i>StreamIndex</i> parameter of the <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nf-d3d11-id3d11videocontext-videoprocessorsetoutputalphafillmode">ID3D11VideoContext::VideoProcessorSetOutputAlphaFillMode</a> method.

      If the input stream does not have alpha data, the video processor sets the alpha values in the target rectangle to opaque. If the input stream is disabled or the source rectangle is empty, the alpha values in the target rectangle are not modified.
    </summary>
  </member>
  <member name="ID3D11DeviceContext::Map">
    <summary>
      <para>Gets a pointer to the data contained in a subresource, and denies the GPU access to that subresource.</para>
      <para>
        Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d11/nf-d3d11-id3d11devicecontext-map" />
      </para>
      <param name="pResource">
        A pointer to a <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nn-d3d11-id3d11resource">ID3D11Resource</a> interface.
      </param>
      <param name="Subresource">
        Index number of the <a href="https://docs.microsoft.com/windows/desktop/direct3d11/overviews-direct3d-11-resources-subresources">subresource</a>.
      </param>
      <param name="MapType">
        A <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ne-d3d11-d3d11_map">D3D11_MAP</a>-typed value that specifies the CPU's read and write permissions for a resource.
      </param>
      <param name="MapFlags">
        <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ne-d3d11-d3d11_map_flag">Flag</a> that specifies what the CPU does when the GPU is busy. This flag is optional.
      </param>
      <param name="pMappedResource">
        A pointer to the <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ns-d3d11-d3d11_mapped_subresource">D3D11_MAPPED_SUBRESOURCE</a> structure for the mapped subresource.
        See the Remarks section regarding NULL pointers.
      </param>
    </summary>
  </member>
  <member name="D3D11_AUTHENTICATED_QUERY_OUTPUT_ID_OUTPUT">
    <summary>
      <para>Contains the response to a D3D11_AUTHENTICATED_QUERY_OUTPUT_ID query.</para>
      <para>
        Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d11/ns-d3d11-d3d11_authenticated_query_output_id_output" />
      </para>
    </summary>
  </member>
  <member name="D3D11_AUTHENTICATED_QUERY_OUTPUT_ID_OUTPUT::Output">
    <summary>
      A <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ns-d3d11-d3d11_authenticated_query_output">D3D11_AUTHENTICATED_QUERY_OUTPUT</a> structure that contains a Message Authentication Code (MAC) and other data.
    </summary>
  </member>
  <member name="D3D11_AUTHENTICATED_QUERY_OUTPUT_ID_OUTPUT::DeviceHandle">
    <summary>A handle to the device.</summary>
  </member>
  <member name="D3D11_AUTHENTICATED_QUERY_OUTPUT_ID_OUTPUT::CryptoSessionHandle">
    <summary>A handle to the cryptographic session.</summary>
  </member>
  <member name="D3D11_AUTHENTICATED_QUERY_OUTPUT_ID_OUTPUT::OutputIDIndex">
    <summary>The index of the output ID.</summary>
  </member>
  <member name="D3D11_AUTHENTICATED_QUERY_OUTPUT_ID_OUTPUT::OutputID">
    <summary>An output ID that is associated with the specified device and cryptographic session.</summary>
  </member>
  <member name="ID3D11ShaderReflection::GetRequiresFlags">
    <summary>
      <para>Gets a group of flags that indicates the requirements of a shader.</para>
      <para>
        Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d11shader/nf-d3d11shader-id3d11shaderreflection-getrequiresflags" />
      </para>
    </summary>
  </member>
  <member name="D3D11_TEX2D_ARRAY_SRV1">
    <summary>
      <para>Describes the subresources from an array of 2D textures to use in a shader-resource view.</para>
      <para>
        Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d11_3/ns-d3d11_3-d3d11_tex2d_array_srv1" />
      </para>
    </summary>
  </member>
  <member name="D3D11_TEX2D_ARRAY_SRV1::MostDetailedMip">
    <summary>
      Index of the most detailed mipmap level to use; this number is between 0 and ( <b>MipLevels</b> (from the original Texture2D for which
      <a href="https://docs.microsoft.com/windows/desktop/api/d3d11_3/nf-d3d11_3-id3d11device3-createshaderresourceview1">ID3D11Device3::CreateShaderResourceView1</a>
      creates a view) - 1).
    </summary>
  </member>
  <member name="D3D11_TEX2D_ARRAY_SRV1::MipLevels">
    <summary>
      The maximum number of mipmap levels for the view of the texture. See the remarks in <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ns-d3d11-d3d11_tex1d_srv">D3D11_TEX1D_SRV</a>.


      Set to -1 to indicate all the mipmap levels from <b>MostDetailedMip</b> on down to least detailed.
    </summary>
  </member>
  <member name="D3D11_TEX2D_ARRAY_SRV1::FirstArraySlice">
    <summary>The index of the first texture to use in an array of textures.</summary>
  </member>
  <member name="D3D11_TEX2D_ARRAY_SRV1::ArraySize">
    <summary>Number of textures in the array.</summary>
  </member>
  <member name="D3D11_TEX2D_ARRAY_SRV1::PlaneSlice">
    <summary>The index (plane slice number) of the plane to use in an array of textures.</summary>
  </member>
  <member name="D3D11_BUFFER_UAV_FLAG">
    <summary>
      <para>Identifies unordered-access view options for a buffer resource.</para>
      <para>
        Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d11/ne-d3d11-d3d11_buffer_uav_flag" />
      </para>
    </summary>
  </member>
  <member name="D3D11_BUFFER_UAV_FLAG::D3D11_BUFFER_UAV_FLAG_RAW">
    <summary>
      Resource contains raw, unstructured data.  Requires the UAV format to be DXGI_FORMAT_R32_TYPELESS.
      For more info about raw viewing of buffers, see <a href="https://docs.microsoft.com/windows/desktop/direct3d11/overviews-direct3d-11-resources-intro">Raw Views of Buffers</a>.
    </summary>
  </member>
  <member name="D3D11_BUFFER_UAV_FLAG::D3D11_BUFFER_UAV_FLAG_APPEND">
    <summary>
      Allow data to be appended to the end of the buffer.  <b>D3D11_BUFFER_UAV_FLAG_APPEND</b> flag must also be used for
      any view that will be used as a <a href="https://docs.microsoft.com/windows/desktop/direct3dhlsl/sm5-object-appendstructuredbuffer">AppendStructuredBuffer</a> or a <a href="https://docs.microsoft.com/windows/desktop/direct3dhlsl/sm5-object-consumestructuredbuffer">ConsumeStructuredBuffer</a>.
      Requires the UAV format to be DXGI_FORMAT_UNKNOWN.
    </summary>
  </member>
  <member name="D3D11_BUFFER_UAV_FLAG::D3D11_BUFFER_UAV_FLAG_COUNTER">
    <summary>
      Adds a counter to the unordered-access-view buffer.  <b>D3D11_BUFFER_UAV_FLAG_COUNTER</b> can only be used on a UAV that is a
      <a href="https://docs.microsoft.com/windows/desktop/direct3dhlsl/sm5-object-rwstructuredbuffer">RWStructuredBuffer</a> and it enables the functionality needed for the <a href="https://docs.microsoft.com/windows/desktop/direct3dhlsl/sm5-object-rwstructuredbuffer-incrementcounter">IncrementCounter</a>and <a href="https://docs.microsoft.com/windows/desktop/direct3dhlsl/sm5-object-rwstructuredbuffer-decrementcounter">DecrementCounter</a> methods in HLSL.  Requires the UAV format to be DXGI_FORMAT_UNKNOWN.
    </summary>
  </member>
  <member name="ID3D11DeviceContext::UpdateSubresource">
    <summary>
      <para>The CPU copies data from memory to a subresource created in non-mappable memory.</para>
      <para>
        Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d11/nf-d3d11-id3d11devicecontext-updatesubresource" />
      </para>
      <param name="pDstResource">
        A pointer to the destination resource (see <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nn-d3d11-id3d11resource">ID3D11Resource</a>).
      </param>
      <param name="DstSubresource">
        A zero-based index, that identifies the destination subresource. See <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nf-d3d11-d3d11calcsubresource">D3D11CalcSubresource</a> for more details.
      </param>
      <param name="pDstBox">
        A pointer to a box that defines the portion of the destination subresource to copy the resource data into. Coordinates are in bytes for buffers and in texels for textures. If <b>NULL</b>, the data is written to the destination subresource with no offset. The dimensions of the source must fit the destination (see <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ns-d3d11-d3d11_box">D3D11_BOX</a>).

        An empty box results in a no-op. A box is empty if the top value is greater than or equal to the bottom value, or the left value is greater than or equal to the right value, or the front value is greater than or equal to the back value. When the box is empty, <b>UpdateSubresource</b> doesn't perform an update operation.
      </param>
      <param name="pSrcData">A pointer to the source data in memory.</param>
      <param name="SrcRowPitch">The size of one row of the source data.</param>
      <param name="SrcDepthPitch">The size of one depth slice of source data.</param>
    </summary>
  </member>
  <member name="ID3D11VideoProcessorInputView::GetDesc">
    <summary>
      <para>Gets the properties of the video processor input view.</para>
      <para>
        Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d11/nf-d3d11-id3d11videoprocessorinputview-getdesc" />
      </para>
      <param name="pDesc">
        A pointer to a <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ns-d3d11-d3d11_video_processor_input_view_desc">D3D11_VIDEO_PROCESSOR_INPUT_VIEW_DESC</a> structure. The method fills the structure with the view properties.
      </param>
    </summary>
  </member>
  <member name="D3D11_FEATURE_DATA_THREADING">
    <summary>
      <para>Describes the multi-threading features that are supported by the current graphics driver.</para>
      <para>
        Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d11/ns-d3d11-d3d11_feature_data_threading" />
      </para>
    </summary>
  </member>
  <member name="D3D11_FEATURE_DATA_THREADING::DriverConcurrentCreates">
    <summary>
      <b>TRUE</b> means resources can be created concurrently on multiple threads while drawing; <b>FALSE</b> means that the presence of coarse synchronization will prevent concurrency.
    </summary>
  </member>
  <member name="D3D11_FEATURE_DATA_THREADING::DriverCommandLists">
    <summary>
      <b>TRUE</b> means command lists are supported by the current driver; <b>FALSE</b> means that the API will emulate deferred contexts and command lists with software.
    </summary>
  </member>
  <member name="D3D11_FORMAT_SUPPORT">
    <summary>
      <para>Which resources are supported for a given format and given device (see ID3D11Device::CheckFormatSupport and ID3D11Device::CheckFeatureSupport).</para>
      <para>
        Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d11/ne-d3d11-d3d11_format_support" />
      </para>
    </summary>
  </member>
  <member name="D3D11_FORMAT_SUPPORT::D3D11_FORMAT_SUPPORT_BUFFER">
    <summary>Buffer resources supported.</summary>
  </member>
  <member name="D3D11_FORMAT_SUPPORT::D3D11_FORMAT_SUPPORT_IA_VERTEX_BUFFER">
    <summary>Vertex buffers supported.</summary>
  </member>
  <member name="D3D11_FORMAT_SUPPORT::D3D11_FORMAT_SUPPORT_IA_INDEX_BUFFER">
    <summary>Index buffers supported.</summary>
  </member>
  <member name="D3D11_FORMAT_SUPPORT::D3D11_FORMAT_SUPPORT_SO_BUFFER">
    <summary>Streaming output buffers supported.</summary>
  </member>
  <member name="D3D11_FORMAT_SUPPORT::D3D11_FORMAT_SUPPORT_TEXTURE1D">
    <summary>1D texture resources supported.</summary>
  </member>
  <member name="D3D11_FORMAT_SUPPORT::D3D11_FORMAT_SUPPORT_TEXTURE2D">
    <summary>2D texture resources supported.</summary>
  </member>
  <member name="D3D11_FORMAT_SUPPORT::D3D11_FORMAT_SUPPORT_TEXTURE3D">
    <summary>3D texture resources supported.</summary>
  </member>
  <member name="D3D11_FORMAT_SUPPORT::D3D11_FORMAT_SUPPORT_TEXTURECUBE">
    <summary>Cube texture resources supported.</summary>
  </member>
  <member name="D3D11_FORMAT_SUPPORT::D3D11_FORMAT_SUPPORT_SHADER_LOAD">
    <summary>
      The HLSL <a href="https://docs.microsoft.com/windows/desktop/direct3dhlsl/dx-graphics-hlsl-to-load">Load</a> function for texture objects is supported.
    </summary>
  </member>
  <member name="D3D11_FORMAT_SUPPORT::D3D11_FORMAT_SUPPORT_SHADER_SAMPLE">
    <summary>
      The HLSL <a href="https://docs.microsoft.com/windows/desktop/direct3dhlsl/dx-graphics-hlsl-to-sample">Sample</a> function for texture objects is supported.

      <div class="alert">
        <b>Note</b>  If the device supports the format as a resource (1D, 2D, 3D, or cube map) but doesn't support this option, the resource can still use the <a href="https://docs.microsoft.com/windows/desktop/direct3dhlsl/dx-graphics-hlsl-to-sample">Sample</a> method but must use only the point filtering sampler state to perform the sample.
      </div>
      <div> </div>
    </summary>
  </member>
  <member name="D3D11_FORMAT_SUPPORT::D3D11_FORMAT_SUPPORT_SHADER_SAMPLE_COMPARISON">
    <summary>
      The HLSL <a href="https://docs.microsoft.com/windows/desktop/direct3dhlsl/dx-graphics-hlsl-to-samplecmp">SampleCmp</a> and <a href="https://docs.microsoft.com/windows/desktop/direct3dhlsl/dx-graphics-hlsl-to-samplecmplevelzero">SampleCmpLevelZero</a> functions for texture objects are supported.

      <div class="alert">
        <b>Note</b>  Windows 8 and later might provide limited support for these functions on Direct3D <a href="https://docs.microsoft.com/windows/desktop/direct3d11/overviews-direct3d-11-devices-downlevel-intro">feature levels</a> 9_1, 9_2, and 9_3. For more info, see <a href="https://docs.microsoft.com/previous-versions/windows/apps/jj262110(v=win.10)">Implementing shadow buffers for Direct3D feature level 9</a>.
      </div>
      <div> </div>
    </summary>
  </member>
  <member name="D3D11_FORMAT_SUPPORT::D3D11_FORMAT_SUPPORT_SHADER_SAMPLE_MONO_TEXT">
    <summary>Reserved.</summary>
  </member>
  <member name="D3D11_FORMAT_SUPPORT::D3D11_FORMAT_SUPPORT_MIP">
    <summary>Mipmaps are supported.</summary>
  </member>
  <member name="D3D11_FORMAT_SUPPORT::D3D11_FORMAT_SUPPORT_MIP_AUTOGEN">
    <summary>Automatic generation of mipmaps is supported.</summary>
  </member>
  <member name="D3D11_FORMAT_SUPPORT::D3D11_FORMAT_SUPPORT_RENDER_TARGET">
    <summary>Render targets are supported.</summary>
  </member>
  <member name="D3D11_FORMAT_SUPPORT::D3D11_FORMAT_SUPPORT_BLENDABLE">
    <summary>Blend operations supported.</summary>
  </member>
  <member name="D3D11_FORMAT_SUPPORT::D3D11_FORMAT_SUPPORT_DEPTH_STENCIL">
    <summary>Depth stencils supported.</summary>
  </member>
  <member name="D3D11_FORMAT_SUPPORT::D3D11_FORMAT_SUPPORT_CPU_LOCKABLE">
    <summary>CPU locking supported.</summary>
  </member>
  <member name="D3D11_FORMAT_SUPPORT::D3D11_FORMAT_SUPPORT_MULTISAMPLE_RESOLVE">
    <summary>
      Multisample antialiasing (MSAA) resolve operations are supported. For more info, see <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nf-d3d11-id3d11devicecontext-resolvesubresource">ID3D11DeviceContex::ResolveSubresource</a>.
    </summary>
  </member>
  <member name="D3D11_FORMAT_SUPPORT::D3D11_FORMAT_SUPPORT_DISPLAY">
    <summary>Format can be displayed on screen.</summary>
  </member>
  <member name="D3D11_FORMAT_SUPPORT::D3D11_FORMAT_SUPPORT_CAST_WITHIN_BIT_LAYOUT">
    <summary>Format cannot be cast to another format.</summary>
  </member>
  <member name="D3D11_FORMAT_SUPPORT::D3D11_FORMAT_SUPPORT_MULTISAMPLE_RENDERTARGET">
    <summary>Format can be used as a multisampled rendertarget.</summary>
  </member>
  <member name="D3D11_FORMAT_SUPPORT::D3D11_FORMAT_SUPPORT_MULTISAMPLE_LOAD">
    <summary>Format can be used as a multisampled texture and read into a shader with the HLSL load function.</summary>
  </member>
  <member name="D3D11_FORMAT_SUPPORT::D3D11_FORMAT_SUPPORT_SHADER_GATHER">
    <summary>Format can be used with the HLSL gather function. This value is available in DirectX 10.1 or higher.</summary>
  </member>
  <member name="D3D11_FORMAT_SUPPORT::D3D11_FORMAT_SUPPORT_BACK_BUFFER_CAST">
    <summary>Format supports casting when the resource is a back buffer.</summary>
  </member>
  <member name="D3D11_FORMAT_SUPPORT::D3D11_FORMAT_SUPPORT_TYPED_UNORDERED_ACCESS_VIEW">
    <summary>Format can be used for an unordered access view.</summary>
  </member>
  <member name="D3D11_FORMAT_SUPPORT::D3D11_FORMAT_SUPPORT_SHADER_GATHER_COMPARISON">
    <summary>Format can be used with the HLSL gather with comparison function.</summary>
  </member>
  <member name="D3D11_FORMAT_SUPPORT::D3D11_FORMAT_SUPPORT_DECODER_OUTPUT">
    <summary>
      Format can be used with the decoder output.

      <b>Direct3D 11:  </b>This value is not supported until Direct3D 11.1.
    </summary>
  </member>
  <member name="D3D11_FORMAT_SUPPORT::D3D11_FORMAT_SUPPORT_VIDEO_PROCESSOR_OUTPUT">
    <summary>
      Format can be used with the video processor output.

      <b>Direct3D 11:  </b>This value is not supported until Direct3D 11.1.
    </summary>
  </member>
  <member name="D3D11_FORMAT_SUPPORT::D3D11_FORMAT_SUPPORT_VIDEO_PROCESSOR_INPUT">
    <summary>
      Format can be used with the video processor input.

      <b>Direct3D 11:  </b>This value is not supported until Direct3D 11.1.
    </summary>
  </member>
  <member name="D3D11_FORMAT_SUPPORT::D3D11_FORMAT_SUPPORT_VIDEO_ENCODER">
    <summary>
      Format can be used with the video encoder.

      <b>Direct3D 11:  </b>This value is not supported until Direct3D 11.1.
    </summary>
  </member>
  <member name="D3D11_TILE_COPY_FLAG">
    <summary>
      <para>Identifies how to copy a tile.</para>
      <para>
        Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d11_2/ne-d3d11_2-d3d11_tile_copy_flag" />
      </para>
    </summary>
  </member>
  <member name="D3D11_TILE_COPY_FLAG::D3D11_TILE_COPY_NO_OVERWRITE">
    <summary>
      Indicates that the GPU isn't currently referencing any of the
      portions of destination memory being written.
    </summary>
  </member>
  <member name="D3D11_TILE_COPY_FLAG::D3D11_TILE_COPY_LINEAR_BUFFER_TO_SWIZZLED_TILED_RESOURCE">
    <summary>
      Indicates that the <a href="https://docs.microsoft.com/windows/desktop/api/d3d11_2/nf-d3d11_2-id3d11devicecontext2-copytiles">ID3D11DeviceContext2::CopyTiles</a> operation involves copying a linear buffer to a swizzled tiled resource. This means to copy tile data from the
      specified buffer location, reading tiles sequentially,
      to the specified tile region (in x,y,z order if the region is a box), swizzling to optimal hardware memory layout as needed.
      In this <b>ID3D11DeviceContext2::CopyTiles</b> call, you specify the source data with the  <i>pBuffer</i> parameter and the destination with the <i>pTiledResource</i> parameter.
    </summary>
  </member>
  <member name="D3D11_TILE_COPY_FLAG::D3D11_TILE_COPY_SWIZZLED_TILED_RESOURCE_TO_LINEAR_BUFFER">
    <summary>
      Indicates that the <a href="https://docs.microsoft.com/windows/desktop/api/d3d11_2/nf-d3d11_2-id3d11devicecontext2-copytiles">ID3D11DeviceContext2::CopyTiles</a> operation involves copying a swizzled tiled resource to a linear buffer. This means to copy tile data from the tile region, reading tiles sequentially (in x,y,z order if the region is a box),
      to the specified buffer location, deswizzling to linear memory layout as needed.
      In this <b>ID3D11DeviceContext2::CopyTiles</b> call, you specify the source data with the <i>pTiledResource</i> parameter and the destination with the  <i>pBuffer</i> parameter.
    </summary>
  </member>
  <member name="D3D11_PIXEL_SHADER_TRACE_DESC">
    <summary>
      <para>Describes an instance of a pixel shader to trace.</para>
      <para>
        Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d11shadertracing/ns-d3d11shadertracing-d3d11_pixel_shader_trace_desc" />
      </para>
    </summary>
  </member>
  <member name="D3D11_PIXEL_SHADER_TRACE_DESC::Invocation">
    <summary>The invocation number of the instance of the pixel shader.</summary>
  </member>
  <member name="D3D11_PIXEL_SHADER_TRACE_DESC::X">
    <summary>The x-coordinate of the pixel.</summary>
  </member>
  <member name="D3D11_PIXEL_SHADER_TRACE_DESC::Y">
    <summary>The y-coordinate of the pixel.</summary>
  </member>
  <member name="D3D11_PIXEL_SHADER_TRACE_DESC::SampleMask">
    <summary>
      A value that describes a mask of pixel samples to trace. If this value specifies any of the masked samples, the trace is activated.  The least significant bit (LSB) is sample 0.  The non-multisample antialiasing (MSAA) counts as a sample count of 1; therefore, the LSB of <b>SampleMask</b> should be set. If set to zero, the pixel is not traced. However, pixel traces can still be enabled on an invocation basis.
    </summary>
  </member>
  <member name="ID3D11DeviceContext2">
    <summary>
      <para>The device context interface represents a device context; it is used to render commands. ID3D11DeviceContext2 adds new methods to those in ID3D11DeviceContext1.</para>
      <para>
        Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d11_2/nn-d3d11_2-id3d11devicecontext2" />
      </para>
    </summary>
  </member>
  <member name="ID3D11Debug::GetFeatureMask">
    <summary>
      <para>Get a bitfield of flags that indicates which debug features are on or off.</para>
      <para>
        Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d11sdklayers/nf-d3d11sdklayers-id3d11debug-getfeaturemask" />
      </para>
    </summary>
  </member>
  <member name="ID3D11Fence">
    <summary>
      <para>Represents a fence, an object used for synchronization of the CPU and one or more GPUs.</para>
      <para>
        Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d11_3/nn-d3d11_3-id3d11fence" />
      </para>
    </summary>
  </member>
  <member name="ID3D11ShaderReflection::GetThreadGroupSize">
    <summary>
      <para>Retrieves the sizes, in units of threads, of the X, Y, and Z dimensions of the shader's thread-group grid.</para>
      <para>
        Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d11shader/nf-d3d11shader-id3d11shaderreflection-getthreadgroupsize" />
      </para>
      <param name="pSizeX">A pointer to the size, in threads, of the x-dimension of the thread-group grid. The maximum size is 1024.</param>
      <param name="pSizeY">A pointer to the size, in threads, of the y-dimension of the thread-group grid. The maximum size is 1024.</param>
      <param name="pSizeZ">A pointer to the size, in threads, of the z-dimension of the thread-group grid. The maximum size is 64.</param>
    </summary>
  </member>
  <member name="D3D11_DEPTH_STENCIL_DESC">
    <summary>
      <para>Describes depth-stencil state.</para>
      <para>
        Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d11/ns-d3d11-d3d11_depth_stencil_desc" />
      </para>
    </summary>
  </member>
  <member name="D3D11_DEPTH_STENCIL_DESC::DepthEnable">
    <summary>Enable depth testing.</summary>
  </member>
  <member name="D3D11_DEPTH_STENCIL_DESC::DepthWriteMask">
    <summary>
      Identify a portion of the depth-stencil buffer that can be modified by depth data (see <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ne-d3d11-d3d11_depth_write_mask">D3D11_DEPTH_WRITE_MASK</a>).
    </summary>
  </member>
  <member name="D3D11_DEPTH_STENCIL_DESC::DepthFunc">
    <summary>
      A function that compares depth data against existing depth data. The function options are listed in <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ne-d3d11-d3d11_comparison_func">D3D11_COMPARISON_FUNC</a>.
    </summary>
  </member>
  <member name="D3D11_DEPTH_STENCIL_DESC::StencilEnable">
    <summary>Enable stencil testing.</summary>
  </member>
  <member name="D3D11_DEPTH_STENCIL_DESC::StencilReadMask">
    <summary>Identify a portion of the depth-stencil buffer for reading stencil data.</summary>
  </member>
  <member name="D3D11_DEPTH_STENCIL_DESC::StencilWriteMask">
    <summary>Identify a portion of the depth-stencil buffer for writing stencil data.</summary>
  </member>
  <member name="D3D11_DEPTH_STENCIL_DESC::FrontFace">
    <summary>
      Identify how to use the results of the depth test and the stencil test for pixels whose surface normal is facing towards the camera (see <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ns-d3d11-d3d11_depth_stencilop_desc">D3D11_DEPTH_STENCILOP_DESC</a>).
    </summary>
  </member>
  <member name="D3D11_DEPTH_STENCIL_DESC::BackFace">
    <summary>
      Identify how to use the results of the depth test and the stencil test for pixels whose surface normal is facing away from the camera (see <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ns-d3d11-d3d11_depth_stencilop_desc">D3D11_DEPTH_STENCILOP_DESC</a>).
    </summary>
  </member>
  <member name="ID3D11Device::CreateBlendState">
    <summary>
      <para>Create a blend-state object that encapsules blend state for the output-merger stage.</para>
      <para>
        Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d11/nf-d3d11-id3d11device-createblendstate" />
      </para>
      <param name="pBlendStateDesc">
        Pointer to a blend-state description (see <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ns-d3d11-d3d11_blend_desc">D3D11_BLEND_DESC</a>).
      </param>
      <param name="ppBlendState">
        Address of a pointer to the blend-state object created (see <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nn-d3d11-id3d11blendstate">ID3D11BlendState</a>).
      </param>
    </summary>
  </member>
  <member name="ID3D11Device1::GetImmediateContext1">
    <summary>
      <para>Gets an immediate context, which can play back command lists.</para>
      <para>
        Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d11_1/nf-d3d11_1-id3d11device1-getimmediatecontext1" />
      </para>
      <param name="ppImmediateContext">
        Upon completion of the method, the passed pointer to an <a href="https://docs.microsoft.com/windows/desktop/api/d3d11_1/nn-d3d11_1-id3d11devicecontext1">ID3D11DeviceContext1</a> interface pointer is initialized.
      </param>
    </summary>
  </member>
  <member name="D3D11_FEATURE_DATA_VIDEO_DECODER_HISTOGRAM">
    <summary>
      <para>Provides data for calls to ID3D11VideoDevice2::CheckFeatureSupport when the feature specified is D3D11_FEATURE_VIDEO_DECODER_HISTOGRAM.</para>
      <para>
        Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d11_4/ns-d3d11_4-d3d11_feature_data_video_decoder_histogram" />
      </para>
    </summary>
  </member>
  <member name="D3D11_FEATURE_DATA_VIDEO_DECODER_HISTOGRAM::DecoderDesc">
    <summary>
      A <a href="https://docs.microsoft.com../d3d11/ns-d3d11-d3d11_video_decoder_desc.md">D3D11_VIDEO_DECODER_DESC</a> structure containing the decoder description for the decoder to be used with decode histogram.
    </summary>
  </member>
  <member name="D3D11_FEATURE_DATA_VIDEO_DECODER_HISTOGRAM::Components">
    <summary>
      A bitwise OR combination of values from the <a href="https://docs.microsoft.comne-d3d11_4-d3d11_video_decoder_histogram_component_flags.md">D3D11_VIDEO_DECODER_HISTOGRAM_COMPONENT_FLAGS</a> enumeration specifying the components of a DXGI_FORMAT for which histogram support will be queried.
    </summary>
  </member>
  <member name="D3D11_FEATURE_DATA_VIDEO_DECODER_HISTOGRAM::BinCount">
    <summary>The number of per component bins supported. This value must be greater than or equal to 64 and must be a power of 2 (e.g. 64, 128, 256, 512...).</summary>
  </member>
  <member name="D3D11_FEATURE_DATA_VIDEO_DECODER_HISTOGRAM::CounterBitDepth">
    <summary>
      The bit depth of the bin counter.  The counter is always stored in a 32-bit value and therefore this value must specify 32 bits or less. The counter is stored in the lower bits of the 32-bit storage.  The upper bits are set to zero.  If the bin count exceeds this bit depth, the value is set to the maximum counter value. Valid values for <i>CounterBitDepth</i> are 16, 24, and 32.
    </summary>
  </member>
  <member name="ID3D11DeviceContext::PSSetShaderResources">
    <summary>
      <para>Bind an array of shader resources to the pixel shader stage.</para>
      <para>
        Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d11/nf-d3d11-id3d11devicecontext-pssetshaderresources" />
      </para>
      <param name="StartSlot">Index into the device's zero-based array to begin setting shader resources to (ranges from 0 to D3D11_COMMONSHADER_INPUT_RESOURCE_SLOT_COUNT - 1).</param>
      <param name="NumViews">Number of shader resources to set. Up to a maximum of 128 slots are available for shader resources (ranges from 0 to D3D11_COMMONSHADER_INPUT_RESOURCE_SLOT_COUNT - StartSlot).</param>
      <param name="ppShaderResourceViews">
        Array of <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nn-d3d11-id3d11shaderresourceview">shader resource view</a> interfaces to set to the device.
      </param>
    </summary>
  </member>
  <member name="D3D11On12CreateDevice">
    <summary>
      <para>Creates a device that uses Direct3D 11 functionality in Direct3D 12, specifying a pre-existing Direct3D 12 device to use for Direct3D 11 interop.</para>
      <para>
        Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d11on12/nf-d3d11on12-d3d11on12createdevice" />
      </para>
      <param name="pDevice">Specifies a pre-existing Direct3D 12 device to use for Direct3D 11 interop. May not be NULL.</param>
      <param name="Flags">
        One or more bitwise OR'd flags from <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ne-d3d11-d3d11_create_device_flag">D3D11_CREATE_DEVICE_FLAG</a>. These are the same flags as those used by <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nf-d3d11-d3d11createdeviceandswapchain">D3D11CreateDeviceAndSwapChain</a>. Specifies which runtime <a href="https://docs.microsoft.com/windows/desktop/direct3d11/overviews-direct3d-11-devices-layers">layers</a> to enable. <i>Flags</i> must be compatible with device flags, and its <i>NodeMask</i> must be a subset of the <i>NodeMask</i> provided to the present API.
      </param>
      <param name="pFeatureLevels">
        An array of any of the following:

        <ul>
          <li>D3D_FEATURE_LEVEL_12_1</li>
          <li>D3D_FEATURE_LEVEL_12_0</li>
          <li>D3D_FEATURE_LEVEL_11_1</li>
          <li>D3D_FEATURE_LEVEL_11_0</li>
          <li>D3D_FEATURE_LEVEL_10_1</li>
          <li>D3D_FEATURE_LEVEL_10_0</li>
          <li>D3D_FEATURE_LEVEL_9_3</li>
          <li>D3D_FEATURE_LEVEL_9_2</li>
          <li>D3D_FEATURE_LEVEL_9_1</li>
        </ul>

        The first feature level that is less than or equal to the Direct3D 12 device's feature level will be used to perform Direct3D 11 validation. Creation will fail if no acceptable feature levels are provided. Providing NULL will default to the Direct3D 12 device's feature level.
      </param>
      <param name="FeatureLevels">
        The size of (that is, the number of elements in) the <i>pFeatureLevels</i> array.
      </param>
      <param name="ppCommandQueues">An array of unique queues for D3D11On12 to use. The queues must be of the 3D command queue type.</param>
      <param name="NumQueues">
        The size of (that is, the number of elements in) the <i>ppCommandQueues</i> array.
      </param>
      <param name="NodeMask">Which node of the Direct3D 12 device to use. Only 1 bit may be set.</param>
      <param name="ppDevice">
        Pointer to the returned <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nn-d3d11-id3d11device">ID3D11Device</a>. May be NULL.
      </param>
      <param name="ppImmediateContext">
        A pointer to the returned <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nn-d3d11-id3d11devicecontext">ID3D11DeviceContext</a>. May be NULL.
      </param>
      <param name="pChosenFeatureLevel">A pointer to the returned feature level. May be NULL.</param>
    </summary>
  </member>
  <member name="ID3D11InfoQueue::PushEmptyStorageFilter">
    <summary>
      <para>Push an empty storage filter onto the storage-filter stack.</para>
      <para>
        Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d11sdklayers/nf-d3d11sdklayers-id3d11infoqueue-pushemptystoragefilter" />
      </para>
    </summary>
  </member>
  <member name="D3D11_AUTHENTICATED_QUERY_DEVICE_HANDLE_OUTPUT">
    <summary>
      <para>Contains the response to a D3D11_AUTHENTICATED_QUERY_DEVICE_HANDLE query.</para>
      <para>
        Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d11/ns-d3d11-d3d11_authenticated_query_device_handle_output" />
      </para>
    </summary>
  </member>
  <member name="D3D11_AUTHENTICATED_QUERY_DEVICE_HANDLE_OUTPUT::Output">
    <summary>
      A <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ns-d3d11-d3d11_authenticated_query_output">D3D11_AUTHENTICATED_QUERY_OUTPUT</a> structure that contains a Message Authentication Code (MAC) and other data.
    </summary>
  </member>
  <member name="D3D11_AUTHENTICATED_QUERY_DEVICE_HANDLE_OUTPUT::DeviceHandle">
    <summary>A handle to the device.</summary>
  </member>
  <member name="ID3D11ShaderTrace::GetReadRegister">
    <summary>
      <para>Retrieves information about a register that was read by a step in the trace.</para>
      <para>
        Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d11shadertracing/nf-d3d11shadertracing-id3d11shadertrace-getreadregister" />
      </para>
      <param name="stepIndex">
        The index of the step within the trace. The range of the index is [0...NumTraceSteps-1], where <b>NumTraceSteps</b> is a member of the  <a href="https://docs.microsoft.com/windows/desktop/api/d3d11shadertracing/ns-d3d11shadertracing-d3d11_trace_stats">D3D11_TRACE_STATS</a> structure. You can retrieve information in any step order.
      </param>
      <param name="readRegisterIndex">
        The index of the register within  the trace step. The range of the index is [0...NumRegistersRead-1], where <b>NumRegistersRead</b> is a member of the  <a href="https://docs.microsoft.com/windows/desktop/api/d3d11shadertracing/ns-d3d11shadertracing-d3d11_trace_step">D3D11_TRACE_STEP</a> structure.
      </param>
      <param name="pRegister">
        A pointer to a <a href="https://docs.microsoft.com/windows/desktop/api/d3d11shadertracing/ns-d3d11shadertracing-d3d11_trace_register">D3D11_TRACE_REGISTER</a> structure. <b>GetReadRegister</b> fills the members of this structure with information about the register that was read by the step in the trace.
      </param>
      <param name="pValue">
        A pointer to a  <a href="https://docs.microsoft.com/windows/desktop/api/d3d11shadertracing/ns-d3d11shadertracing-d3d11_trace_value">D3D11_TRACE_VALUE</a> structure. <b>GetReadRegister</b> fills the members of this structure with information about the value that was read from the register.
      </param>
    </summary>
  </member>
  <member name="ID3D11Texture2D1">
    <summary>
      <para>A 2D texture interface represents texel data, which is structured memory.</para>
      <para>
        Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d11_3/nn-d3d11_3-id3d11texture2d1" />
      </para>
    </summary>
  </member>
  <member name="ID3D11Debug::GetSwapChain">
    <summary>
      <para>Get the swap chain that the runtime will use for automatically calling IDXGISwapChain::Present.</para>
      <para>
        Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d11sdklayers/nf-d3d11sdklayers-id3d11debug-getswapchain" />
      </para>
      <param name="ppSwapChain">
        Swap chain that the runtime will use for automatically calling <a href="https://docs.microsoft.com/windows/desktop/api/dxgi/nf-dxgi-idxgiswapchain-present">IDXGISwapChain::Present</a>.
      </param>
    </summary>
  </member>
  <member name="ID3D11DeviceContext::ClearRenderTargetView">
    <summary>
      <para>Set all the elements in a render target to one value.</para>
      <para>
        Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d11/nf-d3d11-id3d11devicecontext-clearrendertargetview" />
      </para>
      <param name="pRenderTargetView">Pointer to the render target.</param>
      <param name="ColorRGBA">A 4-component array that represents the color to fill the render target with.</param>
    </summary>
  </member>
  <member name="ID3D11DeviceContext::DSGetShader">
    <summary>
      <para>Get the domain shader currently set on the device.</para>
      <para>
        Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d11/nf-d3d11-id3d11devicecontext-dsgetshader" />
      </para>
      <param name="ppDomainShader">
        Address of a pointer to a domain shader (see <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nn-d3d11-id3d11domainshader">ID3D11DomainShader</a>) to be returned by the method.
      </param>
      <param name="ppClassInstances">
        Pointer to an array of class instance interfaces (see <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nn-d3d11-id3d11classinstance">ID3D11ClassInstance</a>).
      </param>
      <param name="pNumClassInstances">The number of class-instance elements in the array.</param>
    </summary>
  </member>
  <member name="ID3D11DeviceContext::CSGetSamplers">
    <summary>
      <para>Get an array of sampler state interfaces from the compute-shader stage.</para>
      <para>
        Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d11/nf-d3d11-id3d11devicecontext-csgetsamplers" />
      </para>
      <param name="StartSlot">Index into a zero-based array to begin getting samplers from (ranges from 0 to D3D11_COMMONSHADER_SAMPLER_SLOT_COUNT - 1).</param>
      <param name="NumSamplers">Number of samplers to get from a device context. Each pipeline stage has a total of 16 sampler slots available (ranges from 0 to D3D11_COMMONSHADER_SAMPLER_SLOT_COUNT - StartSlot).</param>
      <param name="ppSamplers">
        Pointer to an array of sampler-state interfaces (see <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nn-d3d11-id3d11samplerstate">ID3D11SamplerState</a>).
      </param>
    </summary>
  </member>
  <member name="ID3D11Device::CreateRasterizerState">
    <summary>
      <para>Create a rasterizer state object that tells the rasterizer stage how to behave.</para>
      <para>
        Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d11/nf-d3d11-id3d11device-createrasterizerstate" />
      </para>
      <param name="pRasterizerDesc">
        Pointer to a rasterizer state description (see <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ns-d3d11-d3d11_rasterizer_desc">D3D11_RASTERIZER_DESC</a>).
      </param>
      <param name="ppRasterizerState">
        Address of a pointer to the rasterizer state object created (see <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nn-d3d11-id3d11rasterizerstate">ID3D11RasterizerState</a>).
      </param>
    </summary>
  </member>
  <member name="ID3D11DeviceContext4::Signal">
    <summary>
      <para>Updates a fence to a specified value after all previous work has completed.</para>
      <para>
        Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d11_3/nf-d3d11_3-id3d11devicecontext4-signal" />
      </para>
      <param name="pFence">
        A pointer to the <a href="https://docs.microsoft.com/windows/win32/api/d3d11_3/nn-d3d11_3-id3d11fence">ID3D11Fence</a> object.
      </param>
      <param name="Value">The value to set the fence to.</param>
    </summary>
  </member>
  <member name="ID3D11ShaderTrace::ResetTrace">
    <summary>
      <para>Resets the shader-trace object.</para>
      <para>
        Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d11shadertracing/nf-d3d11shadertracing-id3d11shadertrace-resettrace" />
      </para>
    </summary>
  </member>
  <member name="ID3D11DeviceContext::HSGetShaderResources">
    <summary>
      <para>Get the hull-shader resources.</para>
      <para>
        Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d11/nf-d3d11-id3d11devicecontext-hsgetshaderresources" />
      </para>
      <param name="StartSlot">Index into the device's zero-based array to begin getting shader resources from (ranges from 0 to D3D11_COMMONSHADER_INPUT_RESOURCE_SLOT_COUNT - 1).</param>
      <param name="NumViews">The number of resources to get from the device. Up to a maximum of 128 slots are available for shader resources (ranges from 0 to D3D11_COMMONSHADER_INPUT_RESOURCE_SLOT_COUNT - StartSlot).</param>
      <param name="ppShaderResourceViews">
        Array of <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nn-d3d11-id3d11shaderresourceview">shader resource view</a> interfaces to be returned by the device.
      </param>
    </summary>
  </member>
  <member name="ID3D11DeviceContext::DSSetConstantBuffers">
    <summary>
      <para>Sets the constant buffers used by the domain-shader stage.</para>
      <para>
        Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d11/nf-d3d11-id3d11devicecontext-dssetconstantbuffers" />
      </para>
      <param name="StartSlot">
        Index into the zero-based array to begin setting constant buffers to (ranges from 0 to <b>D3D11_COMMONSHADER_CONSTANT_BUFFER_API_SLOT_COUNT</b> - 1).
      </param>
      <param name="NumBuffers">
        Number of buffers to set (ranges from 0 to <b>D3D11_COMMONSHADER_CONSTANT_BUFFER_API_SLOT_COUNT</b> - <i>StartSlot</i>).
      </param>
      <param name="ppConstantBuffers">
        Array of constant buffers (see <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nn-d3d11-id3d11buffer">ID3D11Buffer</a>) being given to the device.
      </param>
    </summary>
  </member>
  <member name="ID3D11VideoContext::VideoProcessorGetStreamDestRect">
    <summary>
      <para>Gets the destination rectangle for an input stream on the video processor.</para>
      <para>
        Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d11/nf-d3d11-id3d11videocontext-videoprocessorgetstreamdestrect" />
      </para>
      <param name="pVideoProcessor">
        A pointer to the <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nn-d3d11-id3d11videoprocessor">ID3D11VideoProcessor</a> interface. To get this pointer, call <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nf-d3d11-id3d11videodevice-createvideoprocessor">ID3D11VideoDevice::CreateVideoProcessor</a>.
      </param>
      <param name="StreamIndex">
        The zero-based index of the input stream. To get the maximum number of streams, call <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nf-d3d11-id3d11videoprocessorenumerator-getvideoprocessorcaps">ID3D11VideoProcessorEnumerator::GetVideoProcessorCaps</a> and check the <b>MaxStreamStates</b> structure member.
      </param>
      <param name="pEnabled">
        Receives the value <b>TRUE</b> if the destination rectangle is enabled, or <b>FALSE</b> otherwise.
      </param>
      <param name="pRect">
        A pointer to a <a href="https://docs.microsoft.com/previous-versions/dd162897(v=vs.85)">RECT</a> structure that receives the destination rectangle.
      </param>
    </summary>
  </member>
  <member name="ID3D11ShaderResourceView1::GetDesc1">
    <summary>
      <para>Gets the shader-resource view's description.</para>
      <para>
        Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d11_3/nf-d3d11_3-id3d11shaderresourceview1-getdesc1" />
      </para>
      <param name="pDesc1">
        A pointer to a <a href="https://docs.microsoft.com/windows/desktop/api/d3d11_3/ns-d3d11_3-cd3d11_shader_resource_view_desc1">D3D11_SHADER_RESOURCE_VIEW_DESC1</a> structure that receives the description of the shader-resource view.
      </param>
    </summary>
  </member>
  <member name="D3D11_FEATURE_DATA_FORMAT_SUPPORT2">
    <summary>
      <para>Describes which unordered resource options are supported by the current graphics driver for a given format.</para>
      <para>
        Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d11/ns-d3d11-d3d11_feature_data_format_support2" />
      </para>
    </summary>
  </member>
  <member name="D3D11_FEATURE_DATA_FORMAT_SUPPORT2::InFormat">
    <summary>
      <a href="https://docs.microsoft.com/windows/desktop/api/dxgiformat/ne-dxgiformat-dxgi_format">DXGI_FORMAT</a> to return information on.
    </summary>
  </member>
  <member name="D3D11_FEATURE_DATA_FORMAT_SUPPORT2::OutFormatSupport2">
    <summary>
      Combination of <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ne-d3d11-d3d11_format_support2">D3D11_FORMAT_SUPPORT2</a> flags indicating which unordered resource options are supported.
    </summary>
  </member>
  <member name="ID3D11VideoProcessorEnumerator::GetVideoProcessorFilterRange">
    <summary>
      <para>Gets the range of values for an image filter.</para>
      <para>
        Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d11/nf-d3d11-id3d11videoprocessorenumerator-getvideoprocessorfilterrange" />
      </para>
      <param name="Filter">
        The type of image filter, specified as a <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ne-d3d11-d3d11_video_processor_filter">D3D11_VIDEO_PROCESSOR_FILTER</a> value.
      </param>
      <param name="pRange">
        A pointer to a <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ns-d3d11-d3d11_video_processor_filter_range">D3D11_VIDEO_PROCESSOR_FILTER_RANGE</a> structure. The method fills the structure with the range of values for the specified filter.
      </param>
    </summary>
  </member>
  <member name="ID3D11VideoContext::NegotiateAuthenticatedChannelKeyExchange">
    <summary>
      <para>Establishes a session key for an authenticated channel.</para>
      <para>
        Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d11/nf-d3d11-id3d11videocontext-negotiateauthenticatedchannelkeyexchange" />
      </para>
      <param name="pChannel">
        A pointer to the <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nn-d3d11-id3d11authenticatedchannel">ID3D11AuthenticatedChannel</a> interface.  This method will fail if the channel type is    <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ne-d3d11-d3d11_authenticated_channel_type">D3D11_AUTHENTICATED_CHANNEL_D3D11</a>, because the Direct3D11 channel does not support authentication.
      </param>
      <param name="DataSize">
        The size of the data in the <i>pData</i> array, in bytes.
      </param>
      <param name="pData">A pointer to a byte array that contains the encrypted session key. The buffer must contain 256 bytes of data, encrypted using RSA Encryption Scheme - Optimal Asymmetric Encryption Padding (RSAES-OAEP).</param>
    </summary>
  </member>
  <member name="D3D11_AUTHENTICATED_QUERY_RESTRICTED_SHARED_RESOURCE_PROCESS_COUNT_OUTPUT">
    <summary>
      <para>Contains the response to a D3D11_AUTHENTICATED_QUERY_RESTRICTED_SHARED_RESOURCE_PROCESS_COUNT query.</para>
      <para>
        Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d11/ns-d3d11-d3d11_authenticated_query_restricted_shared_resource_process_count_output" />
      </para>
    </summary>
  </member>
  <member name="D3D11_AUTHENTICATED_QUERY_RESTRICTED_SHARED_RESOURCE_PROCESS_COUNT_OUTPUT::Output">
    <summary>
      A <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ns-d3d11-d3d11_authenticated_query_output">D3D11_AUTHENTICATED_QUERY_OUTPUT</a> structure that contains a Message Authentication Code (MAC) and other data.
    </summary>
  </member>
  <member name="D3D11_AUTHENTICATED_QUERY_RESTRICTED_SHARED_RESOURCE_PROCESS_COUNT_OUTPUT::RestrictedSharedResourceProcessCount">
    <summary>The number of processes that are allowed to open shared resources that have restricted access. A process cannot open such a resource unless the process has been granted access.</summary>
  </member>
  <member name="ID3D11BlendState::GetDesc">
    <summary>
      <para>Gets the description for blending state that you used to create the blend-state object.</para>
      <para>
        Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d11/nf-d3d11-id3d11blendstate-getdesc" />
      </para>
      <param name="pDesc">
        A pointer to a <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ns-d3d11-d3d11_blend_desc">D3D11_BLEND_DESC</a> structure that receives a description of the blend state.
      </param>
    </summary>
  </member>
  <member name="ID3D11DeviceContext::ClearState">
    <summary>
      <para>Restore all default settings.</para>
      <para>
        Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d11/nf-d3d11-id3d11devicecontext-clearstate" />
      </para>
    </summary>
  </member>
  <member name="ID3D11ShaderResourceView1">
    <summary>
      <para>A shader-resource-view interface represents the subresources a shader can access during rendering. Examples of shader resources include a constant buffer, a texture buffer, and a texture.</para>
      <para>
        Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d11_3/nn-d3d11_3-id3d11shaderresourceview1" />
      </para>
    </summary>
  </member>
  <member name="ID3D11DeviceContext1::GSGetConstantBuffers1">
    <summary>
      <para>Gets the constant buffers that the geometry shader pipeline stage uses.</para>
      <para>
        Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d11_1/nf-d3d11_1-id3d11devicecontext1-gsgetconstantbuffers1" />
      </para>
      <param name="StartSlot">Index into the device's zero-based array to begin retrieving constant buffers from (ranges from 0 to D3D11_COMMONSHADER_CONSTANT_BUFFER_API_SLOT_COUNT - 1).</param>
      <param name="NumBuffers">
        Number of buffers to retrieve (ranges from 0 to D3D11_COMMONSHADER_CONSTANT_BUFFER_API_SLOT_COUNT - <i>StartSlot</i>).
      </param>
      <param name="ppConstantBuffers">Array of constant buffer interface pointers to be returned by the method.</param>
      <param name="pFirstConstant">
        A pointer to an array that receives the offsets into the buffers that  <i>ppConstantBuffers</i> specifies. Each offset specifies where, from the shader's point of view, each constant buffer starts.  Each offset is measured in shader constants, which are 16 bytes (4*32-bit components).  Therefore, an offset of 2 indicates that the start of the associated constant buffer is 32 bytes into the constant buffer. The runtime sets <i>pFirstConstant</i> to <b>NULL</b> if the buffers do not have offsets.
      </param>
      <param name="pNumConstants">
        A pointer to an array that receives the numbers of constants in the buffers that  <i>ppConstantBuffers</i> specifies. Each number specifies the number of constants that are contained in the constant buffer that the shader uses. Each number of constants starts from its respective offset that is specified in the <i>pFirstConstant</i> array. The runtime sets <i>pNumConstants</i> to <b>NULL</b> if it doesn't specify the numbers of constants in each buffer.
      </param>
    </summary>
  </member>
  <member name="ID3D11DeviceContext1::CSSetConstantBuffers1">
    <summary>
      <para>Sets the constant buffers that the compute-shader stage uses.</para>
      <para>
        Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d11_1/nf-d3d11_1-id3d11devicecontext1-cssetconstantbuffers1" />
      </para>
      <param name="StartSlot">Index into the zero-based array to begin setting constant buffers to (ranges from 0 to D3D11_COMMONSHADER_CONSTANT_BUFFER_API_SLOT_COUNT - 1).</param>
      <param name="NumBuffers">
        Number of buffers to set (ranges from 0 to D3D11_COMMONSHADER_CONSTANT_BUFFER_API_SLOT_COUNT - <i>StartSlot</i>).
      </param>
      <param name="ppConstantBuffers">
        Array of constant buffers (see <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nn-d3d11-id3d11buffer">ID3D11Buffer</a>) being given to the device.
      </param>
      <param name="pFirstConstant">
        An array that holds the offsets into the buffers that  <i>ppConstantBuffers</i> specifies. Each offset specifies where, from the shader's point of view, each constant buffer starts.  Each offset is measured in shader constants, which are 16 bytes (4*32-bit components).  Therefore, an offset of 16 indicates that the start of the associated constant buffer is 256 bytes into the constant buffer. Each offset must be a multiple of 16 constants.
      </param>
      <param name="pNumConstants">
        An array that holds the numbers of constants in the buffers that  <i>ppConstantBuffers</i> specifies. Each number specifies the number of constants that are contained in the constant buffer that the shader uses. Each number of constants starts from its respective offset that is specified in the <i>pFirstConstant</i> array. Each number of constants must be a multiple of 16 constants, in the range [0..4096].
      </param>
    </summary>
  </member>
  <member name="ID3D11ModuleInstance::BindResource">
    <summary>
      <para>Rebinds a texture or buffer from source slot to destination slot.</para>
      <para>
        Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d11shader/nf-d3d11shader-id3d11moduleinstance-bindresource" />
      </para>
      <param name="uSrcSlot">The first source slot number for rebinding.</param>
      <param name="uDstSlot">The first destination slot number for rebinding.</param>
      <param name="uCount">The number of slots for rebinding.</param>
    </summary>
  </member>
  <member name="ID3D11ShaderReflection::IsSampleFrequencyShader">
    <summary>
      <para>Indicates whether a shader is a sample frequency shader.</para>
      <para>
        Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d11shader/nf-d3d11shader-id3d11shaderreflection-issamplefrequencyshader" />
      </para>
    </summary>
  </member>
  <member name="ID3D11FunctionReflection::GetConstantBufferByIndex">
    <summary>
      <para>Gets a constant buffer by index for a function.</para>
      <para>
        Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d11shader/nf-d3d11shader-id3d11functionreflection-getconstantbufferbyindex" />
      </para>
      <param name="BufferIndex">Zero-based index.</param>
    </summary>
  </member>
  <member name="ID3D11VideoContext::VideoProcessorGetStreamFilter">
    <summary>
      <para>Gets the image filter settings for an input stream on the video processor.</para>
      <para>
        Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d11/nf-d3d11-id3d11videocontext-videoprocessorgetstreamfilter" />
      </para>
      <param name="pVideoProcessor">
        A pointer to the <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nn-d3d11-id3d11videoprocessor">ID3D11VideoProcessor</a> interface. To get this pointer, call <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nf-d3d11-id3d11videodevice-createvideoprocessor">ID3D11VideoDevice::CreateVideoProcessor</a>.
      </param>
      <param name="StreamIndex">
        The zero-based index of the input stream. To get the maximum number of streams, call <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nf-d3d11-id3d11videoprocessorenumerator-getvideoprocessorcaps">ID3D11VideoProcessorEnumerator::GetVideoProcessorCaps</a> and check the <b>MaxStreamStates</b> structure member.
      </param>
      <param name="Filter">
        The filter to query, specified as a <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ne-d3d11-d3d11_video_processor_filter">D3D11_VIDEO_PROCESSOR_FILTER</a> value.
      </param>
      <param name="pEnabled">
        Receives the value <b>TRUE</b> if the image filter is enabled, or <b>FALSE</b> otherwise.
      </param>
      <param name="pLevel">Receives the filter level.</param>
    </summary>
  </member>
  <member name="ID3D11VideoDecoderOutputView::GetDesc">
    <summary>
      <para>Gets the properties of the video decoder output view.</para>
      <para>
        Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d11/nf-d3d11-id3d11videodecoderoutputview-getdesc" />
      </para>
      <param name="pDesc">
        A pointer to a <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ns-d3d11-d3d11_video_decoder_output_view_desc">D3D11_VIDEO_DECODER_OUTPUT_VIEW_DESC</a> structure. The method fills the structure with the view properties.
      </param>
    </summary>
  </member>
  <member name="ID3D11Device::CreateCounter">
    <summary>
      <para>Create a counter object for measuring GPU performance.</para>
      <para>
        Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d11/nf-d3d11-id3d11device-createcounter" />
      </para>
      <param name="pCounterDesc">
        Pointer to a counter description (see <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ns-d3d11-d3d11_counter_desc">D3D11_COUNTER_DESC</a>).
      </param>
      <param name="ppCounter">
        Address of a pointer to a counter (see <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nn-d3d11-id3d11counter">ID3D11Counter</a>).
      </param>
    </summary>
  </member>
  <member name="ID3D11Debug::ValidateContext">
    <summary>
      <para>Check to see if the draw pipeline state is valid.</para>
      <para>
        Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d11sdklayers/nf-d3d11sdklayers-id3d11debug-validatecontext" />
      </para>
      <param name="pContext">
        A pointer to the <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nn-d3d11-id3d11devicecontext">ID3D11DeviceContext</a>, that represents a device context.
      </param>
    </summary>
  </member>
  <member name="ID3D11VideoDevice1::GetVideoDecoderCaps">
    <summary>
      <para>Retrieves capabilities and limitations of the video decoder.</para>
      <para>
        Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d11_1/nf-d3d11_1-id3d11videodevice1-getvideodecodercaps" />
      </para>
      <param name="pDecoderProfile">The decode profile for which the capabilities are queried.</param>
      <param name="SampleWidth">The video width for which the capabilities are queried.</param>
      <param name="SampleHeight">The video height for which the capabilities are queried.</param>
      <param name="pFrameRate">The frame rate of the video content. This information is used by the driver to determine whether the video can be decoded in real-time.</param>
      <param name="BitRate">The bit rate of the video stream. A value of zero indicates that the bit rate can be ignored.</param>
      <param name="pCryptoType">The type of cryptography used to encrypt the video stream. A value of NULL indicates that the video stream is not encrypted.</param>
      <param name="pDecoderCaps">
        A pointer to a bitwise OR combination of <a href="https://docs.microsoft.com/windows/desktop/api/d3d11_1/ne-d3d11_1-d3d11_video_decoder_caps">D3D11_VIDEO_DECODER_CAPS</a> values specifying the decoder capabilities.
      </param>
    </summary>
  </member>
  <member name="ID3D11VideoProcessor::GetRateConversionCaps">
    <summary>
      <para>Gets the rate conversion capabilities of the video processor.</para>
      <para>
        Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d11/nf-d3d11-id3d11videoprocessor-getrateconversioncaps" />
      </para>
      <param name="pCaps">
        A pointer to a <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ns-d3d11-d3d11_video_processor_rate_conversion_caps">D3D11_VIDEO_PROCESSOR_RATE_CONVERSION_CAPS</a> structure that receives the rate conversion capabilities.
      </param>
    </summary>
  </member>
  <member name="ID3D11On12Device::ReleaseWrappedResources">
    <summary>
      <para>Releases D3D11 resources that were wrapped for D3D 11on12.</para>
      <para>
        Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d11on12/nf-d3d11on12-id3d11on12device-releasewrappedresources" />
      </para>
      <param name="ppResources">
        Specifies a pointer to a set of D3D11 resources, defined by <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nn-d3d11-id3d11resource">ID3D11Resource</a>.
      </param>
      <param name="NumResources">Count of the number of resources.</param>
    </summary>
  </member>
  <member name="ID3D11InfoQueue::PushStorageFilter">
    <summary>
      <para>Push a storage filter onto the storage-filter stack.</para>
      <para>
        Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d11sdklayers/nf-d3d11sdklayers-id3d11infoqueue-pushstoragefilter" />
      </para>
      <param name="pFilter">
        Pointer to a storage filter (see <a href="https://docs.microsoft.com/windows/desktop/api/d3d11sdklayers/ns-d3d11sdklayers-d3d11_info_queue_filter">D3D11_INFO_QUEUE_FILTER</a>).
      </param>
    </summary>
  </member>
  <member name="D3D11_FEATURE_DATA_DOUBLES">
    <summary>
      <para>Describes double data type support in the current graphics driver.</para>
      <para>
        Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d11/ns-d3d11-d3d11_feature_data_doubles" />
      </para>
    </summary>
  </member>
  <member name="D3D11_FEATURE_DATA_DOUBLES::DoublePrecisionFloatShaderOps">
    <summary>
      Specifies whether <a href="https://docs.microsoft.com/windows/desktop/direct3dhlsl/dx-graphics-hlsl-scalar">double</a> types are allowed. If <b>TRUE</b>, <a href="https://docs.microsoft.com/windows/desktop/direct3dhlsl/dx-graphics-hlsl-scalar">double</a> types are allowed; otherwise <b>FALSE</b>. The runtime must set <b>DoublePrecisionFloatShaderOps</b> to  <b>TRUE</b> in order for you to use any <a href="https://docs.microsoft.com/windows/desktop/direct3dhlsl/dx-graphics-hlsl">HLSL</a> shader that is compiled with a <a href="https://docs.microsoft.com/windows/desktop/direct3dhlsl/dx-graphics-hlsl-scalar">double</a> type.
    </summary>
  </member>
  <member name="ID3D11VideoContext::VideoProcessorGetStreamPixelAspectRatio">
    <summary>
      <para>Gets the pixel aspect ratio for an input stream on the video processor.</para>
      <para>
        Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d11/nf-d3d11-id3d11videocontext-videoprocessorgetstreampixelaspectratio" />
      </para>
      <param name="pVideoProcessor">
        A pointer to the <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nn-d3d11-id3d11videoprocessor">ID3D11VideoProcessor</a> interface. To get this pointer, call <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nf-d3d11-id3d11videodevice-createvideoprocessor">ID3D11VideoDevice::CreateVideoProcessor</a>.
      </param>
      <param name="StreamIndex">
        The zero-based index of the input stream. To get the maximum number of streams, call <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nf-d3d11-id3d11videoprocessorenumerator-getvideoprocessorcaps">ID3D11VideoProcessorEnumerator::GetVideoProcessorCaps</a> and check the <b>MaxStreamStates</b> structure member.
      </param>
      <param name="pEnabled">
        Receives the value <b>TRUE</b> if the pixel aspect ratio is specified. Otherwise, receives the value <b>FALSE</b>.
      </param>
      <param name="pSourceAspectRatio">
        A pointer to a <a href="https://docs.microsoft.com/windows/desktop/api/dxgicommon/ns-dxgicommon-dxgi_rational">DXGI_RATIONAL</a> structure. If *<i>pEnabled</i> is <b>TRUE</b>, this parameter receives the pixel aspect ratio of the source rectangle.
      </param>
      <param name="pDestinationAspectRatio">
        A pointer to a <a href="https://docs.microsoft.com/windows/desktop/api/dxgicommon/ns-dxgicommon-dxgi_rational">DXGI_RATIONAL</a> structure. If *<i>pEnabled</i> is <b>TRUE</b>, this parameter receives the pixel aspect ratio of the destination rectangle.
      </param>
    </summary>
  </member>
  <member name="ID3D11DeviceContext::DSSetShader">
    <summary>
      <para>Set a domain shader to the device.</para>
      <para>
        Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d11/nf-d3d11-id3d11devicecontext-dssetshader" />
      </para>
      <param name="pDomainShader">
        Pointer to a domain shader (see <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nn-d3d11-id3d11domainshader">ID3D11DomainShader</a>). Passing in <b>NULL</b> disables the shader for this pipeline stage.
      </param>
      <param name="ppClassInstances">
        A pointer to an array of class-instance interfaces (see <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nn-d3d11-id3d11classinstance">ID3D11ClassInstance</a>). Each interface used by a shader must have a corresponding class instance or the shader will get disabled. Set ppClassInstances to <b>NULL</b> if the shader does not use any interfaces.
      </param>
      <param name="NumClassInstances">The number of class-instance interfaces in the array.</param>
    </summary>
  </member>
  <member name="ID3D11VideoContext::VideoProcessorGetOutputConstriction">
    <summary>
      <para>Gets the current level of downsampling that is performed by the video processor.</para>
      <para>
        Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d11/nf-d3d11-id3d11videocontext-videoprocessorgetoutputconstriction" />
      </para>
      <param name="pVideoProcessor">
        A pointer to the <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nn-d3d11-id3d11videoprocessor">ID3D11VideoProcessor</a> interface. To get this pointer, call <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nf-d3d11-id3d11videodevice-createvideoprocessor">ID3D11VideoDevice::CreateVideoProcessor</a>.
      </param>
      <param name="pEnabled">
        Receives the value <b>TRUE</b> if downsampling was explicitly enabled using the <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nf-d3d11-id3d11videocontext-videoprocessorsetoutputconstriction">ID3D11VideoContext::VideoProcessorSetOutputConstriction</a> method. Receives the value <b>FALSE</b> if the downsampling was disabled or was never set.
      </param>
      <param name="pSize">
        If <i>Enabled</i> receives the value <b>TRUE</b>, this parameter receives the downsampling size. Otherwise, this parameter is ignored.
      </param>
    </summary>
  </member>
  <member name="ID3D11VideoContext::VideoProcessorGetStreamExtension">
    <summary>
      <para>Gets a driver-specific state for a video processing stream.</para>
      <para>
        Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d11/nf-d3d11-id3d11videocontext-videoprocessorgetstreamextension" />
      </para>
      <param name="pVideoProcessor">
        A pointer to the <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nn-d3d11-id3d11videoprocessor">ID3D11VideoProcessor</a> interface. To get this pointer, call <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nf-d3d11-id3d11videodevice-createvideoprocessor">ID3D11VideoDevice::CreateVideoProcessor</a>.
      </param>
      <param name="StreamIndex">
        The zero-based index of the input stream. To get the maximum number of streams, call <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nf-d3d11-id3d11videoprocessorenumerator-getvideoprocessorcaps">ID3D11VideoProcessorEnumerator::GetVideoProcessorCaps</a> and check the <b>MaxStreamStates</b> structure member.
      </param>
      <param name="pExtensionGuid">A pointer to a GUID that identifies the state. The meaning of this GUID is defined by the graphics driver.</param>
      <param name="DataSize">
        The size of the <i>pData</i> buffer, in bytes.
      </param>
      <param name="pData">A pointer to a buffer that receives the private state data.</param>
    </summary>
  </member>
  <member name="ID3D11VideoProcessorEnumerator1::CheckVideoProcessorFormatConversion">
    <summary>
      <para>Indicates whether the driver supports the specified combination of format and colorspace conversions.</para>
      <para>
        Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d11_1/nf-d3d11_1-id3d11videoprocessorenumerator1-checkvideoprocessorformatconversion" />
      </para>
      <param name="InputFormat">The format of the video processor input.</param>
      <param name="InputColorSpace">The colorspace of the video processor input.</param>
      <param name="OutputFormat">The format of the video processor output.</param>
      <param name="OutputColorSpace">The colorspace of the video processor output.</param>
      <param name="pSupported">Pointer to a boolean that is set by the driver to indicate if the specified combination of format and colorspace conversions is supported. True if the conversion is supported; otherwise, false.</param>
    </summary>
  </member>
  <member name="D3D11_VIDEO_PROCESSOR_COLOR_SPACE">
    <summary>
      <para>Specifies the color space for video processing.</para>
      <para>
        Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d11/ns-d3d11-d3d11_video_processor_color_space" />
      </para>
    </summary>
  </member>
  <member name="D3D11_VIDEO_PROCESSOR_COLOR_SPACE::Usage">
    <summary>
      Specifies whether the output is intended for playback or video processing (such as editing or authoring). The device can optimize the processing based on the type. The default state value is 0 (playback).



      <table>
        <tr>
          <th>Value</th>
          <th>Meaning</th>
        </tr>
        <tr>
          <td width="40%">
            <dl>
              <dt>0</dt>
            </dl>
          </td>
          <td width="60%">
            Playback

          </td>
        </tr>
        <tr>
          <td width="40%">
            <dl>
              <dt>1</dt>
            </dl>
          </td>
          <td width="60%">
            Video processing

          </td>
        </tr>
      </table>
    </summary>
  </member>
  <member name="D3D11_VIDEO_PROCESSOR_COLOR_SPACE::RGB_Range">
    <summary>
      Specifies the RGB color range. The default state value is 0 (full range).



      <table>
        <tr>
          <th>Value</th>
          <th>Meaning</th>
        </tr>
        <tr>
          <td width="40%">
            <dl>
              <dt>0</dt>
            </dl>
          </td>
          <td width="60%">
            Full range (0-255)

          </td>
        </tr>
        <tr>
          <td width="40%">
            <dl>
              <dt>1</dt>
            </dl>
          </td>
          <td width="60%">
            Limited range (16-235)

          </td>
        </tr>
      </table>
    </summary>
  </member>
  <member name="D3D11_VIDEO_PROCESSOR_COLOR_SPACE::YCbCr_Matrix">
    <summary>
      Specifies the YCbCr transfer matrix. The default state value is 0 (BT.601).



      <table>
        <tr>
          <th>Value</th>
          <th>Meaning</th>
        </tr>
        <tr>
          <td width="40%">
            <dl>
              <dt>0</dt>
            </dl>
          </td>
          <td width="60%">
            ITU-R BT.601

          </td>
        </tr>
        <tr>
          <td width="40%">
            <dl>
              <dt>1</dt>
            </dl>
          </td>
          <td width="60%">
            ITU-R BT.709

          </td>
        </tr>
      </table>
    </summary>
  </member>
  <member name="D3D11_VIDEO_PROCESSOR_COLOR_SPACE::YCbCr_xvYCC">
    <summary>
      Specifies whether the output uses conventional YCbCr or extended YCbCr (xvYCC). The default state value is zero (conventional YCbCr).



      <table>
        <tr>
          <th>Value</th>
          <th>Meaning</th>
        </tr>
        <tr>
          <td width="40%">
            <dl>
              <dt>0</dt>
            </dl>
          </td>
          <td width="60%">
            Conventional YCbCr

          </td>
        </tr>
        <tr>
          <td width="40%">
            <dl>
              <dt>1</dt>
            </dl>
          </td>
          <td width="60%">
            Extended YCbCr (xvYCC)

          </td>
        </tr>
      </table>
    </summary>
  </member>
  <member name="D3D11_VIDEO_PROCESSOR_COLOR_SPACE::Nominal_Range">
    <summary>
      Specifies the <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ne-d3d11-d3d11_video_processor_nominal_range">D3D11_VIDEO_PROCESSOR_NOMINAL_RANGE</a>.



      Introduced in Windows 8.1.
    </summary>
  </member>
  <member name="D3D11_VIDEO_PROCESSOR_COLOR_SPACE::Reserved">
    <summary>Reserved. Set to zero.</summary>
  </member>
  <member name="ID3D11VideoContext::VideoProcessorGetStreamSourceRect">
    <summary>
      <para>Gets the source rectangle for an input stream on the video processor.</para>
      <para>
        Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d11/nf-d3d11-id3d11videocontext-videoprocessorgetstreamsourcerect" />
      </para>
      <param name="pVideoProcessor">
        A pointer to the <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nn-d3d11-id3d11videoprocessor">ID3D11VideoProcessor</a> interface. To get this pointer, call <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nf-d3d11-id3d11videodevice-createvideoprocessor">ID3D11VideoDevice::CreateVideoProcessor</a>.
      </param>
      <param name="StreamIndex">
        The zero-based index of the input stream. To get the maximum number of streams, call <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nf-d3d11-id3d11videoprocessorenumerator-getvideoprocessorcaps">ID3D11VideoProcessorEnumerator::GetVideoProcessorCaps</a> and check the <b>MaxStreamStates</b> structure member.
      </param>
      <param name="pEnabled">
        Receives the value <b>TRUE</b> if the source rectangle is enabled, or <b>FALSE</b> otherwise.
      </param>
      <param name="pRect">
        A pointer to a <a href="https://docs.microsoft.com/previous-versions/dd162897(v=vs.85)">RECT</a> structure that receives the source rectangle.
      </param>
    </summary>
  </member>
  <member name="ID3D11Device::CreateTexture3D">
    <summary>
      <para>Create a single 3D texture.</para>
      <para>
        Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d11/nf-d3d11-id3d11device-createtexture3d" />
      </para>
      <param name="pDesc">
        A pointer to a <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ns-d3d11-d3d11_texture3d_desc">D3D11_TEXTURE3D_DESC</a> structure that describes a 3D texture resource. To create a typeless resource that can be interpreted at runtime into different, compatible formats, specify a typeless format in the texture description. To generate mipmap levels automatically, set the number of mipmap levels to 0.
      </param>
      <param name="pInitialData">
        A pointer to an array of <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ns-d3d11-d3d11_subresource_data">D3D11_SUBRESOURCE_DATA</a> structures that describe subresources for the 3D texture resource. Applications cannot specify <b>NULL</b> for <i>pInitialData</i> when creating IMMUTABLE resources (see <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ne-d3d11-d3d11_usage">D3D11_USAGE</a>). If the resource is multisampled, <i>pInitialData</i> must be <b>NULL</b> because multisampled resources cannot be initialized with data when they are created.

        If you don't pass anything to <i>pInitialData</i>, the initial content of the memory for the resource is undefined. In this case, you need to write the resource content some other way before the resource is read.

        You can determine the size of this array from the value in the <b>MipLevels</b> member of the <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ns-d3d11-d3d11_texture3d_desc">D3D11_TEXTURE3D_DESC</a> structure to which <i>pDesc</i> points. Arrays of 3D volume textures are not supported.

        For more information about this array size, see Remarks.
      </param>
      <param name="ppTexture3D">
        A pointer to a buffer that receives a pointer to a <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nn-d3d11-id3d11texture3d">ID3D11Texture3D</a> interface for the created texture. Set this parameter to <b>NULL</b> to validate the other input parameters (the method will return S_FALSE if the other input parameters pass validation).
      </param>
    </summary>
  </member>
  <member name="ID3D11DeviceContext1::VSGetConstantBuffers1">
    <summary>
      <para>Gets the constant buffers that the vertex shader pipeline stage uses.</para>
      <para>
        Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d11_1/nf-d3d11_1-id3d11devicecontext1-vsgetconstantbuffers1" />
      </para>
      <param name="StartSlot">Index into the device's zero-based array to begin retrieving constant buffers from (ranges from 0 to D3D11_COMMONSHADER_CONSTANT_BUFFER_API_SLOT_COUNT - 1).</param>
      <param name="NumBuffers">
        Number of buffers to retrieve (ranges from 0 to D3D11_COMMONSHADER_CONSTANT_BUFFER_API_SLOT_COUNT - <i>StartSlot</i>).
      </param>
      <param name="ppConstantBuffers">Array of constant buffer interface pointers to be returned by the method.</param>
      <param name="pFirstConstant">
        A pointer to an array that receives the offsets into the buffers that  <i>ppConstantBuffers</i> specifies. Each offset specifies where, from the shader's point of view, each constant buffer starts.  Each offset is measured in shader constants, which are 16 bytes (4*32-bit components).  Therefore, an offset of 2 indicates that the start of the associated constant buffer is 32 bytes into the constant buffer. The runtime sets <i>pFirstConstant</i> to <b>NULL</b> if the buffers do not have offsets.
      </param>
      <param name="pNumConstants">
        A pointer to an array that receives the numbers of constants in the buffers that  <i>ppConstantBuffers</i> specifies. Each number specifies the number of constants that are contained in the constant buffer that the shader uses. Each number of constants starts from its respective offset that is specified in the <i>pFirstConstant</i> array. The runtime sets <i>pNumConstants</i> to <b>NULL</b> if it doesn't specify the numbers of constants in each buffer.
      </param>
    </summary>
  </member>
  <member name="ID3D11VideoContext::VideoProcessorSetStreamPalette">
    <summary>
      <para>Sets the color-palette entries for an input stream on the video processor.</para>
      <para>
        Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d11/nf-d3d11-id3d11videocontext-videoprocessorsetstreampalette" />
      </para>
      <param name="pVideoProcessor">
        A pointer to the <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nn-d3d11-id3d11videoprocessor">ID3D11VideoProcessor</a> interface. To get this pointer, call <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nf-d3d11-id3d11videodevice-createvideoprocessor">ID3D11VideoDevice::CreateVideoProcessor</a>.
      </param>
      <param name="StreamIndex">
        The zero-based index of the input stream. To get the maximum number of streams, call <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nf-d3d11-id3d11videoprocessorenumerator-getvideoprocessorcaps">ID3D11VideoProcessorEnumerator::GetVideoProcessorCaps</a> and check the <b>MaxStreamStates</b> structure member.
      </param>
      <param name="Count">
        The number of elements in the <i>pEntries</i> array.
      </param>
      <param name="pEntries">
        A pointer to an array of palette entries. For RGB streams, the palette entries use the <b>DXGI_FORMAT_B8G8R8A8</b> representation. For YCbCr streams, the palette entries use the <b>DXGI_FORMAT_AYUV</b> representation. The caller allocates the array.
      </param>
    </summary>
  </member>
  <member name="ID3D11DeviceContext::PSGetShader">
    <summary>
      <para>Get the pixel shader currently set on the device.</para>
      <para>
        Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d11/nf-d3d11-id3d11devicecontext-psgetshader" />
      </para>
      <param name="ppPixelShader">
        Address of a pointer to a pixel shader (see <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nn-d3d11-id3d11pixelshader">ID3D11PixelShader</a>) to be returned by the method.
      </param>
      <param name="ppClassInstances">
        Pointer to an array of class instance interfaces (see <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nn-d3d11-id3d11classinstance">ID3D11ClassInstance</a>).
      </param>
      <param name="pNumClassInstances">The number of class-instance elements in the array.</param>
    </summary>
  </member>
  <member name="ID3D11Device::SetExceptionMode">
    <summary>
      <para>Get the exception-mode flags.</para>
      <para>
        Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d11/nf-d3d11-id3d11device-setexceptionmode" />
      </para>
      <param name="RaiseFlags">
        A value that contains one or more exception flags; each flag specifies a condition which will cause an exception to be raised. The flags are listed in <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ne-d3d11-d3d11_raise_flag">D3D11_RAISE_FLAG</a>. A default value of 0 means there are no flags.
      </param>
    </summary>
  </member>
  <member name="D3D11_VIEWPORT">
    <summary>
      <para>Defines the dimensions of a viewport.</para>
      <para>
        Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d11/ns-d3d11-d3d11_viewport" />
      </para>
    </summary>
  </member>
  <member name="D3D11_VIEWPORT::TopLeftX">
    <summary>X position of the left hand side of the viewport. Ranges between D3D11_VIEWPORT_BOUNDS_MIN and D3D11_VIEWPORT_BOUNDS_MAX.</summary>
  </member>
  <member name="D3D11_VIEWPORT::TopLeftY">
    <summary>Y position of the top of the viewport. Ranges between D3D11_VIEWPORT_BOUNDS_MIN and D3D11_VIEWPORT_BOUNDS_MAX.</summary>
  </member>
  <member name="D3D11_VIEWPORT::Width">
    <summary>Width of the viewport.</summary>
  </member>
  <member name="D3D11_VIEWPORT::Height">
    <summary>Height of the viewport.</summary>
  </member>
  <member name="D3D11_VIEWPORT::MinDepth">
    <summary>Minimum depth of the viewport. Ranges between 0 and 1.</summary>
  </member>
  <member name="D3D11_VIEWPORT::MaxDepth">
    <summary>Maximum depth of the viewport. Ranges between 0 and 1.</summary>
  </member>
  <member name="D3D11_VIDEO_PROCESSOR_PROCESSOR_CAPS">
    <summary>
      <para>Specifies video processing capabilities that relate to deinterlacing, inverse telecine (IVTC), and frame-rate conversion.</para>
      <para>
        Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d11/ne-d3d11-d3d11_video_processor_processor_caps" />
      </para>
    </summary>
  </member>
  <member name="D3D11_VIDEO_PROCESSOR_PROCESSOR_CAPS::D3D11_VIDEO_PROCESSOR_PROCESSOR_CAPS_DEINTERLACE_BLEND">
    <summary>
      The video processor can perform blend deinterlacing.



      In blend deinterlacing, the two fields from an interlaced frame are blended into a single progressive frame. A video processor uses blend deinterlacing when it deinterlaces at half rate, as when converting 60i to 30p. Blend deinterlacing does not require reference frames.
    </summary>
  </member>
  <member name="D3D11_VIDEO_PROCESSOR_PROCESSOR_CAPS::D3D11_VIDEO_PROCESSOR_PROCESSOR_CAPS_DEINTERLACE_BOB">
    <summary>
      The video processor can perform bob deinterlacing.

      In bob deinterlacing, missing field lines are interpolated from the lines above and below. Bob deinterlacing does not require reference frames.
    </summary>
  </member>
  <member name="D3D11_VIDEO_PROCESSOR_PROCESSOR_CAPS::D3D11_VIDEO_PROCESSOR_PROCESSOR_CAPS_DEINTERLACE_ADAPTIVE">
    <summary>
      The video processor can perform adaptive deinterlacing.

      Adaptive deinterlacing uses spatial or temporal interpolation, and switches between the two on a field-by-field basis, depending on the amount of motion. If the video processor does not receive enough reference frames to perform adaptive deinterlacing, it falls back to bob deinterlacing.
    </summary>
  </member>
  <member name="D3D11_VIDEO_PROCESSOR_PROCESSOR_CAPS::D3D11_VIDEO_PROCESSOR_PROCESSOR_CAPS_DEINTERLACE_MOTION_COMPENSATION">
    <summary>
      The video processor can perform motion-compensated deinterlacing.



      Motion-compensated deinterlacing uses motion vectors to recreate missing lines. If the video processor does not receive enough reference frames to perform motion-compensated deinterlacing, it falls back to bob deinterlacing.
    </summary>
  </member>
  <member name="D3D11_VIDEO_PROCESSOR_PROCESSOR_CAPS::D3D11_VIDEO_PROCESSOR_PROCESSOR_CAPS_INVERSE_TELECINE">
    <summary>
      The video processor can perform inverse telecine (IVTC).



      If the video processor supports this capability, the <b>ITelecineCaps</b> member of the <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ns-d3d11-d3d11_video_processor_rate_conversion_caps">D3D11_VIDEO_PROCESSOR_RATE_CONVERSION_CAPS</a> structure specifies which IVTC modes are supported.
    </summary>
  </member>
  <member name="D3D11_VIDEO_PROCESSOR_PROCESSOR_CAPS::D3D11_VIDEO_PROCESSOR_PROCESSOR_CAPS_FRAME_RATE_CONVERSION">
    <summary>The video processor can convert the frame rate by interpolating frames.</summary>
  </member>
  <member name="ID3D11ShaderReflectionType::GetMemberTypeName">
    <summary>
      <para>Get a shader-reflection-variable type.</para>
      <para>
        Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d11shader/nf-d3d11shader-id3d11shaderreflectiontype-getmembertypename" />
      </para>
      <param name="Index">Zero-based index.</param>
    </summary>
  </member>
  <member name="ID3D11On12Device::AcquireWrappedResources">
    <summary>
      <para>Acquires D3D11 resources for use with D3D 11on12. Indicates that rendering to the wrapped resources can begin again.</para>
      <para>
        Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d11on12/nf-d3d11on12-id3d11on12device-acquirewrappedresources" />
      </para>
      <param name="ppResources">
        Specifies a pointer to a set of D3D11 resources, defined by <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nn-d3d11-id3d11resource">ID3D11Resource</a>.
      </param>
      <param name="NumResources">Count of the number of resources.</param>
    </summary>
  </member>
  <member name="D3D11_VIDEO_PROCESSOR_DEVICE_CAPS">
    <summary>
      <para>Defines video processing capabilities for a Microsoft Direct3D 11 video processor.</para>
      <para>
        Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d11/ne-d3d11-d3d11_video_processor_device_caps" />
      </para>
    </summary>
  </member>
  <member name="D3D11_VIDEO_PROCESSOR_DEVICE_CAPS::D3D11_VIDEO_PROCESSOR_DEVICE_CAPS_LINEAR_SPACE">
    <summary>The video processor can blend video content in linear color space. Most video content is gamma corrected, resulting in nonlinear values. This capability flag means that the video processor converts colors to linear space before blending, which produces better results.</summary>
  </member>
  <member name="D3D11_VIDEO_PROCESSOR_DEVICE_CAPS::D3D11_VIDEO_PROCESSOR_DEVICE_CAPS_xvYCC">
    <summary>The video processor supports the xvYCC color space for YCbCr data.</summary>
  </member>
  <member name="D3D11_VIDEO_PROCESSOR_DEVICE_CAPS::D3D11_VIDEO_PROCESSOR_DEVICE_CAPS_RGB_RANGE_CONVERSION">
    <summary>The video processor can perform range conversion when the input and output are both RGB but use different color ranges (0-255 or 16-235, for 8-bit RGB).</summary>
  </member>
  <member name="D3D11_VIDEO_PROCESSOR_DEVICE_CAPS::D3D11_VIDEO_PROCESSOR_DEVICE_CAPS_YCbCr_MATRIX_CONVERSION">
    <summary>The video processor can apply a matrix conversion to YCbCr values when the input and output are both YCbCr. For example, the driver can convert colors from BT.601 to BT.709.</summary>
  </member>
  <member name="D3D11_VIDEO_PROCESSOR_DEVICE_CAPS::D3D11_VIDEO_PROCESSOR_DEVICE_CAPS_NOMINAL_RANGE">
    <summary>
      The video processor supports YUV nominal range .

      Supported in Windows 8.1 and later.
    </summary>
  </member>
  <member name="D3D11_DEPTH_STENCILOP_DESC">
    <summary>
      <para>Stencil operations that can be performed based on the results of stencil test.</para>
      <para>
        Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d11/ns-d3d11-d3d11_depth_stencilop_desc" />
      </para>
    </summary>
  </member>
  <member name="D3D11_DEPTH_STENCILOP_DESC::StencilFailOp">
    <summary>The stencil operation to perform when stencil testing fails.</summary>
  </member>
  <member name="D3D11_DEPTH_STENCILOP_DESC::StencilDepthFailOp">
    <summary>The stencil operation to perform when stencil testing passes and depth testing fails.</summary>
  </member>
  <member name="D3D11_DEPTH_STENCILOP_DESC::StencilPassOp">
    <summary>The stencil operation to perform when stencil testing and depth testing both pass.</summary>
  </member>
  <member name="D3D11_DEPTH_STENCILOP_DESC::StencilFunc">
    <summary>
      A function that compares stencil data against existing stencil data. The function options are listed in <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ne-d3d11-d3d11_comparison_func">D3D11_COMPARISON_FUNC</a>.
    </summary>
  </member>
  <member name="ID3D11InputLayout">
    <summary>
      <para>An input-layout interface holds a definition of how to feed vertex data that is laid out in memory into the input-assembler stage of the graphics pipeline.</para>
      <para>
        Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d11/nn-d3d11-id3d11inputlayout" />
      </para>
    </summary>
  </member>
  <member name="D3D11_AUTHENTICATED_PROCESS_IDENTIFIER_TYPE">
    <summary>
      <para>Specifies the type of process that is identified in the D3D11_AUTHENTICATED_QUERY_RESTRICTED_SHARED_RESOURCE_PROCESS_OUTPUT structure.</para>
      <para>
        Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d11/ne-d3d11-d3d11_authenticated_process_identifier_type" />
      </para>
    </summary>
  </member>
  <member name="D3D11_AUTHENTICATED_PROCESS_IDENTIFIER_TYPE::D3D11_PROCESSIDTYPE_UNKNOWN">
    <summary>Unknown process type.</summary>
  </member>
  <member name="D3D11_AUTHENTICATED_PROCESS_IDENTIFIER_TYPE::D3D11_PROCESSIDTYPE_DWM">
    <summary>Desktop Window Manager (DWM) process.</summary>
  </member>
  <member name="D3D11_AUTHENTICATED_PROCESS_IDENTIFIER_TYPE::D3D11_PROCESSIDTYPE_HANDLE">
    <summary>Handle to a process.</summary>
  </member>
  <member name="ID3D11ShaderReflectionVariable::GetDesc">
    <summary>
      <para>Get a shader-variable description.</para>
      <para>
        Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d11shader/nf-d3d11shader-id3d11shaderreflectionvariable-getdesc" />
      </para>
      <param name="pDesc">
        A pointer to a shader-variable description (see <a href="https://docs.microsoft.com/windows/desktop/api/d3d11shader/ns-d3d11shader-d3d11_shader_variable_desc">D3D11_SHADER_VARIABLE_DESC</a>).
      </param>
    </summary>
  </member>
  <member name="ID3D11Device::CreateTexture2D">
    <summary>
      <para>Create an array of 2D textures.</para>
      <para>
        Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d11/nf-d3d11-id3d11device-createtexture2d" />
      </para>
      <param name="pDesc">
        A pointer to a <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ns-d3d11-d3d11_texture2d_desc">D3D11_TEXTURE2D_DESC</a> structure that describes a 2D texture resource. To create a typeless resource that can be interpreted at runtime into different, compatible formats, specify a typeless format in the texture description. To generate mipmap levels automatically, set the number of mipmap levels to 0.
      </param>
      <param name="pInitialData">
        A pointer to an array of <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ns-d3d11-d3d11_subresource_data">D3D11_SUBRESOURCE_DATA</a> structures that describe subresources for the 2D texture resource. Applications can't specify <b>NULL</b> for <i>pInitialData</i> when creating IMMUTABLE resources (see <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ne-d3d11-d3d11_usage">D3D11_USAGE</a>). If the resource is multisampled, <i>pInitialData</i> must be <b>NULL</b> because multisampled resources cannot be initialized with data when they are created.

        If you don't pass anything to <i>pInitialData</i>, the initial content of the memory for the resource is undefined. In this case, you need to write the resource content some other way before the resource is read.

        You can determine the size of this array from values in the <b>MipLevels</b> and <b>ArraySize</b> members of the <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ns-d3d11-d3d11_texture2d_desc">D3D11_TEXTURE2D_DESC</a> structure to which <i>pDesc</i> points by using the following calculation:

        MipLevels * ArraySize

        For more information about this array size, see Remarks.
      </param>
      <param name="ppTexture2D">
        A pointer to a buffer that receives a pointer to a <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nn-d3d11-id3d11texture2d">ID3D11Texture2D</a> interface for the created texture. Set this parameter to <b>NULL</b> to validate the other input parameters (the method will return S_FALSE if the other input parameters pass validation).
      </param>
    </summary>
  </member>
  <member name="D3D11_UNORDERED_ACCESS_VIEW_DESC">
    <summary>
      <para>Specifies the subresources from a resource that are accessible using an unordered-access view.</para>
      <para>
        Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d11/ns-d3d11-d3d11_unordered_access_view_desc" />
      </para>
    </summary>
  </member>
  <member name="D3D11_UNORDERED_ACCESS_VIEW_DESC::Format">
    <summary>
      The data format (see <a href="https://docs.microsoft.com/windows/desktop/api/dxgiformat/ne-dxgiformat-dxgi_format">DXGI_FORMAT</a>).
    </summary>
  </member>
  <member name="D3D11_UNORDERED_ACCESS_VIEW_DESC::ViewDimension">
    <summary>
      The resource type (see <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ne-d3d11-d3d11_uav_dimension">D3D11_UAV_DIMENSION</a>), which specifies how the resource will be accessed.
    </summary>
  </member>
  <member name="D3D11_UNORDERED_ACCESS_VIEW_DESC::Buffer">
    <summary>
      Specifies which buffer elements can be accessed (see <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ns-d3d11-d3d11_buffer_uav">D3D11_BUFFER_UAV</a>).
    </summary>
  </member>
  <member name="D3D11_UNORDERED_ACCESS_VIEW_DESC::Texture1D">
    <summary>
      Specifies the subresources in a 1D texture that can be accessed (see <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ns-d3d11-d3d11_tex1d_uav">D3D11_TEX1D_UAV</a>).
    </summary>
  </member>
  <member name="D3D11_UNORDERED_ACCESS_VIEW_DESC::Texture1DArray">
    <summary>
      Specifies the subresources in a 1D texture array that can be accessed (see <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ns-d3d11-d3d11_tex1d_array_uav">D3D11_TEX1D_ARRAY_UAV</a>).
    </summary>
  </member>
  <member name="D3D11_UNORDERED_ACCESS_VIEW_DESC::Texture2D">
    <summary>
      Specifies the subresources in a 2D texture that can be accessed (see <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ns-d3d11-d3d11_tex2d_uav">D3D11_TEX2D_UAV</a>).
    </summary>
  </member>
  <member name="D3D11_UNORDERED_ACCESS_VIEW_DESC::Texture2DArray">
    <summary>
      Specifies the subresources in a 2D texture array that can be accessed (see <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ns-d3d11-d3d11_tex2d_array_uav">D3D11_TEX2D_ARRAY_UAV</a>).
    </summary>
  </member>
  <member name="D3D11_UNORDERED_ACCESS_VIEW_DESC::Texture3D">
    <summary>
      Specifies subresources in a 3D texture that can be accessed (see <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ns-d3d11-d3d11_tex3d_uav">D3D11_TEX3D_UAV</a>).
    </summary>
  </member>
  <member name="ID3D11Buffer::GetDesc">
    <summary>
      <para>Get the properties of a buffer resource.</para>
      <para>
        Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d11/nf-d3d11-id3d11buffer-getdesc" />
      </para>
      <param name="pDesc">
        Pointer to a resource description (see <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ns-d3d11-d3d11_buffer_desc">D3D11_BUFFER_DESC</a>) filled in by the method.
      </param>
    </summary>
  </member>
  <member name="ID3D11RenderTargetView">
    <summary>
      <para>A render-target-view interface identifies the render-target subresources that can be accessed during rendering.</para>
      <para>
        Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d11/nn-d3d11-id3d11rendertargetview" />
      </para>
    </summary>
  </member>
  <member name="D3D11_RENDER_TARGET_VIEW_DESC">
    <summary>
      <para>Specifies the subresources from a resource that are accessible using a render-target view.</para>
      <para>
        Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d11/ns-d3d11-d3d11_render_target_view_desc" />
      </para>
    </summary>
  </member>
  <member name="D3D11_RENDER_TARGET_VIEW_DESC::Format">
    <summary>
      The data format (see <a href="https://docs.microsoft.com/windows/desktop/api/dxgiformat/ne-dxgiformat-dxgi_format">DXGI_FORMAT</a>).
    </summary>
  </member>
  <member name="D3D11_RENDER_TARGET_VIEW_DESC::ViewDimension">
    <summary>
      The resource type (see <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ne-d3d11-d3d11_rtv_dimension">D3D11_RTV_DIMENSION</a>), which specifies how the render-target resource will be accessed.
    </summary>
  </member>
  <member name="D3D11_RENDER_TARGET_VIEW_DESC::Buffer">
    <summary>
      Specifies which buffer elements can be accessed (see <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ns-d3d11-d3d11_buffer_rtv">D3D11_BUFFER_RTV</a>).
    </summary>
  </member>
  <member name="D3D11_RENDER_TARGET_VIEW_DESC::Texture1D">
    <summary>
      Specifies the subresources in a 1D texture that can be accessed (see <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ns-d3d11-d3d11_tex1d_rtv">D3D11_TEX1D_RTV</a>).
    </summary>
  </member>
  <member name="D3D11_RENDER_TARGET_VIEW_DESC::Texture1DArray">
    <summary>
      Specifies the subresources in a 1D texture array that can be accessed (see <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ns-d3d11-d3d11_tex1d_array_rtv">D3D11_TEX1D_ARRAY_RTV</a>).
    </summary>
  </member>
  <member name="D3D11_RENDER_TARGET_VIEW_DESC::Texture2D">
    <summary>
      Specifies the subresources in a 2D texture that can be accessed (see <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ns-d3d11-d3d11_tex2d_rtv">D3D11_TEX2D_RTV</a>).
    </summary>
  </member>
  <member name="D3D11_RENDER_TARGET_VIEW_DESC::Texture2DArray">
    <summary>
      Specifies the subresources in a 2D texture array that can be accessed (see <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ns-d3d11-d3d11_tex2d_array_rtv">D3D11_TEX2D_ARRAY_RTV</a>).
    </summary>
  </member>
  <member name="D3D11_RENDER_TARGET_VIEW_DESC::Texture2DMS">
    <summary>
      Specifies a single subresource because a multisampled 2D texture only contains one subresource (see <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ns-d3d11-d3d11_tex2dms_rtv">D3D11_TEX2DMS_RTV</a>).
    </summary>
  </member>
  <member name="D3D11_RENDER_TARGET_VIEW_DESC::Texture2DMSArray">
    <summary>
      Specifies the subresources in a multisampled 2D texture array that can be accessed (see <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ns-d3d11-d3d11_tex2dms_array_rtv">D3D11_TEX2DMS_ARRAY_RTV</a>).
    </summary>
  </member>
  <member name="D3D11_RENDER_TARGET_VIEW_DESC::Texture3D">
    <summary>
      Specifies subresources in a 3D texture that can be accessed (see <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ns-d3d11-d3d11_tex3d_rtv">D3D11_TEX3D_RTV</a>).
    </summary>
  </member>
  <member name="D3D11_TEX1D_ARRAY_DSV">
    <summary>
      <para>Specifies the subresources from an array of 1D textures to use in a depth-stencil view.</para>
      <para>
        Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d11/ns-d3d11-d3d11_tex1d_array_dsv" />
      </para>
    </summary>
  </member>
  <member name="D3D11_TEX1D_ARRAY_DSV::MipSlice">
    <summary>The index of the first mipmap level to use.</summary>
  </member>
  <member name="D3D11_TEX1D_ARRAY_DSV::FirstArraySlice">
    <summary>The index of the first texture to use in an array of textures.</summary>
  </member>
  <member name="D3D11_TEX1D_ARRAY_DSV::ArraySize">
    <summary>Number of textures to use.</summary>
  </member>
  <member name="ID3D11Multithread::Enter">
    <summary>
      <para>Enter a device's critical section.</para>
      <para>
        Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d11_4/nf-d3d11_4-id3d11multithread-enter" />
      </para>
    </summary>
  </member>
  <member name="D3D11_CONSERVATIVE_RASTERIZATION_MODE">
    <summary>
      <para>Identifies whether conservative rasterization is on or off.</para>
      <para>
        Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d11_3/ne-d3d11_3-d3d11_conservative_rasterization_mode" />
      </para>
    </summary>
  </member>
  <member name="D3D11_CONSERVATIVE_RASTERIZATION_MODE::D3D11_CONSERVATIVE_RASTERIZATION_MODE_OFF">
    <summary>Conservative rasterization is off.</summary>
  </member>
  <member name="D3D11_CONSERVATIVE_RASTERIZATION_MODE::D3D11_CONSERVATIVE_RASTERIZATION_MODE_ON">
    <summary>Conservative rasterization is on.</summary>
  </member>
  <member name="ID3D11FunctionLinkingGraph::CreateModuleInstance">
    <summary>
      <para>Initializes a shader module from the function-linking-graph object.</para>
      <para>
        Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d11shader/nf-d3d11shader-id3d11functionlinkinggraph-createmoduleinstance" />
      </para>
      <param name="ppModuleInstance">
        The address of a pointer to an <a href="https://docs.microsoft.com/windows/desktop/api/d3d11shader/nn-d3d11shader-id3d11moduleinstance">ID3D11ModuleInstance</a> interface for the shader module to initialize.
      </param>
      <param name="ppErrorBuffer">
        An optional pointer to a variable that receives a pointer to the <a href="https://docs.microsoft.com/previous-versions/windows/desktop/legacy/ff728743(v=vs.85)">ID3DBlob</a> interface that you can use to access compiler error messages, or <b>NULL</b> if there are no errors.
      </param>
    </summary>
  </member>
  <member name="D3D11_CULL_MODE">
    <summary>
      <para>Indicates triangles facing a particular direction are not drawn.</para>
      <para>
        Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d11/ne-d3d11-d3d11_cull_mode" />
      </para>
    </summary>
  </member>
  <member name="D3D11_CULL_MODE::D3D11_CULL_NONE">
    <summary>Always draw all triangles.</summary>
  </member>
  <member name="D3D11_CULL_MODE::D3D11_CULL_FRONT">
    <summary>Do not draw triangles that are front-facing.</summary>
  </member>
  <member name="D3D11_CULL_MODE::D3D11_CULL_BACK">
    <summary>Do not draw triangles that are back-facing.</summary>
  </member>
  <member name="D3D11_TRACE_STATS">
    <summary>
      <para>Specifies statistics about a trace.</para>
      <para>
        Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d11shadertracing/ns-d3d11shadertracing-d3d11_trace_stats" />
      </para>
    </summary>
  </member>
  <member name="D3D11_TRACE_STATS::TraceDesc">
    <summary>
      A  <a href="https://docs.microsoft.com/windows/desktop/api/d3d11shadertracing/ns-d3d11shadertracing-d3d11_shader_trace_desc">D3D11_SHADER_TRACE_DESC</a> structure that describes the shader trace object for which this structure specifies statistics.
    </summary>
  </member>
  <member name="D3D11_TRACE_STATS::NumInvocationsInStamp">
    <summary>The number of calls in the stamp for the trace. This value is always 1 for vertex shaders, hull shaders, domain shaders, geometry shaders, and compute shaders. This value is 4 for pixel shaders.</summary>
  </member>
  <member name="D3D11_TRACE_STATS::TargetStampIndex">
    <summary>The index of the target stamp. This value is always 0 for vertex shaders, hull shaders, domain shaders, geometry shaders, and compute shaders. However, for pixel shaders this value indicates which of the four pixels in the stamp is the target for the trace.  You can examine the traces for other pixels in the stamp to determine how derivative calculations occurred. You can make this determination by correlating the registers across traces.</summary>
  </member>
  <member name="D3D11_TRACE_STATS::NumTraceSteps">
    <summary>The total number of steps for the trace. This number is the same for all stamp calls.</summary>
  </member>
  <member name="D3D11_TRACE_STATS::InputMask">
    <summary>
      The component trace mask for each input v# register. For information about D3D11_TRACE_COMPONENT_MASK, see <a href="https://docs.microsoft.com/windows/desktop/api/d3d11shadertracing/ns-d3d11shadertracing-d3d11_trace_value">D3D11_TRACE_VALUE</a>.

      For vertex shaders, geometry shaders, pixel shaders, hull shaders, and domain shaders, the valid range is [0..31]. For compute shaders, this member is not applicable. Also, inputs for geometry shaders are 2D-indexed. For example, consider v[vertex][attribute]. In this example, the range of [attribute] is [0..31]. The [vertex] axis is the same size for all inputs, which are determined by the <b>GSInputPrimitive</b> member.

      Similarly, inputs for hull shader and domain shader are 2D-indexed. For example, consider v[vertex][attribute]. In this example, the range of [attribute] is [0..15]. The [vertex] axis is the same size for all inputs.
    </summary>
  </member>
  <member name="D3D11_TRACE_STATS::OutputMask">
    <summary>
      The component trace mask for each output o# register. For information about D3D11_TRACE_COMPONENT_MASK, see <a href="https://docs.microsoft.com/windows/desktop/api/d3d11shadertracing/ns-d3d11shadertracing-d3d11_trace_value">D3D11_TRACE_VALUE</a>.

      For vertex shaders and geometry shaders, the valid range is [0..31]. For pixel shaders, the valid range is [0..7]. For compute shaders, this member is not applicable. For output control points for hull shaders, the registers are 2D-indexed. For example, consider ocp[vertex][attribute]. In this example, the range of [attribute] is [0..31]. The [vertex] axis is the same size for all inputs.
    </summary>
  </member>
  <member name="D3D11_TRACE_STATS::NumTemps">
    <summary>The number of temps, that is, 4x32 bit r# registers that are declared.</summary>
  </member>
  <member name="D3D11_TRACE_STATS::MaxIndexableTempIndex">
    <summary>The maximum index #+1 of all indexable temps x#[] that are declared. If they are declared sparsely (for example, x3[12] and x200[30] only), this value is 201 (200+1).</summary>
  </member>
  <member name="D3D11_TRACE_STATS::IndexableTempSize">
    <summary>
      The number of temps for each indexable temp x#[numTemps]. You can only have temps up to the value in the <b>MaxIndexableTempIndex</b> member.
    </summary>
  </member>
  <member name="D3D11_TRACE_STATS::ImmediateConstantBufferSize">
    <summary>The number of 4x32 bit values (if any) that are in the immediate constant buffer.</summary>
  </member>
  <member name="D3D11_TRACE_STATS::PixelCoverageMask">
    <summary>
      <div class="alert">
        <b>Note</b>  This member is for pixel shaders only, [stampIndex].
      </div>
      <div> </div>
      A mask that indicates which MSAA samples are covered for each stamp. This coverage occurs before alpha-to-coverage, depth, and stencil operations are performed on the pixel. For non-MSAA, examine the least significant bit (LSB). This mask can be 0 for pixels that are only executed to support derivatives for neighboring pixels.
    </summary>
  </member>
  <member name="D3D11_TRACE_STATS::PixelDiscardedMask">
    <summary>
      <div class="alert">
        <b>Note</b>  This member is for pixel shaders only, [stampIndex].
      </div>
      <div> </div>
      A mask that indicates discarded samples.  If the pixel shader runs at pixel-frequency, "discard" turns off all the samples. 	If all the samples are off, the following four mask members are also 0.
    </summary>
  </member>
  <member name="D3D11_TRACE_STATS::PixelCoverageMaskAfterShader">
    <summary>
      <div class="alert">
        <b>Note</b>  This member is for pixel shaders only, [stampIndex].
      </div>
      <div> </div>
      A mask that indicates the MSAA samples that are covered. For non-MSAA, examine the LSB.
    </summary>
  </member>
  <member name="D3D11_TRACE_STATS::PixelCoverageMaskAfterA2CSampleMask">
    <summary>
      <div class="alert">
        <b>Note</b>  This member is for pixel shaders only, [stampIndex].
      </div>
      <div> </div>
      A mask that indicates the MSAA samples that are covered after alpha-to-coverage+sampleMask, but before depth and stencil. For non-MSAA, examine the LSB.
    </summary>
  </member>
  <member name="D3D11_TRACE_STATS::PixelCoverageMaskAfterA2CSampleMaskDepth">
    <summary>
      <div class="alert">
        <b>Note</b>  This member is for pixel shaders only, [stampIndex].
      </div>
      <div> </div>
      A mask that indicates the MSAA samples that are covered after alpha-to-coverage+sampleMask+depth, but before stencil. For non-MSAA, examine the LSB.
    </summary>
  </member>
  <member name="D3D11_TRACE_STATS::PixelCoverageMaskAfterA2CSampleMaskDepthStencil">
    <summary>
      <div class="alert">
        <b>Note</b>  This member is for pixel shaders only, [stampIndex].
      </div>
      <div> </div>
      A mask that indicates the MSAA samples that are covered after alpha-to-coverage+sampleMask+depth+stencil. For non-MSAA, examine the LSB.
    </summary>
  </member>
  <member name="D3D11_TRACE_STATS::PSOutputsDepth">
    <summary>A value that specifies whether this trace is for a pixel shader that outputs the oDepth register. TRUE indicates that the pixel shader outputs the oDepth register; otherwise, FALSE.</summary>
  </member>
  <member name="D3D11_TRACE_STATS::PSOutputsMask">
    <summary>A value that specifies whether this trace is for a pixel shader that outputs the oMask register. TRUE indicates that the pixel shader outputs the oMask register; otherwise, FALSE.</summary>
  </member>
  <member name="D3D11_TRACE_STATS::GSInputPrimitive">
    <summary>
      A <a href="https://docs.microsoft.com/windows/desktop/api/d3d11shadertracing/ne-d3d11shadertracing-d3d11_trace_gs_input_primitive">D3D11_TRACE_GS_INPUT_PRIMITIVE</a>-typed value that identifies the type of geometry shader input primitive. That is, this value identifies:  {point, line, triangle, line_adj, triangle_adj} or the number of vertices: 1, 2, 3, 4, or 6 respectively. For example, for a line, input v[][#] is actually v[2][#]. For vertex shaders and pixel shaders, set this member to <a href="https://docs.microsoft.com/windows/desktop/api/d3d11shadertracing/ne-d3d11shadertracing-d3d11_trace_gs_input_primitive">D3D11_TRACE_GS_INPUT_PRIMITIVE_UNDEFINED</a>.
    </summary>
  </member>
  <member name="D3D11_TRACE_STATS::GSInputsPrimitiveID">
    <summary>A value that specifies whether this trace is for a geometry shader that inputs the PrimitiveID register. TRUE indicates that the geometry shader inputs the PrimitiveID register; otherwise, FALSE.</summary>
  </member>
  <member name="D3D11_TRACE_STATS::HSOutputPatchConstantMask">
    <summary>
      <div class="alert">
        <b>Note</b>  This member is for hull shaders only.
      </div>
      <div> </div>
      The component trace mask for the hull-shader output. For information about D3D11_TRACE_COMPONENT_MASK, see <a href="https://docs.microsoft.com/windows/desktop/api/d3d11shadertracing/ns-d3d11shadertracing-d3d11_trace_value">D3D11_TRACE_VALUE</a>.

      The <a href="https://docs.microsoft.com/windows/desktop/api/d3d11shadertracing/ne-d3d11shadertracing-d3d11_trace_register_type">D3D11_TRACE_INPUT_PRIMITIVE_ID_REGISTER</a> value is available through a call to the <a href="https://docs.microsoft.com/windows/desktop/api/d3d11shadertracing/nf-d3d11shadertracing-id3d11shadertrace-getinitialregistercontents">ID3D11ShaderTrace::GetInitialRegisterContents</a> method.
    </summary>
  </member>
  <member name="D3D11_TRACE_STATS::DSInputPatchConstantMask">
    <summary>
      <div class="alert">
        <b>Note</b>  This member is for domain shaders only.
      </div>
      <div> </div>
      The component trace mask for the domain-shader input. For information about D3D11_TRACE_COMPONENT_MASK, see <a href="https://docs.microsoft.com/windows/desktop/api/d3d11shadertracing/ns-d3d11shadertracing-d3d11_trace_value">D3D11_TRACE_VALUE</a>.

      The following values are available through a call to the <a href="https://docs.microsoft.com/windows/desktop/api/d3d11shadertracing/nf-d3d11shadertracing-id3d11shadertrace-getinitialregistercontents">ID3D11ShaderTrace::GetInitialRegisterContents</a> method:

      <ul>
        <li>
          <a href="https://docs.microsoft.com/windows/desktop/api/d3d11shadertracing/ne-d3d11shadertracing-d3d11_trace_register_type">D3D11_TRACE_INPUT_PRIMITIVE_ID_REGISTER</a>
        </li>
        <li>
          <a href="https://docs.microsoft.com/windows/desktop/api/d3d11shadertracing/ne-d3d11shadertracing-d3d11_trace_register_type">D3D11_TRACE_INPUT_DOMAIN_POINT_REGISTER</a>
        </li>
      </ul>
    </summary>
  </member>
  <member name="ID3D11Device::GetImmediateContext">
    <summary>
      <para>Gets an immediate context, which can play back command lists.</para>
      <para>
        Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d11/nf-d3d11-id3d11device-getimmediatecontext" />
      </para>
      <param name="ppImmediateContext">
        Upon completion of the method, the passed pointer to an <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nn-d3d11-id3d11devicecontext">ID3D11DeviceContext</a> interface pointer is initialized.
      </param>
    </summary>
  </member>
  <member name="D3D11_QUERY">
    <summary>
      <para>Query types.</para>
      <para>
        Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d11/ne-d3d11-d3d11_query" />
      </para>
    </summary>
  </member>
  <member name="D3D11_QUERY::D3D11_QUERY_EVENT">
    <summary>
      Determines whether or not the GPU is finished processing commands. When the GPU is finished processing commands <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nf-d3d11-id3d11devicecontext-getdata">ID3D11DeviceContext::GetData</a> will return S_OK, and pData will point to a BOOL with a value of <b>TRUE</b>. When using this type of query, <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nf-d3d11-id3d11devicecontext-begin">ID3D11DeviceContext::Begin</a> is disabled.
    </summary>
  </member>
  <member name="D3D11_QUERY::D3D11_QUERY_OCCLUSION">
    <summary>
      Get the number of samples that passed the depth and stencil tests in between <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nf-d3d11-id3d11devicecontext-begin">ID3D11DeviceContext::Begin</a> and <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nf-d3d11-id3d11devicecontext-end">ID3D11DeviceContext::End</a>. <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nf-d3d11-id3d11devicecontext-getdata">ID3D11DeviceContext::GetData</a> returns a UINT64. If a depth or stencil test is disabled, then each of those tests will be counted as a pass.
    </summary>
  </member>
  <member name="D3D11_QUERY::D3D11_QUERY_TIMESTAMP">
    <summary>
      Get a timestamp value where <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nf-d3d11-id3d11devicecontext-getdata">ID3D11DeviceContext::GetData</a> returns a UINT64. This kind of query is only useful if two timestamp queries are done in the middle of a D3D11_QUERY_TIMESTAMP_DISJOINT query. The difference of two timestamps can be used to determine how many ticks have elapsed, and the D3D11_QUERY_TIMESTAMP_DISJOINT query will determine if that difference is a reliable value and also has a value that shows how to convert the number of ticks into seconds. See <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ns-d3d11-d3d11_query_data_timestamp_disjoint">D3D11_QUERY_DATA_TIMESTAMP_DISJOINT</a>. When using this type of query, <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nf-d3d11-id3d11devicecontext-begin">ID3D11DeviceContext::Begin</a> is disabled.
    </summary>
  </member>
  <member name="D3D11_QUERY::D3D11_QUERY_TIMESTAMP_DISJOINT">
    <summary>
      Determines whether or not a D3D11_QUERY_TIMESTAMP is returning reliable values, and also gives the frequency of the processor enabling you to convert the number of elapsed ticks into seconds. <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nf-d3d11-id3d11devicecontext-getdata">ID3D11DeviceContext::GetData</a> will return a <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ns-d3d11-d3d11_query_data_timestamp_disjoint">D3D11_QUERY_DATA_TIMESTAMP_DISJOINT</a>. This type of query should only be invoked once per frame or less.
    </summary>
  </member>
  <member name="D3D11_QUERY::D3D11_QUERY_PIPELINE_STATISTICS">
    <summary>
      Get pipeline statistics, such as the number of pixel shader invocations in between <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nf-d3d11-id3d11devicecontext-begin">ID3D11DeviceContext::Begin</a> and <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nf-d3d11-id3d11devicecontext-end">ID3D11DeviceContext::End</a>. <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nf-d3d11-id3d11devicecontext-getdata">ID3D11DeviceContext::GetData</a> will return a <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ns-d3d11-d3d11_query_data_pipeline_statistics">D3D11_QUERY_DATA_PIPELINE_STATISTICS</a>.
    </summary>
  </member>
  <member name="D3D11_QUERY::D3D11_QUERY_OCCLUSION_PREDICATE">
    <summary>
      Similar to D3D11_QUERY_OCCLUSION, except <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nf-d3d11-id3d11devicecontext-getdata">ID3D11DeviceContext::GetData</a> returns a BOOL indicating whether or not any samples passed the depth and stencil tests - <b>TRUE</b> meaning at least one passed, <b>FALSE</b> meaning none passed.
    </summary>
  </member>
  <member name="D3D11_QUERY::D3D11_QUERY_SO_STATISTICS">
    <summary>
      Get streaming output statistics, such as the number of primitives streamed out in between <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nf-d3d11-id3d11devicecontext-begin">ID3D11DeviceContext::Begin</a> and <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nf-d3d11-id3d11devicecontext-end">ID3D11DeviceContext::End</a>. <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nf-d3d11-id3d11devicecontext-getdata">ID3D11DeviceContext::GetData</a> will return a <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ns-d3d11-d3d11_query_data_so_statistics">D3D11_QUERY_DATA_SO_STATISTICS</a> structure.
    </summary>
  </member>
  <member name="D3D11_QUERY::D3D11_QUERY_SO_OVERFLOW_PREDICATE">
    <summary>
      Determines whether or not any of the streaming output buffers overflowed in between <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nf-d3d11-id3d11devicecontext-begin">ID3D11DeviceContext::Begin</a> and <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nf-d3d11-id3d11devicecontext-end">ID3D11DeviceContext::End</a>. <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nf-d3d11-id3d11devicecontext-getdata">ID3D11DeviceContext::GetData</a> returns a BOOL - <b>TRUE</b> meaning there was an overflow, <b>FALSE</b> meaning there was not an overflow. If streaming output writes to multiple buffers, and one of the buffers overflows, then it will stop writing to all the output buffers. When an overflow is detected by Direct3D it is prevented from happening - no memory is corrupted. This predication may be used in conjunction with an SO_STATISTICS query so that when an overflow occurs the SO_STATISTIC query will let the application know how much memory was needed to prevent an overflow.
    </summary>
  </member>
  <member name="D3D11_QUERY::D3D11_QUERY_SO_STATISTICS_STREAM0">
    <summary>
      Get streaming output statistics for stream 0, such as the number of primitives streamed out in between <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nf-d3d11-id3d11devicecontext-begin">ID3D11DeviceContext::Begin</a> and <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nf-d3d11-id3d11devicecontext-end">ID3D11DeviceContext::End</a>. <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nf-d3d11-id3d11devicecontext-getdata">ID3D11DeviceContext::GetData</a> will return a <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ns-d3d11-d3d11_query_data_so_statistics">D3D11_QUERY_DATA_SO_STATISTICS</a> structure.
    </summary>
  </member>
  <member name="D3D11_QUERY::D3D11_QUERY_SO_OVERFLOW_PREDICATE_STREAM0">
    <summary>
      Determines whether or not the stream 0 output buffers overflowed in between <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nf-d3d11-id3d11devicecontext-begin">ID3D11DeviceContext::Begin</a> and <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nf-d3d11-id3d11devicecontext-end">ID3D11DeviceContext::End</a>. <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nf-d3d11-id3d11devicecontext-getdata">ID3D11DeviceContext::GetData</a> returns a BOOL - <b>TRUE</b> meaning there was an overflow, <b>FALSE</b> meaning there was not an overflow. If streaming output writes to multiple buffers, and one of the buffers overflows, then it will stop writing to all the output buffers. When an overflow is detected by Direct3D it is prevented from happening - no memory is corrupted. This predication may be used in conjunction with an SO_STATISTICS query so that when an overflow occurs the SO_STATISTIC query will let the application know how much memory was needed to prevent an overflow.
    </summary>
  </member>
  <member name="D3D11_QUERY::D3D11_QUERY_SO_STATISTICS_STREAM1">
    <summary>
      Get streaming output statistics for stream 1, such as the number of primitives streamed out in between <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nf-d3d11-id3d11devicecontext-begin">ID3D11DeviceContext::Begin</a> and <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nf-d3d11-id3d11devicecontext-end">ID3D11DeviceContext::End</a>. <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nf-d3d11-id3d11devicecontext-getdata">ID3D11DeviceContext::GetData</a> will return a <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ns-d3d11-d3d11_query_data_so_statistics">D3D11_QUERY_DATA_SO_STATISTICS</a> structure.
    </summary>
  </member>
  <member name="D3D11_QUERY::D3D11_QUERY_SO_OVERFLOW_PREDICATE_STREAM1">
    <summary>
      Determines whether or not the stream 1 output buffers overflowed in between <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nf-d3d11-id3d11devicecontext-begin">ID3D11DeviceContext::Begin</a> and <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nf-d3d11-id3d11devicecontext-end">ID3D11DeviceContext::End</a>. <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nf-d3d11-id3d11devicecontext-getdata">ID3D11DeviceContext::GetData</a> returns a BOOL - <b>TRUE</b> meaning there was an overflow, <b>FALSE</b> meaning there was not an overflow. If streaming output writes to multiple buffers, and one of the buffers overflows, then it will stop writing to all the output buffers. When an overflow is detected by Direct3D it is prevented from happening - no memory is corrupted. This predication may be used in conjunction with an SO_STATISTICS query so that when an overflow occurs the SO_STATISTIC query will let the application know how much memory was needed to prevent an overflow.
    </summary>
  </member>
  <member name="D3D11_QUERY::D3D11_QUERY_SO_STATISTICS_STREAM2">
    <summary>
      Get streaming output statistics for stream 2, such as the number of primitives streamed out in between <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nf-d3d11-id3d11devicecontext-begin">ID3D11DeviceContext::Begin</a> and <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nf-d3d11-id3d11devicecontext-end">ID3D11DeviceContext::End</a>. <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nf-d3d11-id3d11devicecontext-getdata">ID3D11DeviceContext::GetData</a> will return a <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ns-d3d11-d3d11_query_data_so_statistics">D3D11_QUERY_DATA_SO_STATISTICS</a> structure.
    </summary>
  </member>
  <member name="D3D11_QUERY::D3D11_QUERY_SO_OVERFLOW_PREDICATE_STREAM2">
    <summary>
      Determines whether or not the stream 2 output buffers overflowed in between <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nf-d3d11-id3d11devicecontext-begin">ID3D11DeviceContext::Begin</a> and <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nf-d3d11-id3d11devicecontext-end">ID3D11DeviceContext::End</a>. <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nf-d3d11-id3d11devicecontext-getdata">ID3D11DeviceContext::GetData</a> returns a BOOL - <b>TRUE</b> meaning there was an overflow, <b>FALSE</b> meaning there was not an overflow. If streaming output writes to multiple buffers, and one of the buffers overflows, then it will stop writing to all the output buffers. When an overflow is detected by Direct3D it is prevented from happening - no memory is corrupted. This predication may be used in conjunction with an SO_STATISTICS query so that when an overflow occurs the SO_STATISTIC query will let the application know how much memory was needed to prevent an overflow.
    </summary>
  </member>
  <member name="D3D11_QUERY::D3D11_QUERY_SO_STATISTICS_STREAM3">
    <summary>
      Get streaming output statistics for stream 3, such as the number of primitives streamed out in between <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nf-d3d11-id3d11devicecontext-begin">ID3D11DeviceContext::Begin</a> and <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nf-d3d11-id3d11devicecontext-end">ID3D11DeviceContext::End</a>. <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nf-d3d11-id3d11devicecontext-getdata">ID3D11DeviceContext::GetData</a> will return a <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ns-d3d11-d3d11_query_data_so_statistics">D3D11_QUERY_DATA_SO_STATISTICS</a> structure.
    </summary>
  </member>
  <member name="D3D11_QUERY::D3D11_QUERY_SO_OVERFLOW_PREDICATE_STREAM3">
    <summary>
      Determines whether or not the stream 3 output buffers overflowed in between <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nf-d3d11-id3d11devicecontext-begin">ID3D11DeviceContext::Begin</a> and <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nf-d3d11-id3d11devicecontext-end">ID3D11DeviceContext::End</a>. <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nf-d3d11-id3d11devicecontext-getdata">ID3D11DeviceContext::GetData</a> returns a BOOL - <b>TRUE</b> meaning there was an overflow, <b>FALSE</b> meaning there was not an overflow. If streaming output writes to multiple buffers, and one of the buffers overflows, then it will stop writing to all the output buffers. When an overflow is detected by Direct3D it is prevented from happening - no memory is corrupted. This predication may be used in conjunction with an SO_STATISTICS query so that when an overflow occurs the SO_STATISTIC query will let the application know how much memory was needed to prevent an overflow.
    </summary>
  </member>
  <member name="D3D11_FEATURE_DATA_MARKER_SUPPORT">
    <summary>
      <para>Describes whether a GPU profiling technique is supported.</para>
      <para>
        Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d11/ns-d3d11-d3d11_feature_data_marker_support" />
      </para>
    </summary>
  </member>
  <member name="D3D11_FEATURE_DATA_MARKER_SUPPORT::Profile">
    <summary>
      Specifies whether the hardware and driver support a GPU profiling technique that can be used with development tools. The runtime sets this member to <b>TRUE</b> if  the hardware and driver support data marking.
    </summary>
  </member>
  <member name="ID3D11ClassInstance">
    <summary>
      <para>This interface encapsulates an HLSL class.</para>
      <para>
        Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d11/nn-d3d11-id3d11classinstance" />
      </para>
    </summary>
  </member>
  <member name="ID3D11Device">
    <summary>
      <para>The device interface represents a virtual adapter; it is used to create resources.</para>
      <para>
        Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d11/nn-d3d11-id3d11device" />
      </para>
    </summary>
  </member>
  <member name="D3D11CalcSubresource">
    <summary>
      <para>Calculates a subresource index for a texture.</para>
      <para>
        Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d11/nf-d3d11-d3d11calcsubresource" />
      </para>
      <param name="MipSlice">A zero-based index for the mipmap level to address; 0 indicates the first, most detailed mipmap level.</param>
      <param name="ArraySlice">The zero-based index for the array level to address; always use 0 for volume (3D) textures.</param>
      <param name="MipLevels">Number of mipmap levels in the resource.</param>
    </summary>
  </member>
  <member name="ID3D11ShaderTrace::GetWrittenRegister">
    <summary>
      <para>Retrieves information about a register that was written by a step in the trace.</para>
      <para>
        Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d11shadertracing/nf-d3d11shadertracing-id3d11shadertrace-getwrittenregister" />
      </para>
      <param name="stepIndex">
        The index of the step within the trace. The range of the index is [0...NumTraceSteps-1], where <b>NumTraceSteps</b> is a member of the  <a href="https://docs.microsoft.com/windows/desktop/api/d3d11shadertracing/ns-d3d11shadertracing-d3d11_trace_stats">D3D11_TRACE_STATS</a> structure. You can retrieve information in any step order.
      </param>
      <param name="writtenRegisterIndex">
        The index of the register within  the trace step. The range of the index is [0...NumRegistersWritten-1], where <b>NumRegistersWritten</b> is a member of the  <a href="https://docs.microsoft.com/windows/desktop/api/d3d11shadertracing/ns-d3d11shadertracing-d3d11_trace_step">D3D11_TRACE_STEP</a> structure.
      </param>
      <param name="pRegister">
        A pointer to a <a href="https://docs.microsoft.com/windows/desktop/api/d3d11shadertracing/ns-d3d11shadertracing-d3d11_trace_register">D3D11_TRACE_REGISTER</a> structure. <b>GetWrittenRegister</b> fills the members of this structure with information about the register that was written by the step in the trace.
      </param>
      <param name="pValue">
        A pointer to a  <a href="https://docs.microsoft.com/windows/desktop/api/d3d11shadertracing/ns-d3d11shadertracing-d3d11_trace_value">D3D11_TRACE_VALUE</a> structure. <b>GetWrittenRegister</b> fills the members of this structure with information about the value that was written to the register.
      </param>
    </summary>
  </member>
  <member name="D3D11_SHADER_DESC">
    <summary>
      <para>Describes a shader.</para>
      <para>
        Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d11shader/ns-d3d11shader-d3d11_shader_desc" />
      </para>
    </summary>
  </member>
  <member name="D3D11_SHADER_DESC::Version">
    <summary>Shader version.</summary>
  </member>
  <member name="D3D11_SHADER_DESC::Creator">
    <summary>The name of the originator of the shader.</summary>
  </member>
  <member name="D3D11_SHADER_DESC::Flags">
    <summary>Shader compilation/parse flags.</summary>
  </member>
  <member name="D3D11_SHADER_DESC::ConstantBuffers">
    <summary>The number of shader-constant buffers.</summary>
  </member>
  <member name="D3D11_SHADER_DESC::BoundResources">
    <summary>The number of resource (textures and buffers) bound to a shader.</summary>
  </member>
  <member name="D3D11_SHADER_DESC::InputParameters">
    <summary>The number of parameters in the input signature.</summary>
  </member>
  <member name="D3D11_SHADER_DESC::OutputParameters">
    <summary>The number of parameters in the output signature.</summary>
  </member>
  <member name="D3D11_SHADER_DESC::InstructionCount">
    <summary>The number of intermediate-language instructions in the compiled shader.</summary>
  </member>
  <member name="D3D11_SHADER_DESC::TempRegisterCount">
    <summary>The number of temporary registers in the compiled shader.</summary>
  </member>
  <member name="D3D11_SHADER_DESC::TempArrayCount">
    <summary>Number of temporary arrays used.</summary>
  </member>
  <member name="D3D11_SHADER_DESC::DefCount">
    <summary>Number of constant defines.</summary>
  </member>
  <member name="D3D11_SHADER_DESC::DclCount">
    <summary>Number of declarations (input + output).</summary>
  </member>
  <member name="D3D11_SHADER_DESC::TextureNormalInstructions">
    <summary>Number of non-categorized texture instructions.</summary>
  </member>
  <member name="D3D11_SHADER_DESC::TextureLoadInstructions">
    <summary>Number of texture load instructions</summary>
  </member>
  <member name="D3D11_SHADER_DESC::TextureCompInstructions">
    <summary>Number of texture comparison instructions</summary>
  </member>
  <member name="D3D11_SHADER_DESC::TextureBiasInstructions">
    <summary>Number of texture bias instructions</summary>
  </member>
  <member name="D3D11_SHADER_DESC::TextureGradientInstructions">
    <summary>Number of texture gradient instructions.</summary>
  </member>
  <member name="D3D11_SHADER_DESC::FloatInstructionCount">
    <summary>Number of floating point arithmetic instructions used.</summary>
  </member>
  <member name="D3D11_SHADER_DESC::IntInstructionCount">
    <summary>Number of signed integer arithmetic instructions used.</summary>
  </member>
  <member name="D3D11_SHADER_DESC::UintInstructionCount">
    <summary>Number of unsigned integer arithmetic instructions used.</summary>
  </member>
  <member name="D3D11_SHADER_DESC::StaticFlowControlCount">
    <summary>Number of static flow control instructions used.</summary>
  </member>
  <member name="D3D11_SHADER_DESC::DynamicFlowControlCount">
    <summary>Number of dynamic flow control instructions used.</summary>
  </member>
  <member name="D3D11_SHADER_DESC::MacroInstructionCount">
    <summary>Number of macro instructions used.</summary>
  </member>
  <member name="D3D11_SHADER_DESC::ArrayInstructionCount">
    <summary>Number of array instructions used.</summary>
  </member>
  <member name="D3D11_SHADER_DESC::CutInstructionCount">
    <summary>Number of cut instructions used.</summary>
  </member>
  <member name="D3D11_SHADER_DESC::EmitInstructionCount">
    <summary>Number of emit instructions used.</summary>
  </member>
  <member name="D3D11_SHADER_DESC::GSOutputTopology">
    <summary>
      The <a href="https://docs.microsoft.com/windows/desktop/api/d3dcommon/ne-d3dcommon-d3d_primitive_topology">D3D_PRIMITIVE_TOPOLOGY</a>-typed value that represents the geometry shader output topology.
    </summary>
  </member>
  <member name="D3D11_SHADER_DESC::GSMaxOutputVertexCount">
    <summary>Geometry shader maximum output vertex count.</summary>
  </member>
  <member name="D3D11_SHADER_DESC::InputPrimitive">
    <summary>
      The <a href="https://docs.microsoft.com/windows/desktop/api/d3dcommon/ne-d3dcommon-d3d_primitive">D3D_PRIMITIVE</a>-typed value that represents the input primitive for a  geometry shader or hull shader.
    </summary>
  </member>
  <member name="D3D11_SHADER_DESC::PatchConstantParameters">
    <summary>Number of parameters in the patch-constant signature.</summary>
  </member>
  <member name="D3D11_SHADER_DESC::cGSInstanceCount">
    <summary>Number of geometry shader instances.</summary>
  </member>
  <member name="D3D11_SHADER_DESC::cControlPoints">
    <summary>Number of control points in the hull shader and domain shader.</summary>
  </member>
  <member name="D3D11_SHADER_DESC::HSOutputPrimitive">
    <summary>
      The <a href="https://docs.microsoft.com/windows/desktop/api/d3dcommon/ne-d3dcommon-d3d_tessellator_output_primitive">D3D_TESSELLATOR_OUTPUT_PRIMITIVE</a>-typed value that represents the tessellator output-primitive type.
    </summary>
  </member>
  <member name="D3D11_SHADER_DESC::HSPartitioning">
    <summary>
      The <a href="https://docs.microsoft.com/windows/desktop/api/d3dcommon/ne-d3dcommon-d3d_tessellator_partitioning">D3D_TESSELLATOR_PARTITIONING</a>-typed value that represents the tessellator partitioning mode.
    </summary>
  </member>
  <member name="D3D11_SHADER_DESC::TessellatorDomain">
    <summary>
      The <a href="https://docs.microsoft.com/windows/desktop/api/d3dcommon/ne-d3dcommon-d3d_tessellator_domain">D3D_TESSELLATOR_DOMAIN</a>-typed value that represents the tessellator domain.
    </summary>
  </member>
  <member name="D3D11_SHADER_DESC::cBarrierInstructions">
    <summary>Number of barrier instructions in a compute shader.</summary>
  </member>
  <member name="D3D11_SHADER_DESC::cInterlockedInstructions">
    <summary>Number of interlocked instructions in a compute shader.</summary>
  </member>
  <member name="D3D11_SHADER_DESC::cTextureStoreInstructions">
    <summary>Number of texture writes in a compute shader.</summary>
  </member>
  <member name="ID3D11VideoContext::DecoderEndFrame">
    <summary>
      <para>Signals the end of a decoding operation.</para>
      <para>
        Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d11/nf-d3d11-id3d11videocontext-decoderendframe" />
      </para>
      <param name="pDecoder">
        A pointer to the <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nn-d3d11-id3d11videodecoder">ID3D11VideoDecoder</a> interface. To get this pointer, call <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nf-d3d11-id3d11videodevice-createvideodecoder">ID3D11VideoDevice::CreateVideoDecoder</a>.
      </param>
    </summary>
  </member>
  <member name="D3D11_TEXTURE_LAYOUT">
    <summary>
      <para>Specifies texture layout options.</para>
      <para>
        Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d11_3/ne-d3d11_3-d3d11_texture_layout" />
      </para>
    </summary>
  </member>
  <member name="D3D11_TEXTURE_LAYOUT::D3D11_TEXTURE_LAYOUT_UNDEFINED">
    <summary>The texture layout is undefined, and is selected by the driver.</summary>
  </member>
  <member name="D3D11_TEXTURE_LAYOUT::D3D11_TEXTURE_LAYOUT_ROW_MAJOR">
    <summary>Data for the texture is stored in row major (sometimes called pitch-linear) order.</summary>
  </member>
  <member name="D3D11_TEXTURE_LAYOUT::D3D11_TEXTURE_LAYOUT_64K_STANDARD_SWIZZLE">
    <summary>A default texture uses the standardized swizzle pattern.</summary>
  </member>
  <member name="ID3D11DeviceContext::IASetInputLayout">
    <summary>
      <para>Bind an input-layout object to the input-assembler stage.</para>
      <para>
        Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d11/nf-d3d11-id3d11devicecontext-iasetinputlayout" />
      </para>
      <param name="pInputLayout">
        A pointer to the input-layout object (see <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nn-d3d11-id3d11inputlayout">ID3D11InputLayout</a>), which describes the input buffers that will be read by the IA stage.
      </param>
    </summary>
  </member>
  <member name="D3D11_VIDEO_PROCESSOR_OUTPUT_VIEW_DESC">
    <summary>
      <para>Describes a video processor output view.</para>
      <para>
        Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d11/ns-d3d11-d3d11_video_processor_output_view_desc" />
      </para>
    </summary>
  </member>
  <member name="D3D11_VIDEO_PROCESSOR_OUTPUT_VIEW_DESC::ViewDimension">
    <summary>
      The resource type of the view, specified as a member of the <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ne-d3d11-d3d11_vpov_dimension">D3D11_VPOV_DIMENSION</a> enumeration.
    </summary>
  </member>
  <member name="D3D11_VIDEO_PROCESSOR_OUTPUT_VIEW_DESC::Texture2D">
    <summary>
      A <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ns-d3d11-d3d11_tex2d_vpov">D3D11_TEX2D_VPOV</a> structure that identifies the texture resource for the output view.

      Use this member of the union when <b>ViewDimension</b> equals <b>D3D11_VPOV_DIMENSION_TEXTURE2D</b>.
    </summary>
  </member>
  <member name="D3D11_VIDEO_PROCESSOR_OUTPUT_VIEW_DESC::Texture2DArray">
    <summary>
      A <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ns-d3d11-d3d11_tex2d_array_vpov">D3D11_TEX2D_ARRAY_VPOV</a> structure that identifies the texture array for the output view.

      Use this member of the union when <b>ViewDimension</b> equals <b>D3D11_VPOV_DIMENSION_TEXTURE2DARRAY</b>.
    </summary>
  </member>
  <member name="ID3D11VideoDecoder">
    <summary>
      <para>Represents a hardware-accelerated video decoder for Microsoft Direct3D 11.</para>
      <para>
        Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d11/nn-d3d11-id3d11videodecoder" />
      </para>
    </summary>
  </member>
  <member name="D3D11_MAP_FLAG">
    <summary>
      <para>Specifies how the CPU should respond when an application calls the ID3D11DeviceContext::Map method on a resource that is being used by the GPU.</para>
      <para>
        Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d11/ne-d3d11-d3d11_map_flag" />
      </para>
    </summary>
  </member>
  <member name="D3D11_MAP_FLAG::D3D11_MAP_FLAG_DO_NOT_WAIT">
    <summary>
      Specifies that <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nf-d3d11-id3d11devicecontext-map">ID3D11DeviceContext::Map</a> should return DXGI_ERROR_WAS_STILL_DRAWING when the GPU blocks the CPU from accessing a resource. For more information about this error code, see <a href="https://docs.microsoft.com/windows/desktop/direct3ddxgi/dxgi-error">DXGI_ERROR</a>.
    </summary>
  </member>
  <member name="ID3D11VideoContext1::VideoProcessorGetOutputColorSpace1">
    <summary>
      <para>Gets the color space information for the video processor output surface.</para>
      <para>
        Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d11_1/nf-d3d11_1-id3d11videocontext1-videoprocessorgetoutputcolorspace1" />
      </para>
      <param name="pVideoProcessor">
        A pointer to the <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nn-d3d11-id3d11videoprocessor">ID3D11VideoProcessor</a> interface.
      </param>
      <param name="pColorSpace">
        A pointer to a <a href="https://docs.microsoft.com/windows/desktop/api/dxgicommon/ne-dxgicommon-dxgi_color_space_type">DXGI_COLOR_SPACE_TYPE</a> value that indicates the colorspace for the video processor output surface.
      </param>
    </summary>
  </member>
  <member name="ID3D11RasterizerState2">
    <summary>
      <para>The rasterizer-state interface holds a description for rasterizer state that you can bind to the rasterizer stage. This rasterizer-state interface supports forced sample count and conservative rasterization mode.</para>
      <para>
        Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d11_3/nn-d3d11_3-id3d11rasterizerstate2" />
      </para>
    </summary>
  </member>
  <member name="ID3D11DeviceContext::VSSetShaderResources">
    <summary>
      <para>Bind an array of shader resources to the vertex-shader stage.</para>
      <para>
        Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d11/nf-d3d11-id3d11devicecontext-vssetshaderresources" />
      </para>
      <param name="StartSlot">Index into the device's zero-based array to begin setting shader resources to (range is from 0 to D3D11_COMMONSHADER_INPUT_RESOURCE_SLOT_COUNT - 1).</param>
      <param name="NumViews">Number of shader resources to set. Up to a maximum of 128 slots are available for shader resources (range is from 0 to D3D11_COMMONSHADER_INPUT_RESOURCE_SLOT_COUNT - StartSlot).</param>
      <param name="ppShaderResourceViews">
        Array of <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nn-d3d11-id3d11shaderresourceview">shader resource view</a> interfaces to set to the device.
      </param>
    </summary>
  </member>
  <member name="ID3D11FunctionReflection::GetConstantBufferByName">
    <summary>
      <para>Gets a constant buffer by name for a function.</para>
      <para>
        Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d11shader/nf-d3d11shader-id3d11functionreflection-getconstantbufferbyname" />
      </para>
      <param name="Name">The constant-buffer name.</param>
    </summary>
  </member>
  <member name="ID3D11VideoContext::VideoProcessorSetStreamFrameFormat">
    <summary>
      <para>Specifies whether an input stream on the video processor contains interlaced or progressive frames.</para>
      <para>
        Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d11/nf-d3d11-id3d11videocontext-videoprocessorsetstreamframeformat" />
      </para>
      <param name="pVideoProcessor">
        A pointer to the <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nn-d3d11-id3d11videoprocessor">ID3D11VideoProcessor</a> interface. To get this pointer, call <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nf-d3d11-id3d11videodevice-createvideoprocessor">ID3D11VideoDevice::CreateVideoProcessor</a>.
      </param>
      <param name="StreamIndex">
        The zero-based index of the input stream. To get the maximum number of streams, call <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nf-d3d11-id3d11videoprocessorenumerator-getvideoprocessorcaps">ID3D11VideoProcessorEnumerator::GetVideoProcessorCaps</a> and check the <b>MaxStreamStates</b> structure member.
      </param>
      <param name="FrameFormat">
        A <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ne-d3d11-d3d11_video_frame_format">D3D11_VIDEO_FRAME_FORMAT</a> value that specifies the interlacing.
      </param>
    </summary>
  </member>
  <member name="ID3D11VideoContext1::VideoProcessorGetStreamMirror">
    <summary>
      <para>Gets values that indicate whether the video processor input stream is being flipped vertically or horizontally.</para>
      <para>
        Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d11_1/nf-d3d11_1-id3d11videocontext1-videoprocessorgetstreammirror" />
      </para>
      <param name="pVideoProcessor">
        A pointer to the <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nn-d3d11-id3d11videoprocessor">ID3D11VideoProcessor</a> interface.
      </param>
      <param name="StreamIndex">An index identifying the input stream.</param>
      <param name="pEnable">A pointer to a boolean value indicating whether mirroring is enabled. True if mirroring is enabled; otherwise, false.</param>
      <param name="pFlipHorizontal">A pointer to a boolean value indicating whether the stream is being flipped horizontally. True if the stream is being flipped horizontally; otherwise, false.</param>
      <param name="pFlipVertical">A pointer to a boolean value indicating whether the stream is being flipped vertically. True if the stream is being flipped vertically; otherwise, false.</param>
    </summary>
  </member>
  <member name="ID3D11Linker::UseLibrary">
    <summary>
      <para>Adds an instance of a library module to be used for linking.</para>
      <para>
        Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d11shader/nf-d3d11shader-id3d11linker-uselibrary" />
      </para>
      <param name="pLibraryMI">
        A pointer to the <a href="https://docs.microsoft.com/windows/desktop/api/d3d11shader/nn-d3d11shader-id3d11moduleinstance">ID3D11ModuleInstance</a> interface for the library module instance.
      </param>
    </summary>
  </member>
  <member name="ID3D11Device::GetExceptionMode">
    <summary>
      <para>Get the exception-mode flags.</para>
      <para>
        Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d11/nf-d3d11-id3d11device-getexceptionmode" />
      </para>
    </summary>
  </member>
  <member name="ID3D11ClassInstance::GetTypeName">
    <summary>
      <para>Gets the type of the current HLSL class.</para>
      <para>
        Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d11/nf-d3d11-id3d11classinstance-gettypename" />
      </para>
      <param name="pTypeName">Type of the current HLSL class.</param>
      <param name="pBufferLength">
        The length of the <i>pTypeName</i> parameter.
      </param>
    </summary>
  </member>
  <member name="D3D11_FEATURE_VIDEO">
    <summary>
      <para>Specifies a Direct3D 11 video feature or feature set to query about.</para>
      <para>
        Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d11_4/ne-d3d11_4-d3d11_feature_video" />
      </para>
    </summary>
  </member>
  <member name="D3D11_FEATURE_VIDEO::D3D11_FEATURE_VIDEO_DECODER_HISTOGRAM">
    <summary>
      Retrieves the supported components, bin count, and counter bit depth for the a decode histogram with the specified decode profile, resolution, and format. The associated data structure is <a href ="ns-d3d11_4-d3d11_feature_data_video_decoder_histogram.md">D3D11_FEATURE_DATA_VIDEO_DECODER_HISTOGRAM</a>.
    </summary>
  </member>
  <member name="ID3D11DeviceContext4">
    <summary>
      <para>The device context interface represents a device context; it is used to render commands. ID3D11DeviceContext4 adds new methods to those in ID3D11DeviceContext3.</para>
      <para>
        Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d11_3/nn-d3d11_3-id3d11devicecontext4" />
      </para>
    </summary>
  </member>
  <member name="ID3D11VideoContext">
    <summary>
      <para>Provides the video functionality of a Microsoft Direct3D 11 device.</para>
      <para>
        Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d11/nn-d3d11-id3d11videocontext" />
      </para>
    </summary>
  </member>
  <member name="ID3D11View::GetResource">
    <summary>
      <para>Get the resource that is accessed through this view.</para>
      <para>
        Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d11/nf-d3d11-id3d11view-getresource" />
      </para>
      <param name="ppResource">
        Address of a pointer to the resource that is accessed through this view. (See <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nn-d3d11-id3d11resource">ID3D11Resource</a>.)
      </param>
    </summary>
  </member>
  <member name="ID3D11VideoDevice::SetPrivateData">
    <summary>
      <para>Sets private data on the video device and associates that data with a GUID.</para>
      <para>
        Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d11/nf-d3d11-id3d11videodevice-setprivatedata" />
      </para>
      <param name="guid">The GUID associated with the data.</param>
      <param name="DataSize">The size of the data, in bytes.</param>
      <param name="pData">A pointer to the data.</param>
    </summary>
  </member>
  <member name="D3D11_TEX2DMS_ARRAY_SRV">
    <summary>
      <para>Specifies the subresources from an array of multisampled 2D textures to use in a shader-resource view.</para>
      <para>
        Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d11/ns-d3d11-d3d11_tex2dms_array_srv" />
      </para>
    </summary>
  </member>
  <member name="D3D11_TEX2DMS_ARRAY_SRV::FirstArraySlice">
    <summary>The index of the first texture to use in an array of textures.</summary>
  </member>
  <member name="D3D11_TEX2DMS_ARRAY_SRV::ArraySize">
    <summary>Number of textures to use.</summary>
  </member>
  <member name="D3D11_ASYNC_GETDATA_FLAG">
    <summary>
      <para>Optional flags that control the behavior of ID3D11DeviceContext::GetData.</para>
      <para>
        Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d11/ne-d3d11-d3d11_async_getdata_flag" />
      </para>
    </summary>
  </member>
  <member name="D3D11_ASYNC_GETDATA_FLAG::D3D11_ASYNC_GETDATA_DONOTFLUSH">
    <summary>Do not flush the command buffer. This can potentially cause an infinite loop if GetData is continually called until it returns S_OK as there may still be commands in the command buffer that need to be processed in order for GetData to return S_OK. Since the commands in the command buffer are not flushed they will not be processed and therefore GetData will never return S_OK.</summary>
  </member>
  <member name="ID3D11VideoContext::EncryptionBlt">
    <summary>
      <para>Reads encrypted data from a protected surface.</para>
      <para>
        Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d11/nf-d3d11-id3d11videocontext-encryptionblt" />
      </para>
      <param name="pCryptoSession">
        A pointer to the <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nn-d3d11-id3d11cryptosession">ID3D11CryptoSession</a> interface of the cryptographic session.
      </param>
      <param name="pSrcSurface">
        A pointer to the <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nn-d3d11-id3d11texture2d">ID3D11Texture2D</a> interface of the protected surface.
      </param>
      <param name="pDstSurface">
        A pointer to the <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nn-d3d11-id3d11texture2d">ID3D11Texture2D</a> interface of the surface that receives the encrypted data.
      </param>
      <param name="IVSize">
        The size of the <i>pIV</i> buffer, in bytes.
      </param>
      <param name="pIV">
        A pointer to a buffer that receives the initialization vector (IV). The caller allocates this buffer, but the driver generates the IV.

        For 128-bit AES-CTR encryption, <i>pIV</i> points to a <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ns-d3d11-d3d11_aes_ctr_iv">D3D11_AES_CTR_IV</a> structure. When the driver generates the first IV, it initializes the structure to a random number. For each subsequent IV, the driver simply increments the <b>IV</b> member of the structure, ensuring that the value always increases. The application can validate that the same IV is never used more than once with the same key pair.
      </param>
    </summary>
  </member>
  <member name="ID3D11ShaderReflection::GetBitwiseInstructionCount">
    <summary>
      <para>Gets the number of bitwise instructions.</para>
      <para>
        Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d11shader/nf-d3d11shader-id3d11shaderreflection-getbitwiseinstructioncount" />
      </para>
    </summary>
  </member>
  <member name="D3D11_SHADER_TRACKING_RESOURCE_TYPE">
    <summary>
      <para>Indicates which resource types to track.</para>
      <para>
        Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d11sdklayers/ne-d3d11sdklayers-d3d11_shader_tracking_resource_type" />
      </para>
    </summary>
  </member>
  <member name="D3D11_SHADER_TRACKING_RESOURCE_TYPE::D3D11_SHADER_TRACKING_RESOURCE_TYPE_NONE">
    <summary>No resource types are tracked.</summary>
  </member>
  <member name="D3D11_SHADER_TRACKING_RESOURCE_TYPE::D3D11_SHADER_TRACKING_RESOURCE_TYPE_UAV_DEVICEMEMORY">
    <summary>Track device memory that is created with unordered access view (UAV) bind flags.</summary>
  </member>
  <member name="D3D11_SHADER_TRACKING_RESOURCE_TYPE::D3D11_SHADER_TRACKING_RESOURCE_TYPE_NON_UAV_DEVICEMEMORY">
    <summary>Track device memory that is created without UAV bind flags.</summary>
  </member>
  <member name="D3D11_SHADER_TRACKING_RESOURCE_TYPE::D3D11_SHADER_TRACKING_RESOURCE_TYPE_ALL_DEVICEMEMORY">
    <summary>Track all device memory.</summary>
  </member>
  <member name="D3D11_SHADER_TRACKING_RESOURCE_TYPE::D3D11_SHADER_TRACKING_RESOURCE_TYPE_GROUPSHARED_MEMORY">
    <summary>Track all shaders that use group shared memory.</summary>
  </member>
  <member name="D3D11_SHADER_TRACKING_RESOURCE_TYPE::D3D11_SHADER_TRACKING_RESOURCE_TYPE_ALL_SHARED_MEMORY">
    <summary>Track all device memory except device memory that is created without UAV bind flags.</summary>
  </member>
  <member name="D3D11_SHADER_TRACKING_RESOURCE_TYPE::D3D11_SHADER_TRACKING_RESOURCE_TYPE_GROUPSHARED_NON_UAV">
    <summary>Track all device memory except device memory that is created with UAV bind flags.</summary>
  </member>
  <member name="D3D11_SHADER_TRACKING_RESOURCE_TYPE::D3D11_SHADER_TRACKING_RESOURCE_TYPE_ALL">
    <summary>Track all memory on the device.</summary>
  </member>
  <member name="ID3D11SamplerState::GetDesc">
    <summary>
      <para>Gets the description for sampler state that you used to create the sampler-state object.</para>
      <para>
        Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d11/nf-d3d11-id3d11samplerstate-getdesc" />
      </para>
      <param name="pDesc">
        A pointer to a <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ns-d3d11-d3d11_sampler_desc">D3D11_SAMPLER_DESC</a> structure that receives a description of the sampler state.
      </param>
    </summary>
  </member>
  <member name="ID3D11DeviceContext::GetData">
    <summary>
      <para>Get data from the graphics processing unit (GPU) asynchronously.</para>
      <para>
        Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d11/nf-d3d11-id3d11devicecontext-getdata" />
      </para>
      <param name="pAsync">
        A pointer to an <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nn-d3d11-id3d11asynchronous">ID3D11Asynchronous</a> interface for the object about which <b>GetData</b> retrieves data.
      </param>
      <param name="pData">
        Address of memory that will receive the data. If <b>NULL</b>, <b>GetData</b> will be used only to check status. The type of data output depends on the type of asynchronous interface.
      </param>
      <param name="DataSize">
        Size of the data to retrieve or 0. Must be 0 when <i>pData</i> is <b>NULL</b>.
      </param>
      <param name="GetDataFlags">
        Optional flags. Can be 0 or any combination of the flags enumerated by <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ne-d3d11-d3d11_async_getdata_flag">D3D11_ASYNC_GETDATA_FLAG</a>.
      </param>
    </summary>
  </member>
  <member name="ID3D11DeviceContext::OMSetRenderTargets">
    <summary>
      <para>Bind one or more render targets atomically and the depth-stencil buffer to the output-merger stage.</para>
      <para>
        Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d11/nf-d3d11-id3d11devicecontext-omsetrendertargets" />
      </para>
      <param name="NumViews">
        Number of render targets to bind (ranges between 0 and <b>D3D11_SIMULTANEOUS_RENDER_TARGET_COUNT</b>). If this parameter is nonzero, the number of entries in the array to which <i>ppRenderTargetViews</i> points must equal the number in this parameter.
      </param>
      <param name="ppRenderTargetViews">
        Pointer to an array of <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nn-d3d11-id3d11rendertargetview">ID3D11RenderTargetView</a> that represent the render targets to bind to the device.
        If this parameter is <b>NULL</b> and <i>NumViews</i> is 0, no render targets are bound.
      </param>
      <param name="pDepthStencilView">
        Pointer to a <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nn-d3d11-id3d11depthstencilview">ID3D11DepthStencilView</a> that represents the depth-stencil view to bind to the device.
        If this parameter is <b>NULL</b>, the depth-stencil view is not bound.
      </param>
    </summary>
  </member>
  <member name="D3D11_COLOR_WRITE_ENABLE">
    <summary>
      <para>Identify which components of each pixel of a render target are writable during blending.</para>
      <para>
        Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d11/ne-d3d11-d3d11_color_write_enable" />
      </para>
    </summary>
  </member>
  <member name="D3D11_COLOR_WRITE_ENABLE::D3D11_COLOR_WRITE_ENABLE_RED">
    <summary>Allow data to be stored in the red component.</summary>
  </member>
  <member name="D3D11_COLOR_WRITE_ENABLE::D3D11_COLOR_WRITE_ENABLE_GREEN">
    <summary>Allow data to be stored in the green component.</summary>
  </member>
  <member name="D3D11_COLOR_WRITE_ENABLE::D3D11_COLOR_WRITE_ENABLE_BLUE">
    <summary>Allow data to be stored in the blue component.</summary>
  </member>
  <member name="D3D11_COLOR_WRITE_ENABLE::D3D11_COLOR_WRITE_ENABLE_ALPHA">
    <summary>Allow data to be stored in the alpha component.</summary>
  </member>
  <member name="D3D11_COLOR_WRITE_ENABLE::D3D11_COLOR_WRITE_ENABLE_ALL">
    <summary>Allow data to be stored in all components.</summary>
  </member>
  <member name="ID3D11DeviceContext::GenerateMips">
    <summary>
      <para>Generates mipmaps for the given shader resource.</para>
      <para>
        Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d11/nf-d3d11-id3d11devicecontext-generatemips" />
      </para>
      <param name="pShaderResourceView">
        A pointer to an <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nn-d3d11-id3d11shaderresourceview">ID3D11ShaderResourceView</a> interface that represents the shader resource.
      </param>
    </summary>
  </member>
  <member name="ID3D11Device5::CreateFence">
    <summary>
      <para>Creates a fence object.</para>
      <para>
        Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d11_4/nf-d3d11_4-id3d11device5-createfence" />
      </para>
      <param name="InitialValue">The initial value for the fence.</param>
      <param name="Flags">
        A combination of <a href="https://docs.microsoft.com/windows/desktop/api/d3d11_3/ne-d3d11_3-d3d11_fence_flag">D3D11_FENCE_FLAG</a>-typed values that are combined by using a bitwise OR operation.
        The resulting value specifies options for the fence.
      </param>
      <param name="ReturnedInterface">
        The globally unique identifier (<b>GUID</b>) for the fence interface (<a href="https://docs.microsoft.com/windows/desktop/api/d3d11_3/nn-d3d11_3-id3d11fence">ID3D11Fence</a>).
        The <b>REFIID</b>, or <b>GUID</b>, of the interface to the fence can be obtained by using the __uuidof() macro.
        For example, __uuidof(ID3D11Fence) will get the <b>GUID</b> of the interface to a fence.
      </param>
      <param name="ppFence">
        A pointer to a memory block that receives a pointer to the <a href="https://docs.microsoft.com/windows/desktop/api/d3d11_3/nn-d3d11_3-id3d11fence">ID3D11Fence</a> interface that is used to access the fence.
      </param>
    </summary>
  </member>
  <member name="ID3D11Device4::RegisterDeviceRemovedEvent">
    <summary>
      <para>Registers the &quot;device removed&quot; event and indicates when a Direct3D device has become removed for any reason, using an asynchronous notification mechanism.</para>
      <para>
        Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d11_4/nf-d3d11_4-id3d11device4-registerdeviceremovedevent" />
      </para>
      <param name="hEvent">The handle to the "device removed" event.</param>
      <param name="pdwCookie">
        A pointer to information about the "device removed" event, which can be used in <a href="https://docs.microsoft.com/windows/desktop/api/d3d11_4/nf-d3d11_4-id3d11device4-unregisterdeviceremoved">UnregisterDeviceRemoved</a> to unregister the event.
      </param>
    </summary>
  </member>
  <member name="ID3D11DeviceContext::RSSetScissorRects">
    <summary>
      <para>Bind an array of scissor rectangles to the rasterizer stage.</para>
      <para>
        Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d11/nf-d3d11-id3d11devicecontext-rssetscissorrects" />
      </para>
      <param name="NumRects">Number of scissor rectangles to bind.</param>
      <param name="pRects">
        An array of scissor rectangles (see <a href="https://docs.microsoft.com/windows/desktop/direct3d11/d3d11-rect">D3D11_RECT</a>).
      </param>
    </summary>
  </member>
  <member name="D3D11_ENCRYPTED_BLOCK_INFO">
    <summary>
      <para>Specifies which bytes in a video surface are encrypted.</para>
      <para>
        Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d11/ns-d3d11-d3d11_encrypted_block_info" />
      </para>
    </summary>
  </member>
  <member name="D3D11_ENCRYPTED_BLOCK_INFO::NumEncryptedBytesAtBeginning">
    <summary>The number of bytes that are encrypted at the start of the buffer.</summary>
  </member>
  <member name="D3D11_ENCRYPTED_BLOCK_INFO::NumBytesInSkipPattern">
    <summary>
      The number of bytes that are skipped after the first <b>NumEncryptedBytesAtBeginning</b> bytes, and then after each block of <b>NumBytesInEncryptPattern</b> bytes. Skipped bytes are not encrypted.
    </summary>
  </member>
  <member name="D3D11_ENCRYPTED_BLOCK_INFO::NumBytesInEncryptPattern">
    <summary>The number of bytes that are encrypted after each block of skipped bytes.</summary>
  </member>
  <member name="D3D11_TEXTURE1D_DESC">
    <summary>
      <para>Describes a 1D texture.</para>
      <para>
        Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d11/ns-d3d11-d3d11_texture1d_desc" />
      </para>
    </summary>
  </member>
  <member name="D3D11_TEXTURE1D_DESC::Width">
    <summary>
      Texture width (in texels). The  range is from 1 to D3D11_REQ_TEXTURE1D_U_DIMENSION (16384). However, the range is actually constrained by the <a href="https://docs.microsoft.com/windows/desktop/direct3d11/overviews-direct3d-11-devices-downlevel-intro">feature level</a> at which you create the rendering device. For more information about restrictions, see Remarks.
    </summary>
  </member>
  <member name="D3D11_TEXTURE1D_DESC::MipLevels">
    <summary>
      The maximum number of mipmap levels in the texture. See the remarks in <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ns-d3d11-d3d11_tex1d_srv">D3D11_TEX1D_SRV</a>. Use 1 for a multisampled texture; or 0 to generate a full set of subtextures.
    </summary>
  </member>
  <member name="D3D11_TEXTURE1D_DESC::ArraySize">
    <summary>
      Number of textures in the array. The  range is from 1 to D3D11_REQ_TEXTURE1D_ARRAY_AXIS_DIMENSION (2048). However, the range is actually constrained by the <a href="https://docs.microsoft.com/windows/desktop/direct3d11/overviews-direct3d-11-devices-downlevel-intro">feature level</a> at which you create the rendering device. For more information about restrictions, see Remarks.
    </summary>
  </member>
  <member name="D3D11_TEXTURE1D_DESC::Format">
    <summary>
      Texture format (see <a href="https://docs.microsoft.com/windows/desktop/api/dxgiformat/ne-dxgiformat-dxgi_format">DXGI_FORMAT</a>).
    </summary>
  </member>
  <member name="D3D11_TEXTURE1D_DESC::Usage">
    <summary>
      Value that identifies how the texture is to be read from and written to. The most common value is D3D11_USAGE_DEFAULT; see <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ne-d3d11-d3d11_usage">D3D11_USAGE</a> for all possible values.
    </summary>
  </member>
  <member name="D3D11_TEXTURE1D_DESC::BindFlags">
    <summary>
      Flags (see <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ne-d3d11-d3d11_bind_flag">D3D11_BIND_FLAG</a>) for binding to pipeline stages. The flags can be combined by a logical OR. For a 1D texture, the allowable values are: D3D11_BIND_SHADER_RESOURCE, D3D11_BIND_RENDER_TARGET and D3D11_BIND_DEPTH_STENCIL.
    </summary>
  </member>
  <member name="D3D11_TEXTURE1D_DESC::CPUAccessFlags">
    <summary>
      Flags (see <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ne-d3d11-d3d11_cpu_access_flag">D3D11_CPU_ACCESS_FLAG</a>) to specify the types of CPU access allowed. Use 0 if CPU access is not required. These flags can be combined with a logical OR.
    </summary>
  </member>
  <member name="D3D11_TEXTURE1D_DESC::MiscFlags">
    <summary>
      Flags (see <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ne-d3d11-d3d11_resource_misc_flag">D3D11_RESOURCE_MISC_FLAG</a>) that identify other, less common resource options. Use 0 if none of these flags apply. These flags can be combined with a logical OR.
    </summary>
  </member>
  <member name="ID3D11On12Device1">
    <summary>
      <para>Enables better interoperability with a component that might be handed a Direct3D 11 device, but which wants to leverage Direct3D 12 instead.</para>
      <para>
        Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d11on12/nn-d3d11on12-id3d11on12device1" />
      </para>
    </summary>
  </member>
  <member name="D3D11_AUTHENTICATED_QUERY_ACCESSIBILITY_ENCRYPTION_GUID_COUNT_OUTPUT">
    <summary>
      <para>Contains the response to a D3D11_AUTHENTICATED_QUERY_ENCRYPTION_WHEN_ACCESSIBLE_GUID_COUNT query.</para>
      <para>
        Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d11/ns-d3d11-d3d11_authenticated_query_accessibility_encryption_guid_count_output" />
      </para>
    </summary>
  </member>
  <member name="D3D11_AUTHENTICATED_QUERY_ACCESSIBILITY_ENCRYPTION_GUID_COUNT_OUTPUT::Output">
    <summary>
      A <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ns-d3d11-d3d11_authenticated_query_output">D3D11_AUTHENTICATED_QUERY_OUTPUT</a> structure that contains a Message Authentication Code (MAC) and other data.
    </summary>
  </member>
  <member name="D3D11_AUTHENTICATED_QUERY_ACCESSIBILITY_ENCRYPTION_GUID_COUNT_OUTPUT::EncryptionGuidCount">
    <summary>The number of encryption GUIDs.</summary>
  </member>
  <member name="D3D11_INFO_QUEUE_FILTER_DESC">
    <summary>
      <para>Allow or deny certain types of messages to pass through a filter.</para>
      <para>
        Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d11sdklayers/ns-d3d11sdklayers-d3d11_info_queue_filter_desc" />
      </para>
    </summary>
  </member>
  <member name="D3D11_INFO_QUEUE_FILTER_DESC::NumCategories">
    <summary>Number of message categories to allow or deny.</summary>
  </member>
  <member name="D3D11_INFO_QUEUE_FILTER_DESC::pCategoryList">
    <summary>
      Array of message categories to allow or deny. Array must have at least NumCategories members (see <a href="https://docs.microsoft.com/windows/desktop/api/d3d11sdklayers/ne-d3d11sdklayers-d3d11_message_category">D3D11_MESSAGE_CATEGORY</a>).
    </summary>
  </member>
  <member name="D3D11_INFO_QUEUE_FILTER_DESC::NumSeverities">
    <summary>Number of message severity levels to allow or deny.</summary>
  </member>
  <member name="D3D11_INFO_QUEUE_FILTER_DESC::pSeverityList">
    <summary>
      Array of message severity levels to allow or deny. Array must have at least NumSeverities members (see <a href="https://docs.microsoft.com/windows/desktop/api/d3d11sdklayers/ne-d3d11sdklayers-d3d11_message_severity">D3D11_MESSAGE_SEVERITY</a>).
    </summary>
  </member>
  <member name="D3D11_INFO_QUEUE_FILTER_DESC::NumIDs">
    <summary>Number of message IDs to allow or deny.</summary>
  </member>
  <member name="D3D11_INFO_QUEUE_FILTER_DESC::pIDList">
    <summary>
      Array of message IDs to allow or deny. Array must have at least NumIDs members (see <a href="https://docs.microsoft.com/windows/desktop/api/d3d11sdklayers/ne-d3d11sdklayers-d3d11_message_id">D3D11_MESSAGE_ID</a>).
    </summary>
  </member>
  <member name="ID3D11InfoQueue::SetMessageCountLimit">
    <summary>
      <para>Set the maximum number of messages that can be added to the message queue.</para>
      <para>
        Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d11sdklayers/nf-d3d11sdklayers-id3d11infoqueue-setmessagecountlimit" />
      </para>
      <param name="MessageCountLimit">Maximum number of messages that can be added to the message queue. -1 means no limit.</param>
    </summary>
  </member>
  <member name="ID3D11VideoContext::VideoProcessorGetStreamOutputRate">
    <summary>
      <para>Gets the rate at which the video processor produces output frames for an input stream.</para>
      <para>
        Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d11/nf-d3d11-id3d11videocontext-videoprocessorgetstreamoutputrate" />
      </para>
      <param name="pVideoProcessor">
        A pointer to the <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nn-d3d11-id3d11videoprocessor">ID3D11VideoProcessor</a> interface. To get this pointer, call <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nf-d3d11-id3d11videodevice-createvideoprocessor">ID3D11VideoDevice::CreateVideoProcessor</a>.
      </param>
      <param name="StreamIndex">
        The zero-based index of the input stream. To get the maximum number of streams, call <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nf-d3d11-id3d11videoprocessorenumerator-getvideoprocessorcaps">ID3D11VideoProcessorEnumerator::GetVideoProcessorCaps</a> and check the <b>MaxStreamStates</b> structure member.
      </param>
      <param name="pOutputRate">
        Receives a <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ne-d3d11-d3d11_video_processor_output_rate">D3D11_VIDEO_PROCESSOR_OUTPUT_RATE</a> value that specifies the output rate.
      </param>
      <param name="pRepeatFrame">
        Receives a Boolean value that specifies how the driver performs frame-rate conversion, if required.



        <table>
          <tr>
            <th>Value</th>
            <th>Meaning</th>
          </tr>
          <tr>
            <td width="40%">
              <a id="TRUE"></a>
              <a id="true"></a>
              <dl>
                <dt>
                  <b>TRUE</b>
                </dt>
              </dl>
            </td>
            <td width="60%">
              Repeat frames.

            </td>
          </tr>
          <tr>
            <td width="40%">
              <a id="FALSE"></a>
              <a id="false"></a>
              <dl>
                <dt>
                  <b>FALSE</b>
                </dt>
              </dl>
            </td>
            <td width="60%">
              Interpolate frames.

            </td>
          </tr>
        </table>
      </param>
      <param name="pCustomRate">
        A pointer to a <a href="https://docs.microsoft.com/windows/desktop/api/dxgicommon/ns-dxgicommon-dxgi_rational">DXGI_RATIONAL</a> structure. If the output rate is <b>D3D11_VIDEO_PROCESSOR_OUTPUT_RATE_CUSTOM</b>, the method fills in this structure with the exact output rate. Otherwise, this parameter is ignored.
      </param>
    </summary>
  </member>
  <member name="ID3D11DeviceContext::RSGetState">
    <summary>
      <para>Get the rasterizer state from the rasterizer stage of the pipeline.</para>
      <para>
        Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d11/nf-d3d11-id3d11devicecontext-rsgetstate" />
      </para>
      <param name="ppRasterizerState">
        Address of a pointer to a rasterizer-state interface (see <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nn-d3d11-id3d11rasterizerstate">ID3D11RasterizerState</a>) to fill with information from the device.
      </param>
    </summary>
  </member>
  <member name="ID3D11VideoProcessor">
    <summary>
      <para>Represents a video processor for Microsoft Direct3D 11.</para>
      <para>
        Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d11/nn-d3d11-id3d11videoprocessor" />
      </para>
    </summary>
  </member>
  <member name="ID3D11DeviceContext::SOSetTargets">
    <summary>
      <para>Set the target output buffers for the stream-output stage of the pipeline.</para>
      <para>
        Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d11/nf-d3d11-id3d11devicecontext-sosettargets" />
      </para>
      <param name="NumBuffers">
        The number of buffer to bind to the device. A maximum of four output buffers can be set. If less than four are defined by the call, the remaining buffer slots are set to <b>NULL</b>. See Remarks.
      </param>
      <param name="ppSOTargets">
        The array of output buffers (see <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nn-d3d11-id3d11buffer">ID3D11Buffer</a>) to bind to the device. The buffers must have been created with the <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ne-d3d11-d3d11_bind_flag">D3D11_BIND_STREAM_OUTPUT</a> flag.
      </param>
      <param name="pOffsets">
        Array of offsets to the output buffers from <i>ppSOTargets</i>, one offset for each buffer. The offset values must be in bytes.
      </param>
    </summary>
  </member>
  <member name="ID3D11ClassInstance::GetClassLinkage">
    <summary>
      <para>Gets the ID3D11ClassLinkage object associated with the current HLSL class.</para>
      <para>
        Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d11/nf-d3d11-id3d11classinstance-getclasslinkage" />
      </para>
      <param name="ppLinkage">
        A pointer to a <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nn-d3d11-id3d11classlinkage">ID3D11ClassLinkage</a> interface pointer.
      </param>
    </summary>
  </member>
  <member name="D3D11_RESOURCE_FLAGS">
    <summary>
      <para>Used with ID3D11On12Device::CreateWrappedResourceto override flags that would be inferred by the resource properties or heap properties, including bind flags, misc flags, and CPU access flags.</para>
      <para>
        Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d11on12/ns-d3d11on12-d3d11_resource_flags" />
      </para>
    </summary>
  </member>
  <member name="D3D11_RESOURCE_FLAGS::BindFlags">
    <summary>
      Bind flags must be either completely inferred, or completely specified, to allow the graphics driver to scope a general D3D12 resource to something that D3D11 can understand.


      If a bind flag is specified which is not supported by the provided resource, an error will be returned.


      The following bind flags (<a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ne-d3d11-d3d11_bind_flag">D3D11_BIND_FLAG</a> enumeration constants) will not be assumed, and must be specified in order for a resource to be used in such a fashion:


      <ul>
        <li>
          D3D11_BIND_VERTEX_BUFFER
        </li>
        <li>
          D3D11_BIND_INDEX_BUFFER
        </li>
        <li>
          D3D11_BIND_CONSTANT_BUFFER
        </li>
        <li>
          D3D11_BIND_STREAM_OUTPUT
        </li>
        <li>
          D3D11_BIND_DECODER
        </li>
        <li>
          D3D11_BIND_VIDEO_ENCODER
        </li>
      </ul>
      The following bind flags will be assumed based on the presence of the corresponding D3D12 resource flag, and can be removed by specifying bind flags:


      <ul>
        <li>
          D3D11_BIND_SHADER_RESOURCE, as long as D3D12_RESOURCE_MISC_DENY_SHADER_RESOURCE is not present
        </li>
        <li>
          D3D11_BIND_RENDER_TARGET, if D3D12_RESOURCE_MISC_ALLOW_RENDER_TARGET is present
        </li>
        <li>
          D3D11_BIND_DEPTH_STENCIL, if D3D12_RESOURCE_MISC_ALLOW_DEPTH_STENCIL is present
        </li>
        <li>D3D11_BIND_UNORDERED_ACCESS, if D3D12_RESOURCE_MISC_ALLOW_UNORDERED_ACCESS is present</li>
      </ul>
      A render target or UAV buffer can be wrapped without overriding flags; but a VB/IB/CB/SO buffer must have bind flags manually specified, since these are mutually exclusive in Direct3D 11.
    </summary>
  </member>
  <member name="D3D11_RESOURCE_FLAGS::MiscFlags">
    <summary>
      If misc flags are nonzero, then any specified flags will be OR’d into the final resource desc with inferred flags.
      Misc flags can be partially specified in order to add functionality, but misc flags which are implied cannot be masked out.


      The following misc flags (<a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ne-d3d11-d3d11_resource_misc_flag">D3D11_RESOURCE_MISC_FLAG</a> enumeration constants) will not be assumed:


      <ul>
        <li>
          D3D11_RESOURCE_MISC_GENERATE_MIPS (conflicts with CLAMP).
        </li>
        <li>
          D3D11_RESOURCE_MISC_TEXTURECUBE (alters default view behavior).
        </li>
        <li>
          D3D11_RESOURCE_MISC_DRAWINDIRECT_ARGS (exclusive with some bind flags).
        </li>
        <li>
          D3D11_RESOURCE_MISC_BUFFER_ALLOW_RAW_VIEWS (exclusive with other types of UAVs).
        </li>
        <li>
          D3D11_RESOURCE_MISC_BUFFER_STRUCTURED (exclusive with other types of UAVs).
        </li>
        <li>
          D3D11_RESOURCE_MISC_RESOURCE_CLAMP (prohibits D3D10 QIs, conflicts with GENERATE_MIPS).
        </li>
        <li>
          D3D11_RESOURCE_MISC_SHARED_KEYEDMUTEX.  It is possible to create a D3D11 keyed mutex resource, create a shared handle for it, and open it via 11on12 or D3D11.
        </li>
      </ul>
      The following misc flags will be assumed, and cannot be removed from the produced resource desc.
      If one of these is set, and the D3D12 resource does not support it, creation will fail:


      <ul>
        <li>
          D3D11_RESOURCE_MISC_SHARED, D3D11_RESOURCE_MISC_SHARED_NTHANDLE, D3D11_RESOURCE_MISC_RESTRICT_SHARED_RESOURCE, if appropriate heap misc flags are present.
        </li>
        <li>
          D3D11_RESOURCE_MISC_GDI_COMPATIBLE, if D3D12 resource is GDI-compatible.
        </li>
        <li>
          D3D11_RESOURCE_MISC_TILED, if D3D12 resource was created via <a href="https://docs.microsoft.com/windows/desktop/api/d3d12/nf-d3d12-id3d12device-createreservedresource">CreateReservedResource</a>.
        </li>
        <li>
          D3D11_RESOURCE_MISC_TILE_POOL, if a D3D12 heap was passed in.
        </li>
      </ul>
      The following misc flags are invalid to specify for this API:


      <ul>
        <li>
          D3D11_RESOURCE_MISC_RESTRICTED_CONTENT, since D3D12 only supports hardware protection.
        </li>
        <li>
          D3D11_RESOURCE_MISC_RESTRICT_SHARED_RESOURCE_DRIVER does not exist in 12, and cannot be added in after resource creation.
        </li>
        <li>
          D3D11_RESOURCE_MISC_GUARDED is only meant to be set by an internal creation mechanism.
        </li>
      </ul>
    </summary>
  </member>
  <member name="D3D11_RESOURCE_FLAGS::CPUAccessFlags">
    <summary>
      The <b>CPUAccessFlags</b> are not inferred from the D3D12 resource.
      This is because all resources are treated as D3D11_USAGE_DEFAULT, so <b>CPUAccessFlags</b> force validation which assumes <a href="https://docs.microsoft.com/windows/desktop/api/d3d12/nf-d3d12-id3d12resource-map">Map</a> of default buffers or textures.
      Wrapped resources do not support <b>Map(DISCARD)</b>.
      Wrapped resources do not support <b>Map(NO_OVERWRITE)</b>, but that can be implemented by mapping the underlying D3D12 resource instead.
      Issuing a <b>Map</b> call on a wrapped resource will synchronize with all D3D11 work submitted against that resource, unless the DO_NOT_WAIT flag was used.
    </summary>
  </member>
  <member name="D3D11_RESOURCE_FLAGS::StructureByteStride">
    <summary>The size of each element in the buffer structure (in bytes) when the buffer represents a structured buffer.</summary>
  </member>
  <member name="ID3D11ShaderReflectionConstantBuffer">
    <summary>
      <para>This shader-reflection interface provides access to a constant buffer.</para>
      <para>
        Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d11shader/nn-d3d11shader-id3d11shaderreflectionconstantbuffer" />
      </para>
    </summary>
  </member>
  <member name="ID3D11VideoContext::NegotiateCryptoSessionKeyExchange">
    <summary>
      <para>Establishes the session key for a cryptographic session.</para>
      <para>
        Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d11/nf-d3d11-id3d11videocontext-negotiatecryptosessionkeyexchange" />
      </para>
      <param name="pCryptoSession">
        A pointer to the <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nn-d3d11-id3d11cryptosession">ID3D11CryptoSession</a> interface of the cryptographic session.
      </param>
      <param name="DataSize">
        The size of the <i>pData</i> byte array, in bytes.
      </param>
      <param name="pData">A pointer to a byte array that contains the encrypted session key.</param>
    </summary>
  </member>
  <member name="ID3D11ShaderTrace::GetStep">
    <summary>
      <para>Retrieves information about the specified step in the trace.</para>
      <para>
        Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d11shadertracing/nf-d3d11shadertracing-id3d11shadertrace-getstep" />
      </para>
      <param name="stepIndex">
        The index of the step within the trace. The range of the index is [0...NumTraceSteps-1], where <b>NumTraceSteps</b> is a member of the  <a href="https://docs.microsoft.com/windows/desktop/api/d3d11shadertracing/ns-d3d11shadertracing-d3d11_trace_stats">D3D11_TRACE_STATS</a> structure. You can retrieve information about a step in any step order.
      </param>
      <param name="pTraceStep">
        A pointer to a  <a href="https://docs.microsoft.com/windows/desktop/api/d3d11shadertracing/ns-d3d11shadertracing-d3d11_trace_step">D3D11_TRACE_STEP</a> structure. <b>GetStep</b> fills the members of this structure with information about the trace step that is specified by the <i>stepIndex</i>  parameter.
      </param>
    </summary>
  </member>
  <member name="ID3D11DeviceContext::DrawIndexedInstancedIndirect">
    <summary>
      <para>Draw indexed, instanced, GPU-generated primitives.</para>
      <para>
        Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d11/nf-d3d11-id3d11devicecontext-drawindexedinstancedindirect" />
      </para>
      <param name="pBufferForArgs">
        A pointer to an <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nn-d3d11-id3d11buffer">ID3D11Buffer</a>, which is a buffer containing the GPU generated primitives.
      </param>
      <param name="AlignedByteOffsetForArgs">
        Offset in <i>pBufferForArgs</i> to the start of the GPU generated primitives.
      </param>
    </summary>
  </member>
  <member name="ID3D11DeviceContext1::CopySubresourceRegion1">
    <summary>
      <para>Copies a region from a source resource to a destination resource.</para>
      <para>
        Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d11_1/nf-d3d11_1-id3d11devicecontext1-copysubresourceregion1" />
      </para>
      <param name="pDstResource">A pointer to the destination resource.</param>
      <param name="DstSubresource">Destination subresource index.</param>
      <param name="DstX">The x-coordinate of the upper-left corner of the destination region.</param>
      <param name="DstY">The y-coordinate of the upper-left corner of the destination region. For a 1D subresource, this must be zero.</param>
      <param name="DstZ">The z-coordinate of the upper-left corner of the destination region. For a 1D or 2D subresource, this must be zero.</param>
      <param name="pSrcResource">A pointer to the source resource.</param>
      <param name="SrcSubresource">Source subresource index.</param>
      <param name="pSrcBox">
        A pointer to a 3D box that defines the region of the source subresource that <b>CopySubresourceRegion1</b> can copy. If <b>NULL</b>, <b>CopySubresourceRegion1</b> copies the entire source subresource. The box must fit within the source resource.

        An empty box results in a no-op. A box is empty if the top value is greater than or equal to the bottom value, or the left value is greater than or equal to the right value, or the front value is greater than or equal to the back value. When the box is empty, <b>CopySubresourceRegion1</b> doesn't perform a copy operation.
      </param>
      <param name="CopyFlags">
        A <a href="https://docs.microsoft.com/windows/desktop/api/d3d11_1/ne-d3d11_1-d3d11_copy_flags">D3D11_COPY_FLAGS</a>-typed value that specifies how to perform the copy operation. If you specify zero for no copy option, <b>CopySubresourceRegion1</b> behaves like <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nf-d3d11-id3d11devicecontext-copysubresourceregion">ID3D11DeviceContext::CopySubresourceRegion</a>. For existing display drivers that can't process these flags, the runtime doesn't use them.
      </param>
    </summary>
  </member>
  <member name="ID3D11InfoQueue::SetBreakOnCategory">
    <summary>
      <para>Set a message category to break on when a message with that category passes through the storage filter.</para>
      <para>
        Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d11sdklayers/nf-d3d11sdklayers-id3d11infoqueue-setbreakoncategory" />
      </para>
      <param name="Category">
        Message category to break on (see <a href="https://docs.microsoft.com/windows/desktop/api/d3d11sdklayers/ne-d3d11sdklayers-d3d11_message_category">D3D11_MESSAGE_CATEGORY</a>).
      </param>
      <param name="bEnable">Turns this breaking condition on or off (true for on, false for off).</param>
    </summary>
  </member>
  <member name="ID3D11DeviceContext::VSGetShader">
    <summary>
      <para>Get the vertex shader currently set on the device.</para>
      <para>
        Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d11/nf-d3d11-id3d11devicecontext-vsgetshader" />
      </para>
      <param name="ppVertexShader">
        Address of a pointer to a vertex shader (see <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nn-d3d11-id3d11vertexshader">ID3D11VertexShader</a>) to be returned by the method.
      </param>
      <param name="ppClassInstances">
        Pointer to an array of class instance interfaces (see <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nn-d3d11-id3d11classinstance">ID3D11ClassInstance</a>).
      </param>
      <param name="pNumClassInstances">The number of class-instance elements in the array.</param>
    </summary>
  </member>
  <member name="ID3D11DeviceContext::GSGetConstantBuffers">
    <summary>
      <para>Get the constant buffers used by the geometry shader pipeline stage.</para>
      <para>
        Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d11/nf-d3d11-id3d11devicecontext-gsgetconstantbuffers" />
      </para>
      <param name="StartSlot">Index into the device's zero-based array to begin retrieving constant buffers from (ranges from 0 to D3D11_COMMONSHADER_CONSTANT_BUFFER_API_SLOT_COUNT - 1).</param>
      <param name="NumBuffers">Number of buffers to retrieve (ranges from 0 to D3D11_COMMONSHADER_CONSTANT_BUFFER_API_SLOT_COUNT - StartSlot).</param>
      <param name="ppConstantBuffers">
        Array of constant buffer interface pointers (see <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nn-d3d11-id3d11buffer">ID3D11Buffer</a>) to be returned by the method.
      </param>
    </summary>
  </member>
  <member name="D3D11_FORMAT_SUPPORT2">
    <summary>
      <para>Unordered resource support options for a compute shader resource (see ID3D11Device::CheckFeatureSupport).</para>
      <para>
        Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d11/ne-d3d11-d3d11_format_support2" />
      </para>
    </summary>
  </member>
  <member name="D3D11_FORMAT_SUPPORT2::D3D11_FORMAT_SUPPORT2_UAV_ATOMIC_ADD">
    <summary>Format supports atomic add.</summary>
  </member>
  <member name="D3D11_FORMAT_SUPPORT2::D3D11_FORMAT_SUPPORT2_UAV_ATOMIC_BITWISE_OPS">
    <summary>Format supports atomic bitwise operations.</summary>
  </member>
  <member name="D3D11_FORMAT_SUPPORT2::D3D11_FORMAT_SUPPORT2_UAV_ATOMIC_COMPARE_STORE_OR_COMPARE_EXCHANGE">
    <summary>Format supports atomic compare with store or exchange.</summary>
  </member>
  <member name="D3D11_FORMAT_SUPPORT2::D3D11_FORMAT_SUPPORT2_UAV_ATOMIC_EXCHANGE">
    <summary>Format supports atomic exchange.</summary>
  </member>
  <member name="D3D11_FORMAT_SUPPORT2::D3D11_FORMAT_SUPPORT2_UAV_ATOMIC_SIGNED_MIN_OR_MAX">
    <summary>Format supports atomic min and max.</summary>
  </member>
  <member name="D3D11_FORMAT_SUPPORT2::D3D11_FORMAT_SUPPORT2_UAV_ATOMIC_UNSIGNED_MIN_OR_MAX">
    <summary>Format supports atomic unsigned min and max.</summary>
  </member>
  <member name="D3D11_FORMAT_SUPPORT2::D3D11_FORMAT_SUPPORT2_UAV_TYPED_LOAD">
    <summary>Format supports a typed load.</summary>
  </member>
  <member name="D3D11_FORMAT_SUPPORT2::D3D11_FORMAT_SUPPORT2_UAV_TYPED_STORE">
    <summary>Format supports a typed store.</summary>
  </member>
  <member name="D3D11_FORMAT_SUPPORT2::D3D11_FORMAT_SUPPORT2_OUTPUT_MERGER_LOGIC_OP">
    <summary>
      Format supports logic operations in blend state.

      <b>Direct3D 11:  </b>This value is not supported until Direct3D 11.1.
    </summary>
  </member>
  <member name="D3D11_FORMAT_SUPPORT2::D3D11_FORMAT_SUPPORT2_TILED">
    <summary>
      Format supports tiled resources.

      <b>Direct3D 11:  </b>This value is not supported until Direct3D 11.2.
    </summary>
  </member>
  <member name="D3D11_FORMAT_SUPPORT2::D3D11_FORMAT_SUPPORT2_SHAREABLE">
    <summary>
      Format supports shareable resources.
      <div class="alert">
        <b>Note</b>  <a href="https://docs.microsoft.com/windows/desktop/api/dxgiformat/ne-dxgiformat-dxgi_format">DXGI_FORMAT_R8G8B8A8_UNORM</a> and <b>DXGI_FORMAT_R8G8B8A8_UNORM_SRGB</b> are never shareable when using feature level 9, even if the device indicates optional feature support for <b>D3D11_FORMAT_SUPPORT_SHAREABLE</b>.
        Attempting to create shared resources with DXGI formats <b>DXGI_FORMAT_R8G8B8A8_UNORM</b> and <b>DXGI_FORMAT_R8G8B8A8_UNORM_SRGB</b> will always fail unless the feature level is 10_0 or higher.
      </div>
      <div> </div>


      <b>Direct3D 11:  </b>This value is not supported until Direct3D 11.2.
    </summary>
  </member>
  <member name="D3D11_FORMAT_SUPPORT2::D3D11_FORMAT_SUPPORT2_MULTIPLANE_OVERLAY">
    <summary>Format supports multi-plane overlays.</summary>
  </member>
  <member name="ID3D11DeviceContext::CSSetUnorderedAccessViews">
    <summary>
      <para>Sets an array of views for an unordered resource.</para>
      <para>
        Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d11/nf-d3d11-id3d11devicecontext-cssetunorderedaccessviews" />
      </para>
      <param name="StartSlot">Index of the first element in the zero-based array to begin setting  (ranges from 0 to D3D11_1_UAV_SLOT_COUNT - 1). D3D11_1_UAV_SLOT_COUNT is defined as 64.</param>
      <param name="NumUAVs">
        Number of views to set (ranges from 0 to D3D11_1_UAV_SLOT_COUNT - <i>StartSlot</i>).
      </param>
      <param name="ppUnorderedAccessViews">
        A pointer to an array of <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nn-d3d11-id3d11unorderedaccessview">ID3D11UnorderedAccessView</a> pointers to be set by the method.
      </param>
      <param name="pUAVInitialCounts">
        An array of append and consume buffer offsets. A value of -1 indicates to keep the current offset. Any other values set the hidden counter
        for that appendable and consumable UAV. <i>pUAVInitialCounts</i> is only relevant for UAVs that were created with either
        <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ne-d3d11-d3d11_buffer_uav_flag">D3D11_BUFFER_UAV_FLAG_APPEND</a> or <b>D3D11_BUFFER_UAV_FLAG_COUNTER</b> specified
        when the UAV was created; otherwise, the argument is ignored.
      </param>
    </summary>
  </member>
  <member name="ID3D11DeviceContext::Begin">
    <summary>
      <para>Mark the beginning of a series of commands.</para>
      <para>
        Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d11/nf-d3d11-id3d11devicecontext-begin" />
      </para>
      <param name="pAsync">
        A pointer to an <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nn-d3d11-id3d11asynchronous">ID3D11Asynchronous</a> interface.
      </param>
    </summary>
  </member>
  <member name="ID3D11FunctionLinkingGraph::SetInputSignature">
    <summary>
      <para>Sets the input signature of the function-linking-graph.</para>
      <para>
        Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d11shader/nf-d3d11shader-id3d11functionlinkinggraph-setinputsignature" />
      </para>
      <param name="pInputParameters">
        An array of  <a href="https://docs.microsoft.com/windows/desktop/api/d3d11shader/ns-d3d11shader-d3d11_parameter_desc">D3D11_PARAMETER_DESC</a> structures for the parameters of the input signature.
      </param>
      <param name="cInputParameters">
        The number of input parameters in the <i>pInputParameters</i> array.
      </param>
      <param name="ppInputNode">
        A pointer to a variable that receives a pointer to the <a href="https://docs.microsoft.com/windows/desktop/api/d3d11shader/nn-d3d11shader-id3d11linkingnode">ID3D11LinkingNode</a> interface that represents the input signature of the function-linking-graph.
      </param>
    </summary>
  </member>
  <member name="D3D11_GEOMETRY_SHADER_TRACE_DESC">
    <summary>
      <para>Describes an instance of a geometry shader to trace.</para>
      <para>
        Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d11shadertracing/ns-d3d11shadertracing-d3d11_geometry_shader_trace_desc" />
      </para>
    </summary>
  </member>
  <member name="D3D11_GEOMETRY_SHADER_TRACE_DESC::Invocation">
    <summary>The invocation number of the instance of the geometry shader.</summary>
  </member>
  <member name="D3D11_SO_DECLARATION_ENTRY">
    <summary>
      <para>Description of a vertex element in a vertex buffer in an output slot.</para>
      <para>
        Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d11/ns-d3d11-d3d11_so_declaration_entry" />
      </para>
    </summary>
  </member>
  <member name="D3D11_SO_DECLARATION_ENTRY::Stream">
    <summary>Zero-based, stream number.</summary>
  </member>
  <member name="D3D11_SO_DECLARATION_ENTRY::SemanticName">
    <summary>
      Type of output element; possible values include: <b>"POSITION"</b>, <b>"NORMAL"</b>, or <b>"TEXCOORD0"</b>.
      Note that if <i>SemanticName</i> is <b>NULL</b> then
      <i>ComponentCount</i> can be greater than 4 and the described entry will be a gap in the stream out where no data will be written.
    </summary>
  </member>
  <member name="D3D11_SO_DECLARATION_ENTRY::SemanticIndex">
    <summary>Output element's zero-based index. Should be used if, for example, you have more than one texture coordinate stored in each vertex.</summary>
  </member>
  <member name="D3D11_SO_DECLARATION_ENTRY::StartComponent">
    <summary>
      Which component of the entry to begin writing out to. Valid values are 0 to 3. For example, if you only wish to output to the y and z components
      of a position, then StartComponent should be 1 and ComponentCount should be 2.
    </summary>
  </member>
  <member name="D3D11_SO_DECLARATION_ENTRY::ComponentCount">
    <summary>
      The number of components of the entry to write out to. Valid values are 1 to 4. For example, if you only wish to output to the y and z components
      of a position, then StartComponent should be 1 and ComponentCount should be 2.  Note that if <i>SemanticName</i> is <b>NULL</b> then
      <i>ComponentCount</i> can be greater than 4 and the described entry will be a gap in the stream out where no data will be written.
    </summary>
  </member>
  <member name="D3D11_SO_DECLARATION_ENTRY::OutputSlot">
    <summary>
      The associated stream output buffer that is bound to the pipeline
      (see <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nf-d3d11-id3d11devicecontext-sosettargets">ID3D11DeviceContext::SOSetTargets</a>).
      The valid range for <i>OutputSlot</i> is 0 to 3.
    </summary>
  </member>
  <member name="ID3D11DeviceContext1::HSSetConstantBuffers1">
    <summary>
      <para>Sets the constant buffers that the hull-shader stage of the pipeline uses.</para>
      <para>
        Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d11_1/nf-d3d11_1-id3d11devicecontext1-hssetconstantbuffers1" />
      </para>
      <param name="StartSlot">Index into the device's zero-based array to begin setting constant buffers to (ranges from 0 to D3D11_COMMONSHADER_CONSTANT_BUFFER_API_SLOT_COUNT - 1).</param>
      <param name="NumBuffers">
        Number of buffers to set (ranges from 0 to D3D11_COMMONSHADER_CONSTANT_BUFFER_API_SLOT_COUNT - <i>StartSlot</i>).
      </param>
      <param name="ppConstantBuffers">Array of constant buffers being given to the device.</param>
      <param name="pFirstConstant">
        An array that holds the offsets into the buffers that  <i>ppConstantBuffers</i> specifies. Each offset specifies where, from the shader's point of view, each constant buffer starts.  Each offset is measured in shader constants, which are 16 bytes (4*32-bit components).  Therefore, an offset of 16 indicates that the start of the associated constant buffer is 256 bytes into the constant buffer. Each offset must be a multiple of 16 constants.
      </param>
      <param name="pNumConstants">
        An array that holds the numbers of constants in the buffers that  <i>ppConstantBuffers</i> specifies. Each number specifies the number of constants that are contained in the constant buffer that the shader uses. Each number of constants starts from its respective offset that is specified in the <i>pFirstConstant</i> array. Each number of constants must be a multiple of 16 constants, in the range [0..4096].
      </param>
    </summary>
  </member>
  <member name="ID3D11DeviceContext1">
    <summary>
      <para>The device context interface represents a device context; it is used to render commands. ID3D11DeviceContext1 adds new methods to those in ID3D11DeviceContext.</para>
      <para>
        Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d11_1/nn-d3d11_1-id3d11devicecontext1" />
      </para>
    </summary>
  </member>
  <member name="ID3D11Buffer">
    <summary>
      <para>A buffer interface accesses a buffer resource, which is unstructured memory. Buffers typically store vertex or index data.</para>
      <para>
        Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d11/nn-d3d11-id3d11buffer" />
      </para>
    </summary>
  </member>
  <member name="ID3D11Device3::CreateDeferredContext3">
    <summary>
      <para>Creates a deferred context, which can record command lists.</para>
      <para>
        Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d11_3/nf-d3d11_3-id3d11device3-createdeferredcontext3" />
      </para>
      <param name="ContextFlags">Reserved for future use.  Pass 0.</param>
      <param name="ppDeferredContext">
        Upon completion of the method, the passed pointer to an <a href="https://docs.microsoft.com/windows/desktop/api/d3d11_3/nn-d3d11_3-id3d11devicecontext3">ID3D11DeviceContext3</a> interface pointer is initialized.
      </param>
    </summary>
  </member>
  <member name="D3D11_SHADER_VARIABLE_DESC">
    <summary>
      <para>Describes a shader variable.</para>
      <para>
        Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d11shader/ns-d3d11shader-d3d11_shader_variable_desc" />
      </para>
    </summary>
  </member>
  <member name="D3D11_SHADER_VARIABLE_DESC::Name">
    <summary>The variable name.</summary>
  </member>
  <member name="D3D11_SHADER_VARIABLE_DESC::StartOffset">
    <summary>Offset from the start of the parent structure to the beginning of the variable.</summary>
  </member>
  <member name="D3D11_SHADER_VARIABLE_DESC::Size">
    <summary>Size of the variable (in bytes).</summary>
  </member>
  <member name="D3D11_SHADER_VARIABLE_DESC::uFlags">
    <summary>
      A combination of <a href="https://docs.microsoft.com/windows/desktop/api/d3dcommon/ne-d3dcommon-d3d_shader_variable_flags">D3D_SHADER_VARIABLE_FLAGS</a>-typed values that are combined by using a bitwise OR operation. The resulting value identifies shader-variable properties.
    </summary>
  </member>
  <member name="D3D11_SHADER_VARIABLE_DESC::DefaultValue">
    <summary>The default value for initializing the variable.</summary>
  </member>
  <member name="D3D11_SHADER_VARIABLE_DESC::StartTexture">
    <summary>Offset from the start of the variable to the beginning of the texture.</summary>
  </member>
  <member name="D3D11_SHADER_VARIABLE_DESC::TextureSize">
    <summary>The size of the texture, in bytes.</summary>
  </member>
  <member name="D3D11_SHADER_VARIABLE_DESC::StartSampler">
    <summary>Offset from the start of the variable to the beginning of the sampler.</summary>
  </member>
  <member name="D3D11_SHADER_VARIABLE_DESC::SamplerSize">
    <summary>The size of the sampler, in bytes.</summary>
  </member>
  <member name="D3D11_VPOV_DIMENSION">
    <summary>
      <para>Specifies how to access a resource that is used in a video processor output view.</para>
      <para>
        Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d11/ne-d3d11-d3d11_vpov_dimension" />
      </para>
    </summary>
  </member>
  <member name="D3D11_VPOV_DIMENSION::D3D11_VPOV_DIMENSION_UNKNOWN">
    <summary>Not a valid value.</summary>
  </member>
  <member name="D3D11_VPOV_DIMENSION::D3D11_VPOV_DIMENSION_TEXTURE2D">
    <summary>The resource will be accessed as a 2D texture.</summary>
  </member>
  <member name="D3D11_VPOV_DIMENSION::D3D11_VPOV_DIMENSION_TEXTURE2DARRAY">
    <summary>The resource will be accessed as an array of 2D textures.</summary>
  </member>
  <member name="D3D11_SHARED_RESOURCE_TIER">
    <summary>
      <para>Defines constants that specify TBD.</para>
      <para>
        Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d11/ne-d3d11-d3d11_shared_resource_tier" />
      </para>
    </summary>
  </member>
  <member name="D3D11_SHARED_RESOURCE_TIER::D3D11_SHARED_RESOURCE_TIER_0">
    <summary>
      Specifies the support available when [D3D11_FEATURE_DATA_D3D11_OPTIONS::ExtendedResourceSharing](./ns-d3d11-d3d11_feature_data_d3d11_options.md) is <b>FALSE</b>.
    </summary>
  </member>
  <member name="D3D11_SHARED_RESOURCE_TIER::D3D11_SHARED_RESOURCE_TIER_1">
    <summary>
      Specifies the support available when [D3D11_FEATURE_DATA_D3D11_OPTIONS::ExtendedResourceSharing](./ns-d3d11-d3d11_feature_data_d3d11_options.md) is <b>TRUE</b>.
    </summary>
  </member>
  <member name="D3D11_SHARED_RESOURCE_TIER::D3D11_SHARED_RESOURCE_TIER_2">
    <summary>
      Specifies the support available when [D3D11_FEATURE_DATA_D3D11_OPTIONS4::ExtendedNV12SharedTextureSupported](../d3d11_4/ns-d3d11_4-d3d11_feature_data_d3d11_options4.md) is <b>TRUE</b>. Also see [Extended NV12 texture support](/windows/win32/direct3d11/direct3d-11-4-features#extended-nv12-texture-support).
    </summary>
  </member>
  <member name="D3D11_SHARED_RESOURCE_TIER::D3D11_SHARED_RESOURCE_TIER_3">
    <summary>
      Specifies that <a href="https://docs.microsoft.com../dxgiformat/ne-dxgiformat-dxgi_format.md">DXGI_FORMAT_R11G11B10_FLOAT</a> supports NT handle sharing. Also see <a href="https://docs.microsoft.com../dxgi1_2/nf-dxgi1_2-idxgiresource1-createsharedhandle.md">CreateSharedHandle</a>.
    </summary>
  </member>
  <member name="ID3D11DeviceContext::ClearDepthStencilView">
    <summary>
      <para>Clears the depth-stencil resource.</para>
      <para>
        Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d11/nf-d3d11-id3d11devicecontext-cleardepthstencilview" />
      </para>
      <param name="pDepthStencilView">Pointer to the depth stencil to be cleared.</param>
      <param name="ClearFlags">
        Identify the type of data to clear (see <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ne-d3d11-d3d11_clear_flag">D3D11_CLEAR_FLAG</a>).
      </param>
      <param name="Depth">Clear the depth buffer with this value. This value will be clamped between 0 and 1.</param>
      <param name="Stencil">Clear the stencil buffer with this value.</param>
    </summary>
  </member>
  <member name="D3D11_AUTHENTICATED_QUERY_PROTECTION_OUTPUT">
    <summary>
      <para>Contains the response to a D3D11_AUTHENTICATED_QUERY_PROTECTION query.</para>
      <para>
        Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d11/ns-d3d11-d3d11_authenticated_query_protection_output" />
      </para>
    </summary>
  </member>
  <member name="D3D11_AUTHENTICATED_QUERY_PROTECTION_OUTPUT::Output">
    <summary>
      A <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ns-d3d11-d3d11_authenticated_query_output">D3D11_AUTHENTICATED_QUERY_OUTPUT</a> structure that contains a Message Authentication Code (MAC) and other data.
    </summary>
  </member>
  <member name="D3D11_AUTHENTICATED_QUERY_PROTECTION_OUTPUT::ProtectionFlags">
    <summary>
      A <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ns-d3d11-d3d11_authenticated_protection_flags">D3D11_AUTHENTICATED_PROTECTION_FLAGS</a> union that specifies the protection level.
    </summary>
  </member>
  <member name="ID3D11Device::CreateQuery">
    <summary>
      <para>This interface encapsulates methods for querying information from the GPU.</para>
      <para>
        Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d11/nf-d3d11-id3d11device-createquery" />
      </para>
      <param name="pQueryDesc">
        Pointer to a query description (see <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ns-d3d11-d3d11_query_desc">D3D11_QUERY_DESC</a>).
      </param>
      <param name="ppQuery">
        Address of a pointer to the query object created (see <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nn-d3d11-id3d11query">ID3D11Query</a>).
      </param>
    </summary>
  </member>
  <member name="ID3D11DeviceContext1::DSGetConstantBuffers1">
    <summary>
      <para>Gets the constant buffers that the domain-shader stage uses.</para>
      <para>
        Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d11_1/nf-d3d11_1-id3d11devicecontext1-dsgetconstantbuffers1" />
      </para>
      <param name="StartSlot">Index into the device's zero-based array to begin retrieving constant buffers from (ranges from 0 to D3D11_COMMONSHADER_CONSTANT_BUFFER_API_SLOT_COUNT - 1).</param>
      <param name="NumBuffers">
        Number of buffers to retrieve (ranges from 0 to D3D11_COMMONSHADER_CONSTANT_BUFFER_API_SLOT_COUNT - <i>StartSlot</i>).
      </param>
      <param name="ppConstantBuffers">Array of constant buffer interface pointers to be returned by the method.</param>
      <param name="pFirstConstant">
        A pointer to an array that receives the offsets into the buffers that  <i>ppConstantBuffers</i> specifies. Each offset specifies where, from the shader's point of view, each constant buffer starts.  Each offset is measured in shader constants, which are 16 bytes (4*32-bit components).  Therefore, an offset of 2 indicates that the start of the associated constant buffer is 32 bytes into the constant buffer. The runtime sets <i>pFirstConstant</i> to <b>NULL</b> if the buffers do not have offsets.
      </param>
      <param name="pNumConstants">
        A pointer to an array that receives the numbers of constants in the buffers that  <i>ppConstantBuffers</i> specifies. Each number specifies the number of constants that are contained in the constant buffer that the shader uses. Each number of constants starts from its respective offset that is specified in the <i>pFirstConstant</i> array. The runtime sets <i>pNumConstants</i> to <b>NULL</b> if it doesn't specify the numbers of constants in each buffer.
      </param>
    </summary>
  </member>
  <member name="ID3D11PixelShader">
    <summary>
      <para>A pixel-shader interface manages an executable program (a pixel shader) that controls the pixel-shader stage.</para>
      <para>
        Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d11/nn-d3d11-id3d11pixelshader" />
      </para>
    </summary>
  </member>
  <member name="ID3D11CommandList::GetContextFlags">
    <summary>
      <para>Gets the initialization flags associated with the deferred context that created the command list.</para>
      <para>
        Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d11/nf-d3d11-id3d11commandlist-getcontextflags" />
      </para>
    </summary>
  </member>
  <member name="ID3D11DeviceContext::SetResourceMinLOD">
    <summary>
      <para>Sets the minimum level-of-detail (LOD) for a resource.</para>
      <para>
        Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d11/nf-d3d11-id3d11devicecontext-setresourceminlod" />
      </para>
      <param name="pResource">
        A pointer to an <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nn-d3d11-id3d11resource">ID3D11Resource</a> that represents the resource.
      </param>
      <param name="MinLOD">
        The level-of-detail, which ranges between 0 and the maximum number of mipmap levels of the resource. For example, the maximum number of mipmap levels of a 1D texture is specified in the  <b>MipLevels</b> member of the  <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ns-d3d11-d3d11_texture1d_desc">D3D11_TEXTURE1D_DESC</a> structure.
      </param>
    </summary>
  </member>
  <member name="D3D11_RENDER_TARGET_BLEND_DESC">
    <summary>
      <para>Describes the blend state for a render target.</para>
      <para>
        Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d11/ns-d3d11-d3d11_render_target_blend_desc" />
      </para>
    </summary>
  </member>
  <member name="D3D11_RENDER_TARGET_BLEND_DESC::BlendEnable">
    <summary>Enable (or disable) blending.</summary>
  </member>
  <member name="D3D11_RENDER_TARGET_BLEND_DESC::SrcBlend">
    <summary>
      This <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ne-d3d11-d3d11_blend">blend option</a> specifies the operation to perform on the RGB value that the pixel shader outputs. The <b>BlendOp</b> member defines how to combine the <b>SrcBlend</b> and <b>DestBlend</b> operations.
    </summary>
  </member>
  <member name="D3D11_RENDER_TARGET_BLEND_DESC::DestBlend">
    <summary>
      This <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ne-d3d11-d3d11_blend">blend option</a> specifies the operation to perform on the current RGB value in the render target. The <b>BlendOp</b> member defines how to combine the <b>SrcBlend</b> and <b>DestBlend</b> operations.
    </summary>
  </member>
  <member name="D3D11_RENDER_TARGET_BLEND_DESC::BlendOp">
    <summary>
      This <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ne-d3d11-d3d11_blend_op">blend operation</a> defines how to combine the <b>SrcBlend</b> and <b>DestBlend</b> operations.
    </summary>
  </member>
  <member name="D3D11_RENDER_TARGET_BLEND_DESC::SrcBlendAlpha">
    <summary>
      This <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ne-d3d11-d3d11_blend">blend option</a> specifies the operation to perform on the alpha value that the pixel shader outputs. Blend options that end in _COLOR are not allowed. The <b>BlendOpAlpha</b> member defines how to combine the <b>SrcBlendAlpha</b> and <b>DestBlendAlpha</b> operations.
    </summary>
  </member>
  <member name="D3D11_RENDER_TARGET_BLEND_DESC::DestBlendAlpha">
    <summary>
      This <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ne-d3d11-d3d11_blend">blend option</a> specifies the operation to perform on the current alpha value in the render target. Blend options that end in _COLOR are not allowed. The <b>BlendOpAlpha</b> member defines how to combine the <b>SrcBlendAlpha</b> and <b>DestBlendAlpha</b> operations.
    </summary>
  </member>
  <member name="D3D11_RENDER_TARGET_BLEND_DESC::BlendOpAlpha">
    <summary>
      This <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ne-d3d11-d3d11_blend_op">blend operation</a> defines how to combine the <b>SrcBlendAlpha</b> and <b>DestBlendAlpha</b> operations.
    </summary>
  </member>
  <member name="D3D11_RENDER_TARGET_BLEND_DESC::RenderTargetWriteMask">
    <summary>A write mask.</summary>
  </member>
  <member name="D3D11_VIDEO_PROCESSOR_ITELECINE_CAPS">
    <summary>
      <para>Specifies the inverse telecine (IVTC) capabilities of a video processor.</para>
      <para>
        Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d11/ne-d3d11-d3d11_video_processor_itelecine_caps" />
      </para>
    </summary>
  </member>
  <member name="D3D11_VIDEO_PROCESSOR_ITELECINE_CAPS::D3D11_VIDEO_PROCESSOR_ITELECINE_CAPS_32">
    <summary>The video processor can reverse 3:2 pulldown.</summary>
  </member>
  <member name="D3D11_VIDEO_PROCESSOR_ITELECINE_CAPS::D3D11_VIDEO_PROCESSOR_ITELECINE_CAPS_22">
    <summary>The video processor can reverse 2:2 pulldown.</summary>
  </member>
  <member name="D3D11_VIDEO_PROCESSOR_ITELECINE_CAPS::D3D11_VIDEO_PROCESSOR_ITELECINE_CAPS_2224">
    <summary>The video processor can reverse 2:2:2:4 pulldown.</summary>
  </member>
  <member name="D3D11_VIDEO_PROCESSOR_ITELECINE_CAPS::D3D11_VIDEO_PROCESSOR_ITELECINE_CAPS_2332">
    <summary>The video processor can reverse 2:3:3:2 pulldown.</summary>
  </member>
  <member name="D3D11_VIDEO_PROCESSOR_ITELECINE_CAPS::D3D11_VIDEO_PROCESSOR_ITELECINE_CAPS_32322">
    <summary>The video processor can reverse 3:2:3:2:2 pulldown.</summary>
  </member>
  <member name="D3D11_VIDEO_PROCESSOR_ITELECINE_CAPS::D3D11_VIDEO_PROCESSOR_ITELECINE_CAPS_55">
    <summary>The video processor can reverse 5:5 pulldown.</summary>
  </member>
  <member name="D3D11_VIDEO_PROCESSOR_ITELECINE_CAPS::D3D11_VIDEO_PROCESSOR_ITELECINE_CAPS_64">
    <summary>The video processor can reverse 6:4 pulldown.</summary>
  </member>
  <member name="D3D11_VIDEO_PROCESSOR_ITELECINE_CAPS::D3D11_VIDEO_PROCESSOR_ITELECINE_CAPS_87">
    <summary>The video processor can reverse 8:7 pulldown.</summary>
  </member>
  <member name="D3D11_VIDEO_PROCESSOR_ITELECINE_CAPS::D3D11_VIDEO_PROCESSOR_ITELECINE_CAPS_222222222223">
    <summary>The video processor can reverse 2:2:2:2:2:2:2:2:2:2:2:3 pulldown.</summary>
  </member>
  <member name="D3D11_VIDEO_PROCESSOR_ITELECINE_CAPS::D3D11_VIDEO_PROCESSOR_ITELECINE_CAPS_OTHER">
    <summary>The video processor can reverse other telecine modes not listed here.</summary>
  </member>
  <member name="D3D11_VIDEO_PROCESSOR_ROTATION">
    <summary>
      <para>Specifies the video rotation states.</para>
      <para>
        Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d11/ne-d3d11-d3d11_video_processor_rotation" />
      </para>
    </summary>
  </member>
  <member name="D3D11_VIDEO_PROCESSOR_ROTATION::D3D11_VIDEO_PROCESSOR_ROTATION_IDENTITY">
    <summary>The video is not rotated.</summary>
  </member>
  <member name="D3D11_VIDEO_PROCESSOR_ROTATION::D3D11_VIDEO_PROCESSOR_ROTATION_90">
    <summary>The video is rotated 90 degrees clockwise.</summary>
  </member>
  <member name="D3D11_VIDEO_PROCESSOR_ROTATION::D3D11_VIDEO_PROCESSOR_ROTATION_180">
    <summary>The video is rotated 180 degrees clockwise.</summary>
  </member>
  <member name="D3D11_VIDEO_PROCESSOR_ROTATION::D3D11_VIDEO_PROCESSOR_ROTATION_270">
    <summary>The video is rotated 270 degrees clockwise.</summary>
  </member>
  <member name="D3D11_VIDEO_PROCESSOR_BEHAVIOR_HINTS">
    <summary>
      <para>Specifies flags that indicate the most efficient methods for performing video processing operations.</para>
      <para>
        Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d11_1/ne-d3d11_1-d3d11_video_processor_behavior_hints" />
      </para>
    </summary>
  </member>
  <member name="D3D11_VIDEO_PROCESSOR_BEHAVIOR_HINTS::D3D11_VIDEO_PROCESSOR_BEHAVIOR_HINT_MULTIPLANE_OVERLAY_ROTATION">
    <summary>
      Multi-plane overlay hardware can perform the rotation operation more efficiently than the <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nf-d3d11-id3d11videocontext-videoprocessorblt">ID3D11VideoContext::VideoProcessorBlt</a> method.
    </summary>
  </member>
  <member name="D3D11_VIDEO_PROCESSOR_BEHAVIOR_HINTS::D3D11_VIDEO_PROCESSOR_BEHAVIOR_HINT_MULTIPLANE_OVERLAY_RESIZE">
    <summary>
      Multi-plane overlay hardware can perform the scaling operation more efficiently than the <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nf-d3d11-id3d11videocontext-videoprocessorblt">ID3D11VideoContext::VideoProcessorBlt</a> method.
    </summary>
  </member>
  <member name="D3D11_VIDEO_PROCESSOR_BEHAVIOR_HINTS::D3D11_VIDEO_PROCESSOR_BEHAVIOR_HINT_MULTIPLANE_OVERLAY_COLOR_SPACE_CONVERSION">
    <summary>
      Multi-plane overlay hardware can perform the colorspace conversion operation more efficiently than the <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nf-d3d11-id3d11videocontext-videoprocessorblt">ID3D11VideoContext::VideoProcessorBlt</a> method.
    </summary>
  </member>
  <member name="D3D11_VIDEO_PROCESSOR_BEHAVIOR_HINTS::D3D11_VIDEO_PROCESSOR_BEHAVIOR_HINT_TRIPLE_BUFFER_OUTPUT">
    <summary>The video processor output data should be at least triple buffered for optimal performance.</summary>
  </member>
  <member name="ID3D11TracingDevice::SetShaderTrackingOptionsByType">
    <summary>
      <para>Sets the reference rasterizer's default race-condition tracking options for the specified resource types.</para>
      <para>
        Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d11sdklayers/nf-d3d11sdklayers-id3d11tracingdevice-setshadertrackingoptionsbytype" />
      </para>
      <param name="ResourceTypeFlags">
        A <a href="https://docs.microsoft.com/windows/desktop/api/d3d11sdklayers/ne-d3d11sdklayers-d3d11_shader_tracking_resource_type">D3D11_SHADER_TRACKING_RESOURCE_TYPE</a>-typed value that specifies the type of resource to track.
      </param>
      <param name="Options">
        A combination of <a href="https://docs.microsoft.com/windows/win32/api/d3d11sdklayers/ne-d3d11sdklayers-d3d11_shader_tracking_options">D3D11_SHADER_TRACKING_OPTIONS</a>-typed flags that are combined by using a bitwise <b>OR</b> operation. The resulting value identifies tracking options. If a flag is present, the tracking option that the flag represents is set to "on," otherwise the tracking option is set to "off."
      </param>
    </summary>
  </member>
  <member name="D3D11_FEATURE_DATA_D3D11_OPTIONS4">
    <summary>
      <para>Describes Direct3D 11.4 feature options in the current graphics driver.</para>
      <para>
        Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d11_4/ns-d3d11_4-d3d11_feature_data_d3d11_options4" />
      </para>
    </summary>
  </member>
  <member name="D3D11_FEATURE_DATA_D3D11_OPTIONS4::ExtendedNV12SharedTextureSupported">
    <summary>Specifies a BOOL that determines if NV12 textures can be shared across processes and D3D devices.</summary>
  </member>
  <member name="ID3D11InfoQueue::SetBreakOnID">
    <summary>
      <para>Set a message identifier to break on when a message with that identifier passes through the storage filter.</para>
      <para>
        Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d11sdklayers/nf-d3d11sdklayers-id3d11infoqueue-setbreakonid" />
      </para>
      <param name="ID">
        Message identifier to break on (see <a href="https://docs.microsoft.com/windows/desktop/api/d3d11sdklayers/ne-d3d11sdklayers-d3d11_message_id">D3D11_MESSAGE_ID</a>).
      </param>
      <param name="bEnable">Turns this breaking condition on or off (true for on, false for off).</param>
    </summary>
  </member>
  <member name="D3D11_VIDEO_PROCESSOR_NOMINAL_RANGE">
    <summary>
      <para>Specifies values for the luminance range of YUV data.</para>
      <para>
        Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d11/ne-d3d11-d3d11_video_processor_nominal_range" />
      </para>
    </summary>
  </member>
  <member name="D3D11_VIDEO_PROCESSOR_NOMINAL_RANGE::D3D11_VIDEO_PROCESSOR_NOMINAL_RANGE_UNDEFINED">
    <summary>Driver defaults are used, which should be Studio luminance range [16-235],</summary>
  </member>
  <member name="D3D11_VIDEO_PROCESSOR_NOMINAL_RANGE::D3D11_VIDEO_PROCESSOR_NOMINAL_RANGE_16_235">
    <summary>Studio luminance range [16-235]</summary>
  </member>
  <member name="D3D11_VIDEO_PROCESSOR_NOMINAL_RANGE::D3D11_VIDEO_PROCESSOR_NOMINAL_RANGE_0_255">
    <summary>Full luminance range [0-255]</summary>
  </member>
  <member name="ID3D11Texture1D::GetDesc">
    <summary>
      <para>Get the properties of the texture resource.</para>
      <para>
        Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d11/nf-d3d11-id3d11texture1d-getdesc" />
      </para>
      <param name="pDesc">
        Pointer to a resource description (see <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ns-d3d11-d3d11_texture1d_desc">D3D11_TEXTURE1D_DESC</a>).
      </param>
    </summary>
  </member>
  <member name="ID3D11DeviceChild::GetPrivateData">
    <summary>
      <para>Get application-defined data from a device child.</para>
      <para>
        Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d11/nf-d3d11-id3d11devicechild-getprivatedata" />
      </para>
      <param name="guid">Guid associated with the data.</param>
      <param name="pDataSize">
        A pointer to a variable that on input contains the size, in bytes, of the buffer that <i>pData</i> points to, and on output contains the size, in bytes, of the amount of data that
        <b>GetPrivateData</b>retrieved.
      </param>
      <param name="pData">
        A pointer to a buffer that
        <b>GetPrivateData</b>fills with data from the device child if <i>pDataSize</i> points to a value that specifies a buffer large enough to hold the data.
      </param>
    </summary>
  </member>
  <member name="D3D11_FENCE_FLAG">
    <summary>
      <para>Specifies fence options.</para>
      <para>
        Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d11_3/ne-d3d11_3-d3d11_fence_flag" />
      </para>
    </summary>
  </member>
  <member name="D3D11_FENCE_FLAG::D3D11_FENCE_FLAG_NONE">
    <summary>No options are specified.</summary>
  </member>
  <member name="D3D11_FENCE_FLAG::D3D11_FENCE_FLAG_SHARED">
    <summary>The fence is shared.</summary>
  </member>
  <member name="D3D11_FENCE_FLAG::D3D11_FENCE_FLAG_SHARED_CROSS_ADAPTER">
    <summary>The fence is shared with another GPU adapter.</summary>
  </member>
  <member name="D3D11_RESOURCE_MISC_FLAG">
    <summary>
      <para>Identifies options for resources.</para>
      <para>
        Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d11/ne-d3d11-d3d11_resource_misc_flag" />
      </para>
    </summary>
  </member>
  <member name="D3D11_RESOURCE_MISC_FLAG::D3D11_RESOURCE_MISC_GENERATE_MIPS">
    <summary>
      Enables MIP map generation by using <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nf-d3d11-id3d11devicecontext-generatemips">ID3D11DeviceContext::GenerateMips</a> on a texture resource. The resource must be created with the <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ne-d3d11-d3d11_bind_flag">bind flags</a> that specify that the resource is a render target and a shader resource.
    </summary>
  </member>
  <member name="D3D11_RESOURCE_MISC_FLAG::D3D11_RESOURCE_MISC_SHARED">
    <summary>
      Enables resource data sharing between two or more Direct3D devices. The only resources that can be shared are 2D non-mipmapped textures.


      <b>D3D11_RESOURCE_MISC_SHARED</b> and <b>D3D11_RESOURCE_MISC_SHARED_KEYEDMUTEX</b> are mutually exclusive.


      <b>WARP</b> and <b>REF</b> devices do not support shared resources.
      If you try to create a resource with this flag on either a <b>WARP</b> or <b>REF</b> device, the create method will return an <b>E_OUTOFMEMORY</b> error code.


      <div class="alert">
        <b>Note</b>  Starting with Windows 8, <b>WARP</b> devices fully support shared resources.
      </div>
      <div> </div>
      <div class="alert">
        <b>Note</b>  Starting with Windows 8, we recommend that you enable resource data sharing between two or more Direct3D devices by using a combination of the <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ne-d3d11-d3d11_resource_misc_flag">D3D11_RESOURCE_MISC_SHARED_NTHANDLE</a> and <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ne-d3d11-d3d11_resource_misc_flag">D3D11_RESOURCE_MISC_SHARED_KEYEDMUTEX</a> flags instead.
      </div>
      <div> </div>
    </summary>
  </member>
  <member name="D3D11_RESOURCE_MISC_FLAG::D3D11_RESOURCE_MISC_TEXTURECUBE">
    <summary>
      Sets a resource to be a cube texture created from a <a href="https://docs.microsoft.com/windows/desktop/direct3dhlsl/sm5-object-texture2darray">Texture2DArray</a> that contains 6 textures.
    </summary>
  </member>
  <member name="D3D11_RESOURCE_MISC_FLAG::D3D11_RESOURCE_MISC_DRAWINDIRECT_ARGS">
    <summary>Enables instancing of GPU-generated content.</summary>
  </member>
  <member name="D3D11_RESOURCE_MISC_FLAG::D3D11_RESOURCE_MISC_BUFFER_ALLOW_RAW_VIEWS">
    <summary>
      Enables a resource as a <a href="https://docs.microsoft.com/windows/desktop/direct3d11/direct3d-11-advanced-stages-cs-resources">byte address buffer</a>.
    </summary>
  </member>
  <member name="D3D11_RESOURCE_MISC_FLAG::D3D11_RESOURCE_MISC_BUFFER_STRUCTURED">
    <summary>
      Enables a resource as a <a href="https://docs.microsoft.com/windows/desktop/direct3d11/direct3d-11-advanced-stages-cs-resources">structured buffer</a>.
    </summary>
  </member>
  <member name="D3D11_RESOURCE_MISC_FLAG::D3D11_RESOURCE_MISC_RESOURCE_CLAMP">
    <summary>
      Enables a resource with MIP map clamping for use with <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nf-d3d11-id3d11devicecontext-setresourceminlod">ID3D11DeviceContext::SetResourceMinLOD</a>.
    </summary>
  </member>
  <member name="D3D11_RESOURCE_MISC_FLAG::D3D11_RESOURCE_MISC_SHARED_KEYEDMUTEX">
    <summary>
      Enables the resource  to be synchronized by using the <a href="https://docs.microsoft.com/windows/desktop/api/dxgi/nf-dxgi-idxgikeyedmutex-acquiresync">IDXGIKeyedMutex::AcquireSync</a>  and
      <a href="https://docs.microsoft.com/windows/desktop/api/dxgi/nf-dxgi-idxgikeyedmutex-releasesync">IDXGIKeyedMutex::ReleaseSync</a> APIs.
      The following Direct3D 11 resource creation  APIs, that take <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ne-d3d11-d3d11_resource_misc_flag">D3D11_RESOURCE_MISC_FLAG</a> parameters, have been extended to support the new flag.

      <ul>
        <li>
          <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nf-d3d11-id3d11device-createtexture1d">ID3D11Device::CreateTexture1D</a>
        </li>
        <li>
          <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nf-d3d11-id3d11device-createtexture2d">ID3D11Device::CreateTexture2D</a>
        </li>
        <li>
          <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nf-d3d11-id3d11device-createtexture3d">ID3D11Device::CreateTexture3D</a>
        </li>
        <li>
          <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nf-d3d11-id3d11device-createbuffer">ID3D11Device::CreateBuffer</a>
        </li>
      </ul>
      If you call any of these  methods with the <b>D3D11_RESOURCE_MISC_SHARED_KEYEDMUTEX</b> flag set, the interface returned will support the <a href="https://docs.microsoft.com/windows/desktop/api/dxgi/nn-dxgi-idxgikeyedmutex">IDXGIKeyedMutex</a> interface.  You can retrieve a pointer to the <b>IDXGIKeyedMutex</b> interface from the resource by using <a href="https://docs.microsoft.com/windows/desktop/api/unknwn/nf-unknwn-iunknown-queryinterface(q)">IUnknown::QueryInterface</a>.  The <b>IDXGIKeyedMutex</b> interface implements the <a href="https://docs.microsoft.com/windows/desktop/api/dxgi/nf-dxgi-idxgikeyedmutex-acquiresync">IDXGIKeyedMutex::AcquireSync</a> and <a href="https://docs.microsoft.com/windows/desktop/api/dxgi/nf-dxgi-idxgikeyedmutex-releasesync">IDXGIKeyedMutex::ReleaseSync</a> APIs to synchronize access to the surface. The device that creates the surface, and any other device that opens the surface by using <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nf-d3d11-id3d11device-opensharedresource">OpenSharedResource</a>, must call <b>IDXGIKeyedMutex::AcquireSync</b> before they issue any rendering commands to the surface. When those devices finish rendering, they must call <b>IDXGIKeyedMutex::ReleaseSync</b>.


      <b>D3D11_RESOURCE_MISC_SHARED</b> and <b>D3D11_RESOURCE_MISC_SHARED_KEYEDMUTEX</b> are mutually exclusive.


      <b>WARP</b> and <b>REF</b> devices do not support shared resources.
      If you try to create a resource with this flag on either a <b>WARP</b> or <b>REF</b> device, the create method will return an <b>E_OUTOFMEMORY</b> error code.


      <div class="alert">
        <b>Note</b>  Starting with Windows 8, <b>WARP</b> devices fully support shared resources.
      </div>
      <div> </div>
    </summary>
  </member>
  <member name="D3D11_RESOURCE_MISC_FLAG::D3D11_RESOURCE_MISC_GDI_COMPATIBLE">
    <summary>
      Enables a resource compatible with GDI. You must set the <b>D3D11_RESOURCE_MISC_GDI_COMPATIBLE</b> flag  on surfaces that you use with GDI. Setting the <b>D3D11_RESOURCE_MISC_GDI_COMPATIBLE</b> flag allows GDI rendering on the surface via <a href="https://docs.microsoft.com/windows/desktop/api/dxgi/nf-dxgi-idxgisurface1-getdc">IDXGISurface1::GetDC</a>.


      Consider the following programming tips for using D3D11_RESOURCE_MISC_GDI_COMPATIBLE when you create a texture or use that texture in a swap chain:

      <ul>
        <li>D3D11_RESOURCE_MISC_SHARED_KEYEDMUTEX and D3D11_RESOURCE_MISC_GDI_COMPATIBLE are mutually exclusive. Therefore, do not use them together.</li>
        <li>D3D11_RESOURCE_MISC_RESOURCE_CLAMP and D3D11_RESOURCE_MISC_GDI_COMPATIBLE are mutually exclusive. Therefore, do not use them together.</li>
        <li>
          You must bind the texture as a render target for the output-merger stage. For example, set the D3D11_BIND_RENDER_TARGET flag in the <b>BindFlags</b> member of the <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ns-d3d11-d3d11_texture2d_desc">D3D11_TEXTURE2D_DESC</a> structure.
        </li>
        <li>
          You must set the maximum number of MIP map levels to 1. For example, set the <b>MipLevels</b> member of the <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ns-d3d11-d3d11_texture2d_desc">D3D11_TEXTURE2D_DESC</a> structure to 1.
        </li>
        <li>
          You must specify that the texture requires read and write access by the GPU. For example, set the <b>Usage</b> member of the <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ns-d3d11-d3d11_texture2d_desc">D3D11_TEXTURE2D_DESC</a> structure to D3D11_USAGE_DEFAULT.
        </li>
        <li>
          You must set the texture format to one of the following types.

          <ul>
            <li>DXGI_FORMAT_B8G8R8A8_UNORM</li>
            <li>DXGI_FORMAT_B8G8R8A8_TYPELESS</li>
            <li>DXGI_FORMAT_B8G8R8A8_UNORM_SRGB</li>
          </ul>For example, set the <b>Format</b> member of the <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ns-d3d11-d3d11_texture2d_desc">D3D11_TEXTURE2D_DESC</a> structure to one of these  types.
        </li>
        <li>
          You cannot use D3D11_RESOURCE_MISC_GDI_COMPATIBLE with multisampling. Therefore, set the <b>Count</b> member of the <a href="https://docs.microsoft.com/windows/desktop/api/dxgicommon/ns-dxgicommon-dxgi_sample_desc">DXGI_SAMPLE_DESC</a> structure to 1. Then, set the <b>SampleDesc</b> member of the <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ns-d3d11-d3d11_texture2d_desc">D3D11_TEXTURE2D_DESC</a> structure to this <b>DXGI_SAMPLE_DESC</b> structure.
        </li>
      </ul>
    </summary>
  </member>
  <member name="D3D11_RESOURCE_MISC_FLAG::D3D11_RESOURCE_MISC_SHARED_NTHANDLE">
    <summary>
      Set this flag to enable the use of NT HANDLE values when you create a shared resource.  By enabling this flag, you deprecate the use of existing HANDLE values.

      The value specifies a new shared resource type that directs the runtime to use NT HANDLE values for the shared resource. The runtime then must confirm that the shared resource  works on all hardware at the specified <a href="https://docs.microsoft.com/windows/desktop/direct3d11/overviews-direct3d-11-devices-downlevel-intro">feature level</a>.


      Without this flag set, the runtime does not strictly validate shared resource parameters (that is, formats, flags, usage, and so on). When the runtime does not validate shared resource parameters, behavior of much of the Direct3D   API might be undefined and might vary from driver to driver.

      <b>Direct3D 11 and earlier:  </b>This value is not supported until Direct3D 11.1.
    </summary>
  </member>
  <member name="D3D11_RESOURCE_MISC_FLAG::D3D11_RESOURCE_MISC_RESTRICTED_CONTENT">
    <summary>
      Set this flag to indicate that the resource might contain protected content; therefore, the operating system should  use the resource only when the driver and hardware support content protection.  If the driver and hardware do not support content protection and you try to create a resource with this flag, the resource creation fails.

      <b>Direct3D 11:  </b>This value is not supported until Direct3D 11.1.
    </summary>
  </member>
  <member name="D3D11_RESOURCE_MISC_FLAG::D3D11_RESOURCE_MISC_RESTRICT_SHARED_RESOURCE">
    <summary>
      Set this flag to indicate that the operating system  restricts access to the shared surface. You can use this flag together with the D3D11_RESOURCE_MISC_RESTRICT_SHARED_RESOURCE_DRIVER flag and only when you create a shared surface. The process that creates the shared resource can always open the shared resource.

      <b>Direct3D 11:  </b>This value is not supported until Direct3D 11.1.
    </summary>
  </member>
  <member name="D3D11_RESOURCE_MISC_FLAG::D3D11_RESOURCE_MISC_RESTRICT_SHARED_RESOURCE_DRIVER">
    <summary>
      Set this flag to indicate that the driver  restricts access to the shared surface. You can use this flag in conjunction with the D3D11_RESOURCE_MISC_RESTRICT_SHARED_RESOURCE flag and only when you create a shared surface. The process that creates the shared resource can always open the shared resource.

      <b>Direct3D 11:  </b>This value is not supported until Direct3D 11.1.
    </summary>
  </member>
  <member name="D3D11_RESOURCE_MISC_FLAG::D3D11_RESOURCE_MISC_GUARDED">
    <summary>
      Set this flag to indicate that the resource is guarded. Such a resource is returned by the <a href="https://docs.microsoft.com/windows/desktop/api/dcomp/nf-dcomp-idcompositionsurface-begindraw">IDCompositionSurface::BeginDraw</a> (DirectComposition) and <a href="https://docs.microsoft.com/windows/desktop/api/windows.ui.xaml.media.dxinterop/nf-windows-ui-xaml-media-dxinterop-isurfaceimagesourcenative-begindraw">ISurfaceImageSourceNative::BeginDraw</a> (Windows Runtime) APIs.  For these APIs, you provide a region of interest (ROI) on a surface to update. This surface isn't compatible with multiple render targets (MRT).

      A guarded resource automatically restricts all writes to the region that is related to one of the preceding APIs. Additionally, the resource enforces access to the ROI with these restrictions:

      <ul>
        <li>
          Copy operations from the resource by using <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nf-d3d11-id3d11devicecontext-copyresource">ID3D11DeviceContext::CopyResource</a> or <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nf-d3d11-id3d11devicecontext-copysubresourceregion">ID3D11DeviceContext::CopySubresourceRegion</a> are restricted to only copy from the ROI.
        </li>
        <li>When a guarded resource is set as a render target, it must be the only target.</li>
      </ul>
      <b>Direct3D 11:  </b>This value is not supported until Direct3D 11.1.
    </summary>
  </member>
  <member name="D3D11_RESOURCE_MISC_FLAG::D3D11_RESOURCE_MISC_TILE_POOL">
    <summary>
      Set this flag to indicate that the resource is a tile pool.

      <b>Direct3D 11:  </b>This value is not supported until Direct3D 11.2.
    </summary>
  </member>
  <member name="D3D11_RESOURCE_MISC_FLAG::D3D11_RESOURCE_MISC_TILED">
    <summary>
      Set this flag to indicate that the resource is a tiled resource.

      <b>Direct3D 11:  </b>This value is not supported until Direct3D 11.2.
    </summary>
  </member>
  <member name="D3D11_RESOURCE_MISC_FLAG::D3D11_RESOURCE_MISC_HW_PROTECTED">
    <summary>
      Set this flag to indicate that the resource should be created such that it will be protected by the hardware.  Resource creation will fail if hardware content protection is not supported.

      This flag has the following restrictions:

      <ul>
        <li>
          This flag cannot be used with the following <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ne-d3d11-d3d11_usage">D3D11_USAGE</a> values:<ul>
            <li>
              <b>D3D11_USAGE_DYNAMIC</b>
            </li>
            <li>
              <b>D3D11_USAGE_STAGING</b>
            </li>
          </ul>
        </li>
        <li>
          This flag cannot be used with the following <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ne-d3d11-d3d11_bind_flag">D3D11_BIND_FLAG</a> values.<ul>
            <li>
              <b>D3D11_BIND_VERTEX_BUFFER</b>
            </li>
            <li>
              <b>D3D11_BIND_INDEX_BUFFER</b>
            </li>
          </ul>
        </li>
        <li>No CPU access flags can be specified.</li>
      </ul>
      <div class="alert">
        <b>Note</b>  <p class="note">Creating a texture using this flag does not automatically guarantee that hardware protection will be enabled for the underlying allocation. Some implementations require that the DRM components are first initialized prior to any guarantees of protection.</p>
      </div>
      <div> </div>
      <b>Note</b>  This enumeration value is supported starting with Windows 10.
    </summary>
  </member>
  <member name="D3D11_RTV_DIMENSION">
    <summary>
      <para>These flags identify the type of resource that will be viewed as a render target.</para>
      <para>
        Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d11/ne-d3d11-d3d11_rtv_dimension" />
      </para>
    </summary>
  </member>
  <member name="D3D11_RTV_DIMENSION::D3D11_RTV_DIMENSION_UNKNOWN">
    <summary>
      Do not use this value, as it will cause <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nf-d3d11-id3d11device-createrendertargetview">ID3D11Device::CreateRenderTargetView</a> to fail.
    </summary>
  </member>
  <member name="D3D11_RTV_DIMENSION::D3D11_RTV_DIMENSION_BUFFER">
    <summary>The resource will be accessed as a buffer.</summary>
  </member>
  <member name="D3D11_RTV_DIMENSION::D3D11_RTV_DIMENSION_TEXTURE1D">
    <summary>The resource will be accessed as a 1D texture.</summary>
  </member>
  <member name="D3D11_RTV_DIMENSION::D3D11_RTV_DIMENSION_TEXTURE1DARRAY">
    <summary>The resource will be accessed as an array of 1D textures.</summary>
  </member>
  <member name="D3D11_RTV_DIMENSION::D3D11_RTV_DIMENSION_TEXTURE2D">
    <summary>The resource will be accessed as a 2D texture.</summary>
  </member>
  <member name="D3D11_RTV_DIMENSION::D3D11_RTV_DIMENSION_TEXTURE2DARRAY">
    <summary>The resource will be accessed as an array of 2D textures.</summary>
  </member>
  <member name="D3D11_RTV_DIMENSION::D3D11_RTV_DIMENSION_TEXTURE2DMS">
    <summary>The resource will be accessed as a 2D texture with multisampling.</summary>
  </member>
  <member name="D3D11_RTV_DIMENSION::D3D11_RTV_DIMENSION_TEXTURE2DMSARRAY">
    <summary>The resource will be accessed as an array of 2D textures with multisampling.</summary>
  </member>
  <member name="D3D11_RTV_DIMENSION::D3D11_RTV_DIMENSION_TEXTURE3D">
    <summary>The resource will be accessed as a 3D texture.</summary>
  </member>
  <member name="ID3D11DeviceContext::ExecuteCommandList">
    <summary>
      <para>Queues commands from a command list onto a device.</para>
      <para>
        Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d11/nf-d3d11-id3d11devicecontext-executecommandlist" />
      </para>
      <param name="pCommandList">
        A pointer to an <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nn-d3d11-id3d11commandlist">ID3D11CommandList</a> interface that encapsulates a command list.
      </param>
      <param name="RestoreContextState">
        A Boolean flag that determines whether the target context state is saved prior to and restored after the execution of a command list. Use <b>TRUE</b> to indicate that the runtime needs to save and restore the state. Use <b>FALSE</b> to indicate that no state shall be saved or restored, which causes the target context to  return to its default state after the command list executes. Applications should typically use <b>FALSE</b> unless they will restore the state to be nearly equivalent to the state that the runtime would restore if <b>TRUE</b> were passed. When applications use <b>FALSE</b>, they can avoid unnecessary and inefficient state transitions.
      </param>
    </summary>
  </member>
  <member name="D3D11_AUTHENTICATED_QUERY_OUTPUT_ID_INPUT">
    <summary>
      <para>Contains input data for a D3D11_AUTHENTICATED_QUERY_OUTPUT_ID query.</para>
      <para>
        Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d11/ns-d3d11-d3d11_authenticated_query_output_id_input" />
      </para>
    </summary>
  </member>
  <member name="D3D11_AUTHENTICATED_QUERY_OUTPUT_ID_INPUT::Input">
    <summary>
      A <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ns-d3d11-d3d11_authenticated_query_input">D3D11_AUTHENTICATED_QUERY_INPUT</a> structure that contains the GUID for the query and other data.
    </summary>
  </member>
  <member name="D3D11_AUTHENTICATED_QUERY_OUTPUT_ID_INPUT::DeviceHandle">
    <summary>A handle to the device.</summary>
  </member>
  <member name="D3D11_AUTHENTICATED_QUERY_OUTPUT_ID_INPUT::CryptoSessionHandle">
    <summary>A handle to the cryptographic session.</summary>
  </member>
  <member name="D3D11_AUTHENTICATED_QUERY_OUTPUT_ID_INPUT::OutputIDIndex">
    <summary>The index of the output ID.</summary>
  </member>
  <member name="ID3D11VideoContext::VideoProcessorSetStreamDestRect">
    <summary>
      <para>Sets the destination rectangle for an input stream on the video processor.</para>
      <para>
        Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d11/nf-d3d11-id3d11videocontext-videoprocessorsetstreamdestrect" />
      </para>
      <param name="pVideoProcessor">
        A pointer to the <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nn-d3d11-id3d11videoprocessor">ID3D11VideoProcessor</a> interface. To get this pointer, call <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nf-d3d11-id3d11videodevice-createvideoprocessor">ID3D11VideoDevice::CreateVideoProcessor</a>.
      </param>
      <param name="StreamIndex">
        The zero-based index of the input stream. To get the maximum number of streams, call <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nf-d3d11-id3d11videoprocessorenumerator-getvideoprocessorcaps">ID3D11VideoProcessorEnumerator::GetVideoProcessorCaps</a> and check the <b>MaxStreamStates</b> structure member.
      </param>
      <param name="Enable">Specifies whether to apply the destination rectangle.</param>
      <param name="pRect">
        A pointer to a <a href="https://docs.microsoft.com/previous-versions/dd162897(v=vs.85)">RECT</a> structure that specifies the destination rectangle. If <i>Enable</i> is <b>FALSE</b>, this parameter is ignored.
      </param>
    </summary>
  </member>
  <member name="ID3D11DeviceContext::PSGetShaderResources">
    <summary>
      <para>Get the pixel shader resources.</para>
      <para>
        Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d11/nf-d3d11-id3d11devicecontext-psgetshaderresources" />
      </para>
      <param name="StartSlot">Index into the device's zero-based array to begin getting shader resources from (ranges from 0 to D3D11_COMMONSHADER_INPUT_RESOURCE_SLOT_COUNT - 1).</param>
      <param name="NumViews">The number of resources to get from the device. Up to a maximum of 128 slots are available for shader resources (ranges from 0 to D3D11_COMMONSHADER_INPUT_RESOURCE_SLOT_COUNT - StartSlot).</param>
      <param name="ppShaderResourceViews">
        Array of <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nn-d3d11-id3d11shaderresourceview">shader resource view</a> interfaces to be returned by the device.
      </param>
    </summary>
  </member>
  <member name="ID3D11DeviceContext2::UpdateTiles">
    <summary>
      <para>Updates tiles by copying from app memory to the tiled resource.</para>
      <para>
        Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d11_2/nf-d3d11_2-id3d11devicecontext2-updatetiles" />
      </para>
      <param name="pDestTiledResource">A pointer to a tiled resource to update.</param>
      <param name="pDestTileRegionStartCoordinate">
        A pointer to a <a href="https://docs.microsoft.com/windows/desktop/api/d3d11_2/ns-d3d11_2-d3d11_tiled_resource_coordinate">D3D11_TILED_RESOURCE_COORDINATE</a> structure that describes the starting coordinates of the tiled resource.
      </param>
      <param name="pDestTileRegionSize">
        A pointer to a <a href="https://docs.microsoft.com/windows/desktop/api/d3d11_2/ns-d3d11_2-d3d11_tile_region_size">D3D11_TILE_REGION_SIZE</a> structure that describes the size of the tiled region.
      </param>
      <param name="pSourceTileData">
        A pointer to memory that contains the source tile data that <b>UpdateTiles</b> uses to update the tiled resource.
      </param>
      <param name="Flags">
        A combination of <a href="https://docs.microsoft.com/windows/desktop/api/d3d11_2/ne-d3d11_2-d3d11_tile_copy_flag">D3D11_TILE_COPY_FLAG</a>-typed values that are combined by using a bitwise OR operation. The only valid value is <b>D3D11_TILE_COPY_NO_OVERWRITE</b>.
        The other values aren't meaningful here, though
        by definition the <b>D3D11_TILE_COPY_LINEAR_BUFFER_TO_SWIZZLED_TILED_RESOURCE</b> value is basically what <b>UpdateTiles</b> does, but sources from app memory.
      </param>
    </summary>
  </member>
  <member name="D3D11_UNORDERED_ACCESS_VIEW_DESC1">
    <summary>
      <para>Describes the subresources from a resource that are accessible using an unordered-access view.</para>
      <para>
        Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d11_3/ns-d3d11_3-d3d11_unordered_access_view_desc1" />
      </para>
    </summary>
  </member>
  <member name="D3D11_UNORDERED_ACCESS_VIEW_DESC1::Format">
    <summary>
      A <a href="https://docs.microsoft.com/windows/desktop/api/dxgiformat/ne-dxgiformat-dxgi_format">DXGI_FORMAT</a>-typed value that specifies the data format.
    </summary>
  </member>
  <member name="D3D11_UNORDERED_ACCESS_VIEW_DESC1::ViewDimension">
    <summary>
      A <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ne-d3d11-d3d11_uav_dimension">D3D11_UAV_DIMENSION</a>-typed value that  specifies the resource type of the view. This type is the same as the resource type of the underlying resource. This member also determines which _UAV to use in the union below.
    </summary>
  </member>
  <member name="D3D11_UNORDERED_ACCESS_VIEW_DESC1::Buffer">
    <summary>
      A <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ns-d3d11-d3d11_buffer_uav">D3D11_BUFFER_UAV</a> structure that specifies which buffer elements can be accessed.
    </summary>
  </member>
  <member name="D3D11_UNORDERED_ACCESS_VIEW_DESC1::Texture1D">
    <summary>
      A <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ns-d3d11-d3d11_tex1d_uav">D3D11_TEX1D_UAV</a> structure that specifies the subresources in a 1D texture that can be accessed.
    </summary>
  </member>
  <member name="D3D11_UNORDERED_ACCESS_VIEW_DESC1::Texture1DArray">
    <summary>
      A <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ns-d3d11-d3d11_tex1d_array_uav">D3D11_TEX1D_ARRAY_UAV</a> structure that specifies the subresources in a 1D texture array that can be accessed.
    </summary>
  </member>
  <member name="D3D11_UNORDERED_ACCESS_VIEW_DESC1::Texture2D">
    <summary>
      A <a href="https://docs.microsoft.com/windows/desktop/api/d3d11_3/ns-d3d11_3-d3d11_tex2d_uav1">D3D11_TEX2D_UAV1</a> structure that specifies the subresources in a 2D texture that can be accessed.
    </summary>
  </member>
  <member name="D3D11_UNORDERED_ACCESS_VIEW_DESC1::Texture2DArray">
    <summary>
      A <a href="https://docs.microsoft.com/windows/desktop/api/d3d11_3/ns-d3d11_3-d3d11_tex2d_array_uav1">D3D11_TEX2D_ARRAY_UAV1</a> structure that specifies the subresources in a 2D texture array that can be accessed.
    </summary>
  </member>
  <member name="D3D11_UNORDERED_ACCESS_VIEW_DESC1::Texture3D">
    <summary>
      A <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ns-d3d11-d3d11_tex3d_uav">D3D11_TEX3D_UAV</a> structure that specifies subresources in a 3D texture that can be accessed.
    </summary>
  </member>
  <member name="ID3D11ShaderReflection::GetInputParameterDesc">
    <summary>
      <para>Get an input-parameter description for a shader.</para>
      <para>
        Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d11shader/nf-d3d11shader-id3d11shaderreflection-getinputparameterdesc" />
      </para>
      <param name="ParameterIndex">A zero-based parameter index.</param>
      <param name="pDesc">
        A pointer to a shader-input-signature description. See <a href="https://docs.microsoft.com/windows/win32/api/d3d11shader/ns-d3d11shader-d3d11_signature_parameter_desc">D3D11_SIGNATURE_PARAMETER_DESC</a>.
      </param>
    </summary>
  </member>
  <member name="D3D11_PACKED_MIP_DESC">
    <summary>
      <para>Describes the tile structure of a tiled resource with mipmaps.</para>
      <para>
        Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d11_2/ns-d3d11_2-d3d11_packed_mip_desc" />
      </para>
    </summary>
  </member>
  <member name="D3D11_PACKED_MIP_DESC::NumStandardMips">
    <summary>Number of standard mipmaps in the tiled resource.</summary>
  </member>
  <member name="D3D11_PACKED_MIP_DESC::NumPackedMips">
    <summary>
      Number of packed mipmaps in the tiled resource.

      This number starts from the least detailed mipmap (either sharing tiles or using non standard tile layout). This number is 0 if no
      such packing is in the resource.  For array surfaces, this value is the number of mipmaps that are packed for a given array slice where each array slice repeats the same
      packing.


      On Tier_2 tiled resources hardware, mipmaps that fill at least one standard shaped tile in all dimensions
      are not allowed to be included in the set of packed mipmaps.  On Tier_1 hardware, mipmaps that are an integer multiple of one standard shaped tile in all dimensions are not allowed to be included in the set of packed mipmaps.  Mipmaps with at least one
      dimension less than the standard tile shape may or may not be packed.  When a given mipmap needs to be packed, all coarser
      mipmaps for a given array slice are considered packed as well.
    </summary>
  </member>
  <member name="D3D11_PACKED_MIP_DESC::NumTilesForPackedMips">
    <summary>
      Number of tiles for the packed mipmaps in the tiled resource.

      If there is no packing, this value is meaningless and is set to 0.
      Otherwise, it is set to the number of tiles
      that are needed to represent the set of packed mipmaps.
      The pixel layout within the packed mipmaps is hardware specific.
      If apps define only partial mappings for the set of tiles in packed mipmaps, read and write behavior is vendor specific and undefined.
      For arrays, this value is only the count of packed mipmaps within
      the subresources for each array slice.
    </summary>
  </member>
  <member name="D3D11_PACKED_MIP_DESC::StartTileIndexInOverallResource">
    <summary>
      Offset of the first packed tile for the resource
      in the overall range of tiles.  If <b>NumPackedMips</b> is 0, this
      value is meaningless and is 0.  Otherwise, it is the
      offset of the first packed tile for the resource in the overall
      range of tiles for the resource.  A value of 0 for
      <b>StartTileIndexInOverallResource</b> means the entire resource is packed.
      For array surfaces, this is the offset for the tiles that contain the packed
      mipmaps for the first array slice. Packed mipmaps for each array slice in arrayed surfaces are at this offset
      past the beginning of the tiles for each array slice.

      <div class="alert">
        <b>Note</b>  The
        number of overall tiles, packed or not, for a given array slice is
        simply the total number of tiles for the resource divided by the
        resource's array size, so it is easy to locate the range of tiles for
        any given array slice, out of which <b>StartTileIndexInOverallResource</b> identifies
        which of those are packed.
      </div>
      <div> </div>
    </summary>
  </member>
  <member name="ID3D11VideoContext::VideoProcessorSetStreamOutputRate">
    <summary>
      <para>Sets the rate at which the video processor produces output frames for an input stream.</para>
      <para>
        Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d11/nf-d3d11-id3d11videocontext-videoprocessorsetstreamoutputrate" />
      </para>
      <param name="pVideoProcessor">
        A pointer to the <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nn-d3d11-id3d11videoprocessor">ID3D11VideoProcessor</a> interface. To get this pointer, call <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nf-d3d11-id3d11videodevice-createvideoprocessor">ID3D11VideoDevice::CreateVideoProcessor</a>.
      </param>
      <param name="StreamIndex">
        The zero-based index of the input stream. To get the maximum number of streams, call <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nf-d3d11-id3d11videoprocessorenumerator-getvideoprocessorcaps">ID3D11VideoProcessorEnumerator::GetVideoProcessorCaps</a> and check the <b>MaxStreamStates</b> structure member.
      </param>
      <param name="OutputRate">
        The output rate, specified as a <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ne-d3d11-d3d11_video_processor_output_rate">D3D11_VIDEO_PROCESSOR_OUTPUT_RATE</a> value.
      </param>
      <param name="RepeatFrame">
        Specifies how the driver performs frame-rate conversion, if required.

        <table>
          <tr>
            <th>Value</th>
            <th>Meaning</th>
          </tr>
          <tr>
            <td width="40%">
              <a id="TRUE"></a>
              <a id="true"></a>
              <dl>
                <dt>
                  <b>TRUE</b>
                </dt>
              </dl>
            </td>
            <td width="60%">
              Repeat frames.

            </td>
          </tr>
          <tr>
            <td width="40%">
              <a id="FALSE"></a>
              <a id="false"></a>
              <dl>
                <dt>
                  <b>FALSE</b>
                </dt>
              </dl>
            </td>
            <td width="60%">
              Interpolate frames.

            </td>
          </tr>
        </table>
      </param>
      <param name="pCustomRate">
        A pointer to a <a href="https://docs.microsoft.com/windows/desktop/api/dxgicommon/ns-dxgicommon-dxgi_rational">DXGI_RATIONAL</a> structure. If <i>OutputRate</i> is <b>D3D11_VIDEO_PROCESSOR_OUTPUT_RATE_CUSTOM</b>,  this parameter specifies the exact output rate. Otherwise, this parameter is ignored and can be <b>NULL</b>.
      </param>
    </summary>
  </member>
  <member name="ID3D11InfoQueue::ClearStoredMessages">
    <summary>
      <para>Clear all messages from the message queue.</para>
      <para>
        Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d11sdklayers/nf-d3d11sdklayers-id3d11infoqueue-clearstoredmessages" />
      </para>
    </summary>
  </member>
  <member name="ID3D11DeviceContext1::VSSetConstantBuffers1">
    <summary>
      <para>Sets the constant buffers that the vertex shader pipeline stage uses.</para>
      <para>
        Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d11_1/nf-d3d11_1-id3d11devicecontext1-vssetconstantbuffers1" />
      </para>
      <param name="StartSlot">Index into the device's zero-based array to begin setting constant buffers to (ranges from 0 to D3D11_COMMONSHADER_CONSTANT_BUFFER_API_SLOT_COUNT - 1).</param>
      <param name="NumBuffers">
        Number of buffers to set (ranges from 0 to D3D11_COMMONSHADER_CONSTANT_BUFFER_API_SLOT_COUNT - <i>StartSlot</i>).
      </param>
      <param name="ppConstantBuffers">Array of constant buffers being given to the device.</param>
      <param name="pFirstConstant">
        An array that holds the offsets into the buffers that  <i>ppConstantBuffers</i> specifies. Each offset specifies where, from the shader's point of view, each constant buffer starts.  Each offset is measured in shader constants, which are 16 bytes (4*32-bit components).  Therefore, an offset of 16 indicates that the start of the associated constant buffer is 256 bytes into the constant buffer. Each offset must be a multiple of 16 constants.
      </param>
      <param name="pNumConstants">
        An array that holds the numbers of constants in the buffers that  <i>ppConstantBuffers</i> specifies. Each number specifies the number of constants that are contained in the constant buffer that the shader uses. Each number of constants starts from its respective offset that is specified in the <i>pFirstConstant</i> array. Each number of constants must be a multiple of 16 constants, in the range [0..4096].
      </param>
    </summary>
  </member>
  <member name="ID3D11Device3::WriteToSubresource">
    <summary>
      <para>Copies data into a D3D11_USAGE_DEFAULTtexture which was mapped using ID3D11DeviceContext3::Mapwhile providing a NULL D3D11_MAPPED_SUBRESOURCEparameter.</para>
      <para>
        Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d11_3/nf-d3d11_3-id3d11device3-writetosubresource" />
      </para>
      <param name="pDstResource">
        A pointer to the destination resource (an
        <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nn-d3d11-id3d11resource">ID3D11Resource</a>).
      </param>
      <param name="DstSubresource">
        A zero-based index, that identifies the destination subresource.
        For more details, see
        <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nf-d3d11-d3d11calcsubresource">D3D11CalcSubresource</a>.
      </param>
      <param name="pDstBox">
        A pointer to a box that defines the portion of the destination subresource to copy the resource data into.
        If NULL, the data is written to the destination subresource with no offset.
        The dimensions of the source must fit the destination (see
        <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ns-d3d11-d3d11_box">D3D11_BOX</a>).


        An empty box results in a no-op.
        A box is empty if the top value is greater than or equal to the bottom value, or the left value is greater than or equal to the right value, or the front value is greater than or equal to the back value.
        When the box is empty, this method doesn't perform any operation.
      </param>
      <param name="pSrcData">A pointer to the source data in memory.</param>
      <param name="SrcRowPitch">The size of one row of the source data.</param>
      <param name="SrcDepthPitch">The size of one depth slice of source data.</param>
    </summary>
  </member>
  <member name="ID3D11VideoContext::VideoProcessorSetStreamPixelAspectRatio">
    <summary>
      <para>Sets the pixel aspect ratio for an input stream on the video processor.</para>
      <para>
        Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d11/nf-d3d11-id3d11videocontext-videoprocessorsetstreampixelaspectratio" />
      </para>
      <param name="pVideoProcessor">
        A pointer to the <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nn-d3d11-id3d11videoprocessor">ID3D11VideoProcessor</a> interface. To get this pointer, call <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nf-d3d11-id3d11videodevice-createvideoprocessor">ID3D11VideoDevice::CreateVideoProcessor</a>.
      </param>
      <param name="StreamIndex">
        The zero-based index of the input stream. To get the maximum number of streams, call <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nf-d3d11-id3d11videoprocessorenumerator-getvideoprocessorcaps">ID3D11VideoProcessorEnumerator::GetVideoProcessorCaps</a> and check the <b>MaxStreamStates</b> structure member.
      </param>
      <param name="Enable">
        Specifies whether the <i>pSourceAspectRatio</i> and <i>pDestinationAspectRatio</i> parameters contain valid values. Otherwise, the pixel aspect ratios are unspecified.
      </param>
      <param name="pSourceAspectRatio">
        A pointer to a <a href="https://docs.microsoft.com/windows/desktop/api/dxgicommon/ns-dxgicommon-dxgi_rational">DXGI_RATIONAL</a> structure that contains the pixel aspect ratio of the source rectangle. If <i>Enable</i> is <b>FALSE</b>, this parameter can be <b>NULL</b>.
      </param>
      <param name="pDestinationAspectRatio">
        A pointer to a <a href="https://docs.microsoft.com/windows/desktop/api/dxgicommon/ns-dxgicommon-dxgi_rational">DXGI_RATIONAL</a> structure that contains the pixel aspect ratio of the destination rectangle. If <i>Enable</i> is <b>FALSE</b>, this parameter can be <b>NULL</b>.
      </param>
    </summary>
  </member>
  <member name="ID3D11Device::SetPrivateData">
    <summary>
      <para>Set data to a device and associate that data with a guid.</para>
      <para>
        Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d11/nf-d3d11-id3d11device-setprivatedata" />
      </para>
      <param name="guid">Guid associated with the data.</param>
      <param name="DataSize">Size of the data.</param>
      <param name="pData">
        Pointer to the data to be stored with this device. If pData is <b>NULL</b>, DataSize must also be 0, and any data previously associated with the guid will be destroyed.
      </param>
    </summary>
  </member>
  <member name="ID3D11HullShader">
    <summary>
      <para>A hull-shader interface manages an executable program (a hull shader) that controls the hull-shader stage.</para>
      <para>
        Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d11/nn-d3d11-id3d11hullshader" />
      </para>
    </summary>
  </member>
  <member name="ID3D11VideoContext::VideoProcessorGetOutputBackgroundColor">
    <summary>
      <para>Gets the current background color for the video processor.</para>
      <para>
        Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d11/nf-d3d11-id3d11videocontext-videoprocessorgetoutputbackgroundcolor" />
      </para>
      <param name="pVideoProcessor">
        A pointer to the <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nn-d3d11-id3d11videoprocessor">ID3D11VideoProcessor</a> interface. To get this pointer, call <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nf-d3d11-id3d11videodevice-createvideoprocessor">ID3D11VideoDevice::CreateVideoProcessor</a>.
      </param>
      <param name="pYCbCr">
        Receives the value <b>TRUE</b> if the background color is a YCbCr color, or <b>FALSE</b> if the background color is an RGB color.
      </param>
      <param name="pColor">
        A pointer to a <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ns-d3d11-d3d11_video_color">D3D11_VIDEO_COLOR</a> structure. The method fills in the structure with the background color.
      </param>
    </summary>
  </member>
  <member name="ID3D11DeviceContext::IAGetVertexBuffers">
    <summary>
      <para>Get the vertex buffers bound to the input-assembler stage.</para>
      <para>
        Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d11/nf-d3d11-id3d11devicecontext-iagetvertexbuffers" />
      </para>
      <param name="StartSlot">
        The input slot of the first vertex buffer to get. The first vertex buffer is explicitly bound to the start slot; this causes each additional vertex buffer in the array to be implicitly bound to each subsequent input slot. The maximum of 16 or 32 input slots (ranges from 0 to D3D11_IA_VERTEX_INPUT_RESOURCE_SLOT_COUNT - 1) are available; the <a href="https://docs.microsoft.com/windows/desktop/direct3d11/overviews-direct3d-11-devices-downlevel-intro">maximum number of input slots depends on the feature level</a>.
      </param>
      <param name="NumBuffers">The number of vertex buffers to get starting at the offset. The number of buffers (plus the starting slot) cannot exceed the total number of IA-stage input slots.</param>
      <param name="ppVertexBuffers">
        A pointer to an array of vertex buffers returned by the method (see <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nn-d3d11-id3d11buffer">ID3D11Buffer</a>).
      </param>
      <param name="pStrides">Pointer to an array of stride values returned by the method; one stride value for each buffer in the vertex-buffer array. Each stride value is the size (in bytes) of the elements that are to be used from that vertex buffer.</param>
      <param name="pOffsets">Pointer to an array of offset values returned by the method; one offset value for each buffer in the vertex-buffer array. Each offset is the number of bytes between the first element of a vertex buffer and the first element that will be used.</param>
    </summary>
  </member>
  <member name="ID3D11DeviceContext2::TiledResourceBarrier">
    <summary>
      <para>Specifies a data access ordering constraint between multiple tiled resources.</para>
      <para>
        Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d11_2/nf-d3d11_2-id3d11devicecontext2-tiledresourcebarrier" />
      </para>
      <param name="pTiledResourceOrViewAccessBeforeBarrier">
        A pointer to an <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nn-d3d11-id3d11resource">ID3D11Resource</a> or <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nn-d3d11-id3d11view">ID3D11View</a> for a resource that was created with the <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ne-d3d11-d3d11_resource_misc_flag">D3D11_RESOURCE_MISC_TILED</a> flag.  Access operations on this object must complete before the access operations on the object that <i>pTiledResourceOrViewAccessAfterBarrier</i> specifies.
      </param>
      <param name="pTiledResourceOrViewAccessAfterBarrier">
        A pointer to an <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nn-d3d11-id3d11resource">ID3D11Resource</a> or <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nn-d3d11-id3d11view">ID3D11View</a> for a resource that was created with the <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ne-d3d11-d3d11_resource_misc_flag">D3D11_RESOURCE_MISC_TILED</a> flag.  Access operations on this object must begin after the access operations on the object that <i>pTiledResourceOrViewAccessBeforeBarrier</i> specifies.
      </param>
    </summary>
  </member>
  <member name="ID3D11DeviceContext::PSSetSamplers">
    <summary>
      <para>Set an array of sampler states to the pixel shader pipeline stage.</para>
      <para>
        Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d11/nf-d3d11-id3d11devicecontext-pssetsamplers" />
      </para>
      <param name="StartSlot">Index into the device's zero-based array to begin setting samplers to (ranges from 0 to D3D11_COMMONSHADER_SAMPLER_SLOT_COUNT - 1).</param>
      <param name="NumSamplers">Number of samplers in the array. Each pipeline stage has a total of 16 sampler slots available (ranges from 0 to D3D11_COMMONSHADER_SAMPLER_SLOT_COUNT - StartSlot).</param>
      <param name="ppSamplers">
        Pointer to an array of sampler-state interfaces (see <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nn-d3d11-id3d11samplerstate">ID3D11SamplerState</a>). See Remarks.
      </param>
    </summary>
  </member>
  <member name="ID3D11DeviceContext2::CopyTileMappings">
    <summary>
      <para>Copies mappings from a source tiled resource to a destination tiled resource.</para>
      <para>
        Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d11_2/nf-d3d11_2-id3d11devicecontext2-copytilemappings" />
      </para>
      <param name="pDestTiledResource">A pointer to the destination tiled resource.</param>
      <param name="pDestRegionStartCoordinate">
        A pointer to a <a href="https://docs.microsoft.com/windows/desktop/api/d3d11_2/ns-d3d11_2-d3d11_tiled_resource_coordinate">D3D11_TILED_RESOURCE_COORDINATE</a> structure that describes the starting coordinates of the destination tiled resource.
      </param>
      <param name="pSourceTiledResource">A pointer to the source tiled resource.</param>
      <param name="pSourceRegionStartCoordinate">
        A pointer to a <a href="https://docs.microsoft.com/windows/desktop/api/d3d11_2/ns-d3d11_2-d3d11_tiled_resource_coordinate">D3D11_TILED_RESOURCE_COORDINATE</a> structure that describes the starting coordinates of the source tiled resource.
      </param>
      <param name="pTileRegionSize">
        A pointer to a <a href="https://docs.microsoft.com/windows/desktop/api/d3d11_2/ns-d3d11_2-d3d11_tile_region_size">D3D11_TILE_REGION_SIZE</a> structure that describes the size of the tiled region.
      </param>
      <param name="Flags">
        A combination of <a href="https://docs.microsoft.com/windows/desktop/api/d3d11_2/ne-d3d11_2-d3d11_tile_mapping_flag">D3D11_TILE_MAPPING_FLAGS</a> values that are combined by using a bitwise OR operation. The only valid value is <b>D3D11_TILE_MAPPING_NO_OVERWRITE</b>, which indicates that previously submitted commands to the device that may still be executing do not reference any of the tile region being updated. The device can then avoid having to flush previously submitted work to perform the tile mapping update.  If the app violates this promise by updating tile mappings for locations in tiled resources that are still being referenced by outstanding commands, undefined rendering behavior results, including the potential for significant slowdowns on some architectures.  This is like the "no overwrite" concept that exists elsewhere in the Direct3D API, except applied to the tile mapping data structure itself (which in hardware is a page table). The absence of the <b>D3D11_TILE_MAPPING_NO_OVERWRITE</b> value requires that tile mapping updates that <b>CopyTileMappings</b> specifies must be completed before any subsequent Direct3D command can proceed.
      </param>
    </summary>
  </member>
  <member name="ID3D11FunctionLinkingGraph">
    <summary>
      <para>A function-linking-graph interface is used for constructing shaders that consist of a sequence of precompiled function calls that pass values to each other.</para>
      <para>
        Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d11shader/nn-d3d11shader-id3d11functionlinkinggraph" />
      </para>
    </summary>
  </member>
  <member name="ID3D11DeviceContext::HSGetSamplers">
    <summary>
      <para>Get an array of sampler state interfaces from the hull-shader stage.</para>
      <para>
        Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d11/nf-d3d11-id3d11devicecontext-hsgetsamplers" />
      </para>
      <param name="StartSlot">Index into a zero-based array to begin getting samplers from (ranges from 0 to D3D11_COMMONSHADER_SAMPLER_SLOT_COUNT - 1).</param>
      <param name="NumSamplers">Number of samplers to get from a device context. Each pipeline stage has a total of 16 sampler slots available (ranges from 0 to D3D11_COMMONSHADER_SAMPLER_SLOT_COUNT - StartSlot).</param>
      <param name="ppSamplers">
        Pointer to an array of sampler-state interfaces (see <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nn-d3d11-id3d11samplerstate">ID3D11SamplerState</a>).
      </param>
    </summary>
  </member>
  <member name="ID3D11VideoContext::VideoProcessorGetOutputExtension">
    <summary>
      <para>Gets private state data from the video processor.</para>
      <para>
        Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d11/nf-d3d11-id3d11videocontext-videoprocessorgetoutputextension" />
      </para>
      <param name="pVideoProcessor">
        A pointer to the <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nn-d3d11-id3d11videoprocessor">ID3D11VideoProcessor</a> interface. To get this pointer, call <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nf-d3d11-id3d11videodevice-createvideoprocessor">ID3D11VideoDevice::CreateVideoProcessor</a>.
      </param>
      <param name="pExtensionGuid">A pointer to a GUID that identifies the state. The meaning of this GUID is defined by the graphics driver.</param>
      <param name="DataSize">
        The size of the <i>pData</i> buffer, in bytes.
      </param>
      <param name="pData">A pointer to a buffer that receives the private state data.</param>
    </summary>
  </member>
  <member name="D3D11_VIDEO_DECODER_BUFFER_TYPE">
    <summary>
      <para>Specifies a type of compressed buffer for decoding.</para>
      <para>
        Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d11/ne-d3d11-d3d11_video_decoder_buffer_type" />
      </para>
    </summary>
  </member>
  <member name="D3D11_VIDEO_DECODER_BUFFER_TYPE::D3D11_VIDEO_DECODER_BUFFER_PICTURE_PARAMETERS">
    <summary>Picture decoding parameter buffer.</summary>
  </member>
  <member name="D3D11_VIDEO_DECODER_BUFFER_TYPE::D3D11_VIDEO_DECODER_BUFFER_MACROBLOCK_CONTROL">
    <summary>Macroblock control command buffer.</summary>
  </member>
  <member name="D3D11_VIDEO_DECODER_BUFFER_TYPE::D3D11_VIDEO_DECODER_BUFFER_RESIDUAL_DIFFERENCE">
    <summary>Residual difference block data buffer.</summary>
  </member>
  <member name="D3D11_VIDEO_DECODER_BUFFER_TYPE::D3D11_VIDEO_DECODER_BUFFER_DEBLOCKING_CONTROL">
    <summary>Deblocking filter control command buffer.</summary>
  </member>
  <member name="D3D11_VIDEO_DECODER_BUFFER_TYPE::D3D11_VIDEO_DECODER_BUFFER_INVERSE_QUANTIZATION_MATRIX">
    <summary>Inverse quantization matrix buffer.</summary>
  </member>
  <member name="D3D11_VIDEO_DECODER_BUFFER_TYPE::D3D11_VIDEO_DECODER_BUFFER_SLICE_CONTROL">
    <summary>Slice-control buffer.</summary>
  </member>
  <member name="D3D11_VIDEO_DECODER_BUFFER_TYPE::D3D11_VIDEO_DECODER_BUFFER_BITSTREAM">
    <summary>Bitstream data buffer.</summary>
  </member>
  <member name="D3D11_VIDEO_DECODER_BUFFER_TYPE::D3D11_VIDEO_DECODER_BUFFER_MOTION_VECTOR">
    <summary>Motion vector buffer.</summary>
  </member>
  <member name="D3D11_VIDEO_DECODER_BUFFER_TYPE::D3D11_VIDEO_DECODER_BUFFER_FILM_GRAIN">
    <summary>Film grain synthesis data buffer.</summary>
  </member>
  <member name="ID3D11UnorderedAccessView::GetDesc">
    <summary>
      <para>Get a description of the resource.</para>
      <para>
        Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d11/nf-d3d11-id3d11unorderedaccessview-getdesc" />
      </para>
      <param name="pDesc">
        Pointer to a resource description (see <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ns-d3d11-d3d11_unordered_access_view_desc">D3D11_UNORDERED_ACCESS_VIEW_DESC</a>.)
      </param>
    </summary>
  </member>
  <member name="D3D11_VIDEO_USAGE">
    <summary>
      <para>Specifies the intended use for a video processor.</para>
      <para>
        Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d11/ne-d3d11-d3d11_video_usage" />
      </para>
    </summary>
  </member>
  <member name="D3D11_VIDEO_USAGE::D3D11_VIDEO_USAGE_PLAYBACK_NORMAL">
    <summary>Normal video playback. The graphics driver should expose a set of capabilities that are appropriate for real-time video playback.</summary>
  </member>
  <member name="D3D11_VIDEO_USAGE::D3D11_VIDEO_USAGE_OPTIMAL_SPEED">
    <summary>
      Optimal speed. The graphics driver should expose a minimal set of capabilities that are optimized for performance.



      Use this setting if you want better performance and can accept some reduction in video quality. For example, you might use this setting in power-saving mode or to play video thumbnails.
    </summary>
  </member>
  <member name="D3D11_VIDEO_USAGE::D3D11_VIDEO_USAGE_OPTIMAL_QUALITY">
    <summary>
      Optimal quality. The grahics driver should expose its maximum set of capabilities.

      Specify this setting to get the best video quality possible. It is appropriate for tasks such as video editing, when quality is more important than speed. It is not appropriate for real-time playback.
    </summary>
  </member>
  <member name="ID3D11InfoQueue::PushCopyOfRetrievalFilter">
    <summary>
      <para>Push a copy of retrieval filter currently on the top of the retrieval-filter stack onto the retrieval-filter stack.</para>
      <para>
        Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d11sdklayers/nf-d3d11sdklayers-id3d11infoqueue-pushcopyofretrievalfilter" />
      </para>
    </summary>
  </member>
  <member name="ID3D11Device3::ReadFromSubresource">
    <summary>
      <para>Copies data from a D3D11_USAGE_DEFAULTtexture which was mapped using ID3D11DeviceContext3::Mapwhile providing a NULL D3D11_MAPPED_SUBRESOURCEparameter.</para>
      <para>
        Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d11_3/nf-d3d11_3-id3d11device3-readfromsubresource" />
      </para>
      <param name="pDstData">A pointer to the destination data in memory.</param>
      <param name="DstRowPitch">The size of one row of the destination data.</param>
      <param name="DstDepthPitch">The size of one depth slice of destination data.</param>
      <param name="pSrcResource">
        A pointer to the source resource (see
        <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nn-d3d11-id3d11resource">ID3D11Resource</a>).
      </param>
      <param name="SrcSubresource">
        A zero-based index, that identifies the destination subresource.
        For more details, see
        <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nf-d3d11-d3d11calcsubresource">D3D11CalcSubresource</a>.
      </param>
      <param name="pSrcBox">
        A pointer to a box that defines the portion of the destination subresource to copy the resource data from.
        If NULL, the data is read from the destination subresource with no offset.
        The dimensions of the destination must fit the destination (see
        <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ns-d3d11-d3d11_box">D3D11_BOX</a>).


        An empty box results in a no-op.
        A box is empty if the top value is greater than or equal to the bottom value, or the left value is greater than or equal to the right value, or the front value is greater than or equal to the back value.
        When the box is empty, this method doesn't perform any operation.
      </param>
    </summary>
  </member>
  <member name="D3D11_SHADER_RESOURCE_VIEW_DESC1">
    <summary>
      <para>Describes a shader-resource view.</para>
      <para>
        Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d11_3/ns-d3d11_3-d3d11_shader_resource_view_desc1" />
      </para>
    </summary>
  </member>
  <member name="D3D11_SHADER_RESOURCE_VIEW_DESC1::Format">
    <summary>
      A <a href="https://docs.microsoft.com/windows/desktop/api/dxgiformat/ne-dxgiformat-dxgi_format">DXGI_FORMAT</a>-typed value that  specifies the viewing format. See remarks.
    </summary>
  </member>
  <member name="D3D11_SHADER_RESOURCE_VIEW_DESC1::ViewDimension">
    <summary>
      A <a href="https://docs.microsoft.com/previous-versions/windows/desktop/legacy/ff476217(v=vs.85)">D3D11_SRV_DIMENSION</a>-typed value that  specifies the resource type of the view. This type is the same as the resource type of the underlying resource. This member also determines which _SRV to use in the union below.
    </summary>
  </member>
  <member name="D3D11_SHADER_RESOURCE_VIEW_DESC1::Buffer">
    <summary>
      A <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ns-d3d11-d3d11_buffer_srv">D3D11_BUFFER_SRV</a> structure that views the resource as a buffer.
    </summary>
  </member>
  <member name="D3D11_SHADER_RESOURCE_VIEW_DESC1::Texture1D">
    <summary>
      A <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ns-d3d11-d3d11_tex1d_srv">D3D11_TEX1D_SRV</a> structure that views the resource as a 1D texture.
    </summary>
  </member>
  <member name="D3D11_SHADER_RESOURCE_VIEW_DESC1::Texture1DArray">
    <summary>
      A <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ns-d3d11-d3d11_tex1d_array_srv">D3D11_TEX1D_ARRAY_SRV</a> structure that views the resource as a 1D-texture array.
    </summary>
  </member>
  <member name="D3D11_SHADER_RESOURCE_VIEW_DESC1::Texture2D">
    <summary>
      A <a href="https://docs.microsoft.com/windows/desktop/api/d3d11_3/ns-d3d11_3-d3d11_tex2d_srv1">D3D11_TEX2D_SRV1</a> structure that views the resource as a 2D-texture.
    </summary>
  </member>
  <member name="D3D11_SHADER_RESOURCE_VIEW_DESC1::Texture2DArray">
    <summary>
      A <a href="https://docs.microsoft.com/windows/desktop/api/d3d11_3/ns-d3d11_3-d3d11_tex2d_array_srv1">D3D11_TEX2D_ARRAY_SRV1</a> structure that views the resource as a 2D-texture array.
    </summary>
  </member>
  <member name="D3D11_SHADER_RESOURCE_VIEW_DESC1::Texture2DMS">
    <summary>
      A <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ns-d3d11-d3d11_tex2dms_srv">D3D11_TEX2DMS_SRV</a> structure that views the resource as a 2D-multisampled texture.
    </summary>
  </member>
  <member name="D3D11_SHADER_RESOURCE_VIEW_DESC1::Texture2DMSArray">
    <summary>
      A <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ns-d3d11-d3d11_tex2dms_array_srv">D3D11_TEX2DMS_ARRAY_SRV</a> structure that views the resource as a 2D-multisampled-texture array.
    </summary>
  </member>
  <member name="D3D11_SHADER_RESOURCE_VIEW_DESC1::Texture3D">
    <summary>
      A <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ns-d3d11-d3d11_tex3d_srv">D3D11_TEX3D_SRV</a> structure that views the resource as a 3D texture.
    </summary>
  </member>
  <member name="D3D11_SHADER_RESOURCE_VIEW_DESC1::TextureCube">
    <summary>
      A <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ns-d3d11-d3d11_texcube_srv">D3D11_TEXCUBE_SRV</a> structure that views the resource as a 3D-cube texture.
    </summary>
  </member>
  <member name="D3D11_SHADER_RESOURCE_VIEW_DESC1::TextureCubeArray">
    <summary>
      A <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ns-d3d11-d3d11_texcube_array_srv">D3D11_TEXCUBE_ARRAY_SRV</a> structure that views the resource as a 3D-cube-texture array.
    </summary>
  </member>
  <member name="D3D11_SHADER_RESOURCE_VIEW_DESC1::BufferEx">
    <summary>
      A <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ns-d3d11-d3d11_bufferex_srv">D3D11_BUFFEREX_SRV</a> structure that views the resource as a raw buffer. For more info about raw viewing of buffers, see <a href="https://docs.microsoft.com/windows/desktop/direct3d11/overviews-direct3d-11-resources-intro">Raw Views of Buffers</a>.
    </summary>
  </member>
  <member name="ID3D11ShaderReflection::GetMovInstructionCount">
    <summary>
      <para>Gets the number of Mov instructions.</para>
      <para>
        Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d11shader/nf-d3d11shader-id3d11shaderreflection-getmovinstructioncount" />
      </para>
    </summary>
  </member>
  <member name="ID3D11AuthenticatedChannel::GetCertificateSize">
    <summary>
      <para>Gets the size of the driver's certificate chain.</para>
      <para>
        Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d11/nf-d3d11-id3d11authenticatedchannel-getcertificatesize" />
      </para>
      <param name="pCertificateSize">Receives the size of the certificate chain, in bytes.</param>
    </summary>
  </member>
  <member name="D3D11_FEATURE_DATA_D3D9_SHADOW_SUPPORT">
    <summary>
      <para>Describes Direct3D 9 shadow support in the current graphics driver.</para>
      <para>
        Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d11/ns-d3d11-d3d11_feature_data_d3d9_shadow_support" />
      </para>
    </summary>
  </member>
  <member name="D3D11_FEATURE_DATA_D3D9_SHADOW_SUPPORT::SupportsDepthAsTextureWithLessEqualComparisonFilter">
    <summary>
      Specifies whether the driver supports the shadowing feature with the comparison-filtering mode set to less than or equal to. The runtime sets this member to <b>TRUE</b> for hardware at Direct3D 10 and higher <a href="https://docs.microsoft.com/windows/desktop/direct3d11/overviews-direct3d-11-devices-downlevel-intro">feature levels</a>.  For hardware at Direct3D 9.3 and lower feature levels, the runtime sets this member to <b>TRUE</b> only if the hardware and driver support the shadowing feature; otherwise <b>FALSE</b>.
    </summary>
  </member>
  <member name="ID3D11RasterizerState">
    <summary>
      <para>The rasterizer-state interface holds a description for rasterizer state that you can bind to the rasterizer stage.</para>
      <para>
        Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d11/nn-d3d11-id3d11rasterizerstate" />
      </para>
    </summary>
  </member>
  <member name="D3D11_MESSAGE_CATEGORY">
    <summary>
      <para>Categories of debug messages.</para>
      <para>
        Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d11sdklayers/ne-d3d11sdklayers-d3d11_message_category" />
      </para>
    </summary>
  </member>
  <member name="D3D11_MESSAGE_CATEGORY::D3D11_MESSAGE_CATEGORY_APPLICATION_DEFINED">
    <summary>
      User defined message. See <a href="https://docs.microsoft.com/windows/desktop/api/d3d11sdklayers/nf-d3d11sdklayers-id3d11infoqueue-addmessage">ID3D11InfoQueue::AddMessage</a>.
    </summary>
  </member>
  <member name="D3D11_MESSAGE_CATEGORY::D3D11_MESSAGE_CATEGORY_SHADER">
    <summary>
      <b>Direct3D 11:  </b>This value is not supported until Direct3D 11.1.
    </summary>
  </member>
  <member name="ID3D11VideoContext::VideoProcessorGetStreamAlpha">
    <summary>
      <para>Gets the planar alpha for an input stream on the video processor.</para>
      <para>
        Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d11/nf-d3d11-id3d11videocontext-videoprocessorgetstreamalpha" />
      </para>
      <param name="pVideoProcessor">
        A pointer to the <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nn-d3d11-id3d11videoprocessor">ID3D11VideoProcessor</a> interface. To get this pointer, call <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nf-d3d11-id3d11videodevice-createvideoprocessor">ID3D11VideoDevice::CreateVideoProcessor</a>.
      </param>
      <param name="StreamIndex">
        The zero-based index of the input stream. To get the maximum number of streams, call <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nf-d3d11-id3d11videoprocessorenumerator-getvideoprocessorcaps">ID3D11VideoProcessorEnumerator::GetVideoProcessorCaps</a> and check the <b>MaxStreamStates</b> structure member.
      </param>
      <param name="pEnabled">
        Receives the value <b>TRUE</b> if planar alpha is enabled, or <b>FALSE</b> otherwise.
      </param>
      <param name="pAlpha">Receives the planar alpha value. The value can range from 0.0 (transparent) to 1.0 (opaque).</param>
    </summary>
  </member>
  <member name="D3D11_AUTHENTICATED_QUERY_OUTPUT_ID_COUNT_INPUT">
    <summary>
      <para>Contains input data for a D3D11_AUTHENTICATED_QUERY_OUTPUT_ID_COUNT query.</para>
      <para>
        Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d11/ns-d3d11-d3d11_authenticated_query_output_id_count_input" />
      </para>
    </summary>
  </member>
  <member name="D3D11_AUTHENTICATED_QUERY_OUTPUT_ID_COUNT_INPUT::Input">
    <summary>
      A <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ns-d3d11-d3d11_authenticated_query_input">D3D11_AUTHENTICATED_QUERY_INPUT</a> structure that contains the GUID for the query and other data.
    </summary>
  </member>
  <member name="D3D11_AUTHENTICATED_QUERY_OUTPUT_ID_COUNT_INPUT::DeviceHandle">
    <summary>A handle to the device.</summary>
  </member>
  <member name="D3D11_AUTHENTICATED_QUERY_OUTPUT_ID_COUNT_INPUT::CryptoSessionHandle">
    <summary>A handle to the cryptographic session.</summary>
  </member>
  <member name="ID3D11DepthStencilView">
    <summary>
      <para>A depth-stencil-view interface accesses a texture resource during depth-stencil testing.</para>
      <para>
        Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d11/nn-d3d11-id3d11depthstencilview" />
      </para>
    </summary>
  </member>
  <member name="ID3D11ShaderReflection::GetConstantBufferByIndex">
    <summary>
      <para>Get a constant buffer by index.</para>
      <para>
        Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d11shader/nf-d3d11shader-id3d11shaderreflection-getconstantbufferbyindex" />
      </para>
      <param name="Index">Zero-based index.</param>
    </summary>
  </member>
  <member name="ID3D11VideoDevice::CreateVideoProcessorInputView">
    <summary>
      <para>Creates a resource view for a video processor, describing the input sample for the video processing operation.</para>
      <para>
        Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d11/nf-d3d11-id3d11videodevice-createvideoprocessorinputview" />
      </para>
      <param name="pResource">
        A pointer to the <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nn-d3d11-id3d11resource">ID3D11Resource</a> interface of the input surface.
      </param>
      <param name="pEnum">
        A pointer to the <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nn-d3d11-id3d11videoprocessorenumerator">ID3D11VideoProcessorEnumerator</a> interface that specifies the video processor. To get this pointer, call <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nf-d3d11-id3d11videodevice-createvideoprocessorenumerator">ID3D11VideoDevice::CreateVideoProcessorEnumerator</a>.
      </param>
      <param name="pDesc">
        A pointer to a <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ns-d3d11-d3d11_video_processor_input_view_desc">D3D11_VIDEO_PROCESSOR_INPUT_VIEW_DESC</a> structure that describes the view.
      </param>
      <param name="ppVPIView">
        Receives a pointer to the <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nn-d3d11-id3d11videoprocessorinputview">ID3D11VideoProcessorInputView</a> interface. The caller must release the resource. If this parameter is <b>NULL</b>, the method checks whether the view is supported, but does not create the view.
      </param>
    </summary>
  </member>
  <member name="D3D11_SHADER_TYPE_DESC">
    <summary>
      <para>Describes a shader-variable type.</para>
      <para>
        Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d11shader/ns-d3d11shader-d3d11_shader_type_desc" />
      </para>
    </summary>
  </member>
  <member name="D3D11_SHADER_TYPE_DESC::Class">
    <summary>
      A <a href="https://docs.microsoft.com/windows/desktop/api/d3dcommon/ne-d3dcommon-d3d_shader_variable_class">D3D_SHADER_VARIABLE_CLASS</a>-typed value that identifies the variable class as one of scalar, vector, matrix, object, and so on.
    </summary>
  </member>
  <member name="D3D11_SHADER_TYPE_DESC::Type">
    <summary>
      A <a href="https://docs.microsoft.com/windows/desktop/api/d3dcommon/ne-d3dcommon-d3d_shader_variable_type">D3D_SHADER_VARIABLE_TYPE</a>-typed value that identifies the variable type.
    </summary>
  </member>
  <member name="D3D11_SHADER_TYPE_DESC::Rows">
    <summary>Number of rows in a matrix. Otherwise a numeric type returns 1, any other type returns 0.</summary>
  </member>
  <member name="D3D11_SHADER_TYPE_DESC::Columns">
    <summary>Number of columns in a matrix. Otherwise a numeric type returns 1, any other type returns 0.</summary>
  </member>
  <member name="D3D11_SHADER_TYPE_DESC::Elements">
    <summary>Number of elements in an array; otherwise 0.</summary>
  </member>
  <member name="D3D11_SHADER_TYPE_DESC::Members">
    <summary>Number of members in the structure; otherwise 0.</summary>
  </member>
  <member name="D3D11_SHADER_TYPE_DESC::Offset">
    <summary>Offset, in bytes, between the start of the parent structure and this variable. Can be 0 if not a structure member.</summary>
  </member>
  <member name="D3D11_SHADER_TYPE_DESC::Name">
    <summary>
      Name of the shader-variable type. This member can be <b>NULL</b> if it isn't used. This member supports dynamic shader linkage interface types, which have names. For more info about dynamic shader linkage, see <a href="https://docs.microsoft.com/windows/desktop/direct3dhlsl/overviews-direct3d-11-hlsl-dynamic-linking">Dynamic Linking</a>.
    </summary>
  </member>
  <member name="D3D11_TEX1D_SRV">
    <summary>
      <para>Specifies the subresource from a 1D texture to use in a shader-resource view.</para>
      <para>
        Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d11/ns-d3d11-d3d11_tex1d_srv" />
      </para>
    </summary>
  </member>
  <member name="D3D11_TEX1D_SRV::MostDetailedMip">
    <summary>
      Index of the most detailed mipmap level to use; this number is between 0 and <b>MipLevels</b> (from the original Texture1D for which <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nf-d3d11-id3d11device-createshaderresourceview">ID3D11Device::CreateShaderResourceView</a> creates a view) -1.
    </summary>
  </member>
  <member name="D3D11_TEX1D_SRV::MipLevels">
    <summary>
      The maximum number of mipmap levels for the view  of the texture. See the remarks.

      Set to -1 to indicate all the mipmap levels from <b>MostDetailedMip</b> on down to least detailed.
    </summary>
  </member>
  <member name="ID3D11ComputeShader">
    <summary>
      <para>A compute-shader interface manages an executable program (a compute shader) that controls the compute-shader stage.</para>
      <para>
        Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d11/nn-d3d11-id3d11computeshader" />
      </para>
    </summary>
  </member>
  <member name="ID3D11VideoContext::VideoProcessorSetOutputColorSpace">
    <summary>
      <para>Sets the output color space for the video processor.</para>
      <para>
        Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d11/nf-d3d11-id3d11videocontext-videoprocessorsetoutputcolorspace" />
      </para>
      <param name="pVideoProcessor">
        A pointer to the <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nn-d3d11-id3d11videoprocessor">ID3D11VideoProcessor</a> interface. To get this pointer, call <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nf-d3d11-id3d11videodevice-createvideoprocessor">ID3D11VideoDevice::CreateVideoProcessor</a>.
      </param>
      <param name="pColorSpace">
        A pointer to a <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ns-d3d11-d3d11_video_processor_color_space">D3D11_VIDEO_PROCESSOR_COLOR_SPACE</a> structure that specifies the color space.
      </param>
    </summary>
  </member>
  <member name="ID3D11RasterizerState1">
    <summary>
      <para>The rasterizer-state interface holds a description for rasterizer state that you can bind to the rasterizer stage. This rasterizer-state interface supports forced sample count.</para>
      <para>
        Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d11_1/nn-d3d11_1-id3d11rasterizerstate1" />
      </para>
    </summary>
  </member>
  <member name="ID3D11DeviceContext::VSGetConstantBuffers">
    <summary>
      <para>Get the constant buffers used by the vertex shader pipeline stage.</para>
      <para>
        Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d11/nf-d3d11-id3d11devicecontext-vsgetconstantbuffers" />
      </para>
      <param name="StartSlot">Index into the device's zero-based array to begin retrieving constant buffers from (ranges from 0 to D3D11_COMMONSHADER_CONSTANT_BUFFER_API_SLOT_COUNT - 1).</param>
      <param name="NumBuffers">Number of buffers to retrieve (ranges from 0 to D3D11_COMMONSHADER_CONSTANT_BUFFER_API_SLOT_COUNT - StartSlot).</param>
      <param name="ppConstantBuffers">
        Array of constant buffer interface pointers (see <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nn-d3d11-id3d11buffer">ID3D11Buffer</a>) to be returned by the method.
      </param>
    </summary>
  </member>
  <member name="ID3D11Counter">
    <summary>
      <para>This interface encapsulates methods for measuring GPU performance.</para>
      <para>
        Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d11/nn-d3d11-id3d11counter" />
      </para>
    </summary>
  </member>
  <member name="ID3D11DeviceContext3::Flush1">
    <summary>
      <para>Sends queued-up commands in the command buffer to the graphics processing unit (GPU), with a specified context type and an optional event handle to create an event query.</para>
      <para>
        Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d11_3/nf-d3d11_3-id3d11devicecontext3-flush1" />
      </para>
      <param name="ContextType">
        A <a href="https://docs.microsoft.com/windows/desktop/api/d3d11_3/ne-d3d11_3-d3d11_context_type">D3D11_CONTEXT_TYPE</a> that specifies the context in which a query occurs, such as a 3D command queue, 3D compute queue, 3D copy queue, video, or image.
      </param>
      <param name="hEvent">
        An optional event handle. When specified, this method creates an event query.


        <b>Flush1</b> operates asynchronously, therefore it can return either before or after the GPU finishes executing the queued graphics commands, which will eventually complete.
        To create an event query, you can call <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nf-d3d11-id3d11device-createquery">ID3D11Device::CreateQuery</a> with the
        value <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ne-d3d11-d3d11_query">D3D11_QUERY_EVENT</a> value.
        To determine when the GPU is finished processing the graphics commands,
        you can then use that event query in a call to <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nf-d3d11-id3d11devicecontext-getdata">ID3D11DeviceContext::GetData</a>.
      </param>
    </summary>
  </member>
  <member name="D3D11_RAISE_FLAG">
    <summary>
      <para>Option(s) for raising an error to a non-continuable exception.</para>
      <para>
        Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d11/ne-d3d11-d3d11_raise_flag" />
      </para>
    </summary>
  </member>
  <member name="D3D11_RAISE_FLAG::D3D11_RAISE_FLAG_DRIVER_INTERNAL_ERROR">
    <summary>Raise an internal driver error to a non-continuable exception.</summary>
  </member>
  <member name="D3D11_KEY_EXCHANGE_HW_PROTECTION_DATA">
    <summary>
      <para>Represents key exchange data for hardware content protection.</para>
      <para>
        Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d11_1/ns-d3d11_1-d3d11_key_exchange_hw_protection_data" />
      </para>
    </summary>
  </member>
  <member name="D3D11_KEY_EXCHANGE_HW_PROTECTION_DATA::HWProtectionFunctionID">
    <summary>The function ID of the DRM command. The values and meanings of the function ID are defined by the DRM specification.</summary>
  </member>
  <member name="D3D11_KEY_EXCHANGE_HW_PROTECTION_DATA::pInputData">
    <summary>
      Pointer to a buffer containing a <a href="https://docs.microsoft.com/windows/desktop/api/d3d11_1/ns-d3d11_1-d3d11_key_exchange_hw_protection_input_data">D3D11_KEY_EXCHANGE_HW_PROTECTION_INPUT_DATA</a> structure that specifies memory reserved for IHV use and the input data for the DRM command.
    </summary>
  </member>
  <member name="D3D11_KEY_EXCHANGE_HW_PROTECTION_DATA::pOutputData">
    <summary>
      Pointer to a buffer containing a <a href="https://docs.microsoft.com/windows/desktop/api/d3d11_1/ns-d3d11_1-d3d11_key_exchange_hw_protection_output_data">D3D11_KEY_EXCHANGE_HW_PROTECTION_OUTPUT_DATA</a> structure that specifies memory reserved for IHV use and the input data for the DRM command.
    </summary>
  </member>
  <member name="D3D11_KEY_EXCHANGE_HW_PROTECTION_DATA::Status">
    <summary>The result of the hardware DRM command.</summary>
  </member>
  <member name="ID3D11DeviceContext::OMGetBlendState">
    <summary>
      <para>Get the blend state of the output-merger stage.</para>
      <para>
        Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d11/nf-d3d11-id3d11devicecontext-omgetblendstate" />
      </para>
      <param name="ppBlendState">
        Address of a pointer to a blend-state interface (see <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nn-d3d11-id3d11blendstate">ID3D11BlendState</a>).
      </param>
      <param name="BlendFactor">Array of blend factors, one for each RGBA component.</param>
      <param name="pSampleMask">
        Pointer to a <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nf-d3d11-id3d11devicecontext-omsetblendstate">sample mask</a>.
      </param>
    </summary>
  </member>
  <member name="D3D11_DRAW_INDEXED_INSTANCED_INDIRECT_ARGS">
    <summary>
      <para>Arguments for draw indexed instanced indirect.</para>
      <para>
        Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d11/ns-d3d11-d3d11_draw_indexed_instanced_indirect_args" />
      </para>
    </summary>
  </member>
  <member name="D3D11_DRAW_INDEXED_INSTANCED_INDIRECT_ARGS::IndexCountPerInstance">
    <summary>The number of indices read from the index buffer for each instance.</summary>
  </member>
  <member name="D3D11_DRAW_INDEXED_INSTANCED_INDIRECT_ARGS::InstanceCount">
    <summary>The number of instances to draw.</summary>
  </member>
  <member name="D3D11_DRAW_INDEXED_INSTANCED_INDIRECT_ARGS::StartIndexLocation">
    <summary>The location of the first index read by the GPU from the index buffer.</summary>
  </member>
  <member name="D3D11_DRAW_INDEXED_INSTANCED_INDIRECT_ARGS::BaseVertexLocation">
    <summary>A value added to each index before reading a vertex from the vertex buffer.</summary>
  </member>
  <member name="D3D11_DRAW_INDEXED_INSTANCED_INDIRECT_ARGS::StartInstanceLocation">
    <summary>A value added to each index before reading per-instance data from a vertex buffer.</summary>
  </member>
  <member name="D3D11_LOGIC_OP">
    <summary>
      <para>Specifies logical operations to configure for a render target.</para>
      <para>
        Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d11_1/ne-d3d11_1-d3d11_logic_op" />
      </para>
    </summary>
  </member>
  <member name="D3D11_LOGIC_OP::D3D11_LOGIC_OP_CLEAR">
    <summary>Clears the render target.</summary>
  </member>
  <member name="D3D11_LOGIC_OP::D3D11_LOGIC_OP_SET">
    <summary>Sets the render target.</summary>
  </member>
  <member name="D3D11_LOGIC_OP::D3D11_LOGIC_OP_COPY">
    <summary>Copys the render target.</summary>
  </member>
  <member name="D3D11_LOGIC_OP::D3D11_LOGIC_OP_COPY_INVERTED">
    <summary>Performs an inverted-copy of the render target.</summary>
  </member>
  <member name="D3D11_LOGIC_OP::D3D11_LOGIC_OP_NOOP">
    <summary>No operation is performed on the render target.</summary>
  </member>
  <member name="D3D11_LOGIC_OP::D3D11_LOGIC_OP_INVERT">
    <summary>Inverts the render target.</summary>
  </member>
  <member name="D3D11_LOGIC_OP::D3D11_LOGIC_OP_AND">
    <summary>Performs a logical AND operation on the render target.</summary>
  </member>
  <member name="D3D11_LOGIC_OP::D3D11_LOGIC_OP_NAND">
    <summary>Performs a logical NAND operation on the render target.</summary>
  </member>
  <member name="D3D11_LOGIC_OP::D3D11_LOGIC_OP_OR">
    <summary>Performs a logical OR operation on the render target.</summary>
  </member>
  <member name="D3D11_LOGIC_OP::D3D11_LOGIC_OP_NOR">
    <summary>Performs a logical NOR operation on the render target.</summary>
  </member>
  <member name="D3D11_LOGIC_OP::D3D11_LOGIC_OP_XOR">
    <summary>Performs a logical XOR operation on the render target.</summary>
  </member>
  <member name="D3D11_LOGIC_OP::D3D11_LOGIC_OP_EQUIV">
    <summary>Performs a logical equal operation on the render target.</summary>
  </member>
  <member name="D3D11_LOGIC_OP::D3D11_LOGIC_OP_AND_REVERSE">
    <summary>Performs a logical AND and reverse operation on the render target.</summary>
  </member>
  <member name="D3D11_LOGIC_OP::D3D11_LOGIC_OP_AND_INVERTED">
    <summary>Performs a logical AND and invert operation on the render target.</summary>
  </member>
  <member name="D3D11_LOGIC_OP::D3D11_LOGIC_OP_OR_REVERSE">
    <summary>Performs a logical OR and reverse operation on the render target.</summary>
  </member>
  <member name="D3D11_LOGIC_OP::D3D11_LOGIC_OP_OR_INVERTED">
    <summary>Performs a logical OR and invert operation on the render target.</summary>
  </member>
  <member name="ID3D11ShaderReflection::GetConversionInstructionCount">
    <summary>
      <para>Gets the number of conversion instructions.</para>
      <para>
        Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d11shader/nf-d3d11shader-id3d11shaderreflection-getconversioninstructioncount" />
      </para>
    </summary>
  </member>
  <member name="ID3D11DeviceContext1::SwapDeviceContextState">
    <summary>
      <para>Activates the given context state object and changes the current device behavior to Direct3D 11, Direct3D 10.1, or Direct3D 10.</para>
      <para>
        Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d11_1/nf-d3d11_1-id3d11devicecontext1-swapdevicecontextstate" />
      </para>
      <param name="pState">
        A pointer to the <a href="https://docs.microsoft.com/windows/desktop/api/d3d11_1/nn-d3d11_1-id3ddevicecontextstate">ID3DDeviceContextState</a> interface for the context state object that was previously created through the <a href="https://docs.microsoft.com/windows/desktop/api/d3d11_1/nf-d3d11_1-id3d11device1-createdevicecontextstate">ID3D11Device1::CreateDeviceContextState</a> method. If <b>SwapDeviceContextState</b> is called with <i>pState</i> set to <b>NULL</b>, the call has no effect.
      </param>
      <param name="ppPreviousState">
        A pointer to a variable that receives a pointer to the <a href="https://docs.microsoft.com/windows/desktop/api/d3d11_1/nn-d3d11_1-id3ddevicecontextstate">ID3DDeviceContextState</a> interface for the previously-activated context state object.
      </param>
    </summary>
  </member>
  <member name="ID3D11DeviceContext::GSSetShader">
    <summary>
      <para>Set a geometry shader to the device.</para>
      <para>
        Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d11/nf-d3d11-id3d11devicecontext-gssetshader" />
      </para>
      <param name="pShader">
        Pointer to a geometry shader (see <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nn-d3d11-id3d11geometryshader">ID3D11GeometryShader</a>). Passing in <b>NULL</b> disables the shader for this pipeline stage.
      </param>
      <param name="ppClassInstances">
        A pointer to an array of class-instance interfaces (see <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nn-d3d11-id3d11classinstance">ID3D11ClassInstance</a>). Each interface used by a shader must have a corresponding class instance or the shader will get disabled. Set ppClassInstances to <b>NULL</b> if the shader does not use any interfaces.
      </param>
      <param name="NumClassInstances">The number of class-instance interfaces in the array.</param>
    </summary>
  </member>
  <member name="D3D11_TEX1D_DSV">
    <summary>
      <para>Specifies the subresource from a 1D texture that is accessible to a depth-stencil view.</para>
      <para>
        Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d11/ns-d3d11-d3d11_tex1d_dsv" />
      </para>
    </summary>
  </member>
  <member name="D3D11_TEX1D_DSV::MipSlice">
    <summary>The index of the first mipmap level to use.</summary>
  </member>
  <member name="ID3D11DeviceContext::IAGetInputLayout">
    <summary>
      <para>Get a pointer to the input-layout object that is bound to the input-assembler stage.</para>
      <para>
        Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d11/nf-d3d11-id3d11devicecontext-iagetinputlayout" />
      </para>
      <param name="ppInputLayout">
        A pointer to the input-layout object (see <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nn-d3d11-id3d11inputlayout">ID3D11InputLayout</a>), which describes the input buffers that will be read by the IA stage.
      </param>
    </summary>
  </member>
  <member name="ID3D11VideoContext1::VideoProcessorGetBehaviorHints">
    <summary>
      <para>Returns driver hints that indicate which of the video processor operations are best performed using multi-plane overlay hardware rather than ID3D11VideoContext::VideoProcessorBlt method.</para>
      <para>
        Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d11_1/nf-d3d11_1-id3d11videocontext1-videoprocessorgetbehaviorhints" />
      </para>
      <param name="pVideoProcessor">
        A pointer to the <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nn-d3d11-id3d11videoprocessor">ID3D11VideoProcessor</a> interface.
      </param>
      <param name="OutputWidth">The width of the output stream.</param>
      <param name="OutputHeight">The height of the output stream.</param>
      <param name="OutputFormat">The format of the output stream.</param>
      <param name="StreamCount">The number of input streams to process.</param>
      <param name="pStreams">An array of structures that specifies the format of each input stream and whether each stream should be used when computing behavior hints.</param>
      <param name="pBehaviorHints">
        A pointer to a bitwise OR combination of <a href="https://docs.microsoft.com/windows/desktop/api/d3d11_1/ne-d3d11_1-d3d11_video_processor_behavior_hints">D3D11_VIDEO_PROCESSOR_BEHAVIOR_HINTS</a> values indicating which video processor operations would best be performed using multi-plane overlay hardware rather than the <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nf-d3d11-id3d11videocontext-videoprocessorblt">ID3D11VideoContext::VideoProcessorBlt</a> method.
      </param>
    </summary>
  </member>
  <member name="ID3D11Device2">
    <summary>
      <para>The device interface represents a virtual adapter; it is used to create resources. ID3D11Device2 adds new methods to those in ID3D11Device1.</para>
      <para>
        Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d11_2/nn-d3d11_2-id3d11device2" />
      </para>
    </summary>
  </member>
  <member name="ID3D11VideoContext::ConfigureAuthenticatedChannel">
    <summary>
      <para>Sends a configuration command to an authenticated channel.</para>
      <para>
        Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d11/nf-d3d11-id3d11videocontext-configureauthenticatedchannel" />
      </para>
      <param name="pChannel">
        A pointer to the <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nn-d3d11-id3d11authenticatedchannel">ID3D11AuthenticatedChannel</a> interface.
      </param>
      <param name="InputSize">
        The size of the <i>pInput</i> array, in bytes.
      </param>
      <param name="pInput">
        A pointer to a byte array that contains input data for the command. This buffer always starts with a <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ns-d3d11-d3d11_authenticated_configure_input">D3D11_AUTHENTICATED_CONFIGURE_INPUT</a> structure. The <b>ConfigureType</b> member of the structure specifies the command and defines the meaning of the rest of the buffer.
      </param>
      <param name="pOutput">
        A pointer to a <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ns-d3d11-d3d11_authenticated_configure_output">D3D11_AUTHENTICATED_CONFIGURE_OUTPUT</a> structure that receives the response to the command.
      </param>
    </summary>
  </member>
  <member name="ID3D11DeviceContext::RSSetViewports">
    <summary>
      <para>Bind an array of viewports to the rasterizer stage of the pipeline.</para>
      <para>
        Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d11/nf-d3d11-id3d11devicecontext-rssetviewports" />
      </para>
      <param name="NumViewports">Number of viewports to bind.</param>
      <param name="pViewports">
        An array of <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ns-d3d11-d3d11_viewport">D3D11_VIEWPORT</a> structures to bind to the device. See the structure page for details about how the viewport size is dependent on the device feature level which has changed between Direct3D 11 and Direct3D 10.
      </param>
    </summary>
  </member>
  <member name="ID3D11Device1::CreateRasterizerState1">
    <summary>
      <para>Creates a rasterizer state object that informs the rasterizer stage how to behave and forces the sample count while UAV rendering or rasterizing.</para>
      <para>
        Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d11_1/nf-d3d11_1-id3d11device1-createrasterizerstate1" />
      </para>
      <param name="pRasterizerDesc">
        A pointer to a <a href="https://docs.microsoft.com/windows/desktop/api/d3d11_1/ns-d3d11_1-cd3d11_rasterizer_desc1">D3D11_RASTERIZER_DESC1</a> structure that describes the  rasterizer state.
      </param>
      <param name="ppRasterizerState">
        Address of a pointer to the <a href="https://docs.microsoft.com/windows/desktop/api/d3d11_1/nn-d3d11_1-id3d11rasterizerstate1">ID3D11RasterizerState1</a> interface for the rasterizer state object created.
      </param>
    </summary>
  </member>
  <member name="D3D11_AUTHENTICATED_QUERY_INPUT">
    <summary>
      <para>Contains input data for the ID3D11VideoContext::QueryAuthenticatedChannel method.</para>
      <para>
        Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d11/ns-d3d11-d3d11_authenticated_query_input" />
      </para>
    </summary>
  </member>
  <member name="D3D11_AUTHENTICATED_QUERY_INPUT::QueryType">
    <summary>
      A GUID that specifies the query. The following GUIDs are defined.

      <table>
        <tr>
          <th>Value</th>
          <th>Meaning</th>
        </tr>
        <tr>
          <td width="40%">
            <a id="D3D11_AUTHENTICATED_QUERY_ACCESSIBILITY_ATTRIBUTES"></a>
            <a id="d3d11_authenticated_query_accessibility_attributes"></a>
            <dl>
              <dt>
                <b>D3D11_AUTHENTICATED_QUERY_ACCESSIBILITY_ATTRIBUTES</b>
              </dt>
            </dl>
          </td>
          <td width="60%">
            Returns the type of I/O bus that is used to send data to the GPU.

            Output data structure: <a href="https://docs.microsoft.com/windows/win32/api/d3d11/ns-d3d11-d3d11_authenticated_query_accessibility_output">D3D11_AUTHENTICATED_QUERY_ACCESSIBILITY_OUTPUT</a>


          </td>
        </tr>
        <tr>
          <td width="40%">
            <a id="D3D11_AUTHENTICATED_QUERY_CHANNEL_TYPE"></a>
            <a id="d3d11_authenticated_query_channel_type"></a>
            <dl>
              <dt>
                <b>D3D11_AUTHENTICATED_QUERY_CHANNEL_TYPE</b>
              </dt>
            </dl>
          </td>
          <td width="60%">
            Returns the type of authenticated channel.

            Output data structure: <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ns-d3d11-d3d11_authenticated_query_channel_type_output">D3D11_AUTHENTICATED_QUERY_CHANNEL_TYPE_OUTPUT</a>


          </td>
        </tr>
        <tr>
          <td width="40%">
            <a id="D3D11_AUTHENTICATED_QUERY_CRYPTO_SESSION"></a>
            <a id="d3d11_authenticated_query_crypto_session"></a>
            <dl>
              <dt>
                <b>D3D11_AUTHENTICATED_QUERY_CRYPTO_SESSION</b>
              </dt>
            </dl>
          </td>
          <td width="60%">
            Returns handles to the cryptographic session and Direct3D device that are associated with a specified decoder device.

            Input data structure: <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ns-d3d11-d3d11_authenticated_query_crypto_session_input">D3D11_AUTHENTICATED_QUERY_CRYPTO_SESSION_INPUT</a>


            Output data structure: <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ns-d3d11-d3d11_authenticated_query_crypto_session_output">D3D11_AUTHENTICATED_QUERY_CRYPTO_SESSION_OUTPUT</a>


          </td>
        </tr>
        <tr>
          <td width="40%">
            <a id="D3D11_AUTHENTICATED_QUERY_CURRENT_ENCRYPTION_WHEN_ACCESSIBLE"></a>
            <a id="d3d11_authenticated_query_current_encryption_when_accessible"></a>
            <dl>
              <dt>
                <b>D3D11_AUTHENTICATED_QUERY_CURRENT_ENCRYPTION_WHEN_ACCESSIBLE</b>
              </dt>
            </dl>
          </td>
          <td width="60%">
            Returns the encryption type that is applied before content becomes accessible to the CPU or bus.

            Output data structure: <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ns-d3d11-d3d11_authenticated_query_accessibility_encryption_guid_count_output">D3D11_AUTHENTICATED_QUERY_ACCESSIBILITY_ENCRYPTION_GUID_COUNT_OUTPUT</a>


          </td>
        </tr>
        <tr>
          <td width="40%">
            <a id="D3D11_AUTHENTICATED_QUERY_DEVICE_HANDLE"></a>
            <a id="d3d11_authenticated_query_device_handle"></a>
            <dl>
              <dt>
                <b>D3D11_AUTHENTICATED_QUERY_DEVICE_HANDLE</b>
              </dt>
            </dl>
          </td>
          <td width="60%">
            Returns a handle to the device that is associated with this authenticated channel.

            Output data structure: <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ns-d3d11-d3d11_authenticated_query_device_handle_output">D3D11_AUTHENTICATED_QUERY_DEVICE_HANDLE_OUTPUT</a>


          </td>
        </tr>
        <tr>
          <td width="40%">
            <a id="D3D11_AUTHENTICATED_QUERY_ENCRYPTION_WHEN_ACCESSIBLE_GUID"></a>
            <a id="d3d11_authenticated_query_encryption_when_accessible_guid"></a>
            <dl>
              <dt>
                <b>D3D11_AUTHENTICATED_QUERY_ENCRYPTION_WHEN_ACCESSIBLE_GUID</b>
              </dt>
            </dl>
          </td>
          <td width="60%">
            Returns one of the encryption types that can be used to encrypt content before it becomes accessible to the CPU or bus.

            Input data structure: <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ns-d3d11-d3d11_authenticated_query_accessibility_encryption_guid_input">D3D11_AUTHENTICATED_QUERY_ACCESSIBILITY_ENCRYPTION_GUID_INPUT</a>


            Output data structure: <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ns-d3d11-d3d11_authenticated_query_accessibility_encryption_guid_output">D3D11_AUTHENTICATED_QUERY_ACCESSIBILITY_ENCRYPTION_GUID_OUTPUT</a>


          </td>
        </tr>
        <tr>
          <td width="40%">
            <a id="D3D11_AUTHENTICATED_QUERY_ENCRYPTION_WHEN_ACCESSIBLE_GUID_COUNT"></a>
            <a id="d3d11_authenticated_query_encryption_when_accessible_guid_count"></a>
            <dl>
              <dt>
                <b>D3D11_AUTHENTICATED_QUERY_ENCRYPTION_WHEN_ACCESSIBLE_GUID_COUNT</b>
              </dt>
            </dl>
          </td>
          <td width="60%">
            Returns the number of encryption types that can be used to encrypt content before it becomes accessible to the CPU or bus.

            Output data structure: <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ns-d3d11-d3d11_authenticated_query_accessibility_encryption_guid_count_output">D3D11_AUTHENTICATED_QUERY_ACCESSIBILITY_ENCRYPTION_GUID_COUNT_OUTPUT</a>


          </td>
        </tr>
        <tr>
          <td width="40%">
            <a id="D3D11_AUTHENTICATED_QUERY_OUTPUT_ID"></a>
            <a id="d3d11_authenticated_query_output_id"></a>
            <dl>
              <dt>
                <b>D3D11_AUTHENTICATED_QUERY_OUTPUT_ID</b>
              </dt>
            </dl>
          </td>
          <td width="60%">
            Returns one of the output identifiers that is associated with a specified cryptographic session and Direct3D device.

            Input data structure: <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ns-d3d11-d3d11_authenticated_query_output_id_input">D3D11_AUTHENTICATED_QUERY_OUTPUT_ID_INPUT</a>


            Output data structure: <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ns-d3d11-d3d11_authenticated_query_output_id_output">D3D11_AUTHENTICATED_QUERY_OUTPUT_ID_OUTPUT</a>


          </td>
        </tr>
        <tr>
          <td width="40%">
            <a id="D3D11_AUTHENTICATED_QUERY_OUTPUT_ID_COUNT"></a>
            <a id="d3d11_authenticated_query_output_id_count"></a>
            <dl>
              <dt>
                <b>D3D11_AUTHENTICATED_QUERY_OUTPUT_ID_COUNT</b>
              </dt>
            </dl>
          </td>
          <td width="60%">
            Returns the number of output identifiers that are associated with a specified cryptographic session and Direct3D device.

            Input data structure: <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ns-d3d11-d3d11_authenticated_query_output_id_count_input">D3D11_AUTHENTICATED_QUERY_OUTPUT_ID_COUNT_INPUT</a>


            Output data structure: <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ns-d3d11-d3d11_authenticated_query_output_id_count_output">D3D11_AUTHENTICATED_QUERY_OUTPUT_ID_COUNT_OUTPUT</a>


          </td>
        </tr>
        <tr>
          <td width="40%">
            <a id="D3D11_AUTHENTICATED_QUERY_PROTECTION"></a>
            <a id="d3d11_authenticated_query_protection"></a>
            <dl>
              <dt>
                <b>D3D11_AUTHENTICATED_QUERY_PROTECTION</b>
              </dt>
            </dl>
          </td>
          <td width="60%">
            Returns the current protection level for the device.

            Output data structure: <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ns-d3d11-d3d11_authenticated_query_protection_output">D3D11_AUTHENTICATED_QUERY_PROTECTION_OUTPUT</a>


          </td>
        </tr>
        <tr>
          <td width="40%">
            <a id="D3D11_AUTHENTICATED_QUERY_RESTRICTED_SHARED_RESOURCE_PROCESS"></a>
            <a id="d3d11_authenticated_query_restricted_shared_resource_process"></a>
            <dl>
              <dt>
                <b>D3D11_AUTHENTICATED_QUERY_RESTRICTED_SHARED_RESOURCE_PROCESS</b>
              </dt>
            </dl>
          </td>
          <td width="60%">
            Returns information about a process that is allowed to open shared resources with restricted access.

            Input data structure: <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ns-d3d11-d3d11_authenticated_query_restricted_shared_resource_process_input">D3D11_AUTHENTICATED_QUERY_RESTRICTED_SHARED_RESOURCE_PROCESS_INPUT</a>


            Output data structure: <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ns-d3d11-d3d11_authenticated_query_restricted_shared_resource_process_output">D3D11_AUTHENTICATED_QUERY_RESTRICTED_SHARED_RESOURCE_PROCESS_OUTPUT</a>


          </td>
        </tr>
        <tr>
          <td width="40%">
            <a id="D3D11_AUTHENTICATED_QUERY_RESTRICTED_SHARED_RESOURCE_PROCESS_COUNT"></a>
            <a id="d3d11_authenticated_query_restricted_shared_resource_process_count"></a>
            <dl>
              <dt>
                <b>D3D11_AUTHENTICATED_QUERY_RESTRICTED_SHARED_RESOURCE_PROCESS_COUNT</b>
              </dt>
            </dl>
          </td>
          <td width="60%">
            Returns the number of processes that are allowed to open shared resources with restricted access.

            Output data structure: <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ns-d3d11-d3d11_authenticated_query_restricted_shared_resource_process_count_output">D3D11_AUTHENTICATED_QUERY_RESTRICTED_SHARED_RESOURCE_PROCESS_COUNT_OUTPUT</a>


          </td>
        </tr>
        <tr>
          <td width="40%">
            <a id="D3D11_AUTHENTICATED_QUERY_UNRESTRICTED_PROTECTED_SHARED_RESOURCE_COUNT"></a>
            <a id="d3d11_authenticated_query_unrestricted_protected_shared_resource_count"></a>
            <dl>
              <dt>
                <b>D3D11_AUTHENTICATED_QUERY_UNRESTRICTED_PROTECTED_SHARED_RESOURCE_COUNT</b>
              </dt>
            </dl>
          </td>
          <td width="60%">
            Returns the number of protected shared resources that can be opened by any process with no restrictions.

            Output data structure: <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ns-d3d11-d3d11_authenticated_query_unrestricted_protected_shared_resource_count_output">D3D11_AUTHENTICATED_QUERY_UNRESTRICTED_PROTECTED_SHARED_RESOURCE_COUNT_OUTPUT</a>


          </td>
        </tr>
      </table>
    </summary>
  </member>
  <member name="D3D11_AUTHENTICATED_QUERY_INPUT::hChannel">
    <summary>
      A handle to the authenticated channel. To get the handle, call the <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nf-d3d11-id3d11authenticatedchannel-getchannelhandle">ID3D11AuthenticatedChannel::GetChannelHandle</a> method.
    </summary>
  </member>
  <member name="D3D11_AUTHENTICATED_QUERY_INPUT::SequenceNumber">
    <summary>The query sequence number. At the start of the session, generate a cryptographically secure 32-bit random number to use as the starting sequence number. For each query, increment the sequence number by 1.</summary>
  </member>
  <member name="D3D11_LIBRARY_DESC">
    <summary>
      <para>Describes a library.</para>
      <para>
        Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d11shader/ns-d3d11shader-d3d11_library_desc" />
      </para>
    </summary>
  </member>
  <member name="D3D11_LIBRARY_DESC::Creator">
    <summary>The name of the originator of the library.</summary>
  </member>
  <member name="D3D11_LIBRARY_DESC::Flags">
    <summary>
      A combination of <a href="https://docs.microsoft.com/windows/desktop/direct3dhlsl/d3dcompile-constants">D3DCOMPILE Constants</a> that are combined by using a bitwise OR operation. The resulting value specifies how the compiler compiles.
    </summary>
  </member>
  <member name="D3D11_LIBRARY_DESC::FunctionCount">
    <summary>The number of functions exported from the library.</summary>
  </member>
  <member name="D3D11_TILED_RESOURCE_COORDINATE">
    <summary>
      <para>Describes the coordinates of a tiled resource.</para>
      <para>
        Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d11_2/ns-d3d11_2-d3d11_tiled_resource_coordinate" />
      </para>
    </summary>
  </member>
  <member name="D3D11_TILED_RESOURCE_COORDINATE::X">
    <summary>The x position of a tiled resource. Used for buffer and 1D, 2D, and 3D textures.</summary>
  </member>
  <member name="D3D11_TILED_RESOURCE_COORDINATE::Y">
    <summary>The y position of a tiled resource. Used for 2D and 3D textures.</summary>
  </member>
  <member name="D3D11_TILED_RESOURCE_COORDINATE::Z">
    <summary>The z position of a tiled resource. Used for 3D textures.</summary>
  </member>
  <member name="D3D11_TILED_RESOURCE_COORDINATE::Subresource">
    <summary>
      A subresource index value into mipmaps and arrays. Used for 1D, 2D, and 3D textures.

      For mipmaps that use nonstandard tiling, or are packed, or both use nonstandard tiling and are packed, any subresource value that indicates any of the packed mipmaps all refer to the same tile.
    </summary>
  </member>
  <member name="ID3D11DeviceContext::OMSetDepthStencilState">
    <summary>
      <para>Sets the depth-stencil state of the output-merger stage.</para>
      <para>
        Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d11/nf-d3d11-id3d11devicecontext-omsetdepthstencilstate" />
      </para>
      <param name="pDepthStencilState">
        Pointer to a depth-stencil state interface (see <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nn-d3d11-id3d11depthstencilstate">ID3D11DepthStencilState</a>) to bind to the device. Set this to <b>NULL</b> to use the default state listed in <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ns-d3d11-d3d11_depth_stencil_desc">D3D11_DEPTH_STENCIL_DESC</a>.
      </param>
      <param name="StencilRef">Reference value to perform against when doing a depth-stencil test. See remarks.</param>
    </summary>
  </member>
  <member name="D3D11_VIDEO_DECODER_HISTOGRAM_COMPONENT">
    <summary>
      <para>Specifies indices for arrays of per component histogram infromation.</para>
      <para>
        Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d11_4/ne-d3d11_4-d3d11_video_decoder_histogram_component" />
      </para>
    </summary>
  </member>
  <member name="D3D11_VIDEO_DECODER_HISTOGRAM_COMPONENT::D3D11_VIDEO_DECODER_HISTOGRAM_COMPONENT_Y">
    <summary>If the format is a YUV format, indicates a histogram for the Y component.</summary>
  </member>
  <member name="D3D11_VIDEO_DECODER_HISTOGRAM_COMPONENT::D3D11_VIDEO_DECODER_HISTOGRAM_COMPONENT_U">
    <summary>If the format is a YUV format, indicates a histogram for the U component.</summary>
  </member>
  <member name="D3D11_VIDEO_DECODER_HISTOGRAM_COMPONENT::D3D11_VIDEO_DECODER_HISTOGRAM_COMPONENT_V">
    <summary>If the format is a YUV format, indicates a histogram for the V component.</summary>
  </member>
  <member name="D3D11_VIDEO_DECODER_HISTOGRAM_COMPONENT::D3D11_VIDEO_DECODER_HISTOGRAM_COMPONENT_R">
    <summary>If the format is an RGB/BGR format, indicates a histogram for the R component.</summary>
  </member>
  <member name="D3D11_VIDEO_DECODER_HISTOGRAM_COMPONENT::D3D11_VIDEO_DECODER_HISTOGRAM_COMPONENT_G">
    <summary>If the format is an RGB/BGR format, indicates a histogram for the G component.</summary>
  </member>
  <member name="D3D11_VIDEO_DECODER_HISTOGRAM_COMPONENT::D3D11_VIDEO_DECODER_HISTOGRAM_COMPONENT_B">
    <summary>If the format is an RGB/BGR format, indicates a histogram for the B component.</summary>
  </member>
  <member name="D3D11_VIDEO_DECODER_HISTOGRAM_COMPONENT::D3D11_VIDEO_DECODER_HISTOGRAM_COMPONENT_A">
    <summary>If the format has an alpha channel, indicates a histogram for the A component.</summary>
  </member>
  <member name="D3D11_AUTHENTICATED_CHANNEL_TYPE">
    <summary>
      <para>Specifies the type of Microsoft Direct3D authenticated channel.</para>
      <para>
        Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d11/ne-d3d11-d3d11_authenticated_channel_type" />
      </para>
    </summary>
  </member>
  <member name="D3D11_AUTHENTICATED_CHANNEL_TYPE::D3D11_AUTHENTICATED_CHANNEL_D3D11">
    <summary>Direct3D 11 channel. This channel provides communication with the Direct3D runtime.</summary>
  </member>
  <member name="D3D11_AUTHENTICATED_CHANNEL_TYPE::D3D11_AUTHENTICATED_CHANNEL_DRIVER_SOFTWARE">
    <summary>Software driver channel. This channel provides communication with a driver that implements content protection mechanisms in software.</summary>
  </member>
  <member name="D3D11_AUTHENTICATED_CHANNEL_TYPE::D3D11_AUTHENTICATED_CHANNEL_DRIVER_HARDWARE">
    <summary>Hardware driver channel. This channel provides communication with a driver that implements content protection mechanisms in the GPU hardware.</summary>
  </member>
  <member name="ID3D11DeviceContext::DrawInstancedIndirect">
    <summary>
      <para>Draw instanced, GPU-generated primitives.</para>
      <para>
        Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d11/nf-d3d11-id3d11devicecontext-drawinstancedindirect" />
      </para>
      <param name="pBufferForArgs">
        A pointer to an <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nn-d3d11-id3d11buffer">ID3D11Buffer</a>, which is a buffer containing the GPU generated primitives.
      </param>
      <param name="AlignedByteOffsetForArgs">
        Offset in <i>pBufferForArgs</i> to the start of the GPU generated primitives.
      </param>
    </summary>
  </member>
  <member name="ID3D11DeviceContext::VSSetShader">
    <summary>
      <para>Set a vertex shader to the device.</para>
      <para>
        Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d11/nf-d3d11-id3d11devicecontext-vssetshader" />
      </para>
      <param name="pVertexShader">
        Pointer to a vertex shader (see <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nn-d3d11-id3d11vertexshader">ID3D11VertexShader</a>). Passing in <b>NULL</b> disables the shader for this pipeline stage.
      </param>
      <param name="ppClassInstances">
        A pointer to an array of class-instance interfaces (see <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nn-d3d11-id3d11classinstance">ID3D11ClassInstance</a>). Each interface used by a shader must have a corresponding class instance or the shader will get disabled. Set ppClassInstances to <b>NULL</b> if the shader does not use any interfaces.
      </param>
      <param name="NumClassInstances">The number of class-instance interfaces in the array.</param>
    </summary>
  </member>
  <member name="ID3D11ClassInstance::GetDesc">
    <summary>
      <para>Gets a description of the current HLSL class.</para>
      <para>
        Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d11/nf-d3d11-id3d11classinstance-getdesc" />
      </para>
      <param name="pDesc">
        A pointer to a <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ns-d3d11-d3d11_class_instance_desc">D3D11_CLASS_INSTANCE_DESC</a> structure that describes the current HLSL class.
      </param>
    </summary>
  </member>
  <member name="ID3D11FunctionReflection::GetDesc">
    <summary>
      <para>Fills the function descriptor structure for the function.</para>
      <para>
        Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d11shader/nf-d3d11shader-id3d11functionreflection-getdesc" />
      </para>
      <param name="pDesc">
        A pointer to a <a href="https://docs.microsoft.com/windows/desktop/api/d3d11shader/ns-d3d11shader-d3d11_function_desc">D3D11_FUNCTION_DESC</a> structure that receives a description of the function.
      </param>
    </summary>
  </member>
  <member name="ID3D11Device::GetFeatureLevel">
    <summary>
      <para>Gets the feature level of the hardware device.</para>
      <para>
        Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d11/nf-d3d11-id3d11device-getfeaturelevel" />
      </para>
    </summary>
  </member>
  <member name="ID3D11VideoDevice::GetVideoDecoderProfileCount">
    <summary>
      <para>Gets the number of profiles that are supported by the driver.</para>
      <para>
        Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d11/nf-d3d11-id3d11videodevice-getvideodecoderprofilecount" />
      </para>
    </summary>
  </member>
  <member name="ID3D11Fence::SetEventOnCompletion">
    <summary>
      <para>Specifies an event that should be fired when the fence reaches a certain value.</para>
      <para>
        Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d11_3/nf-d3d11_3-id3d11fence-seteventoncompletion" />
      </para>
      <param name="Value">The fence value when the event is to be signaled.</param>
      <param name="hEvent">A handle to the event object.</param>
    </summary>
  </member>
  <member name="D3D11_CREATE_DEVICE_FLAG">
    <summary>
      <para>Describes parameters that are used to create a device.</para>
      <para>
        Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d11/ne-d3d11-d3d11_create_device_flag" />
      </para>
    </summary>
  </member>
  <member name="D3D11_CREATE_DEVICE_FLAG::D3D11_CREATE_DEVICE_SINGLETHREADED">
    <summary>
      Use this flag if your application will only call methods of Direct3D 11 interfaces from a single thread. By default, the <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nn-d3d11-id3d11device">ID3D11Device</a> object is  <a href="https://docs.microsoft.com/windows/desktop/direct3d11/overviews-direct3d-11-render-multi-thread-differences">thread-safe</a>.
      By using this flag, you can increase performance. However, if you use this flag and your application calls methods of Direct3D 11 interfaces from multiple threads, undefined behavior might result.
    </summary>
  </member>
  <member name="D3D11_CREATE_DEVICE_FLAG::D3D11_CREATE_DEVICE_DEBUG">
    <summary>
      Creates a device that supports the <a href="https://docs.microsoft.com/windows/desktop/direct3d11/overviews-direct3d-11-devices-layers">debug layer</a>.

      To use this flag, you must have D3D11*SDKLayers.dll installed; otherwise, device creation fails. To get D3D11_1SDKLayers.dll, install the SDK for Windows 8.
    </summary>
  </member>
  <member name="D3D11_CREATE_DEVICE_FLAG::D3D11_CREATE_DEVICE_SWITCH_TO_REF">
    <summary>
      <div class="alert">
        <b>Note</b>  This flag is not supported in Direct3D 11.
      </div>
      <div> </div>
    </summary>
  </member>
  <member name="D3D11_CREATE_DEVICE_FLAG::D3D11_CREATE_DEVICE_PREVENT_INTERNAL_THREADING_OPTIMIZATIONS">
    <summary>
      Prevents multiple threads from being created. When this flag is used with a <a href="https://docs.microsoft.com/windows/desktop/direct3darticles/directx-warp">Windows Advanced Rasterization Platform (WARP)</a> device, no additional threads will be created by WARP
      and all rasterization will occur on the calling thread. This flag is not recommended for general use. See remarks.
    </summary>
  </member>
  <member name="D3D11_CREATE_DEVICE_FLAG::D3D11_CREATE_DEVICE_BGRA_SUPPORT">
    <summary>
      Creates a device that supports BGRA formats (<a href="https://docs.microsoft.com/windows/desktop/api/dxgiformat/ne-dxgiformat-dxgi_format">DXGI_FORMAT_B8G8R8A8_UNORM</a> and <a href="https://docs.microsoft.com/windows/desktop/api/dxgiformat/ne-dxgiformat-dxgi_format">DXGI_FORMAT_B8G8R8A8_UNORM_SRGB</a>). All 10level9 and higher hardware with WDDM 1.1+ drivers support BGRA formats.

      <div class="alert">
        <b>Note</b>  Required for Direct2D interoperability with Direct3D resources.
      </div>
      <div> </div>
    </summary>
  </member>
  <member name="D3D11_CREATE_DEVICE_FLAG::D3D11_CREATE_DEVICE_DEBUGGABLE">
    <summary>
      Causes the device and driver to keep information that you can use for shader debugging.  The exact impact from this flag will vary from driver to driver.

      To use this flag, you must have D3D11_1SDKLayers.dll installed; otherwise, device creation fails. The created device supports the <a href="https://docs.microsoft.com/windows/desktop/direct3d11/overviews-direct3d-11-devices-layers">debug layer</a>. To get D3D11_1SDKLayers.dll, install the SDK for Windows 8.

      If you use this flag and the current driver does not support shader debugging, device creation fails. Shader debugging requires a driver that is implemented to the WDDM for Windows 8 (WDDM 1.2).

      <b>Direct3D 11:  </b>This value is not supported until Direct3D 11.1.
    </summary>
  </member>
  <member name="D3D11_CREATE_DEVICE_FLAG::D3D11_CREATE_DEVICE_PREVENT_ALTERING_LAYER_SETTINGS_FROM_REGISTRY">
    <summary>
      Causes the Direct3D runtime to ignore registry settings that turn on the <a href="https://docs.microsoft.com/windows/desktop/direct3d11/overviews-direct3d-11-devices-layers">debug layer</a>. You can turn on the debug layer by using the <a href="https://docs.microsoft.com/previous-versions/bb219725(v=vs.85)">DirectX Control Panel</a> that was included as part of the DirectX SDK. We shipped the last version of the DirectX SDK in June 2010; you can download it from the <a href="https://www.microsoft.com/download/en/details.aspx?id=6812">Microsoft Download Center</a>. You can set this flag in your app, typically in release builds only, to prevent end users from using the <a href="https://docs.microsoft.com/previous-versions/bb219725(v=vs.85)">DirectX Control Panel</a> to monitor how the app uses Direct3D.

      <div class="alert">
        <b>Note</b>  You can also set this flag in your app to prevent Direct3D debugging tools, such as Visual Studio Ultimate 2012, from hooking your app.
      </div>
      <div> </div>
      <b>Windows 8.1:  </b>This flag doesn't prevent Visual Studio 2013 and later running on Windows 8.1 and later from hooking your app; instead use <a href="https://docs.microsoft.com/windows/desktop/api/d3d11_2/nf-d3d11_2-id3d11devicecontext2-isannotationenabled">ID3D11DeviceContext2::IsAnnotationEnabled</a>. This flag still prevents Visual Studio 2013 and later running on Windows 8 and earlier from hooking your app.

      <b>Direct3D 11:  </b>This value is not supported until Direct3D 11.1.
    </summary>
  </member>
  <member name="D3D11_CREATE_DEVICE_FLAG::D3D11_CREATE_DEVICE_DISABLE_GPU_TIMEOUT">
    <summary>
      Use this flag if the device will produce GPU workloads that take more than two seconds to complete, and you want the operating system to allow them to successfully finish. If this flag is not set, the operating system performs <a href="https://docs.microsoft.com/windows-hardware/drivers/display/timeout-detection-and-recovery">timeout detection and recovery</a> when it detects a GPU packet that took more than two seconds to execute. If this flag is set, the operating system allows such a long running packet to execute without resetting the GPU. We recommend not to set this flag if your device needs to be highly responsive so that the operating system can detect and recover from GPU timeouts. We recommend to set this flag if your device needs to perform time consuming background tasks such as compute, image recognition, and video encoding to allow such tasks to successfully finish.

      <b>Direct3D 11:  </b>This value is not supported until Direct3D 11.1.
    </summary>
  </member>
  <member name="D3D11_CREATE_DEVICE_FLAG::D3D11_CREATE_DEVICE_VIDEO_SUPPORT">
    <summary>
      Forces the creation of the Direct3D device to fail if the display driver is not implemented to the WDDM for Windows 8 (WDDM 1.2). When the display driver is not implemented to WDDM 1.2, only a Direct3D device that is created with <a href="https://docs.microsoft.com/windows/desktop/direct3d11/overviews-direct3d-11-devices-downlevel-intro">feature level</a> 9.1, 9.2, or 9.3 supports video; therefore, if this flag is set, the runtime creates the Direct3D device only for feature level 9.1, 9.2, or 9.3. We recommend not to specify this flag for applications that want to favor Direct3D capability over video. If feature level 10 and higher is available, the runtime will use that feature level regardless of video support.

      If this flag is set, device creation on the Basic Render Device (BRD) will succeed regardless of the BRD's missing support for video decode. This is because the Media Foundation video stack operates in software mode on BRD. In this situation, if you force the video stack to create the Direct3D device twice (create the device once with this flag, next discover BRD, then again create the device without the flag), you actually degrade performance.

      If you attempt to create a Direct3D device with driver type <a href="https://docs.microsoft.com/windows/desktop/api/d3dcommon/ne-d3dcommon-d3d_driver_type">D3D_DRIVER_TYPE_NULL</a>, <a href="https://docs.microsoft.com/windows/desktop/api/d3dcommon/ne-d3dcommon-d3d_driver_type">D3D_DRIVER_TYPE_REFERENCE</a>, or <a href="https://docs.microsoft.com/windows/desktop/api/d3dcommon/ne-d3dcommon-d3d_driver_type">D3D_DRIVER_TYPE_SOFTWARE</a>, device creation fails at any <a href="https://docs.microsoft.com/windows/desktop/direct3d11/overviews-direct3d-11-devices-downlevel-intro">feature level</a> because none of the associated drivers provide video capability. If you attempt to create a Direct3D device with driver type <a href="https://docs.microsoft.com/windows/desktop/api/d3dcommon/ne-d3dcommon-d3d_driver_type">D3D_DRIVER_TYPE_WARP</a>, device creation succeeds to allow software fallback for video.

      <b>Direct3D 11:  </b>This value is not supported until Direct3D 11.1.
    </summary>
  </member>
  <member name="D3D11_TEX2D_SRV">
    <summary>
      <para>Specifies the subresource from a 2D texture to use in a shader-resource view.</para>
      <para>
        Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d11/ns-d3d11-d3d11_tex2d_srv" />
      </para>
    </summary>
  </member>
  <member name="D3D11_TEX2D_SRV::MostDetailedMip">
    <summary>
      Index of the most detailed mipmap level to use; this number is between 0 and <b>MipLevels</b> (from the original Texture2D for which <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nf-d3d11-id3d11device-createshaderresourceview">ID3D11Device::CreateShaderResourceView</a> creates a view) -1.
    </summary>
  </member>
  <member name="D3D11_TEX2D_SRV::MipLevels">
    <summary>
      The maximum number of mipmap levels for the view of the texture. See the remarks in <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ns-d3d11-d3d11_tex1d_srv">D3D11_TEX1D_SRV</a>.

      Set to -1 to indicate all the mipmap levels from <b>MostDetailedMip</b> on down to least detailed.
    </summary>
  </member>
  <member name="ID3D11Device::CreateDeferredContext">
    <summary>
      <para>Creates a deferred context, which can record command lists.</para>
      <para>
        Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d11/nf-d3d11-id3d11device-createdeferredcontext" />
      </para>
      <param name="ContextFlags">
        Reserved for future use.
        Pass 0.
      </param>
      <param name="ppDeferredContext">
        Upon completion of the method, the passed pointer to an <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nn-d3d11-id3d11devicecontext">ID3D11DeviceContext</a> interface pointer is initialized.
      </param>
    </summary>
  </member>
  <member name="D3D11_VIDEO_PROCESSOR_STEREO_CAPS">
    <summary>
      <para>Defines stereo 3D capabilities for a Microsoft Direct3D 11 video processor.</para>
      <para>
        Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d11/ne-d3d11-d3d11_video_processor_stereo_caps" />
      </para>
    </summary>
  </member>
  <member name="D3D11_VIDEO_PROCESSOR_STEREO_CAPS::D3D11_VIDEO_PROCESSOR_STEREO_CAPS_MONO_OFFSET">
    <summary>
      The video processor supports the <b>D3D11_VIDEO_PROCESSOR_STEREO_FORMAT_MONO_OFFSET</b>
      format.
    </summary>
  </member>
  <member name="D3D11_VIDEO_PROCESSOR_STEREO_CAPS::D3D11_VIDEO_PROCESSOR_STEREO_CAPS_ROW_INTERLEAVED">
    <summary>
      The video processor supports the <b>D3D11_VIDEO_PROCESSOR_STEREO_FORMAT_ROW_INTERLEAVED</b>
      format.
    </summary>
  </member>
  <member name="D3D11_VIDEO_PROCESSOR_STEREO_CAPS::D3D11_VIDEO_PROCESSOR_STEREO_CAPS_COLUMN_INTERLEAVED">
    <summary>
      The video processor supports the <b>D3D11_VIDEO_PROCESSOR_STEREO_FORMAT_COLUMN_INTERLEAVED</b>
      format.
    </summary>
  </member>
  <member name="D3D11_VIDEO_PROCESSOR_STEREO_CAPS::D3D11_VIDEO_PROCESSOR_STEREO_CAPS_CHECKERBOARD">
    <summary>
      The video processor supports the <b>D3D11_VIDEO_PROCESSOR_STEREO_FORMAT_CHECKERBOARD</b>
      format.
    </summary>
  </member>
  <member name="D3D11_VIDEO_PROCESSOR_STEREO_CAPS::D3D11_VIDEO_PROCESSOR_STEREO_CAPS_FLIP_MODE">
    <summary>
      The video processor can flip one or both views. For more information, see <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ne-d3d11-d3d11_video_processor_stereo_flip_mode">D3D11_VIDEO_PROCESSOR_STEREO_FLIP_MODE</a>.
    </summary>
  </member>
  <member name="D3D11_BIND_FLAG">
    <summary>
      <para>Identifies how to bind a resource to the pipeline.</para>
      <para>
        Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d11/ne-d3d11-d3d11_bind_flag" />
      </para>
    </summary>
  </member>
  <member name="D3D11_BIND_FLAG::D3D11_BIND_VERTEX_BUFFER">
    <summary>Bind a buffer as a vertex buffer to the input-assembler stage.</summary>
  </member>
  <member name="D3D11_BIND_FLAG::D3D11_BIND_INDEX_BUFFER">
    <summary>Bind a buffer as an index buffer to the input-assembler stage.</summary>
  </member>
  <member name="D3D11_BIND_FLAG::D3D11_BIND_CONSTANT_BUFFER">
    <summary>Bind a buffer as a constant buffer to a shader stage; this flag may NOT be combined with any other bind flag.</summary>
  </member>
  <member name="D3D11_BIND_FLAG::D3D11_BIND_SHADER_RESOURCE">
    <summary>
      Bind a buffer or texture to a shader stage; this flag cannot be used with the <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ne-d3d11-d3d11_map">D3D11_MAP_WRITE_NO_OVERWRITE</a> flag.

      <div class="alert">
        <b>Note</b>  The Direct3D 11.1 runtime, which is available starting with Windows 8, enables  mapping dynamic constant buffers and shader resource views (SRVs) of dynamic buffers with <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ne-d3d11-d3d11_map">D3D11_MAP_WRITE_NO_OVERWRITE</a>.  The Direct3D 11 and earlier runtimes limited mapping to vertex or index buffers. To determine if a Direct3D device supports these features, call <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nf-d3d11-id3d11device-checkfeaturesupport">ID3D11Device::CheckFeatureSupport</a> with <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ne-d3d11-d3d11_feature">D3D11_FEATURE_D3D11_OPTIONS</a>. <b>CheckFeatureSupport</b> fills members of a <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ns-d3d11-d3d11_feature_data_d3d11_options">D3D11_FEATURE_DATA_D3D11_OPTIONS</a> structure with the device's features. The relevant members here are <b>MapNoOverwriteOnDynamicConstantBuffer</b> and <b>MapNoOverwriteOnDynamicBufferSRV</b>.
      </div>
      <div> </div>
    </summary>
  </member>
  <member name="D3D11_BIND_FLAG::D3D11_BIND_STREAM_OUTPUT">
    <summary>Bind an output buffer for the stream-output stage.</summary>
  </member>
  <member name="D3D11_BIND_FLAG::D3D11_BIND_RENDER_TARGET">
    <summary>Bind a texture as a render target for the output-merger stage.</summary>
  </member>
  <member name="D3D11_BIND_FLAG::D3D11_BIND_DEPTH_STENCIL">
    <summary>Bind a texture as a depth-stencil target for the output-merger stage.</summary>
  </member>
  <member name="D3D11_BIND_FLAG::D3D11_BIND_UNORDERED_ACCESS">
    <summary>
      Bind an <a href="https://docs.microsoft.com/windows/desktop/direct3d11/direct3d-11-advanced-stages-cs-resources">unordered access</a> resource.
    </summary>
  </member>
  <member name="D3D11_BIND_FLAG::D3D11_BIND_DECODER">
    <summary>
      Set this flag to indicate that a  <a href="https://docs.microsoft.com/windows/desktop/direct3d11/overviews-direct3d-11-resources-textures-intro">2D texture</a> is used to receive output from the decoder API. The common way to create resources for a decoder output is by calling the  <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nf-d3d11-id3d11device-createtexture2d">ID3D11Device::CreateTexture2D</a> method to create an array of 2D  textures. However, you cannot use texture arrays that are created with this flag in calls to <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nf-d3d11-id3d11device-createshaderresourceview">ID3D11Device::CreateShaderResourceView</a>.

      <b>Direct3D 11:  </b>This value is not supported until Direct3D 11.1.
    </summary>
  </member>
  <member name="D3D11_BIND_FLAG::D3D11_BIND_VIDEO_ENCODER">
    <summary>
      Set this flag to indicate that a  <a href="https://docs.microsoft.com/windows/desktop/direct3d11/overviews-direct3d-11-resources-textures-intro">2D texture</a> is used to receive input from the video encoder API. The common way to create resources for a video encoder is by calling the  <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nf-d3d11-id3d11device-createtexture2d">ID3D11Device::CreateTexture2D</a> method to create an array of 2D  textures. However, you cannot use texture arrays that are created with this flag in calls to <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nf-d3d11-id3d11device-createshaderresourceview">ID3D11Device::CreateShaderResourceView</a>.

      <b>Direct3D 11:  </b>This value is not supported until Direct3D 11.1.
    </summary>
  </member>
  <member name="D3D11_QUERY_DATA_PIPELINE_STATISTICS">
    <summary>
      <para>Query information about graphics-pipeline activity in between calls to ID3D11DeviceContext::Begin and ID3D11DeviceContext::End.</para>
      <para>
        Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d11/ns-d3d11-d3d11_query_data_pipeline_statistics" />
      </para>
    </summary>
  </member>
  <member name="D3D11_QUERY_DATA_PIPELINE_STATISTICS::IAVertices">
    <summary>Number of vertices read by input assembler.</summary>
  </member>
  <member name="D3D11_QUERY_DATA_PIPELINE_STATISTICS::IAPrimitives">
    <summary>Number of primitives read by the input assembler. This number can be different depending on the primitive topology used. For example, a triangle strip with 6 vertices will produce 4 triangles, however a triangle list with 6 vertices will produce 2 triangles.</summary>
  </member>
  <member name="D3D11_QUERY_DATA_PIPELINE_STATISTICS::VSInvocations">
    <summary>Number of times a vertex shader was invoked. Direct3D invokes the vertex shader once per vertex.</summary>
  </member>
  <member name="D3D11_QUERY_DATA_PIPELINE_STATISTICS::GSInvocations">
    <summary>
      Number of times a geometry shader was invoked. When the geometry shader is set to <b>NULL</b>, this statistic may or may not increment depending on the hardware manufacturer.
    </summary>
  </member>
  <member name="D3D11_QUERY_DATA_PIPELINE_STATISTICS::GSPrimitives">
    <summary>Number of primitives output by a geometry shader.</summary>
  </member>
  <member name="D3D11_QUERY_DATA_PIPELINE_STATISTICS::CInvocations">
    <summary>Number of primitives that were sent to the rasterizer. When the rasterizer is disabled, this will not increment.</summary>
  </member>
  <member name="D3D11_QUERY_DATA_PIPELINE_STATISTICS::CPrimitives">
    <summary>Number of primitives that were rendered. This may be larger or smaller than CInvocations because after a primitive is clipped sometimes it is either broken up into more than one primitive or completely culled.</summary>
  </member>
  <member name="D3D11_QUERY_DATA_PIPELINE_STATISTICS::PSInvocations">
    <summary>Number of times a pixel shader was invoked.</summary>
  </member>
  <member name="D3D11_QUERY_DATA_PIPELINE_STATISTICS::HSInvocations">
    <summary>Number of times a hull shader was invoked.</summary>
  </member>
  <member name="D3D11_QUERY_DATA_PIPELINE_STATISTICS::DSInvocations">
    <summary>Number of times a domain shader was invoked.</summary>
  </member>
  <member name="D3D11_QUERY_DATA_PIPELINE_STATISTICS::CSInvocations">
    <summary>Number of times a compute shader was invoked.</summary>
  </member>
  <member name="ID3D11ShaderReflection::GetDesc">
    <summary>
      <para>Get a shader description.</para>
      <para>
        Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d11shader/nf-d3d11shader-id3d11shaderreflection-getdesc" />
      </para>
      <param name="pDesc">
        A pointer to a shader description. See <a href="https://docs.microsoft.com/windows/desktop/api/d3d11shader/ns-d3d11shader-d3d11_shader_desc">D3D11_SHADER_DESC</a>.
      </param>
    </summary>
  </member>
  <member name="ID3D11Device::CreatePredicate">
    <summary>
      <para>Creates a predicate.</para>
      <para>
        Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d11/nf-d3d11-id3d11device-createpredicate" />
      </para>
      <param name="pPredicateDesc">
        Pointer to a query description where the type of query must be a D3D11_QUERY_SO_OVERFLOW_PREDICATE or D3D11_QUERY_OCCLUSION_PREDICATE (see <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ns-d3d11-d3d11_query_desc">D3D11_QUERY_DESC</a>).
      </param>
      <param name="ppPredicate">
        Address of a pointer to a predicate (see <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nn-d3d11-id3d11predicate">ID3D11Predicate</a>).
      </param>
    </summary>
  </member>
  <member name="ID3D11DeviceContext::CSGetConstantBuffers">
    <summary>
      <para>Get the constant buffers used by the compute-shader stage.</para>
      <para>
        Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d11/nf-d3d11-id3d11devicecontext-csgetconstantbuffers" />
      </para>
      <param name="StartSlot">Index into the device's zero-based array to begin retrieving constant buffers from (ranges from 0 to D3D11_COMMONSHADER_CONSTANT_BUFFER_API_SLOT_COUNT - 1).</param>
      <param name="NumBuffers">Number of buffers to retrieve (ranges from 0 to D3D11_COMMONSHADER_CONSTANT_BUFFER_API_SLOT_COUNT - StartSlot).</param>
      <param name="ppConstantBuffers">
        Array of constant buffer interface pointers (see <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nn-d3d11-id3d11buffer">ID3D11Buffer</a>) to be returned by the method.
      </param>
    </summary>
  </member>
  <member name="ID3D11VideoContext::VideoProcessorGetStreamStereoFormat">
    <summary>
      <para>Gets the stereo 3D format for an input stream on the video processor.</para>
      <para>
        Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d11/nf-d3d11-id3d11videocontext-videoprocessorgetstreamstereoformat" />
      </para>
      <param name="pVideoProcessor">
        A pointer to the <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nn-d3d11-id3d11videoprocessor">ID3D11VideoProcessor</a> interface. To get this pointer, call <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nf-d3d11-id3d11videodevice-createvideoprocessor">ID3D11VideoDevice::CreateVideoProcessor</a>.
      </param>
      <param name="StreamIndex">
        The zero-based index of the input stream. To get the maximum number of streams, call <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nf-d3d11-id3d11videoprocessorenumerator-getvideoprocessorcaps">ID3D11VideoProcessorEnumerator::GetVideoProcessorCaps</a> and check the <b>MaxStreamStates</b> structure member.
      </param>
      <param name="pEnable">
        Receives the value <b>TRUE</b> if stereo 3D is enabled for this stream, or <b>FALSE</b> otherwise. If the value is <b>FALSE</b>, ignore the remaining parameters.
      </param>
      <param name="pFormat">
        Receives a <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ne-d3d11-d3d11_video_processor_stereo_format">D3D11_VIDEO_PROCESSOR_STEREO_FORMAT</a> value that specifies the layout of the two stereo views in memory.
      </param>
      <param name="pLeftViewFrame0">
        Receives a Boolean value.

        <table>
          <tr>
            <th>Value</th>
            <th>Meaning</th>
          </tr>
          <tr>
            <td width="40%">
              <a id="TRUE"></a>
              <a id="true"></a>
              <dl>
                <dt>
                  <b>TRUE</b>
                </dt>
              </dl>
            </td>
            <td width="60%">
              Frame 0 contains the left view.

            </td>
          </tr>
          <tr>
            <td width="40%">
              <a id="FALSE"></a>
              <a id="false"></a>
              <dl>
                <dt>
                  <b>FALSE</b>
                </dt>
              </dl>
            </td>
            <td width="60%">
              Frame 0 contains the right view.

            </td>
          </tr>
        </table>
      </param>
      <param name="pBaseViewFrame0">
        Receives a Boolean value.

        <table>
          <tr>
            <th>Value</th>
            <th>Meaning</th>
          </tr>
          <tr>
            <td width="40%">
              <a id="TRUE"></a>
              <a id="true"></a>
              <dl>
                <dt>
                  <b>TRUE</b>
                </dt>
              </dl>
            </td>
            <td width="60%">
              Frame 0 contains the base view.

            </td>
          </tr>
          <tr>
            <td width="40%">
              <a id="FALSE"></a>
              <a id="false"></a>
              <dl>
                <dt>
                  <b>FALSE</b>
                </dt>
              </dl>
            </td>
            <td width="60%">
              Frame 1 contains the base view.

            </td>
          </tr>
        </table>
      </param>
      <param name="pFlipMode">
        Receives a <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ne-d3d11-d3d11_video_processor_stereo_flip_mode">D3D11_VIDEO_PROCESSOR_STEREO_FLIP_MODE</a> value. This value specifies whether one of the views is flipped.
      </param>
      <param name="MonoOffset">
        Receives the pixel offset used for <b>D3D11_VIDEO_PROCESSOR_STEREO_FORMAT_MONO_OFFSET</b> format. This parameter is ignored for other stereo formats.
      </param>
    </summary>
  </member>
  <member name="ID3D11VideoContext1::VideoProcessorSetOutputColorSpace1">
    <summary>
      <para>Sets the color space information for the video processor output surface.</para>
      <para>
        Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d11_1/nf-d3d11_1-id3d11videocontext1-videoprocessorsetoutputcolorspace1" />
      </para>
      <param name="pVideoProcessor">
        A pointer to the <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nn-d3d11-id3d11videoprocessor">ID3D11VideoProcessor</a> interface.
      </param>
      <param name="ColorSpace">
        A  <a href="https://docs.microsoft.com/windows/desktop/api/dxgicommon/ne-dxgicommon-dxgi_color_space_type">DXGI_COLOR_SPACE_TYPE</a> value that specifies the colorspace for the video processor output surface.
      </param>
    </summary>
  </member>
  <member name="ID3D11Device3::CreateRasterizerState2">
    <summary>
      <para>Creates a rasterizer state object that informs the rasterizer stage how to behave and forces the sample count while UAV rendering or rasterizing.</para>
      <para>
        Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d11_3/nf-d3d11_3-id3d11device3-createrasterizerstate2" />
      </para>
      <param name="pRasterizerDesc">
        A pointer to a <a href="https://docs.microsoft.com/windows/desktop/api/d3d11_3/ns-d3d11_3-cd3d11_rasterizer_desc2">D3D11_RASTERIZER_DESC2</a> structure that describes the  rasterizer state.
      </param>
      <param name="ppRasterizerState">
        A pointer to a memory block that receives a pointer to a <a href="https://docs.microsoft.com/windows/desktop/api/d3d11_3/nn-d3d11_3-id3d11rasterizerstate2">ID3D11RasterizerState2</a> interface for the created rasterizer state object. Set this parameter to <b>NULL</b> to validate the other input parameters (the method will return <b>S_FALSE</b> if the other input parameters pass validation).
      </param>
    </summary>
  </member>
  <member name="D3D11_VIDEO_PROCESSOR_FEATURE_CAPS">
    <summary>
      <para>Defines features that a Microsoft Direct3D 11 video processor can support.</para>
      <para>
        Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d11/ne-d3d11-d3d11_video_processor_feature_caps" />
      </para>
    </summary>
  </member>
  <member name="D3D11_VIDEO_PROCESSOR_FEATURE_CAPS::D3D11_VIDEO_PROCESSOR_FEATURE_CAPS_ALPHA_FILL">
    <summary>
      The video processor can set alpha values on the output pixels. For more information, see <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nf-d3d11-id3d11videocontext-videoprocessorsetoutputalphafillmode">ID3D11VideoContext::VideoProcessorSetOutputAlphaFillMode</a>.
    </summary>
  </member>
  <member name="D3D11_VIDEO_PROCESSOR_FEATURE_CAPS::D3D11_VIDEO_PROCESSOR_FEATURE_CAPS_CONSTRICTION">
    <summary>
      The video processor can downsample the video output. For more information, see <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nf-d3d11-id3d11videocontext-videoprocessorsetoutputconstriction">ID3D11VideoContext::VideoProcessorSetOutputConstriction</a>.
    </summary>
  </member>
  <member name="D3D11_VIDEO_PROCESSOR_FEATURE_CAPS::D3D11_VIDEO_PROCESSOR_FEATURE_CAPS_LUMA_KEY">
    <summary>
      The video processor can perform luma keying. For more information, see <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nf-d3d11-id3d11videocontext-videoprocessorsetstreamlumakey">ID3D11VideoContext::VideoProcessorSetStreamLumaKey</a>.
    </summary>
  </member>
  <member name="D3D11_VIDEO_PROCESSOR_FEATURE_CAPS::D3D11_VIDEO_PROCESSOR_FEATURE_CAPS_ALPHA_PALETTE">
    <summary>The video processor can apply alpha values from color palette entries.</summary>
  </member>
  <member name="D3D11_VIDEO_PROCESSOR_FEATURE_CAPS::D3D11_VIDEO_PROCESSOR_FEATURE_CAPS_LEGACY">
    <summary>
      The driver does not support full video processing capabilities. If this capability flag is set, the video processor has the following limitations:

      <ul>
        <li>
          A maximum of two streams are supported:<ul>
            <li>The first stream must be either NV12 or YUY2.</li>
            <li>The second stream must be AYUV, AI44, or IA44.</li>
          </ul>
        </li>
        <li>Image adjustment (proc amp) controls are applied to the entire video processing blit, rather than per stream.</li>
        <li>Support for per-stream planar alpha is not reliable. (Per-pixel alpha is supported, however.)</li>
      </ul>
    </summary>
  </member>
  <member name="D3D11_VIDEO_PROCESSOR_FEATURE_CAPS::D3D11_VIDEO_PROCESSOR_FEATURE_CAPS_STEREO">
    <summary>
      The video processor can support 3D stereo video. For more information, see <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nf-d3d11-id3d11videocontext-videoprocessorsetstreamstereoformat">ID3D11VideoContext::VideoProcessorSetStreamStereoFormat</a>.

      All drivers setting this caps must support the following stereo formats: <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ne-d3d11-d3d11_video_processor_stereo_format">D3D11_VIDEO_PROCESSOR_STEREO_FORMAT_HORIZONTAL</a>, <b>D3D11_VIDEO_PROCESSOR_STEREO_FORMAT_VERTICAL</b>, and <b>D3D11_VIDEO_PROCESSOR_STEREO_FORMAT_SEPARATE</b>.
    </summary>
  </member>
  <member name="D3D11_VIDEO_PROCESSOR_FEATURE_CAPS::D3D11_VIDEO_PROCESSOR_FEATURE_CAPS_ROTATION">
    <summary>The driver can rotate the input data either 90, 180, or 270 degrees clockwise as part of the video processing operation.</summary>
  </member>
  <member name="D3D11_VIDEO_PROCESSOR_FEATURE_CAPS::D3D11_VIDEO_PROCESSOR_FEATURE_CAPS_ALPHA_STREAM">
    <summary>
      The driver supports the <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nf-d3d11-id3d11videocontext-videoprocessorsetstreamalpha">VideoProcessorSetStreamAlpha</a> call.
    </summary>
  </member>
  <member name="D3D11_VIDEO_PROCESSOR_FEATURE_CAPS::D3D11_VIDEO_PROCESSOR_FEATURE_CAPS_PIXEL_ASPECT_RATIO">
    <summary>
      The driver supports the <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nf-d3d11-id3d11videocontext-videoprocessorsetstreampixelaspectratio">VideoProcessorSetStreamPixelAspectRatio</a> call.
    </summary>
  </member>
  <member name="ID3D11Texture2D">
    <summary>
      <para>A 2D texture interface manages texel data, which is structured memory.</para>
      <para>
        Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d11/nn-d3d11-id3d11texture2d" />
      </para>
    </summary>
  </member>
  <member name="ID3D11DeviceContext::PSSetShader">
    <summary>
      <para>Sets a pixel shader to the device.</para>
      <para>
        Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d11/nf-d3d11-id3d11devicecontext-pssetshader" />
      </para>
      <param name="pPixelShader">
        Pointer to a pixel shader (see <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nn-d3d11-id3d11pixelshader">ID3D11PixelShader</a>). Passing in <b>NULL</b> disables the shader for this pipeline stage.
      </param>
      <param name="ppClassInstances">
        A pointer to an array of class-instance interfaces (see <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nn-d3d11-id3d11classinstance">ID3D11ClassInstance</a>). Each interface used by a shader must have a corresponding class instance or the shader will get disabled. Set ppClassInstances to <b>NULL</b> if the shader does not use any interfaces.
      </param>
      <param name="NumClassInstances">The number of class-instance interfaces in the array.</param>
    </summary>
  </member>
  <member name="ID3D11VideoContext::VideoProcessorSetOutputExtension">
    <summary>
      <para>Sets a driver-specific video processing state.</para>
      <para>
        Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d11/nf-d3d11-id3d11videocontext-videoprocessorsetoutputextension" />
      </para>
      <param name="pVideoProcessor">
        A pointer to the <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nn-d3d11-id3d11videoprocessor">ID3D11VideoProcessor</a> interface. To get this pointer, call <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nf-d3d11-id3d11videodevice-createvideoprocessor">ID3D11VideoDevice::CreateVideoProcessor</a>.
      </param>
      <param name="pExtensionGuid">A pointer to a GUID that identifies the operation. The meaning of this GUID is defined by the graphics driver.</param>
      <param name="DataSize">
        The size of the <i>pData</i> buffer, in bytes.
      </param>
      <param name="pData">A pointer to a buffer that contains private state data. The method passes this buffer directly to the driver without validation. It is the responsibility of the driver to validate the data.</param>
    </summary>
  </member>
  <member name="ID3D11DeviceContext::CopyStructureCount">
    <summary>
      <para>Copies data from a buffer holding variable length data.</para>
      <para>
        Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d11/nf-d3d11-id3d11devicecontext-copystructurecount" />
      </para>
      <param name="pDstBuffer">
        Pointer to <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nn-d3d11-id3d11buffer">ID3D11Buffer</a>.  This can be any buffer resource that other copy commands,
        such as <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nf-d3d11-id3d11devicecontext-copyresource">ID3D11DeviceContext::CopyResource</a> or <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nf-d3d11-id3d11devicecontext-copysubresourceregion">ID3D11DeviceContext::CopySubresourceRegion</a>, are able to write to.
      </param>
      <param name="DstAlignedByteOffset">
        Offset from the start of <i>pDstBuffer</i> to write 32-bit UINT structure (vertex) count from <i>pSrcView</i>.
      </param>
      <param name="pSrcView">
        Pointer to an <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nn-d3d11-id3d11unorderedaccessview">ID3D11UnorderedAccessView</a> of a Structured Buffer resource created with either
        <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ne-d3d11-d3d11_buffer_uav_flag">D3D11_BUFFER_UAV_FLAG_APPEND</a> or <b>D3D11_BUFFER_UAV_FLAG_COUNTER</b> specified
        when the UAV was created.   These types of resources have hidden counters tracking "how many" records have
        been written.
      </param>
    </summary>
  </member>
  <member name="ID3D11DeviceContext3::GetHardwareProtectionState">
    <summary>
      <para>Gets whether hardware protection is enabled.</para>
      <para>
        Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d11_3/nf-d3d11_3-id3d11devicecontext3-gethardwareprotectionstate" />
      </para>
      <param name="pHwProtectionEnable">After this method returns, points to a BOOL that indicates whether hardware protection is enabled.</param>
    </summary>
  </member>
  <member name="ID3D11InfoQueue::GetRetrievalFilterStackSize">
    <summary>
      <para>Get the size of the retrieval-filter stack in bytes.</para>
      <para>
        Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d11sdklayers/nf-d3d11sdklayers-id3d11infoqueue-getretrievalfilterstacksize" />
      </para>
    </summary>
  </member>
  <member name="D3D11_VIDEO_PROCESSOR_STREAM_BEHAVIOR_HINT">
    <summary>
      <para>Provides information about the input streams passed into the ID3DVideoContext1::VideoProcessorGetBehaviorHints method.</para>
      <para>
        Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d11_1/ns-d3d11_1-d3d11_video_processor_stream_behavior_hint" />
      </para>
    </summary>
  </member>
  <member name="D3D11_VIDEO_PROCESSOR_STREAM_BEHAVIOR_HINT::Enable">
    <summary>A value indicating whether this input stream should be used to compute behavior hints. Set to true if the stream should be used to compute behavior hints; otherwise, set to false.</summary>
  </member>
  <member name="D3D11_VIDEO_PROCESSOR_STREAM_BEHAVIOR_HINT::Width">
    <summary>The width of the input stream.</summary>
  </member>
  <member name="D3D11_VIDEO_PROCESSOR_STREAM_BEHAVIOR_HINT::Height">
    <summary>The height of the input stream.</summary>
  </member>
  <member name="D3D11_VIDEO_PROCESSOR_STREAM_BEHAVIOR_HINT::Format">
    <summary>The format of the input stream.</summary>
  </member>
  <member name="ID3D11ShaderReflectionType::GetNumInterfaces">
    <summary>
      <para>Gets the number of interfaces.</para>
      <para>
        Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d11shader/nf-d3d11shader-id3d11shaderreflectiontype-getnuminterfaces" />
      </para>
    </summary>
  </member>
  <member name="ID3D11InfoQueue">
    <summary>
      <para>An information-queue interface stores, retrieves, and filters debug messages. The queue consists of a message queue, an optional storage filter stack, and a optional retrieval filter stack.</para>
      <para>
        Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d11sdklayers/nn-d3d11sdklayers-id3d11infoqueue" />
      </para>
    </summary>
  </member>
  <member name="ID3D11DeviceContext::PSGetConstantBuffers">
    <summary>
      <para>Get the constant buffers used by the pixel shader pipeline stage.</para>
      <para>
        Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d11/nf-d3d11-id3d11devicecontext-psgetconstantbuffers" />
      </para>
      <param name="StartSlot">Index into the device's zero-based array to begin retrieving constant buffers from (ranges from 0 to D3D11_COMMONSHADER_CONSTANT_BUFFER_API_SLOT_COUNT - 1).</param>
      <param name="NumBuffers">Number of buffers to retrieve (ranges from 0 to D3D11_COMMONSHADER_CONSTANT_BUFFER_API_SLOT_COUNT - StartSlot).</param>
      <param name="ppConstantBuffers">
        Array of constant buffer interface pointers (see <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nn-d3d11-id3d11buffer">ID3D11Buffer</a>) to be returned by the method.
      </param>
    </summary>
  </member>
  <member name="ID3D11ShaderReflectionType::ImplementsInterface">
    <summary>
      <para>Indicates whether a class type implements an interface.</para>
      <para>
        Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d11shader/nf-d3d11shader-id3d11shaderreflectiontype-implementsinterface" />
      </para>
      <param name="pBase">
        A pointer to a <a href="https://docs.microsoft.com/windows/desktop/api/d3d11shader/nn-d3d11shader-id3d11shaderreflectiontype">ID3D11ShaderReflectionType Interface</a>.
      </param>
    </summary>
  </member>
  <member name="D3D11_TEX2DMS_RTV">
    <summary>
      <para>Specifies the subresource from a multisampled 2D texture to use in a render-target view.</para>
      <para>
        Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d11/ns-d3d11-d3d11_tex2dms_rtv" />
      </para>
    </summary>
  </member>
  <member name="D3D11_TEX2DMS_RTV::UnusedField_NothingToDefine">
    <summary>Integer of any value. See remarks.</summary>
  </member>
  <member name="ID3D11ShaderTrace">
    <summary>
      <para>An ID3D11ShaderTrace interface implements methods for obtaining traces of shader executions.</para>
      <para>
        Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d11shadertracing/nn-d3d11shadertracing-id3d11shadertrace" />
      </para>
    </summary>
  </member>
  <member name="ID3D11Predicate">
    <summary>
      <para>A predicate interface determines whether geometry should be processed depending on the results of a previous draw call.</para>
      <para>
        Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d11/nn-d3d11-id3d11predicate" />
      </para>
    </summary>
  </member>
  <member name="ID3D11VideoContext::VideoProcessorSetStreamAlpha">
    <summary>
      <para>Sets the planar alpha for an input stream on the video processor.</para>
      <para>
        Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d11/nf-d3d11-id3d11videocontext-videoprocessorsetstreamalpha" />
      </para>
      <param name="pVideoProcessor">
        A pointer to the <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nn-d3d11-id3d11videoprocessor">ID3D11VideoProcessor</a> interface. To get this pointer, call <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nf-d3d11-id3d11videodevice-createvideoprocessor">ID3D11VideoDevice::CreateVideoProcessor</a>.
      </param>
      <param name="StreamIndex">
        The zero-based index of the input stream. To get the maximum number of streams, call <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nf-d3d11-id3d11videoprocessorenumerator-getvideoprocessorcaps">ID3D11VideoProcessorEnumerator::GetVideoProcessorCaps</a> and check the <b>MaxStreamStates</b> structure member.
      </param>
      <param name="Enable">Specifies whether alpha blending is enabled.</param>
      <param name="Alpha">
        The planar alpha value. The value can range from 0.0 (transparent) to 1.0 (opaque).
        If <i>Enable</i> is <b>FALSE</b>, this parameter is ignored.
      </param>
    </summary>
  </member>
  <member name="D3D11_VIDEO_DECODER_OUTPUT_VIEW_DESC">
    <summary>
      <para>Describes a video decoder output view.</para>
      <para>
        Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d11/ns-d3d11-d3d11_video_decoder_output_view_desc" />
      </para>
    </summary>
  </member>
  <member name="D3D11_VIDEO_DECODER_OUTPUT_VIEW_DESC::DecodeProfile">
    <summary>
      The decoding profile. To get the list of profiles supported by the device, call the <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nf-d3d11-id3d11videodevice-getvideodecoderprofile">ID3D11VideoDevice::GetVideoDecoderProfile</a> method.
    </summary>
  </member>
  <member name="D3D11_VIDEO_DECODER_OUTPUT_VIEW_DESC::ViewDimension">
    <summary>
      The resource type of the view, specified as a member of the <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ne-d3d11-d3d11_vdov_dimension">D3D11_VDOV_DIMENSION</a> enumeration.
    </summary>
  </member>
  <member name="D3D11_VIDEO_DECODER_OUTPUT_VIEW_DESC::Texture2D">
    <summary>
      A <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ns-d3d11-d3d11_tex2d_vdov">D3D11_TEX2D_VDOV</a> structure that identifies the texture resource for the output view.
    </summary>
  </member>
  <member name="ID3D11ShaderReflection::GetGSInputPrimitive">
    <summary>
      <para>Gets the geometry-shader input-primitive description.</para>
      <para>
        Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d11shader/nf-d3d11shader-id3d11shaderreflection-getgsinputprimitive" />
      </para>
    </summary>
  </member>
  <member name="D3D11_VIDEO_DECODER_CONFIG">
    <summary>
      <para>Describes the configuration of a Microsoft Direct3D 11 decoder device for DirectX Video Acceleration (DXVA).</para>
      <para>
        Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d11/ns-d3d11-d3d11_video_decoder_config" />
      </para>
    </summary>
  </member>
  <member name="D3D11_VIDEO_DECODER_CONFIG::guidConfigBitstreamEncryption">
    <summary>
      If the bitstream data buffers are encrypted using the D3D11CryptoSession mechanism, this GUID should be set to zero. If no encryption is applied, the value is <b>DXVA_NoEncrypt</b>. If <b>ConfigBitstreamRaw</b> is 0, the value must be <b>DXVA_NoEncrypt</b>.
    </summary>
  </member>
  <member name="D3D11_VIDEO_DECODER_CONFIG::guidConfigMBcontrolEncryption">
    <summary>
      If the macroblock control data buffers are  encrypted using the D3D11CryptoSession mechanism, this GUID should be set to zero.  If no encryption is applied, the value is <b>DXVA_NoEncrypt</b>. If <b>ConfigBitstreamRaw</b> is 1, the value must be <b>DXVA_NoEncrypt</b>.
    </summary>
  </member>
  <member name="D3D11_VIDEO_DECODER_CONFIG::guidConfigResidDiffEncryption">
    <summary>
      If the residual difference decoding data buffers are  encrypted using the D3D11CryptoSession mechanism, this GUID should be set to zero.   If no encryption is applied, the value is <b>DXVA_NoEncrypt</b>. If <b>ConfigBitstreamRaw</b> is 1, the value must be <b>DXVA_NoEncrypt</b>.
    </summary>
  </member>
  <member name="D3D11_VIDEO_DECODER_CONFIG::ConfigBitstreamRaw">
    <summary>
      Indicates whether the host-decoder sends raw bit-stream data. If the value is 1, the data for the pictures will be sent in bit-stream buffers as raw bit-stream content. If the value is 0, picture data will be sent using macroblock control command buffers. If either <b>ConfigResidDiffHost</b> or <b>ConfigResidDiffAccelerator</b> is 1, the value must be 0.
    </summary>
  </member>
  <member name="D3D11_VIDEO_DECODER_CONFIG::ConfigMBcontrolRasterOrder">
    <summary>Specifies whether macroblock control commands are in raster scan order or in arbitrary order. If the value is 1, the macroblock control commands within each macroblock control command buffer are in raster-scan order. If the value is 0, the order is arbitrary. For some types of bit streams, forcing raster order either greatly increases the number of required macroblock control buffers that must be processed, or requires host reordering of the control information. Therefore, supporting arbitrary order can be more efficient.</summary>
  </member>
  <member name="D3D11_VIDEO_DECODER_CONFIG::ConfigResidDiffHost">
    <summary>Contains the host residual difference configuration. If the value is 1, some residual difference decoding data may be sent as blocks in the spatial domain from the host. If the value is 0, spatial domain data will not be sent.</summary>
  </member>
  <member name="D3D11_VIDEO_DECODER_CONFIG::ConfigSpatialResid8">
    <summary>
      Indicates the word size used to represent residual difference spatial-domain blocks for predicted (non-intra) pictures when using host-based residual difference decoding.


      If <b>ConfigResidDiffHost</b> is 1 and <b>ConfigSpatialResid8</b> is 1, the host will send residual difference spatial-domain blocks for non-intra macroblocks using 8-bit signed samples and for intra macroblocks in predicted (non-intra) pictures in a format that depends on the value of <b>ConfigIntraResidUnsigned</b>:


      <ul>
        <li>
          If <b>ConfigIntraResidUnsigned</b> is 0, spatial-domain blocks for intra macroblocks are sent as 8-bit signed integer values relative to a constant reference value of 2^(BPP–1).
        </li>
        <li>
          If <b>ConfigIntraResidUnsigned</b> is 1, spatial-domain blocks for intra macroblocks are sent as 8-bit unsigned integer values relative to a constant reference value of 0.
        </li>
      </ul>
      If <b>ConfigResidDiffHost</b> is 1 and <b>ConfigSpatialResid8</b> is 0, the host will send residual difference spatial-domain blocks of data for non-intra macroblocks using 16-bit signed samples and for intra macroblocks in predicted (non-intra) pictures in a format that depends on the value of <b>ConfigIntraResidUnsigned</b>:


      <ul>
        <li>
          If <b>ConfigIntraResidUnsigned</b> is 0, spatial domain blocks for intra macroblocks are sent as 16-bit signed integer values relative to a constant reference value of 2^(BPP–1).
        </li>
        <li>
          If <b>ConfigIntraResidUnsigned</b> is 1, spatial domain blocks for intra macroblocks are sent as 16-bit unsigned integer values relative to a constant reference value of 0.
        </li>
      </ul>
      If <b>ConfigResidDiffHost</b> is 0, <b>ConfigSpatialResid8</b> must be 0.


      For intra pictures, spatial-domain blocks must be sent using 8-bit samples if bits-per-pixel (BPP) is 8, and using 16-bit samples if BPP &gt; 8. If <b>ConfigIntraResidUnsigned</b> is 0, these samples are sent as signed integer values relative to a constant reference value of 2^(BPP–1), and if <b>ConfigIntraResidUnsigned</b> is 1, these samples are sent as unsigned integer values relative to a constant reference value of 0.
    </summary>
  </member>
  <member name="D3D11_VIDEO_DECODER_CONFIG::ConfigResid8Subtraction">
    <summary>
      If the value is 1, 8-bit difference overflow blocks are subtracted rather than added. The value must be 0 unless <b>ConfigSpatialResid8</b> is 1.


      The ability to subtract differences rather than add them enables 8-bit difference decoding to be fully compliant with the full ±255 range of values required in video decoder specifications, because +255 cannot be represented as the addition of two signed 8-bit numbers, but any number in the range ±255 can be represented as the difference between two signed 8-bit numbers (+255 = +127 minus –128).
    </summary>
  </member>
  <member name="D3D11_VIDEO_DECODER_CONFIG::ConfigSpatialHost8or9Clipping">
    <summary>
      If the value is 1, spatial-domain blocks for intra macroblocks must be clipped to an 8-bit range on the host and spatial-domain blocks for non-intra macroblocks must be clipped to a 9-bit range on the host. If the value is 0, no such clipping is necessary by the host.


      The value must be 0 unless <b>ConfigSpatialResid8</b> is 0 and <b>ConfigResidDiffHost</b> is 1.
    </summary>
  </member>
  <member name="D3D11_VIDEO_DECODER_CONFIG::ConfigSpatialResidInterleaved">
    <summary>
      If the value is 1, any spatial-domain residual difference data must be sent in a chrominance-interleaved form matching the YUV format chrominance interleaving pattern. The value must be 0 unless <b>ConfigResidDiffHost</b> is 1 and the YUV format is NV12 or NV21.
    </summary>
  </member>
  <member name="D3D11_VIDEO_DECODER_CONFIG::ConfigIntraResidUnsigned">
    <summary>
      Indicates the method of representation of spatial-domain blocks of residual difference data for intra blocks when using host-based difference decoding.


      If <b>ConfigResidDiffHost</b> is 1 and <b>ConfigIntraResidUnsigned</b> is 0, spatial-domain residual difference data blocks for intra macroblocks must be sent as follows:


      <ul>
        <li>
          In a non-intra picture, if <b>ConfigSpatialResid8</b> is 0, the spatial-domain residual difference data blocks for intra macroblocks are sent as 16-bit signed integer values relative to a constant reference value of 2^(BPP–1).
        </li>
        <li>
          In a non-intra picture, if <b>ConfigSpatialResid8</b> is 1, the spatial-domain residual difference data blocks for intra macroblocks are sent as 8-bit signed integer values relative to a constant reference value of 2^(BPP–1).
        </li>
        <li>
          In an intra picture, if BPP is 8, the spatial-domain residual difference data blocks for intra macroblocks are sent as 8-bit signed integer values relative to a constant reference value of 2^(BPP–1), regardless of the value of <b>ConfigSpatialResid8</b>.
        </li>
      </ul>
      If <b>ConfigResidDiffHost</b> is 1 and <b>ConfigIntraResidUnsigned</b> is 1, spatial-domain residual difference data blocks for intra macroblocks must be sent as follows:


      <ul>
        <li>
          In a non-intra picture, if <b>ConfigSpatialResid8</b> is 0, the spatial-domain residual difference data blocks for intra macroblocks must be sent as 16-bit unsigned integer values relative to a constant reference value of 0.
        </li>
        <li>
          In a non-intra picture, if <b>ConfigSpatialResid8</b> is 1, the spatial-domain residual difference data blocks for intra macroblocks are sent as 8-bit unsigned integer values relative to a constant reference value of 0.
        </li>
        <li>
          In an intra picture, if BPP is 8, the spatial-domain residual difference data blocks for intra macroblocks are sent as 8-bit unsigned integer values relative to a constant reference value of 0, regardless of the value of <b>ConfigSpatialResid8</b>.
        </li>
      </ul>
      The value of the member must be 0 unless <b>ConfigResidDiffHost</b> is 1.
    </summary>
  </member>
  <member name="D3D11_VIDEO_DECODER_CONFIG::ConfigResidDiffAccelerator">
    <summary>
      If the value is 1, transform-domain blocks of coefficient data may be sent from the host for accelerator-based IDCT. If the value is 0, accelerator-based IDCT will not be used. If both <b>ConfigResidDiffHost</b> and <b>ConfigResidDiffAccelerator</b> are 1, this indicates that some residual difference decoding will be done on the host and some on the accelerator, as indicated by macroblock-level control commands.


      The value must be 0 if <b>ConfigBitstreamRaw</b> is 1.
    </summary>
  </member>
  <member name="D3D11_VIDEO_DECODER_CONFIG::ConfigHostInverseScan">
    <summary>
      If the value is 1, the inverse scan for transform-domain block processing will be performed on the host, and absolute indices will be sent instead for any transform coefficients. If the value is 0, the inverse scan will be performed on the accelerator.


      The value must be 0 if <b>ConfigResidDiffAccelerator</b> is 0 or if <b>Config4GroupedCoefs</b> is 1.
    </summary>
  </member>
  <member name="D3D11_VIDEO_DECODER_CONFIG::ConfigSpecificIDCT">
    <summary>
      If the value is 1, the IDCT specified in Annex W of ITU-T Recommendation H.263 is used. If the value is 0, any compliant IDCT can be used for off-host IDCT.


      The H.263 annex does not comply with the IDCT requirements of MPEG-2 corrigendum 2, so the value must not be 1 for use with MPEG-2 video.


      The value must be 0 if <b>ConfigResidDiffAccelerator</b> is 0, indicating purely host-based residual difference decoding.
    </summary>
  </member>
  <member name="D3D11_VIDEO_DECODER_CONFIG::Config4GroupedCoefs">
    <summary>
      If the value is 1, transform coefficients for off-host IDCT will be sent using the <a href="https://docs.microsoft.com/windows-hardware/drivers/ddi/content/dxva/ns-dxva-_dxva_tcoef4group">DXVA_TCoef4Group</a> structure. If the value is 0, the <a href="https://docs.microsoft.com/windows-hardware/drivers/ddi/content/dxva/ns-dxva-_dxva_tcoefsingle">DXVA_TCoefSingle</a> structure is used. The value must be 0 if <b>ConfigResidDiffAccelerator</b> is 0 or if <b>ConfigHostInverseScan</b> is 1.
    </summary>
  </member>
  <member name="D3D11_VIDEO_DECODER_CONFIG::ConfigMinRenderTargetBuffCount">
    <summary>Specifies how many frames the decoder device processes at any one time.</summary>
  </member>
  <member name="D3D11_VIDEO_DECODER_CONFIG::ConfigDecoderSpecific">
    <summary>Contains decoder-specific configuration information.</summary>
  </member>
  <member name="D3D11_TEX2D_ARRAY_VPOV">
    <summary>
      <para>Identifies a texture resource for a video processor output view.</para>
      <para>
        Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d11/ns-d3d11-d3d11_tex2d_array_vpov" />
      </para>
    </summary>
  </member>
  <member name="D3D11_TEX2D_ARRAY_VPOV::MipSlice">
    <summary>The zero-based index into the array of subtextures.</summary>
  </member>
  <member name="D3D11_TEX2D_ARRAY_VPOV::FirstArraySlice">
    <summary>The index of the first texture to use.</summary>
  </member>
  <member name="D3D11_TEX2D_ARRAY_VPOV::ArraySize">
    <summary>The number of textures in the array.</summary>
  </member>
  <member name="D3D11_CLASS_INSTANCE_DESC">
    <summary>
      <para>Describes an HLSL class instance.</para>
      <para>
        Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d11/ns-d3d11-d3d11_class_instance_desc" />
      </para>
    </summary>
  </member>
  <member name="D3D11_CLASS_INSTANCE_DESC::InstanceId">
    <summary>The instance ID of an HLSL class; the default value is 0.</summary>
  </member>
  <member name="D3D11_CLASS_INSTANCE_DESC::InstanceIndex">
    <summary>The instance index of an HLSL class; the default value is 0.</summary>
  </member>
  <member name="D3D11_CLASS_INSTANCE_DESC::TypeId">
    <summary>The type ID of an HLSL class; the default value is 0.</summary>
  </member>
  <member name="D3D11_CLASS_INSTANCE_DESC::ConstantBuffer">
    <summary>Describes the constant buffer associated with an HLSL class; the default value is 0.</summary>
  </member>
  <member name="D3D11_CLASS_INSTANCE_DESC::BaseConstantBufferOffset">
    <summary>The base constant buffer offset associated with an HLSL class; the default value is 0.</summary>
  </member>
  <member name="D3D11_CLASS_INSTANCE_DESC::BaseTexture">
    <summary>The base texture associated with an HLSL class; the default value is 127.</summary>
  </member>
  <member name="D3D11_CLASS_INSTANCE_DESC::BaseSampler">
    <summary>The base sampler associated with an HLSL class; the default value is 15.</summary>
  </member>
  <member name="D3D11_CLASS_INSTANCE_DESC::Created">
    <summary>True if the class was created; the default value is false.</summary>
  </member>
  <member name="D3D11_DOMAIN_SHADER_TRACE_DESC">
    <summary>
      <para>Describes an instance of a domain shader to trace.</para>
      <para>
        Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d11shadertracing/ns-d3d11shadertracing-d3d11_domain_shader_trace_desc" />
      </para>
    </summary>
  </member>
  <member name="D3D11_DOMAIN_SHADER_TRACE_DESC::Invocation">
    <summary>The invocation number of the instance of the domain shader.</summary>
  </member>
  <member name="ID3D11VideoContext2::VideoProcessorSetOutputHDRMetaData">
    <summary>
      <para>Sets the HDR metadata describing the display on which the content will be presented.</para>
      <para>
        Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d11_4/nf-d3d11_4-id3d11videocontext2-videoprocessorsetoutputhdrmetadata" />
      </para>
      <param name="pVideoProcessor">
        A pointer to the <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nn-d3d11-id3d11videoprocessor">ID3D11VideoProcessor</a> interface.
      </param>
      <param name="Type">The type of HDR metadata supplied.</param>
      <param name="Size">
        The size of the HDR metadata supplied in <i>pHDRMetaData</i>.

        For <b>DXGI_HDR_METADATA_TYPE_NONE</b>, the size should be 0.

        For <b>DXGI_HDR_METADATA_TYPE_HDR10</b>, the size is <c>sizeof(DXGI_HDR_METADATA_HDR10)</c>.
      </param>
      <param name="pHDRMetaData">
        Pointer to the metadata information.

        For <b>DXGI_HDR_METADATA_TYPE_NONE</b>, this should be NULL.

        For <b>DXGI_HDR_METADATA_TYPE_HDR10</b>, this is a pointer to a <a href="https://docs.microsoft.com/windows/desktop/api/dxgi1_5/ns-dxgi1_5-dxgi_hdr_metadata_hdr10">DXGI_HDR_METADATA_HDR10</a> structure.
      </param>
    </summary>
  </member>
  <member name="ID3D11ShaderReflectionType::IsOfType">
    <summary>
      <para>Indicates whether a variable is of the specified type.</para>
      <para>
        Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d11shader/nf-d3d11shader-id3d11shaderreflectiontype-isoftype" />
      </para>
      <param name="pType">
        A pointer to a <a href="https://docs.microsoft.com/windows/desktop/api/d3d11shader/nn-d3d11shader-id3d11shaderreflectiontype">ID3D11ShaderReflectionType Interface</a>.
      </param>
    </summary>
  </member>
  <member name="ID3D11VideoProcessorOutputView::GetDesc">
    <summary>
      <para>Gets the properties of the video processor output view.</para>
      <para>
        Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d11/nf-d3d11-id3d11videoprocessoroutputview-getdesc" />
      </para>
      <param name="pDesc">
        A pointer to a <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ns-d3d11-d3d11_video_processor_output_view_desc">D3D11_VIDEO_PROCESSOR_OUTPUT_VIEW_DESC</a> structure. The method fills the structure with the view properties.
      </param>
    </summary>
  </member>
  <member name="ID3D11VideoContext2::VideoProcessorGetOutputHDRMetaData">
    <summary>
      <para>Gets the HDR metadata describing the display on which the content will be presented.</para>
      <para>
        Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d11_4/nf-d3d11_4-id3d11videocontext2-videoprocessorgetoutputhdrmetadata" />
      </para>
      <param name="pVideoProcessor">
        A pointer to the <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nn-d3d11-id3d11videoprocessor">ID3D11VideoProcessor</a> interface.
      </param>
      <param name="pType">The type of HDR metadata supplied.</param>
      <param name="Size">
        The size of the memory referenced by <i>pHDRMetaData</i>.

        If <i>pHDRMetaData</i> is NULL, <i>Size</i> should be 0.
      </param>
      <param name="pMetaData">
        Pointer to a buffer that receives the HDR metadata.

        This parameter can be NULL.
      </param>
    </summary>
  </member>
  <member name="ID3D11FunctionReflection::GetResourceBindingDescByName">
    <summary>
      <para>Gets a description of how a resource is bound to a function.</para>
      <para>
        Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d11shader/nf-d3d11shader-id3d11functionreflection-getresourcebindingdescbyname" />
      </para>
      <param name="Name">The constant-buffer name of the resource.</param>
      <param name="pDesc">
        A pointer to a <a href="https://docs.microsoft.com/windows/win32/api/d3d11shader/ns-d3d11shader-d3d11_shader_input_bind_desc">D3D11_SHADER_INPUT_BIND_DESC</a> structure that describes input binding of the resource.
      </param>
    </summary>
  </member>
  <member name="D3D11_VIDEO_DECODER_BEGIN_FRAME_CRYPTO_SESSION">
    <summary>
      <para>Provides data to the ID3D11VideoContext::DecoderBeginFrame method.</para>
      <para>
        Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d11_1/ns-d3d11_1-d3d11_video_decoder_begin_frame_crypto_session" />
      </para>
    </summary>
  </member>
  <member name="D3D11_VIDEO_DECODER_BEGIN_FRAME_CRYPTO_SESSION::pCryptoSession">
    <summary>
      A pointer to the ID3D11CryptoSession interface.  To get this pointer, call <a href="https://docs.microsoft.com/windows/desktop/api/d3d9/nf-d3d9-idirect3ddevice9video-createcryptosession">ID3D11VideoDevice1::CreateCryptoSession</a>.
    </summary>
  </member>
  <member name="D3D11_VIDEO_DECODER_BEGIN_FRAME_CRYPTO_SESSION::BlobSize">
    <summary>
      The size of the memory buffer referenced by the <i>pBlob</i> member.
    </summary>
  </member>
  <member name="D3D11_VIDEO_DECODER_BEGIN_FRAME_CRYPTO_SESSION::pBlob">
    <summary>
      The definition of this buffer is dependent on the implementation of the secure execution environment. It could contain a sealed key blob or any other per-key data that the secure execution environment needs to pass to the decode API.

      The definition of this buffer is dependent on the implementation of the secure environment. It may contain data specific to the current frame.
    </summary>
  </member>
  <member name="D3D11_VIDEO_DECODER_BEGIN_FRAME_CRYPTO_SESSION::pKeyInfoId">
    <summary>A pointer to a GUID identifying the hardware key.</summary>
  </member>
  <member name="D3D11_VIDEO_DECODER_BEGIN_FRAME_CRYPTO_SESSION::PrivateDataSize">
    <summary>
      The size of the memory buffer referenced by the <i>pPrivateData</i> member.
    </summary>
  </member>
  <member name="D3D11_UAV_DIMENSION">
    <summary>
      <para>Unordered-access view options.</para>
      <para>
        Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d11/ne-d3d11-d3d11_uav_dimension" />
      </para>
    </summary>
  </member>
  <member name="D3D11_UAV_DIMENSION::D3D11_UAV_DIMENSION_UNKNOWN">
    <summary>The view type is unknown.</summary>
  </member>
  <member name="D3D11_UAV_DIMENSION::D3D11_UAV_DIMENSION_BUFFER">
    <summary>View the resource as a buffer.</summary>
  </member>
  <member name="D3D11_UAV_DIMENSION::D3D11_UAV_DIMENSION_TEXTURE1D">
    <summary>View the resource as a 1D texture.</summary>
  </member>
  <member name="D3D11_UAV_DIMENSION::D3D11_UAV_DIMENSION_TEXTURE1DARRAY">
    <summary>View the resource as a 1D texture array.</summary>
  </member>
  <member name="D3D11_UAV_DIMENSION::D3D11_UAV_DIMENSION_TEXTURE2D">
    <summary>View the resource as a 2D texture.</summary>
  </member>
  <member name="D3D11_UAV_DIMENSION::D3D11_UAV_DIMENSION_TEXTURE2DARRAY">
    <summary>View the resource as a 2D texture array.</summary>
  </member>
  <member name="D3D11_UAV_DIMENSION::D3D11_UAV_DIMENSION_TEXTURE3D">
    <summary>View the resource as a 3D texture array.</summary>
  </member>
  <member name="ID3D11VideoContext::VideoProcessorGetStreamColorSpace">
    <summary>
      <para>Gets the color space for an input stream of the video processor.</para>
      <para>
        Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d11/nf-d3d11-id3d11videocontext-videoprocessorgetstreamcolorspace" />
      </para>
      <param name="pVideoProcessor">
        A pointer to the <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nn-d3d11-id3d11videoprocessor">ID3D11VideoProcessor</a> interface. To get this pointer, call <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nf-d3d11-id3d11videodevice-createvideoprocessor">ID3D11VideoDevice::CreateVideoProcessor</a>.
      </param>
      <param name="StreamIndex">
        The zero-based index of the input stream. To get the maximum number of streams, call <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nf-d3d11-id3d11videoprocessorenumerator-getvideoprocessorcaps">ID3D11VideoProcessorEnumerator::GetVideoProcessorCaps</a> and check the <b>MaxStreamStates</b> structure member.
      </param>
      <param name="pColorSpace">
        Receives a <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ns-d3d11-d3d11_video_processor_color_space">D3D11_VIDEO_PROCESSOR_COLOR_SPACE</a> value that specifies the color space.
      </param>
    </summary>
  </member>
  <member name="ID3D11VideoContext::SubmitDecoderBuffers">
    <summary>
      <para>Submits one or more buffers for decoding.</para>
      <para>
        Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d11/nf-d3d11-id3d11videocontext-submitdecoderbuffers" />
      </para>
      <param name="pDecoder">
        A pointer to the <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nn-d3d11-id3d11videodecoder">ID3D11VideoDecoder</a> interface. To get this pointer, call the <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nf-d3d11-id3d11videodevice-createvideodecoder">ID3D11VideoDevice::CreateVideoDecoder</a> method.
      </param>
      <param name="NumBuffers">The number of buffers submitted for decoding.</param>
      <param name="pBufferDesc">
        A pointer to an array of <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ns-d3d11-d3d11_video_decoder_buffer_desc">D3D11_VIDEO_DECODER_BUFFER_DESC</a> structures. The <i>NumBuffers</i> parameter specifies the number of elements in the array. Each element in the array describes a compressed buffer for decoding.
      </param>
    </summary>
  </member>
  <member name="D3D11_SHADER_TYPE">
    <summary>
      <para>Identifies a shader type for tracing.</para>
      <para>
        Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d11shadertracing/ne-d3d11shadertracing-d3d11_shader_type" />
      </para>
    </summary>
  </member>
  <member name="D3D11_SHADER_TYPE::D3D11_VERTEX_SHADER">
    <summary>Identifies a vertex shader.</summary>
  </member>
  <member name="D3D11_SHADER_TYPE::D3D11_HULL_SHADER">
    <summary>Identifies a hull shader.</summary>
  </member>
  <member name="D3D11_SHADER_TYPE::D3D11_DOMAIN_SHADER">
    <summary>Identifies a domain shader.</summary>
  </member>
  <member name="D3D11_SHADER_TYPE::D3D11_GEOMETRY_SHADER">
    <summary>Identifies a geometry shader.</summary>
  </member>
  <member name="D3D11_SHADER_TYPE::D3D11_PIXEL_SHADER">
    <summary>Identifies a pixel shader.</summary>
  </member>
  <member name="D3D11_SHADER_TYPE::D3D11_COMPUTE_SHADER">
    <summary>Identifies a compute shader.</summary>
  </member>
  <member name="ID3D11ShaderReflectionConstantBuffer::GetVariableByIndex">
    <summary>
      <para>Get a shader-reflection variable by index.</para>
      <para>
        Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d11shader/nf-d3d11shader-id3d11shaderreflectionconstantbuffer-getvariablebyindex" />
      </para>
      <param name="Index">Zero-based index.</param>
    </summary>
  </member>
  <member name="D3D11_FEATURE">
    <summary>
      <para>Direct3D 11 feature options.</para>
      <para>
        Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d11/ne-d3d11-d3d11_feature" />
      </para>
    </summary>
  </member>
  <member name="D3D11_FEATURE::D3D11_FEATURE_THREADING">
    <summary>
      The driver supports <a href="https://docs.microsoft.com/windows/win32/direct3d11/overviews-direct3d-11-render-multi-thread-intro">multithreading</a>. To see an example of testing a driver for multithread support, see <a href="https://docs.microsoft.com/windows/win32/direct3d11/overviews-direct3d-11-render-multi-thread-support">How To: Check for Driver Support</a>. Refer to <a href="https://docs.microsoft.com/windows/win32/api/d3d11/ns-d3d11-d3d11_feature_data_threading">D3D11_FEATURE_DATA_THREADING</a>.
    </summary>
  </member>
  <member name="D3D11_FEATURE::D3D11_FEATURE_DOUBLES">
    <summary>
      Supports the use of the double-precision shaders in HLSL. Refer to <a href="https://docs.microsoft.com/windows/win32/api/d3d11/ns-d3d11-d3d11_feature_data_doubles">D3D11_FEATURE_DATA_DOUBLES</a>.
    </summary>
  </member>
  <member name="D3D11_FEATURE::D3D11_FEATURE_FORMAT_SUPPORT">
    <summary>
      Supports the formats in <a href="https://docs.microsoft.com/windows/win32/api/d3d11/ne-d3d11-d3d11_format_support">D3D11_FORMAT_SUPPORT</a>. Refer to <a href="https://docs.microsoft.com/windows/win32/api/d3d11/ns-d3d11-d3d11_feature_data_format_support">D3D11_FEATURE_DATA_FORMAT_SUPPORT</a>.
    </summary>
  </member>
  <member name="D3D11_FEATURE::D3D11_FEATURE_FORMAT_SUPPORT2">
    <summary>
      Supports the formats in <a href="https://docs.microsoft.com/windows/win32/api/d3d11/ne-d3d11-d3d11_format_support2">D3D11_FORMAT_SUPPORT2</a>. Refer to <a href="https://docs.microsoft.com/windows/win32/api/d3d11/ns-d3d11-d3d11_feature_data_format_support2">D3D11_FEATURE_DATA_FORMAT_SUPPORT2</a>.
    </summary>
  </member>
  <member name="D3D11_FEATURE::D3D11_FEATURE_D3D10_X_HARDWARE_OPTIONS">
    <summary>
      Supports compute shaders and raw and structured buffers. Refer to <a href="https://docs.microsoft.com/windows/win32/api/d3d11/ns-d3d11-d3d11_feature_data_d3d10_x_hardware_options">D3D11_FEATURE_DATA_D3D10_X_HARDWARE_OPTIONS</a>.
    </summary>
  </member>
  <member name="D3D11_FEATURE::D3D11_FEATURE_D3D11_OPTIONS">
    <summary>
      Supports Direct3D 11.1 feature options. Refer to <a href="https://docs.microsoft.com/windows/win32/api/d3d11/ns-d3d11-d3d11_feature_data_d3d11_options">D3D11_FEATURE_DATA_D3D11_OPTIONS</a>.

      <b>Direct3D 11:  </b>This value is not supported until Direct3D 11.1.
    </summary>
  </member>
  <member name="D3D11_FEATURE::D3D11_FEATURE_ARCHITECTURE_INFO">
    <summary>
      Supports specific adapter architecture. Refer to <a href="https://docs.microsoft.com/windows/win32/api/d3d11/ns-d3d11-d3d11_feature_data_architecture_info">D3D11_FEATURE_DATA_ARCHITECTURE_INFO</a>.

      <b>Direct3D 11:  </b>This value is not supported until Direct3D 11.1.
    </summary>
  </member>
  <member name="D3D11_FEATURE::D3D11_FEATURE_D3D9_OPTIONS">
    <summary>
      Supports Direct3D 9 feature options. Refer to <a href="https://docs.microsoft.com/windows/win32/api/d3d11/ns-d3d11-d3d11_feature_data_d3d9_options">D3D11_FEATURE_DATA_D3D9_OPTIONS</a>.

      <b>Direct3D 11:  </b>This value is not supported until Direct3D 11.1.
    </summary>
  </member>
  <member name="D3D11_FEATURE::D3D11_FEATURE_SHADER_MIN_PRECISION_SUPPORT">
    <summary>
      Supports minimum precision of shaders. For more info about HLSL minimum precision, see <a href="https://docs.microsoft.com/windows/win32/direct3d11/direct3d-11-1-features">using HLSL minimum precision</a>. Refer to <a href="https://docs.microsoft.com/windows/win32/api/d3d11/ns-d3d11-d3d11_feature_data_shader_min_precision_support">D3D11_FEATURE_DATA_SHADER_MIN_PRECISION_SUPPORT</a>.

      <b>Direct3D 11:  </b>This value is not supported until Direct3D 11.1.
    </summary>
  </member>
  <member name="D3D11_FEATURE::D3D11_FEATURE_D3D9_SHADOW_SUPPORT">
    <summary>
      Supports Direct3D 9 shadowing feature. Refer to <a href="https://docs.microsoft.com/windows/win32/api/d3d11/ns-d3d11-d3d11_feature_data_d3d9_shadow_support">D3D11_FEATURE_DATA_D3D9_SHADOW_SUPPORT</a>.

      <b>Direct3D 11:  </b>This value is not supported until Direct3D 11.1.
    </summary>
  </member>
  <member name="D3D11_FEATURE::D3D11_FEATURE_D3D11_OPTIONS1">
    <summary>
      Supports Direct3D 11.2 feature options. Refer to <a href="https://docs.microsoft.com/windows/win32/api/d3d11/ns-d3d11-d3d11_feature_data_d3d11_options1">D3D11_FEATURE_DATA_D3D11_OPTIONS1</a>.

      <b>Direct3D 11:  </b>This value is not supported until Direct3D 11.2.
    </summary>
  </member>
  <member name="D3D11_FEATURE::D3D11_FEATURE_D3D9_SIMPLE_INSTANCING_SUPPORT">
    <summary>
      Supports Direct3D 11.2 instancing options. Refer to <a href="https://docs.microsoft.com/windows/win32/api/d3d11/ns-d3d11-d3d11_feature_data_d3d9_simple_instancing_support">D3D11_FEATURE_DATA_D3D9_SIMPLE_INSTANCING_SUPPORT</a>.

      <b>Direct3D 11:  </b>This value is not supported until Direct3D 11.2.
    </summary>
  </member>
  <member name="D3D11_FEATURE::D3D11_FEATURE_MARKER_SUPPORT">
    <summary>
      Supports Direct3D 11.2 marker options. Refer to <a href="https://docs.microsoft.com/windows/win32/api/d3d11/ns-d3d11-d3d11_feature_data_marker_support">D3D11_FEATURE_DATA_MARKER_SUPPORT</a>.

      <b>Direct3D 11:  </b>This value is not supported until Direct3D 11.2.
    </summary>
  </member>
  <member name="D3D11_FEATURE::D3D11_FEATURE_D3D9_OPTIONS1">
    <summary>
      Supports Direct3D 9 feature options, which includes the Direct3D 9 shadowing feature and instancing support. Refer to <a href="https://docs.microsoft.com/windows/win32/api/d3d11/ns-d3d11-d3d11_feature_data_d3d9_options1">D3D11_FEATURE_DATA_D3D9_OPTIONS1</a>.

      <b>Direct3D 11:  </b>This value is not supported until Direct3D 11.2.
    </summary>
  </member>
  <member name="D3D11_FEATURE::D3D11_FEATURE_D3D11_OPTIONS2">
    <summary>
      Supports Direct3D 11.3 conservative rasterization feature options. Refer to <a href="https://docs.microsoft.com/windows/win32/api/d3d11/ns-d3d11-d3d11_feature_data_d3d11_options2">D3D11_FEATURE_DATA_D3D11_OPTIONS2</a>.

      <b>Direct3D 11:  </b>This value is not supported until Direct3D 11.3.
    </summary>
  </member>
  <member name="D3D11_FEATURE::D3D11_FEATURE_D3D11_OPTIONS3">
    <summary>
      Supports Direct3D 11.4 conservative rasterization feature options. Refer to <a href="https://docs.microsoft.com/windows/win32/api/d3d11/ns-d3d11-d3d11_feature_data_d3d11_options3">D3D11_FEATURE_DATA_D3D11_OPTIONS3</a>.

      <b>Direct3D 11:  </b>This value is not supported until Direct3D 11.4.
    </summary>
  </member>
  <member name="D3D11_FEATURE::D3D11_FEATURE_GPU_VIRTUAL_ADDRESS_SUPPORT">
    <summary>
      Supports GPU virtual addresses. Refer to <a href="https://docs.microsoft.com/windows/win32/api/d3d11/ns-d3d11-d3d11_feature_data_gpu_virtual_address_support">D3D11_FEATURE_DATA_GPU_VIRTUAL_ADDRESS_SUPPORT</a>.
    </summary>
  </member>
  <member name="D3D11_FEATURE::D3D11_FEATURE_D3D11_OPTIONS4">
    <summary>
      Supports a single boolean for NV12 shared textures. Refer to <a href="https://docs.microsoft.com/windows/win32/api/d3d11_4/ns-d3d11_4-d3d11_feature_data_d3d11_options4">D3D11_FEATURE_DATA_D3D11_OPTIONS4</a>.

      <b>Direct3D 11:  </b>This value is not supported until Direct3D 11.4.
    </summary>
  </member>
  <member name="D3D11_FEATURE::D3D11_FEATURE_SHADER_CACHE">
    <summary>
      Supports shader cache, described in <a href="https://docs.microsoft.com/windows/win32/api/d3d11/ns-d3d11-d3d11_feature_data_shader_cache">D3D11_FEATURE_DATA_SHADER_CACHE</a>.
    </summary>
  </member>
  <member name="D3D11_FEATURE::D3D11_FEATURE_D3D11_OPTIONS5">
    <summary>
      Supports a <a href="https://docs.microsoft.com/windows/win32/api/d3d11/ne-d3d11-d3d11_shared_resource_tier">D3D11_SHARED_RESOURCE_TIER</a> to indicate a tier for shared resource support. Refer to <a href="https://docs.microsoft.com/windows/win32/api/d3d11/ns-d3d11-d3d11_feature_data_d3d11_options5">D3D11_FEATURE_DATA_D3D11_OPTIONS5</a>.
    </summary>
  </member>
  <member name="ID3D11ClassInstance::GetInstanceName">
    <summary>
      <para>Gets the instance name of the current HLSL class.</para>
      <para>
        Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d11/nf-d3d11-id3d11classinstance-getinstancename" />
      </para>
      <param name="pInstanceName">The instance name of the current HLSL class.</param>
      <param name="pBufferLength">
        The length of the <i>pInstanceName</i> parameter.
      </param>
    </summary>
  </member>
  <member name="ID3D11DeviceContext::CopyResource">
    <summary>
      <para>Copy the entire contents of the source resource to the destination resource using the GPU.</para>
      <para>
        Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d11/nf-d3d11-id3d11devicecontext-copyresource" />
      </para>
      <param name="pDstResource">
        A pointer to the <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nn-d3d11-id3d11resource">ID3D11Resource</a> interface that represents the destination resource.
      </param>
      <param name="pSrcResource">
        A pointer to the <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nn-d3d11-id3d11resource">ID3D11Resource</a> interface that represents the source resource.
      </param>
    </summary>
  </member>
  <member name="ID3D11VideoDevice::CreateVideoDecoderOutputView">
    <summary>
      <para>Creates a resource view for a video decoder, describing the output sample for the decoding operation.</para>
      <para>
        Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d11/nf-d3d11-id3d11videodevice-createvideodecoderoutputview" />
      </para>
      <param name="pResource">
        A pointer to the <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nn-d3d11-id3d11resource">ID3D11Resource</a> interface of the decoder surface. The resource must be created with the <b>D3D11_BIND_DECODER</b> flag. See <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ne-d3d11-d3d11_bind_flag">D3D11_BIND_FLAG</a>.
      </param>
      <param name="pDesc">
        A pointer to a <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ns-d3d11-d3d11_video_decoder_output_view_desc">D3D11_VIDEO_DECODER_OUTPUT_VIEW_DESC</a> structure that describes the view.
      </param>
      <param name="ppVDOVView">
        Receives a pointer to the <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nn-d3d11-id3d11videodecoderoutputview">ID3D11VideoDecoderOutputView</a> interface. The caller must release the interface. If this parameter is <b>NULL</b>, the method checks whether the view is supported, but does not create the view.
      </param>
    </summary>
  </member>
  <member name="D3D11_SUBRESOURCE_TILING">
    <summary>
      <para>Describes a tiled subresource volume.</para>
      <para>
        Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d11_2/ns-d3d11_2-d3d11_subresource_tiling" />
      </para>
    </summary>
  </member>
  <member name="D3D11_SUBRESOURCE_TILING::WidthInTiles">
    <summary>The width in tiles of the subresource.</summary>
  </member>
  <member name="D3D11_SUBRESOURCE_TILING::HeightInTiles">
    <summary>The height in tiles of the subresource.</summary>
  </member>
  <member name="D3D11_SUBRESOURCE_TILING::DepthInTiles">
    <summary>The depth in tiles of the subresource.</summary>
  </member>
  <member name="D3D11_SUBRESOURCE_TILING::StartTileIndexInOverallResource">
    <summary>
      The index of the tile in the overall tiled subresource to start with.


      <a href="https://docs.microsoft.com/windows/desktop/api/d3d11_2/nf-d3d11_2-id3d11device2-getresourcetiling">GetResourceTiling</a> sets <b>StartTileIndexInOverallResource</b> to <b>D3D11_PACKED_TILE</b> (0xffffffff) to indicate that the whole
      <b>D3D11_SUBRESOURCE_TILING</b> structure is meaningless, and the info to which the <i>pPackedMipDesc</i> parameter of <b>GetResourceTiling</b> points applies. For packed tiles, the description of the packed mipmaps comes from a <a href="https://docs.microsoft.com/windows/desktop/api/d3d11_2/ns-d3d11_2-d3d11_packed_mip_desc">D3D11_PACKED_MIP_DESC</a> structure instead.
    </summary>
  </member>
  <member name="D3D11_TRACE_REGISTER">
    <summary>
      <para>Describes a trace register.</para>
      <para>
        Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d11shadertracing/ns-d3d11shadertracing-d3d11_trace_register" />
      </para>
    </summary>
  </member>
  <member name="D3D11_TRACE_REGISTER::RegType">
    <summary>
      A <a href="https://docs.microsoft.com/windows/desktop/api/d3d11shadertracing/ne-d3d11shadertracing-d3d11_trace_register_type">D3D11_TRACE_REGISTER_TYPE</a>-typed value that identifies the type of register that the shader-trace object uses.
    </summary>
  </member>
  <member name="D3D11_TRACE_REGISTER::Index1D">
    <summary>
      An index for one-dimensional arrays. This index is used by the following register types:

      <ul>
        <li>vertex shader or pixel shader input: v[Index1D]</li>
        <li>temp: r[Index1D]</li>
        <li>output: o[Index1D]</li>
        <li>immediate constant buffer: icb[Index1D]</li>
        <li>sampler s[Index1D]</li>
        <li>resource r[Index1D]</li>
        <li>input patch constant register: vpc[Index1D] </li>
        <li>unordered access view: u[Index1D]</li>
        <li>thread group shared memory: g[Index1D]</li>
      </ul>
    </summary>
  </member>
  <member name="D3D11_TRACE_REGISTER::Index2D">
    <summary>
      An array of indexes for two-dimensional arrays. These indexes are used by the following register types:

      <ul>
        <li>GS input: v[Index2D[0]][Index2D[1]]</li>
        <li>indexable temp: x[Index2D[0]][Index2D[1]]</li>
        <li>constant buffer: cb#[#]</li>
        <li>input control point register: vcp[Index2D[0]][Index2D[1]]</li>
        <li>output control point register: vocp[Index2D[0]][Index2D[1]]</li>
      </ul>
    </summary>
  </member>
  <member name="D3D11_TRACE_REGISTER::OperandIndex">
    <summary>The index of the operand, which starts from 0.</summary>
  </member>
  <member name="D3D11_TRACE_REGISTER::Flags">
    <summary>
      A combination of the following flags that are combined by using a bitwise <b>OR</b> operation. The resulting value specifies more about the trace register.

      <table>
        <tr>
          <th>Flag</th>
          <th>Description</th>
        </tr>
        <tr>
          <td>D3D11_TRACE_REGISTER_FLAGS_RELATIVE_INDEXING (0x1)</td>
          <td>Access to the register is part of the relative indexing of a register.</td>
        </tr>
      </table>
    </summary>
  </member>
  <member name="ID3D11ShaderReflectionConstantBuffer::GetVariableByName">
    <summary>
      <para>Get a shader-reflection variable by name.</para>
      <para>
        Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d11shader/nf-d3d11shader-id3d11shaderreflectionconstantbuffer-getvariablebyname" />
      </para>
      <param name="Name">Variable name.</param>
    </summary>
  </member>
  <member name="ID3D11Device::GetCreationFlags">
    <summary>
      <para>Get the flags used during the call to create the device with D3D11CreateDevice.</para>
      <para>
        Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d11/nf-d3d11-id3d11device-getcreationflags" />
      </para>
    </summary>
  </member>
  <member name="ID3D11RenderTargetView1::GetDesc1">
    <summary>
      <para>Gets the properties of a render-target view.</para>
      <para>
        Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d11_3/nf-d3d11_3-id3d11rendertargetview1-getdesc1" />
      </para>
      <param name="pDesc1">
        A pointer to a <a href="https://docs.microsoft.com/windows/win32/api/d3d11_3/ns-d3d11_3-d3d11_render_target_view_desc1">D3D11_RENDER_TARGET_VIEW_DESC1</a> structure that receives the description of the render-target view.
      </param>
    </summary>
  </member>
  <member name="ID3D11Device::CreateRenderTargetView">
    <summary>
      <para>Creates a render-target view for accessing resource data.</para>
      <para>
        Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d11/nf-d3d11-id3d11device-createrendertargetview" />
      </para>
      <param name="pResource">
        Pointer to a <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nn-d3d11-id3d11resource">ID3D11Resource</a> that represents a render target. This resource must have been created with the <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ne-d3d11-d3d11_bind_flag">D3D11_BIND_RENDER_TARGET</a> flag.
      </param>
      <param name="pDesc">
        Pointer to a <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ns-d3d11-d3d11_render_target_view_desc">D3D11_RENDER_TARGET_VIEW_DESC</a> that represents a render-target view description. Set this parameter to <b>NULL</b> to create a view that accesses all of the subresources in mipmap level 0.
      </param>
      <param name="ppRTView">
        Address of a pointer to an <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nn-d3d11-id3d11rendertargetview">ID3D11RenderTargetView</a>. Set this parameter to <b>NULL</b> to validate the other input parameters (the method will return S_FALSE if the other input parameters pass validation).
      </param>
    </summary>
  </member>
  <member name="ID3D11Debug::SetPresentPerRenderOpDelay">
    <summary>
      <para>Set the number of milliseconds to sleep after IDXGISwapChain::Present is called.</para>
      <para>
        Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d11sdklayers/nf-d3d11sdklayers-id3d11debug-setpresentperrenderopdelay" />
      </para>
      <param name="Milliseconds">Number of milliseconds to sleep after Present is called.</param>
    </summary>
  </member>
  <member name="ID3D11FunctionLinkingGraph::CallFunction">
    <summary>
      <para>Creates a call-function linking node to use in the function-linking-graph.</para>
      <para>
        Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d11shader/nf-d3d11shader-id3d11functionlinkinggraph-callfunction" />
      </para>
      <param name="pModuleInstanceNamespace">
        The optional namespace for the function, or <b>NULL</b> if no namespace is needed.
      </param>
      <param name="pModuleWithFunctionPrototype">
        A pointer to the <a href="https://docs.microsoft.com/windows/desktop/api/d3d11shader/nn-d3d11shader-id3d11moduleinstance">ID3D11ModuleInstance</a> interface for the library module that contains the function prototype.
      </param>
      <param name="pFunctionName">The name of the function.</param>
      <param name="ppCallNode">
        A pointer to a variable that receives a pointer to the <a href="https://docs.microsoft.com/windows/desktop/api/d3d11shader/nn-d3d11shader-id3d11linkingnode">ID3D11LinkingNode</a> interface that represents the function in the function-linking-graph.
      </param>
    </summary>
  </member>
  <member name="ID3D11ShaderReflectionType::GetBaseClass">
    <summary>
      <para>Gets an ID3D11ShaderReflectionType Interface interface containing the variable base class type.</para>
      <para>
        Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d11shader/nf-d3d11shader-id3d11shaderreflectiontype-getbaseclass" />
      </para>
    </summary>
  </member>
  <member name="ID3D11Device1::CreateDeviceContextState">
    <summary>
      <para>Creates a context state object that holds all Microsoft Direct3D state and some Direct3D behavior.</para>
      <para>
        Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d11_1/nf-d3d11_1-id3d11device1-createdevicecontextstate" />
      </para>
      <param name="Flags">
        A combination of
        <a href="https://docs.microsoft.com/windows/desktop/api/d3d11_1/ne-d3d11_1-d3d11_1_create_device_context_state_flag">D3D11_1_CREATE_DEVICE_CONTEXT_STATE_FLAG</a>
        values that are combined by using a bitwise <b>OR</b> operation.
        The resulting value specifies how to create the context state object.
        The
        <a href="https://docs.microsoft.com/windows/desktop/api/d3d11_1/ne-d3d11_1-d3d11_1_create_device_context_state_flag">D3D11_1_CREATE_DEVICE_CONTEXT_STATE_SINGLETHREADED</a>flag is currently the only defined flag.
        If the original device was created with
        <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ne-d3d11-d3d11_create_device_flag">D3D11_CREATE_DEVICE_SINGLETHREADED</a>,
        you must create all context state objects from that device with the
        <b>D3D11_1_CREATE_DEVICE_CONTEXT_STATE_SINGLETHREADED</b>flag.




        If you set the single-threaded flag for both the context state object and the device, you guarantee that you will call the whole set of context methods and device methods only from one thread.
        You therefore do not need to use critical sections to synchronize access to the device context, and the runtime can avoid working with those processor-intensive critical sections.
      </param>
      <param name="pFeatureLevels">
        A pointer to an array of <a href="https://docs.microsoft.com/windows/desktop/api/d3dcommon/ne-d3dcommon-d3d_feature_level">D3D_FEATURE_LEVEL</a> values. The array can contain elements from the following list and determines the order of feature levels for which creation is attempted.
        Unlike <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nf-d3d11-d3d11createdevice">D3D11CreateDevice</a>, you can't set <i>pFeatureLevels</i> to <b>NULL</b> because  there is no default feature level array.



        <code>
          {
          D3D_FEATURE_LEVEL_11_1,
          D3D_FEATURE_LEVEL_11_0,
          D3D_FEATURE_LEVEL_10_1,
          D3D_FEATURE_LEVEL_10_0,
          D3D_FEATURE_LEVEL_9_3,
          D3D_FEATURE_LEVEL_9_2,
          D3D_FEATURE_LEVEL_9_1,
          };

        </code>
      </param>
      <param name="FeatureLevels">
        The number of elements in <i>pFeatureLevels</i>. Unlike <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nf-d3d11-d3d11createdevice">D3D11CreateDevice</a>, you must set <i>FeatureLevels</i> to greater than 0 because you can't set <i>pFeatureLevels</i> to <b>NULL</b>.
      </param>
      <param name="SDKVersion">
        The SDK version. You must set this parameter to <b>D3D11_SDK_VERSION</b>.
      </param>
      <param name="EmulatedInterface">
        The globally unique identifier (GUID) for the emulated interface. This value specifies the behavior of the device when the context state object is active. Valid values are  obtained by using the <b>__uuidof</b> operator on the <a href="https://docs.microsoft.com/windows/desktop/api/d3d10/nn-d3d10-id3d10device">ID3D10Device</a>, <a href="https://docs.microsoft.com/windows/desktop/api/d3d10_1/nn-d3d10_1-id3d10device1">ID3D10Device1</a>, <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nn-d3d11-id3d11device">ID3D11Device</a>, and <a href="https://docs.microsoft.com/windows/desktop/api/d3d11_1/nn-d3d11_1-id3d11device1">ID3D11Device1</a> interfaces. See Remarks.
      </param>
      <param name="pChosenFeatureLevel">
        A pointer to a variable that receives a <a href="https://docs.microsoft.com/windows/desktop/api/d3dcommon/ne-d3dcommon-d3d_feature_level">D3D_FEATURE_LEVEL</a> value from the <i>pFeatureLevels</i> array. This is the first array value with which <b>CreateDeviceContextState</b> succeeded in creating the context state object. If the call to <b>CreateDeviceContextState</b> fails, the variable pointed to by <i>pChosenFeatureLevel</i> is set to zero.
      </param>
      <param name="ppContextState">
        The address of a pointer to an <a href="https://docs.microsoft.com/windows/desktop/api/d3d11_1/nn-d3d11_1-id3ddevicecontextstate">ID3DDeviceContextState</a> object that represents the state of a Direct3D device.
      </param>
    </summary>
  </member>
  <member name="ID3D11DeviceContext2::EndEvent">
    <summary>
      <para>Allows applications to annotate the end of a range of graphics commands.</para>
      <para>
        Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d11_2/nf-d3d11_2-id3d11devicecontext2-endevent" />
      </para>
    </summary>
  </member>
  <member name="D3D11_AUTHENTICATED_QUERY_OUTPUT">
    <summary>
      <para>Contains a response from the ID3D11VideoContext::QueryAuthenticatedChannel method.</para>
      <para>
        Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d11/ns-d3d11-d3d11_authenticated_query_output" />
      </para>
    </summary>
  </member>
  <member name="D3D11_AUTHENTICATED_QUERY_OUTPUT::omac">
    <summary>
      A <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ns-d3d11-d3d11_omac">D3D11_OMAC</a> structure that contains a Message Authentication Code (MAC) of the data. The driver uses AESbased one-key CBC MAC (OMAC) to calculate this value for the block of data that appears after this structure member.
    </summary>
  </member>
  <member name="D3D11_AUTHENTICATED_QUERY_OUTPUT::QueryType">
    <summary>
      A GUID that specifies the query. For a list of possible values, see <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ns-d3d11-d3d11_authenticated_query_input">D3D11_AUTHENTICATED_QUERY_INPUT</a>
    </summary>
  </member>
  <member name="D3D11_AUTHENTICATED_QUERY_OUTPUT::hChannel">
    <summary>
      A handle to the authenticated channel. To get the handle, call the <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nf-d3d11-id3d11authenticatedchannel-getchannelhandle">ID3D11AuthenticatedChannel::GetChannelHandle</a> method.
    </summary>
  </member>
  <member name="D3D11_AUTHENTICATED_QUERY_OUTPUT::SequenceNumber">
    <summary>The query sequence number.</summary>
  </member>
  <member name="D3D11_AUTHENTICATED_QUERY_OUTPUT::ReturnCode">
    <summary>The result code for the query.</summary>
  </member>
  <member name="ID3D11ShaderResourceView::GetDesc">
    <summary>
      <para>Get the shader resource view's description.</para>
      <para>
        Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d11/nf-d3d11-id3d11shaderresourceview-getdesc" />
      </para>
      <param name="pDesc">
        A pointer to a <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ns-d3d11-d3d11_shader_resource_view_desc">D3D11_SHADER_RESOURCE_VIEW_DESC</a> structure to be filled with data about the shader resource view.
      </param>
    </summary>
  </member>
  <member name="ID3D11RefDefaultTrackingOptions">
    <summary>
      <para>The default tracking interface sets reference default tracking options.</para>
      <para>
        Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d11sdklayers/nn-d3d11sdklayers-id3d11refdefaulttrackingoptions" />
      </para>
    </summary>
  </member>
  <member name="ID3D11DeviceContext::DSSetShaderResources">
    <summary>
      <para>Bind an array of shader resources to the domain-shader stage.</para>
      <para>
        Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d11/nf-d3d11-id3d11devicecontext-dssetshaderresources" />
      </para>
      <param name="StartSlot">Index into the device's zero-based array to begin setting shader resources to (ranges from 0 to D3D11_COMMONSHADER_INPUT_RESOURCE_SLOT_COUNT - 1).</param>
      <param name="NumViews">Number of shader resources to set. Up to a maximum of 128 slots are available for shader resources(ranges from 0 to D3D11_COMMONSHADER_INPUT_RESOURCE_SLOT_COUNT - StartSlot).</param>
      <param name="ppShaderResourceViews">
        Array of <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nn-d3d11-id3d11shaderresourceview">shader resource view</a> interfaces to set to the device.
      </param>
    </summary>
  </member>
  <member name="ID3D11Module">
    <summary>
      <para>A module interface creates an instance of a module that is used for resource rebinding.</para>
      <para>
        Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d11shader/nn-d3d11shader-id3d11module" />
      </para>
    </summary>
  </member>
  <member name="D3D11_TEX2D_VPOV">
    <summary>
      <para>Identifies a texture resource for a video processor output view.</para>
      <para>
        Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d11/ns-d3d11-d3d11_tex2d_vpov" />
      </para>
    </summary>
  </member>
  <member name="D3D11_TEX2D_VPOV::MipSlice">
    <summary>The zero-based index into the array of subtextures.</summary>
  </member>
  <member name="ID3D11Module::CreateInstance">
    <summary>
      <para>Initializes an instance of a shader module that is used for resource rebinding.</para>
      <para>
        Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d11shader/nf-d3d11shader-id3d11module-createinstance" />
      </para>
      <param name="pNamespace">
        The name of a shader module to initialize. This can be <b>NULL</b> if you don't want to specify a name for the module.
      </param>
      <param name="ppModuleInstance">
        The address of a pointer to an <a href="https://docs.microsoft.com/windows/desktop/api/d3d11shader/nn-d3d11shader-id3d11moduleinstance">ID3D11ModuleInstance</a> interface to initialize.
      </param>
    </summary>
  </member>
  <member name="ID3D11VideoDevice::CheckVideoDecoderFormat">
    <summary>
      <para>Given aprofile, checks whether the driver supports a specified output format.</para>
      <para>
        Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d11/nf-d3d11-id3d11videodevice-checkvideodecoderformat" />
      </para>
      <param name="pDecoderProfile">
        A pointer to a GUID that identifies the profile. To get the list of supported profiles, call <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nf-d3d11-id3d11videodevice-getvideodecoderprofile">ID3D11VideoDevice::GetVideoDecoderProfile</a>.
      </param>
      <param name="Format">
        A <a href="https://docs.microsoft.com/windows/desktop/api/dxgiformat/ne-dxgiformat-dxgi_format">DXGI_FORMAT</a> value that specifies the output format. Typical values include <b>DXGI_FORMAT_NV12</b> and <b>DXGI_FORMAT_420_OPAQUE</b>.
      </param>
      <param name="pSupported">
        Receives the value <b>TRUE</b> if the format is supported, or <b>FALSE</b> otherwise.
      </param>
    </summary>
  </member>
  <member name="D3D11_SHADER_TRACKING_OPTIONS">
    <summary>
      <para>Options that specify how to perform shader debug tracking.</para>
      <para>
        Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d11sdklayers/ne-d3d11sdklayers-d3d11_shader_tracking_options" />
      </para>
    </summary>
  </member>
  <member name="D3D11_SHADER_TRACKING_OPTIONS::D3D11_SHADER_TRACKING_OPTION_IGNORE">
    <summary>No debug tracking is performed.</summary>
  </member>
  <member name="D3D11_SHADER_TRACKING_OPTIONS::D3D11_SHADER_TRACKING_OPTION_TRACK_UNINITIALIZED">
    <summary>Track the reading of uninitialized data.</summary>
  </member>
  <member name="D3D11_SHADER_TRACKING_OPTIONS::D3D11_SHADER_TRACKING_OPTION_TRACK_RAW">
    <summary>Track read-after-write hazards.</summary>
  </member>
  <member name="D3D11_SHADER_TRACKING_OPTIONS::D3D11_SHADER_TRACKING_OPTION_TRACK_WAR">
    <summary>Track write-after-read hazards.</summary>
  </member>
  <member name="D3D11_SHADER_TRACKING_OPTIONS::D3D11_SHADER_TRACKING_OPTION_TRACK_WAW">
    <summary>Track write-after-write hazards.</summary>
  </member>
  <member name="D3D11_SHADER_TRACKING_OPTIONS::D3D11_SHADER_TRACKING_OPTION_ALLOW_SAME">
    <summary>Track that hazards are allowed in which data is written but the value does not change.</summary>
  </member>
  <member name="D3D11_SHADER_TRACKING_OPTIONS::D3D11_SHADER_TRACKING_OPTION_TRACK_ATOMIC_CONSISTENCY">
    <summary>Track that only one type of atomic operation is used on an address.</summary>
  </member>
  <member name="D3D11_SHADER_TRACKING_OPTIONS::D3D11_SHADER_TRACKING_OPTION_TRACK_RAW_ACROSS_THREADGROUPS">
    <summary>Track read-after-write hazards across thread groups.</summary>
  </member>
  <member name="D3D11_SHADER_TRACKING_OPTIONS::D3D11_SHADER_TRACKING_OPTION_TRACK_WAR_ACROSS_THREADGROUPS">
    <summary>Track write-after-read hazards across thread groups.</summary>
  </member>
  <member name="D3D11_SHADER_TRACKING_OPTIONS::D3D11_SHADER_TRACKING_OPTION_TRACK_WAW_ACROSS_THREADGROUPS">
    <summary>Track write-after-write hazards across thread groups.</summary>
  </member>
  <member name="D3D11_SHADER_TRACKING_OPTIONS::D3D11_SHADER_TRACKING_OPTION_TRACK_ATOMIC_CONSISTENCY_ACROSS_THREADGROUPS">
    <summary>Track that only one type of atomic operation is used on an address across thread groups.</summary>
  </member>
  <member name="D3D11_SHADER_TRACKING_OPTIONS::D3D11_SHADER_TRACKING_OPTION_UAV_SPECIFIC_FLAGS">
    <summary>Track hazards that are specific to unordered access views (UAVs).</summary>
  </member>
  <member name="D3D11_SHADER_TRACKING_OPTIONS::D3D11_SHADER_TRACKING_OPTION_ALL_HAZARDS">
    <summary>Track all hazards.</summary>
  </member>
  <member name="D3D11_SHADER_TRACKING_OPTIONS::D3D11_SHADER_TRACKING_OPTION_ALL_HAZARDS_ALLOWING_SAME">
    <summary>Track all hazards and track that hazards are allowed in which data is written but the value does not change.</summary>
  </member>
  <member name="D3D11_SHADER_TRACKING_OPTIONS::D3D11_SHADER_TRACKING_OPTION_ALL_OPTIONS">
    <summary>
      All of the preceding tracking options are set except <b>D3D11_SHADER_TRACKING_OPTION_IGNORE</b>.
    </summary>
  </member>
  <member name="ID3D11Device::CreateTexture1D">
    <summary>
      <para>Creates an array of 1D textures.</para>
      <para>
        Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d11/nf-d3d11-id3d11device-createtexture1d" />
      </para>
      <param name="pDesc">
        A pointer to a <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ns-d3d11-d3d11_texture1d_desc">D3D11_TEXTURE1D_DESC</a> structure that describes a 1D texture resource. To create a typeless resource that can be interpreted at runtime into different, compatible formats, specify a typeless format in the texture description. To generate mipmap levels automatically, set the number of mipmap levels to 0.
      </param>
      <param name="pInitialData">
        A pointer to an array of <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ns-d3d11-d3d11_subresource_data">D3D11_SUBRESOURCE_DATA</a> structures that describe subresources for the 1D texture resource. Applications can't specify <b>NULL</b> for <i>pInitialData</i> when creating IMMUTABLE resources (see <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ne-d3d11-d3d11_usage">D3D11_USAGE</a>). If the resource is multisampled, <i>pInitialData</i> must be <b>NULL</b> because multisampled resources cannot be initialized with data when they are created.

        If you don't pass anything to <i>pInitialData</i>, the initial content of the memory for the resource is undefined. In this case, you need to write the resource content some other way before the resource is read.

        You can determine the size of this array from values in the <b>MipLevels</b> and <b>ArraySize</b> members of the <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ns-d3d11-d3d11_texture1d_desc">D3D11_TEXTURE1D_DESC</a> structure to which <i>pDesc</i> points by using the following calculation:

        MipLevels * ArraySize

        For more information about this array size, see Remarks.
      </param>
      <param name="ppTexture1D">
        A pointer to a buffer that receives a pointer to a <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nn-d3d11-id3d11texture1d">ID3D11Texture1D</a> interface for the created texture. Set this parameter to <b>NULL</b> to validate the other input parameters (the method will return S_FALSE if the other input parameters pass validation).
      </param>
    </summary>
  </member>
  <member name="ID3D11Device::CreateGeometryShader">
    <summary>
      <para>Create a geometry shader.</para>
      <para>
        Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d11/nf-d3d11-id3d11device-creategeometryshader" />
      </para>
      <param name="pShaderBytecode">A pointer to the compiled shader.</param>
      <param name="BytecodeLength">Size of the compiled geometry shader.</param>
      <param name="pClassLinkage">
        A pointer to a class linkage interface (see <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nn-d3d11-id3d11classlinkage">ID3D11ClassLinkage</a>); the value can be <b>NULL</b>.
      </param>
      <param name="ppGeometryShader">
        Address of a pointer to a <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nn-d3d11-id3d11geometryshader">ID3D11GeometryShader</a> interface. If this is <b>NULL</b>, all other parameters will be validated, and if all
        parameters pass validation this API will return S_FALSE instead of S_OK.
      </param>
    </summary>
  </member>
  <member name="ID3D11ShaderReflectionVariable::GetBuffer">
    <summary>
      <para>This method returns the buffer of the current ID3D11ShaderReflectionVariable.</para>
      <para>
        Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d11shader/nf-d3d11shader-id3d11shaderreflectionvariable-getbuffer" />
      </para>
    </summary>
  </member>
  <member name="ID3D11CryptoSession::GetCryptoSessionHandle">
    <summary>
      <para>Gets a handle to the cryptographic session.</para>
      <para>
        Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d11/nf-d3d11-id3d11cryptosession-getcryptosessionhandle" />
      </para>
      <param name="pCryptoSessionHandle">Receives a handle to the session.</param>
    </summary>
  </member>
  <member name="ID3D11DeviceContext::CSSetConstantBuffers">
    <summary>
      <para>Sets the constant buffers used by the compute-shader stage.</para>
      <para>
        Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d11/nf-d3d11-id3d11devicecontext-cssetconstantbuffers" />
      </para>
      <param name="StartSlot">
        Index into the zero-based array to begin setting constant buffers to (ranges from 0 to <b>D3D11_COMMONSHADER_CONSTANT_BUFFER_API_SLOT_COUNT</b> - 1).
      </param>
      <param name="NumBuffers">
        Number of buffers to set (ranges from 0 to <b>D3D11_COMMONSHADER_CONSTANT_BUFFER_API_SLOT_COUNT</b> - <i>StartSlot</i>).
      </param>
      <param name="ppConstantBuffers">
        Array of constant buffers (see <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nn-d3d11-id3d11buffer">ID3D11Buffer</a>) being given to the device.
      </param>
    </summary>
  </member>
  <member name="D3D11_VIDEO_PROCESSOR_STEREO_FLIP_MODE">
    <summary>
      <para>For stereo 3D video, specifies whether the data in frame 0 or frame 1 is flipped, either horizontally or vertically.</para>
      <para>
        Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d11/ne-d3d11-d3d11_video_processor_stereo_flip_mode" />
      </para>
    </summary>
  </member>
  <member name="D3D11_VIDEO_PROCESSOR_STEREO_FLIP_MODE::D3D11_VIDEO_PROCESSOR_STEREO_FLIP_NONE">
    <summary>Neither frame is flipped.</summary>
  </member>
  <member name="D3D11_VIDEO_PROCESSOR_STEREO_FLIP_MODE::D3D11_VIDEO_PROCESSOR_STEREO_FLIP_FRAME0">
    <summary>The data in frame 0 is flipped.</summary>
  </member>
  <member name="D3D11_VIDEO_PROCESSOR_STEREO_FLIP_MODE::D3D11_VIDEO_PROCESSOR_STEREO_FLIP_FRAME1">
    <summary>The data in frame 1 is flipped.</summary>
  </member>
  <member name="D3D11_AUTHENTICATED_CONFIGURE_INPUT">
    <summary>
      <para>Contains input data for the ID3D11VideoContext::ConfigureAuthenticatedChannel method.</para>
      <para>
        Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d11/ns-d3d11-d3d11_authenticated_configure_input" />
      </para>
    </summary>
  </member>
  <member name="D3D11_AUTHENTICATED_CONFIGURE_INPUT::omac">
    <summary>
      A <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ns-d3d11-d3d11_omac">D3D11_OMAC</a> structure that contains a Message Authentication Code (MAC) of the data. The driver uses AES-based one-key CBC MAC (OMAC) to calculate this value for the block of data that appears after this structure member.
    </summary>
  </member>
  <member name="D3D11_AUTHENTICATED_CONFIGURE_INPUT::ConfigureType">
    <summary>
      A GUID that specifies the command. The following GUIDs are defined.

      <table>
        <tr>
          <th>Value</th>
          <th>Meaning</th>
        </tr>
        <tr>
          <td width="40%">
            <a id="D3D11_AUTHENTICATED_CONFIGURE_CRYPTO_SESSION"></a>
            <a id="d3d11_authenticated_configure_crypto_session"></a>
            <dl>
              <dt>
                <b>D3D11_AUTHENTICATED_CONFIGURE_CRYPTO_SESSION</b>
              </dt>
            </dl>
          </td>
          <td width="60%">
            Associates a cryptographic session with a decoder device and a Direct3D device.



            Input data: <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ns-d3d11-d3d11_authenticated_configure_crypto_session_input">D3D11_AUTHENTICATED_CONFIGURE_CRYPTO_SESSION_INPUT</a>


          </td>
        </tr>
        <tr>
          <td width="40%">
            <a id="D3D11_AUTHENTICATED_CONFIGURE_ENCRYPTION_WHEN_ACCESSIBLE"></a>
            <a id="d3d11_authenticated_configure_encryption_when_accessible"></a>
            <dl>
              <dt>
                <b>D3D11_AUTHENTICATED_CONFIGURE_ENCRYPTION_WHEN_ACCESSIBLE</b>
              </dt>
            </dl>
          </td>
          <td width="60%">
            Sets the level of encryption that is performed before protected content becomes accessible to the CPU or bus.



            Input data: <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ns-d3d11-d3d11_authenticated_configure_accessible_encryption_input">D3D11_AUTHENTICATED_CONFIGURE_ACCESSIBLE_ENCRYPTION_INPUT</a>


          </td>
        </tr>
        <tr>
          <td width="40%">
            <a id="D3D11_AUTHENTICATED_CONFIGURE_INITIALIZE"></a>
            <a id="d3d11_authenticated_configure_initialize"></a>
            <dl>
              <dt>
                <b>D3D11_AUTHENTICATED_CONFIGURE_INITIALIZE</b>
              </dt>
            </dl>
          </td>
          <td width="60%">
            Initializes the authenticated channel.



            Input data: <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ns-d3d11-d3d11_authenticated_configure_initialize_input">D3D11_AUTHENTICATED_CONFIGURE_INITIALIZE_INPUT</a>


          </td>
        </tr>
        <tr>
          <td width="40%">
            <a id="D3D11_AUTHENTICATED_CONFIGURE_PROTECTION"></a>
            <a id="d3d11_authenticated_configure_protection"></a>
            <dl>
              <dt>
                <b>D3D11_AUTHENTICATED_CONFIGURE_PROTECTION</b>
              </dt>
            </dl>
          </td>
          <td width="60%">
            Enables or disables protection for the device.



            Input data: <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ns-d3d11-d3d11_authenticated_configure_protection_input">D3D11_AUTHENTICATED_CONFIGURE_PROTECTION_INPUT</a>


          </td>
        </tr>
        <tr>
          <td width="40%">
            <a id="D3D11_AUTHENTICATED_CONFIGURE_SHARED_RESOURCE"></a>
            <a id="d3d11_authenticated_configure_shared_resource"></a>
            <dl>
              <dt>
                <b>D3D11_AUTHENTICATED_CONFIGURE_SHARED_RESOURCE</b>
              </dt>
            </dl>
          </td>
          <td width="60%">
            Enables a process to open a shared resource, or disables a process from opening shared resources.



            Input data: <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ns-d3d11-d3d11_authenticated_configure_shared_resource_input">D3D11_AUTHENTICATED_CONFIGURE_SHARED_RESOURCE_INPUT</a>


          </td>
        </tr>
      </table>
    </summary>
  </member>
  <member name="D3D11_AUTHENTICATED_CONFIGURE_INPUT::hChannel">
    <summary>
      A handle to the authenticated channel. To get the handle, call the <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nf-d3d11-id3d11authenticatedchannel-getchannelhandle">ID3D11AuthenticatedChannel::GetChannelHandle</a> method.
    </summary>
  </member>
  <member name="D3D11_AUTHENTICATED_CONFIGURE_INPUT::SequenceNumber">
    <summary>The query sequence number. At the start of the session, generate a cryptographically secure 32-bit random number to use as the starting sequence number. For each query, increment the sequence number by 1.</summary>
  </member>
  <member name="D3D11_TEX1D_RTV">
    <summary>
      <para>Specifies the subresource from a 1D texture to use in a render-target view.</para>
      <para>
        Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d11/ns-d3d11-d3d11_tex1d_rtv" />
      </para>
    </summary>
  </member>
  <member name="D3D11_TEX1D_RTV::MipSlice">
    <summary>The index of the mipmap level to use mip slice.</summary>
  </member>
  <member name="D3D11_VIDEO_DECODER_CAPS">
    <summary>
      <para>Specifies capabilities of the video decoder.</para>
      <para>
        Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d11_1/ne-d3d11_1-d3d11_video_decoder_caps" />
      </para>
    </summary>
  </member>
  <member name="D3D11_VIDEO_DECODER_CAPS::D3D11_VIDEO_DECODER_CAPS_DOWNSAMPLE">
    <summary>Indicates that the graphics driver supports at least a subset of downsampling operations.</summary>
  </member>
  <member name="D3D11_VIDEO_DECODER_CAPS::D3D11_VIDEO_DECODER_CAPS_NON_REAL_TIME">
    <summary>
      Indicates that the decoding hardware cannot support the decode operation in real-time. Decoding is still supported for transcoding scenarios.

      With this capability, it is possible that decoding can occur in real-time if downsampling is enabled.
    </summary>
  </member>
  <member name="D3D11_VIDEO_DECODER_CAPS::D3D11_VIDEO_DECODER_CAPS_DOWNSAMPLE_DYNAMIC">
    <summary>
      Indicates that the driver supports changing down sample parameters after the initial down sample parameters have been applied. For more information, see <a href="https://docs.microsoft.com/windows/desktop/api/d3d11_1/nf-d3d11_1-id3d11videocontext1-decoderupdatedownsampling">ID3D11VideoContext1::DecoderUpdateDownsampling</a>.
    </summary>
  </member>
  <member name="ID3D11VideoContext::VideoProcessorSetOutputAlphaFillMode">
    <summary>
      <para>Sets the alpha fill mode for data that the video processor writes to the render target.</para>
      <para>
        Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d11/nf-d3d11-id3d11videocontext-videoprocessorsetoutputalphafillmode" />
      </para>
      <param name="pVideoProcessor">
        A pointer to the <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nn-d3d11-id3d11videoprocessor">ID3D11VideoProcessor</a> interface. To get this pointer, call <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nf-d3d11-id3d11videodevice-createvideoprocessor">ID3D11VideoDevice::CreateVideoProcessor</a>.
      </param>
      <param name="AlphaFillMode">
        The alpha fill mode, specified as a <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ne-d3d11-d3d11_video_processor_alpha_fill_mode">D3D11_VIDEO_PROCESSOR_ALPHA_FILL_MODE</a> value.
      </param>
      <param name="StreamIndex">
        The zero-based index of an input stream. This parameter is used if <i>AlphaFillMode</i> is <b>D3D11_VIDEO_PROCESSOR_ALPHA_FILL_MODE_SOURCE_STREAM</b>. Otherwise, the parameter is ignored.
      </param>
    </summary>
  </member>
  <member name="D3D11_FEATURE_DATA_D3D10_X_HARDWARE_OPTIONS">
    <summary>
      <para>Describes compute shader and raw and structured buffer support in the current graphics driver.</para>
      <para>
        Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d11/ns-d3d11-d3d11_feature_data_d3d10_x_hardware_options" />
      </para>
    </summary>
  </member>
  <member name="D3D11_FEATURE_DATA_D3D10_X_HARDWARE_OPTIONS::ComputeShaders_Plus_RawAndStructuredBuffers_Via_Shader_4_x">
    <summary>
      <b>TRUE</b> if compute shaders and raw and structured buffers are supported; otherwise <b>FALSE</b>.
    </summary>
  </member>
  <member name="D3D11_PARAMETER_DESC">
    <summary>
      <para>Describes a function parameter.</para>
      <para>
        Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d11shader/ns-d3d11shader-d3d11_parameter_desc" />
      </para>
    </summary>
  </member>
  <member name="D3D11_PARAMETER_DESC::Name">
    <summary>The name of the function parameter.</summary>
  </member>
  <member name="D3D11_PARAMETER_DESC::SemanticName">
    <summary>
      The HLSL <a href="https://docs.microsoft.com/windows/desktop/direct3dhlsl/dx-graphics-hlsl-semantics">semantic</a> that is associated with this function parameter. This name includes the index, for example, SV_Target[n].
    </summary>
  </member>
  <member name="D3D11_PARAMETER_DESC::Type">
    <summary>
      A <a href="https://docs.microsoft.com/windows/desktop/api/d3dcommon/ne-d3dcommon-d3d_shader_variable_type">D3D_SHADER_VARIABLE_TYPE</a>-typed value that identifies the variable type for the parameter.
    </summary>
  </member>
  <member name="D3D11_PARAMETER_DESC::Class">
    <summary>
      A <a href="https://docs.microsoft.com/windows/desktop/api/d3dcommon/ne-d3dcommon-d3d_shader_variable_class">D3D_SHADER_VARIABLE_CLASS</a>-typed value that identifies the variable class for the parameter as one of scalar, vector, matrix, object, and so on.
    </summary>
  </member>
  <member name="D3D11_PARAMETER_DESC::Rows">
    <summary>The number of rows for a matrix parameter.</summary>
  </member>
  <member name="D3D11_PARAMETER_DESC::Columns">
    <summary>The number of columns for a matrix parameter.</summary>
  </member>
  <member name="D3D11_PARAMETER_DESC::InterpolationMode">
    <summary>
      A <a href="https://docs.microsoft.com/windows/desktop/api/d3dcommon/ne-d3dcommon-d3d_interpolation_mode">D3D_INTERPOLATION_MODE</a>-typed value that identifies the interpolation mode for the parameter.
    </summary>
  </member>
  <member name="D3D11_PARAMETER_DESC::Flags">
    <summary>
      A combination of <a href="https://docs.microsoft.com/windows/desktop/api/d3dcommon/ne-d3dcommon-d3d_parameter_flags">D3D_PARAMETER_FLAGS</a>-typed values that are combined by using a bitwise OR operation. The resulting value specifies semantic flags for the parameter.
    </summary>
  </member>
  <member name="D3D11_PARAMETER_DESC::FirstInRegister">
    <summary>The first input register for this parameter.</summary>
  </member>
  <member name="D3D11_PARAMETER_DESC::FirstInComponent">
    <summary>The first input register component for this parameter.</summary>
  </member>
  <member name="D3D11_PARAMETER_DESC::FirstOutRegister">
    <summary>The first output register for this parameter.</summary>
  </member>
  <member name="D3D11_PARAMETER_DESC::FirstOutComponent">
    <summary>The first output register component for this parameter.</summary>
  </member>
  <member name="ID3D11DeviceContext1::DSSetConstantBuffers1">
    <summary>
      <para>Sets the constant buffers that the domain-shader stage uses.</para>
      <para>
        Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d11_1/nf-d3d11_1-id3d11devicecontext1-dssetconstantbuffers1" />
      </para>
      <param name="StartSlot">Index into the zero-based array to begin setting constant buffers to (ranges from 0 to D3D11_COMMONSHADER_CONSTANT_BUFFER_API_SLOT_COUNT - 1).</param>
      <param name="NumBuffers">
        Number of buffers to set (ranges from 0 to D3D11_COMMONSHADER_CONSTANT_BUFFER_API_SLOT_COUNT - <i>StartSlot</i>).
      </param>
      <param name="ppConstantBuffers">Array of constant buffers being given to the device.</param>
      <param name="pFirstConstant">
        An array that holds the offsets into the buffers that  <i>ppConstantBuffers</i> specifies. Each offset specifies where, from the shader's point of view, each constant buffer starts.  Each offset is measured in shader constants, which are 16 bytes (4*32-bit components).  Therefore, an offset of 16 indicates that the start of the associated constant buffer is 256 bytes into the constant buffer. Each offset must be a multiple of 16 constants.
      </param>
      <param name="pNumConstants">
        An array that holds the numbers of constants in the buffers that  <i>ppConstantBuffers</i> specifies. Each number specifies the number of constants that are contained in the constant buffer that the shader uses. Each number of constants starts from its respective offset that is specified in the <i>pFirstConstant</i> array. Each number of constants must be a multiple of 16 constants, in the range [0..4096].
      </param>
    </summary>
  </member>
  <member name="ID3D11VideoContext::VideoProcessorSetStreamExtension">
    <summary>
      <para>Sets a driver-specific state on a video processing stream.</para>
      <para>
        Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d11/nf-d3d11-id3d11videocontext-videoprocessorsetstreamextension" />
      </para>
      <param name="pVideoProcessor">
        A pointer to the <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nn-d3d11-id3d11videoprocessor">ID3D11VideoProcessor</a> interface. To get this pointer, call <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nf-d3d11-id3d11videodevice-createvideoprocessor">ID3D11VideoDevice::CreateVideoProcessor</a>.
      </param>
      <param name="StreamIndex">
        The zero-based index of the input stream. To get the maximum number of streams, call <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nf-d3d11-id3d11videoprocessorenumerator-getvideoprocessorcaps">ID3D11VideoProcessorEnumerator::GetVideoProcessorCaps</a> and check the <b>MaxStreamStates</b> structure member.
      </param>
      <param name="pExtensionGuid">A pointer to a GUID that identifies the operation. The meaning of this GUID is defined by the graphics driver.</param>
      <param name="DataSize">
        The size of the <i>pData</i> buffer, in bytes.
      </param>
      <param name="pData">A pointer to a buffer that contains private state data. The method passes this buffer directly to the driver without validation. It is the responsibility of the driver to validate the data.</param>
    </summary>
  </member>
  <member name="D3D11_VIDEO_PROCESSOR_FORMAT_CAPS">
    <summary>
      <para>Defines capabilities related to input formats for a Microsoft Direct3D 11 video processor.</para>
      <para>
        Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d11/ne-d3d11-d3d11_video_processor_format_caps" />
      </para>
    </summary>
  </member>
  <member name="D3D11_VIDEO_PROCESSOR_FORMAT_CAPS::D3D11_VIDEO_PROCESSOR_FORMAT_CAPS_RGB_INTERLACED">
    <summary>The video processor can deinterlace an input stream that contains interlaced RGB video.</summary>
  </member>
  <member name="D3D11_VIDEO_PROCESSOR_FORMAT_CAPS::D3D11_VIDEO_PROCESSOR_FORMAT_CAPS_RGB_PROCAMP">
    <summary>The video processor can perform color adjustment on RGB video.</summary>
  </member>
  <member name="D3D11_VIDEO_PROCESSOR_FORMAT_CAPS::D3D11_VIDEO_PROCESSOR_FORMAT_CAPS_RGB_LUMA_KEY">
    <summary>The video processor can perform luma keying on RGB video.</summary>
  </member>
  <member name="D3D11_VIDEO_PROCESSOR_FORMAT_CAPS::D3D11_VIDEO_PROCESSOR_FORMAT_CAPS_PALETTE_INTERLACED">
    <summary>The video processor can deinterlace input streams with palettized color formats.</summary>
  </member>
  <member name="D3D11_BLEND_DESC1">
    <summary>
      <para>Describes the blend state that you use in a call to ID3D11Device1::CreateBlendState1 to create a blend-state object.</para>
      <para>
        Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d11_1/ns-d3d11_1-d3d11_blend_desc1" />
      </para>
    </summary>
  </member>
  <member name="D3D11_BLEND_DESC1::AlphaToCoverageEnable">
    <summary>
      Specifies whether to use alpha-to-coverage as a multisampling technique when setting a pixel to a render target. For more info about using alpha-to-coverage, see <a href="https://docs.microsoft.com/windows/desktop/direct3d11/d3d10-graphics-programming-guide-blend-state">Alpha-To-Coverage</a>.
    </summary>
  </member>
  <member name="D3D11_BLEND_DESC1::IndependentBlendEnable">
    <summary>
      Specifies whether to enable independent blending in simultaneous render targets. Set to <b>TRUE</b> to enable independent blending. If set to <b>FALSE</b>, only the <b>RenderTarget</b>[0] members are used; <b>RenderTarget</b>[1..7] are ignored.

      See the <b>Remarks</b> section for restrictions.
    </summary>
  </member>
  <member name="D3D11_BLEND_DESC1::RenderTarget">
    <summary>
      An array of <a href="https://docs.microsoft.com/windows/desktop/api/d3d11_1/ns-d3d11_1-d3d11_render_target_blend_desc1">D3D11_RENDER_TARGET_BLEND_DESC1</a> structures that describe the blend states for render targets; these correspond to the eight render targets that can be bound to the <a href="https://docs.microsoft.com/windows/desktop/direct3d11/d3d10-graphics-programming-guide-output-merger-stage">output-merger stage</a> at one time.
    </summary>
  </member>
  <member name="ID3D11DeviceContext::IASetIndexBuffer">
    <summary>
      <para>Bind an index buffer to the input-assembler stage.</para>
      <para>
        Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d11/nf-d3d11-id3d11devicecontext-iasetindexbuffer" />
      </para>
      <param name="pIndexBuffer">
        A pointer to an <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nn-d3d11-id3d11buffer">ID3D11Buffer</a> object, that contains indices. The index buffer must have been created with
        the <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ne-d3d11-d3d11_bind_flag">D3D11_BIND_INDEX_BUFFER</a> flag.
      </param>
      <param name="Format">
        A <a href="https://docs.microsoft.com/windows/desktop/api/dxgiformat/ne-dxgiformat-dxgi_format">DXGI_FORMAT</a> that specifies the format of the data in the index buffer. The only formats allowed for index
        buffer data are 16-bit (DXGI_FORMAT_R16_UINT) and 32-bit (DXGI_FORMAT_R32_UINT) integers.
      </param>
      <param name="Offset">Offset (in bytes) from the start of the index buffer to the first index to use.</param>
    </summary>
  </member>
  <member name="D3D11_TEX2D_RTV1">
    <summary>
      <para>Describes the subresource from a 2D texture to use in a render-target view.</para>
      <para>
        Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d11_3/ns-d3d11_3-d3d11_tex2d_rtv1" />
      </para>
    </summary>
  </member>
  <member name="D3D11_TEX2D_RTV1::MipSlice">
    <summary>The index of the mipmap level to use mip slice.</summary>
  </member>
  <member name="D3D11_TEX2D_RTV1::PlaneSlice">
    <summary>The index (plane slice number) of the plane to use in the texture.</summary>
  </member>
  <member name="D3D11_INPUT_ELEMENT_DESC">
    <summary>
      <para>A description of a single element for the input-assembler stage.</para>
      <para>
        Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d11/ns-d3d11-d3d11_input_element_desc" />
      </para>
    </summary>
  </member>
  <member name="D3D11_INPUT_ELEMENT_DESC::SemanticName">
    <summary>The HLSL semantic associated with this element in a shader input-signature.</summary>
  </member>
  <member name="D3D11_INPUT_ELEMENT_DESC::SemanticIndex">
    <summary>
      The semantic index for the element. A semantic index modifies a semantic, with an integer index number. A semantic index is only needed in a
      case where there is more than one element with the same semantic. For example, a 4x4 matrix would have four components each with the semantic
      name


      <code>
        matrix
      </code>


      , however each of the four component would have different semantic indices (0, 1, 2, and 3).
    </summary>
  </member>
  <member name="D3D11_INPUT_ELEMENT_DESC::Format">
    <summary>
      The data type of the element data. See <a href="https://docs.microsoft.com/windows/desktop/api/dxgiformat/ne-dxgiformat-dxgi_format">DXGI_FORMAT</a>.
    </summary>
  </member>
  <member name="D3D11_INPUT_ELEMENT_DESC::InputSlot">
    <summary>An integer value that identifies the input-assembler (see input slot). Valid values are between 0 and 15, defined in D3D11.h.</summary>
  </member>
  <member name="D3D11_INPUT_ELEMENT_DESC::AlignedByteOffset">
    <summary>
      Optional. Offset (in bytes) from the start of the vertex. Use D3D11_APPEND_ALIGNED_ELEMENT for convenience to define the current element directly
      after the previous one, including any packing if necessary.
    </summary>
  </member>
  <member name="D3D11_INPUT_ELEMENT_DESC::InputSlotClass">
    <summary>
      Identifies the input data class for a single input slot (see <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ne-d3d11-d3d11_input_classification">D3D11_INPUT_CLASSIFICATION</a>).
    </summary>
  </member>
  <member name="D3D11_INPUT_ELEMENT_DESC::InstanceDataStepRate">
    <summary>
      The number of instances to draw using the same per-instance data before advancing in the buffer by one element. This value must be 0 for an
      element that contains per-vertex data (the slot class is set to D3D11_INPUT_PER_VERTEX_DATA).
    </summary>
  </member>
  <member name="ID3D11SwitchToRef">
    <summary>
      <para>ID3D11SwitchToRef interface</para>
      <para>
        Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d11sdklayers/nn-d3d11sdklayers-id3d11switchtoref" />
      </para>
    </summary>
  </member>
  <member name="ID3D11DeviceContext::Draw">
    <summary>
      <para>Draw non-indexed, non-instanced primitives.</para>
      <para>
        Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d11/nf-d3d11-id3d11devicecontext-draw" />
      </para>
      <param name="VertexCount">Number of vertices to draw.</param>
      <param name="StartVertexLocation">Index of the first vertex, which is usually an offset in a vertex buffer.</param>
    </summary>
  </member>
  <member name="ID3D11DeviceContext::Flush">
    <summary>
      <para>Sends queued-up commands in the command buffer to the graphics processing unit (GPU).</para>
      <para>
        Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d11/nf-d3d11-id3d11devicecontext-flush" />
      </para>
    </summary>
  </member>
  <member name="ID3D11Resource">
    <summary>
      <para>A resource interface provides common actions on all resources.</para>
      <para>
        Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d11/nn-d3d11-id3d11resource" />
      </para>
    </summary>
  </member>
  <member name="ID3D11DeviceContext::DSSetSamplers">
    <summary>
      <para>Set an array of sampler states to the domain-shader stage.</para>
      <para>
        Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d11/nf-d3d11-id3d11devicecontext-dssetsamplers" />
      </para>
      <param name="StartSlot">Index into the device's zero-based array to begin setting samplers to (ranges from 0 to D3D11_COMMONSHADER_SAMPLER_SLOT_COUNT - 1).</param>
      <param name="NumSamplers">Number of samplers in the array. Each pipeline stage has a total of 16 sampler slots available (ranges from 0 to D3D11_COMMONSHADER_SAMPLER_SLOT_COUNT - StartSlot).</param>
      <param name="ppSamplers">
        Pointer to an array of sampler-state interfaces (see <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nn-d3d11-id3d11samplerstate">ID3D11SamplerState</a>). See Remarks.
      </param>
    </summary>
  </member>
  <member name="ID3D11FunctionLinkingGraph::PassValue">
    <summary>
      <para>Passes a value from a source linking node to a destination linking node.</para>
      <para>
        Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d11shader/nf-d3d11shader-id3d11functionlinkinggraph-passvalue" />
      </para>
      <param name="pSrcNode">
        A pointer to the <a href="https://docs.microsoft.com/windows/desktop/api/d3d11shader/nn-d3d11shader-id3d11linkingnode">ID3D11LinkingNode</a> interface for the source linking node.
      </param>
      <param name="SrcParameterIndex">The zero-based index of the source parameter.</param>
      <param name="pDstNode">
        A pointer to the <a href="https://docs.microsoft.com/windows/desktop/api/d3d11shader/nn-d3d11shader-id3d11linkingnode">ID3D11LinkingNode</a> interface for the destination linking node.
      </param>
      <param name="DstParameterIndex">The zero-based index of the destination parameter.</param>
    </summary>
  </member>
  <member name="D3D11_TEX2D_VDOV">
    <summary>
      <para>Identifies the texture resource for a video decoder output view.</para>
      <para>
        Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d11/ns-d3d11-d3d11_tex2d_vdov" />
      </para>
    </summary>
  </member>
  <member name="D3D11_TEX2D_VDOV::ArraySlice">
    <summary>The zero-based index of the texture.</summary>
  </member>
  <member name="ID3D11ShaderReflectionVariable::GetInterfaceSlot">
    <summary>
      <para>Gets the corresponding interface slot for a variable that represents an interface pointer.</para>
      <para>
        Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d11shader/nf-d3d11shader-id3d11shaderreflectionvariable-getinterfaceslot" />
      </para>
      <param name="uArrayIndex">Index of the array element to get the slot number for.  For a non-array variable this value will be zero.</param>
    </summary>
  </member>
  <member name="ID3D11VideoContext::VideoProcessorSetOutputConstriction">
    <summary>
      <para>Sets the amount of downsampling to perform on the output.</para>
      <para>
        Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d11/nf-d3d11-id3d11videocontext-videoprocessorsetoutputconstriction" />
      </para>
      <param name="pVideoProcessor">
        A pointer to the <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nn-d3d11-id3d11videoprocessor">ID3D11VideoProcessor</a> interface. To get this pointer, call <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nf-d3d11-id3d11videodevice-createvideoprocessor">ID3D11VideoDevice::CreateVideoProcessor</a>.
      </param>
      <param name="Enable">
        If <b>TRUE</b>, downsampling is enabled. Otherwise, downsampling is disabled and the <b>Size</b> member is ignored.
      </param>
      <param name="Size">The sampling size.</param>
    </summary>
  </member>
  <member name="D3D11_COPY_FLAGS">
    <summary>
      <para>Specifies how to handle the existing contents of a resource during a copy or update operation of a region within that resource.</para>
      <para>
        Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d11_1/ne-d3d11_1-d3d11_copy_flags" />
      </para>
    </summary>
  </member>
  <member name="D3D11_COPY_FLAGS::D3D11_COPY_NO_OVERWRITE">
    <summary>The existing contents of the resource cannot be overwritten.</summary>
  </member>
  <member name="D3D11_COPY_FLAGS::D3D11_COPY_DISCARD">
    <summary>The existing contents of the resource are undefined and can be discarded.</summary>
  </member>
  <member name="ID3D11Multithread::SetMultithreadProtected">
    <summary>
      <para>Turns multithread protection on or off.</para>
      <para>
        Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d11_4/nf-d3d11_4-id3d11multithread-setmultithreadprotected" />
      </para>
      <param name="bMTProtect">Set to true to turn multithread protection on, false to turn it off.</param>
    </summary>
  </member>
  <member name="ID3D11DeviceContext::DSGetConstantBuffers">
    <summary>
      <para>Get the constant buffers used by the domain-shader stage.</para>
      <para>
        Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d11/nf-d3d11-id3d11devicecontext-dsgetconstantbuffers" />
      </para>
      <param name="StartSlot">Index into the device's zero-based array to begin retrieving constant buffers from (ranges from 0 to D3D11_COMMONSHADER_CONSTANT_BUFFER_API_SLOT_COUNT - 1).</param>
      <param name="NumBuffers">Number of buffers to retrieve (ranges from 0 to D3D11_COMMONSHADER_CONSTANT_BUFFER_API_SLOT_COUNT - StartSlot).</param>
      <param name="ppConstantBuffers">
        Array of constant buffer interface pointers (see <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nn-d3d11-id3d11buffer">ID3D11Buffer</a>) to be returned by the method.
      </param>
    </summary>
  </member>
  <member name="ID3D11VideoContext1">
    <summary>
      <para>Provides the video functionality of a Microsoft Direct3D 11 device.</para>
      <para>
        Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d11_1/nn-d3d11_1-id3d11videocontext1" />
      </para>
    </summary>
  </member>
  <member name="ID3D11Device::CreateDepthStencilState">
    <summary>
      <para>Create a depth-stencil state object that encapsulates depth-stencil test information for the output-merger stage.</para>
      <para>
        Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d11/nf-d3d11-id3d11device-createdepthstencilstate" />
      </para>
      <param name="pDepthStencilDesc">
        Pointer to a depth-stencil state description (see <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ns-d3d11-d3d11_depth_stencil_desc">D3D11_DEPTH_STENCIL_DESC</a>).
      </param>
      <param name="ppDepthStencilState">
        Address of a pointer to the depth-stencil state object created (see <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nn-d3d11-id3d11depthstencilstate">ID3D11DepthStencilState</a>).
      </param>
    </summary>
  </member>
  <member name="ID3D11DeviceContext::GetType">
    <summary>
      <para>Gets the type of device context.</para>
      <para>
        Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d11/nf-d3d11-id3d11devicecontext-gettype" />
      </para>
    </summary>
  </member>
  <member name="ID3D11VideoDevice::CreateVideoDecoder">
    <summary>
      <para>Creates a video decoder device for Microsoft Direct3D 11.</para>
      <para>
        Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d11/nf-d3d11-id3d11videodevice-createvideodecoder" />
      </para>
      <param name="pVideoDesc">
        A pointer to a <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ns-d3d11-d3d11_video_decoder_desc">D3D11_VIDEO_DECODER_DESC</a> structure that describes the video stream and the decoder profile.
      </param>
      <param name="pConfig">
        A pointer to a <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ns-d3d11-d3d11_video_decoder_config">D3D11_VIDEO_DECODER_CONFIG</a> structure that specifies the decoder configuration.
      </param>
      <param name="ppDecoder">
        Receives a pointer to the <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nn-d3d11-id3d11videodecoder">ID3D11VideoDecoder</a> interface. The caller must release the interface.
      </param>
    </summary>
  </member>
  <member name="D3D11_SIGNATURE_PARAMETER_DESC">
    <summary>
      <para>Describes a shader signature.</para>
      <para>
        Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d11shader/ns-d3d11shader-d3d11_signature_parameter_desc" />
      </para>
    </summary>
  </member>
  <member name="D3D11_SIGNATURE_PARAMETER_DESC::SemanticName">
    <summary>
      A per-parameter string that identifies how the data will be used. For more info, see <a href="https://docs.microsoft.com/windows/desktop/direct3dhlsl/dx-graphics-hlsl-semantics">Semantics</a>.
    </summary>
  </member>
  <member name="D3D11_SIGNATURE_PARAMETER_DESC::SemanticIndex">
    <summary>Semantic index that modifies the semantic. Used to differentiate different parameters that use the same semantic.</summary>
  </member>
  <member name="D3D11_SIGNATURE_PARAMETER_DESC::Register">
    <summary>The register that will contain this variable's data.</summary>
  </member>
  <member name="D3D11_SIGNATURE_PARAMETER_DESC::SystemValueType">
    <summary>
      A <a href="https://docs.microsoft.com/windows/desktop/api/d3dcommon/ne-d3dcommon-d3d_name">D3D_NAME</a>-typed value that identifies a predefined string that determines the functionality of certain pipeline stages.
    </summary>
  </member>
  <member name="D3D11_SIGNATURE_PARAMETER_DESC::ComponentType">
    <summary>
      A <a href="https://docs.microsoft.com/windows/desktop/api/d3dcommon/ne-d3dcommon-d3d_register_component_type">D3D_REGISTER_COMPONENT_TYPE</a>-typed value that identifies the per-component-data type that is stored in a register.  Each register can store up to four-components of data.
    </summary>
  </member>
  <member name="D3D11_SIGNATURE_PARAMETER_DESC::Mask">
    <summary>Mask which indicates which components of a register are used.</summary>
  </member>
  <member name="D3D11_SIGNATURE_PARAMETER_DESC::ReadWriteMask">
    <summary>Mask which indicates whether a given component is never written (if the signature is an output signature) or always read (if the signature is an input signature).</summary>
  </member>
  <member name="D3D11_SIGNATURE_PARAMETER_DESC::Stream">
    <summary>Indicates which stream the geometry shader is using for the signature parameter.</summary>
  </member>
  <member name="D3D11_SIGNATURE_PARAMETER_DESC::MinPrecision">
    <summary>
      A <a href="https://docs.microsoft.com/windows/desktop/api/d3dcommon/ne-d3dcommon-d3d_min_precision">D3D_MIN_PRECISION</a>-typed value that indicates the minimum desired interpolation precision. For more info, see <a href="https://docs.microsoft.com/windows/desktop/direct3dhlsl/using-hlsl-minimum-precision">Using HLSL minimum precision</a>.
    </summary>
  </member>
  <member name="ID3D11InfoQueue::PopRetrievalFilter">
    <summary>
      <para>Pop a retrieval filter from the top of the retrieval-filter stack.</para>
      <para>
        Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d11sdklayers/nf-d3d11sdklayers-id3d11infoqueue-popretrievalfilter" />
      </para>
    </summary>
  </member>
  <member name="ID3D11Asynchronous">
    <summary>
      <para>This interface encapsulates methods for retrieving data from the GPU asynchronously.</para>
      <para>
        Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d11/nn-d3d11-id3d11asynchronous" />
      </para>
    </summary>
  </member>
  <member name="ID3D11DeviceContext::End">
    <summary>
      <para>Mark the end of a series of commands.</para>
      <para>
        Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d11/nf-d3d11-id3d11devicecontext-end" />
      </para>
      <param name="pAsync">
        A pointer to an <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nn-d3d11-id3d11asynchronous">ID3D11Asynchronous</a> interface.
      </param>
    </summary>
  </member>
  <member name="ID3D11VideoContext::ReleaseDecoderBuffer">
    <summary>
      <para>Releases a buffer that was obtained by calling the ID3D11VideoContext::GetDecoderBuffer method.</para>
      <para>
        Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d11/nf-d3d11-id3d11videocontext-releasedecoderbuffer" />
      </para>
      <param name="pDecoder">
        A pointer to the <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nn-d3d11-id3d11videodecoder">ID3D11VideoDecoder</a> interface. To get this pointer, call <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nf-d3d11-id3d11videodevice-createvideodecoder">ID3D11VideoDevice::CreateVideoDecoder</a>.
      </param>
      <param name="Type">
        The type of buffer to release. Specify the same value that was used in the <i>Type</i> parameter of the <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nf-d3d11-id3d11videocontext-getdecoderbuffer">GetDecoderBuffer</a> method.
      </param>
    </summary>
  </member>
  <member name="D3D11_TEX2D_RTV">
    <summary>
      <para>Specifies the subresource from a 2D texture to use in a render-target view.</para>
      <para>
        Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d11/ns-d3d11-d3d11_tex2d_rtv" />
      </para>
    </summary>
  </member>
  <member name="D3D11_TEX2D_RTV::MipSlice">
    <summary>The index of the mipmap level to use mip slice.</summary>
  </member>
  <member name="ID3D11VideoProcessorEnumerator::GetVideoProcessorRateConversionCaps">
    <summary>
      <para>Returns a group of video processor capabilities that are associated with frame-rate conversion, including deinterlacing and inverse telecine.</para>
      <para>
        Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d11/nf-d3d11-id3d11videoprocessorenumerator-getvideoprocessorrateconversioncaps" />
      </para>
      <param name="TypeIndex">
        The zero-based index of the group to retrieve. To get the maximum index, call <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nf-d3d11-id3d11videoprocessorenumerator-getvideoprocessorcaps">ID3D11VideoProcessorEnumerator::GetVideoProcessorCaps</a> and check the <b>RateConversionCapsCount</b> member of the <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ns-d3d11-d3d11_video_processor_caps">D3D11_VIDEO_PROCESSOR_CAPS</a> structure.
      </param>
      <param name="pCaps">
        A pointer to a <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ns-d3d11-d3d11_video_processor_rate_conversion_caps">D3D11_VIDEO_PROCESSOR_RATE_CONVERSION_CAPS</a> structure that receives the frame-rate conversion capabilities.
      </param>
    </summary>
  </member>
  <member name="ID3D11ShaderReflectionType::GetSubType">
    <summary>
      <para>Gets the base class of a class.</para>
      <para>
        Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d11shader/nf-d3d11shader-id3d11shaderreflectiontype-getsubtype" />
      </para>
    </summary>
  </member>
  <member name="ID3D11VideoContext2">
    <summary>
      <para>Provides the video functionality of a Microsoft Direct3D 11 device.</para>
      <para>
        Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d11_4/nn-d3d11_4-id3d11videocontext2" />
      </para>
    </summary>
  </member>
  <member name="ID3D11VideoDevice">
    <summary>
      <para>Provides the video decoding and video processing capabilities of a Microsoft Direct3D 11 device.</para>
      <para>
        Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d11/nn-d3d11-id3d11videodevice" />
      </para>
    </summary>
  </member>
  <member name="ID3D11VideoContext::FinishSessionKeyRefresh">
    <summary>
      <para>Switches to a new session key.</para>
      <para>
        Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d11/nf-d3d11-id3d11videocontext-finishsessionkeyrefresh" />
      </para>
      <param name="pCryptoSession">
        A pointer to the <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nn-d3d11-id3d11cryptosession">ID3D11CryptoSession</a> interface.
      </param>
    </summary>
  </member>
  <member name="ID3D11DeviceContext::HSSetShader">
    <summary>
      <para>Set a hull shader to the device.</para>
      <para>
        Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d11/nf-d3d11-id3d11devicecontext-hssetshader" />
      </para>
      <param name="pHullShader">
        Pointer to a hull shader (see <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nn-d3d11-id3d11hullshader">ID3D11HullShader</a>). Passing in <b>NULL</b> disables the shader for this pipeline stage.
      </param>
      <param name="ppClassInstances">
        A pointer to an array of class-instance interfaces (see <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nn-d3d11-id3d11classinstance">ID3D11ClassInstance</a>). Each interface used by a shader must have a corresponding class instance or the shader will get disabled. Set ppClassInstances to <b>NULL</b> if the shader does not use any interfaces.
      </param>
      <param name="NumClassInstances">The number of class-instance interfaces in the array.</param>
    </summary>
  </member>
  <member name="D3D11_VIDEO_PROCESSOR_RATE_CONVERSION_CAPS">
    <summary>
      <para>Defines a group of video processor capabilities that are associated with frame-rate conversion, including deinterlacing and inverse telecine.</para>
      <para>
        Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d11/ns-d3d11-d3d11_video_processor_rate_conversion_caps" />
      </para>
    </summary>
  </member>
  <member name="D3D11_VIDEO_PROCESSOR_RATE_CONVERSION_CAPS::PastFrames">
    <summary>The number of past reference frames required to perform the optimal video processing.</summary>
  </member>
  <member name="D3D11_VIDEO_PROCESSOR_RATE_CONVERSION_CAPS::FutureFrames">
    <summary>The number of future reference frames required to perform the optimal video processing.</summary>
  </member>
  <member name="D3D11_VIDEO_PROCESSOR_RATE_CONVERSION_CAPS::ProcessorCaps">
    <summary>
      A bitwise <b>OR</b> of zero or more flags from the <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ne-d3d11-d3d11_video_processor_processor_caps">D3D11_VIDEO_PROCESSOR_PROCESSOR_CAPS</a> enumeration.
    </summary>
  </member>
  <member name="D3D11_VIDEO_PROCESSOR_RATE_CONVERSION_CAPS::ITelecineCaps">
    <summary>
      A bitwise <b>OR</b> of zero or more flags from the <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ne-d3d11-d3d11_video_processor_itelecine_caps">D3D11_VIDEO_PROCESSOR_ITELECINE_CAPS</a> enumeration.
    </summary>
  </member>
  <member name="D3D11_VIDEO_PROCESSOR_RATE_CONVERSION_CAPS::CustomRateCount">
    <summary>
      The number of custom frame rates that the driver supports. To get the list of custom frame rates, call the <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nf-d3d11-id3d11videoprocessorenumerator-getvideoprocessorcustomrate">ID3D11VideoProcessorEnumerator::GetVideoProcessorCustomRate</a> method.
    </summary>
  </member>
  <member name="ID3D11Device2::CreateDeferredContext2">
    <summary>
      <para>Creates a deferred context, which can record command lists.</para>
      <para>
        Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d11_2/nf-d3d11_2-id3d11device2-createdeferredcontext2" />
      </para>
      <param name="ContextFlags">
        Reserved for future use.
        Pass 0.
      </param>
      <param name="ppDeferredContext">
        Upon completion of the method, the passed pointer to an <a href="https://docs.microsoft.com/windows/desktop/api/d3d11_2/nn-d3d11_2-id3d11devicecontext2">ID3D11DeviceContext2</a> interface pointer is initialized.
      </param>
    </summary>
  </member>
  <member name="ID3D11DeviceContext::VSSetSamplers">
    <summary>
      <para>Set an array of sampler states to the vertex shader pipeline stage.</para>
      <para>
        Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d11/nf-d3d11-id3d11devicecontext-vssetsamplers" />
      </para>
      <param name="StartSlot">Index into the device's zero-based array to begin setting samplers to (ranges from 0 to D3D11_COMMONSHADER_SAMPLER_SLOT_COUNT - 1).</param>
      <param name="NumSamplers">Number of samplers in the array. Each pipeline stage has a total of 16 sampler slots available (ranges from 0 to D3D11_COMMONSHADER_SAMPLER_SLOT_COUNT - StartSlot).</param>
      <param name="ppSamplers">
        Pointer to an array of sampler-state interfaces (see <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nn-d3d11-id3d11samplerstate">ID3D11SamplerState</a>). See Remarks.
      </param>
    </summary>
  </member>
  <member name="ID3D11VideoContext1::VideoProcessorSetStreamMirror">
    <summary>
      <para>Specifies whether the video processor input stream should be flipped vertically or horizontally.</para>
      <para>
        Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d11_1/nf-d3d11_1-id3d11videocontext1-videoprocessorsetstreammirror" />
      </para>
      <param name="pVideoProcessor">
        A pointer to the <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nn-d3d11-id3d11videoprocessor">ID3D11VideoProcessor</a> interface.
      </param>
      <param name="StreamIndex">An index identifying the input stream.</param>
      <param name="Enable">True if mirroring should be enabled; otherwise, false.</param>
      <param name="FlipHorizontal">True if the stream should be flipped horizontally; otherwise, false.</param>
      <param name="FlipVertical">True if the stream should be flipped vertically; otherwise, false.</param>
    </summary>
  </member>
  <member name="D3D11_FEATURE_DATA_GPU_VIRTUAL_ADDRESS_SUPPORT">
    <summary>
      <para>Describes feature data GPU virtual address support, including maximum address bits per resource and per process.</para>
      <para>
        Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d11/ns-d3d11-d3d11_feature_data_gpu_virtual_address_support" />
      </para>
    </summary>
  </member>
  <member name="D3D11_FEATURE_DATA_GPU_VIRTUAL_ADDRESS_SUPPORT::MaxGPUVirtualAddressBitsPerResource">
    <summary>The maximum GPU virtual address bits per resource.</summary>
  </member>
  <member name="D3D11_FEATURE_DATA_GPU_VIRTUAL_ADDRESS_SUPPORT::MaxGPUVirtualAddressBitsPerProcess">
    <summary>The maximum GPU virtual address bits per process.</summary>
  </member>
  <member name="ID3D11Device3">
    <summary>
      <para>The device interface represents a virtual adapter; it is used to create resources. ID3D11Device3 adds new methods to those in ID3D11Device2.</para>
      <para>
        Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d11_3/nn-d3d11_3-id3d11device3" />
      </para>
    </summary>
  </member>
  <member name="ID3D11VideoContext::VideoProcessorSetStreamRotation">
    <summary>
      <para>Sets the stream rotation for an input stream on the video processor.</para>
      <para>
        Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d11/nf-d3d11-id3d11videocontext-videoprocessorsetstreamrotation" />
      </para>
      <param name="pVideoProcessor">
        A pointer to the <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nn-d3d11-id3d11videoprocessor">ID3D11VideoProcessor</a> interface. To get this pointer, call <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nf-d3d11-id3d11videodevice-createvideoprocessor">ID3D11VideoDevice::CreateVideoProcessor</a>.
      </param>
      <param name="StreamIndex">
        The zero-based index of the input stream. To get the maximum number of streams, call <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nf-d3d11-id3d11videoprocessorenumerator-getvideoprocessorcaps">ID3D11VideoProcessorEnumerator::GetVideoProcessorCaps</a> and check the <b>MaxStreamStates</b> structure member.
      </param>
      <param name="Enable">Specifies if the stream is to be rotated in a clockwise orientation.</param>
      <param name="Rotation">Specifies the rotation of the stream.</param>
    </summary>
  </member>
  <member name="D3D11_TEX3D_SRV">
    <summary>
      <para>Specifies the subresources from a 3D texture to use in a shader-resource view.</para>
      <para>
        Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d11/ns-d3d11-d3d11_tex3d_srv" />
      </para>
    </summary>
  </member>
  <member name="D3D11_TEX3D_SRV::MostDetailedMip">
    <summary>
      Index of the most detailed mipmap level to use; this number is between 0 and <b>MipLevels</b> (from the original Texture3D for which <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nf-d3d11-id3d11device-createshaderresourceview">ID3D11Device::CreateShaderResourceView</a> creates a view) -1.
    </summary>
  </member>
  <member name="D3D11_TEX3D_SRV::MipLevels">
    <summary>
      The maximum number of mipmap levels for the view of the texture. See the remarks in <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ns-d3d11-d3d11_tex1d_srv">D3D11_TEX1D_SRV</a>.

      Set to -1 to indicate all the mipmap levels from <b>MostDetailedMip</b> on down to least detailed.
    </summary>
  </member>
  <member name="D3D11_VIDEO_COLOR">
    <summary>
      <para>Defines a color value for Microsoft Direct3D 11 video.</para>
      <para>
        Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d11/ns-d3d11-d3d11_video_color" />
      </para>
    </summary>
  </member>
  <member name="D3D11_VIDEO_COLOR::YCbCr">
    <summary>
      A <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ns-d3d11-d3d11_video_color_ycbcra">D3D11_VIDEO_COLOR_YCbCrA</a> structure that contains a YCbCr color value.
    </summary>
  </member>
  <member name="D3D11_VIDEO_COLOR::RGBA">
    <summary>
      A <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ns-d3d11-d3d11_video_color_rgba">D3D11_VIDEO_COLOR_RGBA</a> structure that contains an RGB color value.
    </summary>
  </member>
  <member name="ID3D11ShaderReflection::GetResourceBindingDesc">
    <summary>
      <para>Get a description of how a resource is bound to a shader.</para>
      <para>
        Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d11shader/nf-d3d11shader-id3d11shaderreflection-getresourcebindingdesc" />
      </para>
      <param name="ResourceIndex">A zero-based resource index.</param>
      <param name="pDesc">
        A pointer to an input-binding description. See <a href="https://docs.microsoft.com/windows/win32/api/d3d11shader/ns-d3d11shader-d3d11_shader_input_bind_desc">D3D11_SHADER_INPUT_BIND_DESC</a>.
      </param>
    </summary>
  </member>
  <member name="D3D11_VPIV_DIMENSION">
    <summary>
      <para>Specifies how to access a resource that is used in a video processor input view.</para>
      <para>
        Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d11/ne-d3d11-d3d11_vpiv_dimension" />
      </para>
    </summary>
  </member>
  <member name="D3D11_VPIV_DIMENSION::D3D11_VPIV_DIMENSION_UNKNOWN">
    <summary>Not a valid value.</summary>
  </member>
  <member name="D3D11_VPIV_DIMENSION::D3D11_VPIV_DIMENSION_TEXTURE2D">
    <summary>The resource will be accessed as a 2D texture.</summary>
  </member>
  <member name="D3D11_FEATURE_DATA_D3D11_OPTIONS5">
    <summary>
      <para>Describes the level of support for shared resources in the current graphics driver.</para>
      <para>
        Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d11/ns-d3d11-d3d11_feature_data_d3d11_options5" />
      </para>
    </summary>
  </member>
  <member name="D3D11_FEATURE_DATA_D3D11_OPTIONS5::SharedResourceTier">
    <summary>A shared resource support tier.</summary>
  </member>
  <member name="ID3D11ShaderReflectionType::GetInterfaceByIndex">
    <summary>
      <para>Get an interface by index.</para>
      <para>
        Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d11shader/nf-d3d11shader-id3d11shaderreflectiontype-getinterfacebyindex" />
      </para>
      <param name="uIndex">Zero-based index.</param>
    </summary>
  </member>
  <member name="ID3D11RenderTargetView1">
    <summary>
      <para>A render-target-view interface represents the render-target subresources that can be accessed during rendering.</para>
      <para>
        Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d11_3/nn-d3d11_3-id3d11rendertargetview1" />
      </para>
    </summary>
  </member>
  <member name="D3D11_AES_CTR_IV">
    <summary>
      <para>Contains an initialization vector (IV) for 128-bit Advanced Encryption Standard CTR mode (AES-CTR) block cipher encryption.</para>
      <para>
        Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d11/ns-d3d11-d3d11_aes_ctr_iv" />
      </para>
    </summary>
  </member>
  <member name="D3D11_AES_CTR_IV::IV">
    <summary>The IV, in big-endian format.</summary>
  </member>
  <member name="D3D11_AES_CTR_IV::Count">
    <summary>The block count, in big-endian format.</summary>
  </member>
  <member name="ID3D11FunctionLinkingGraph::SetOutputSignature">
    <summary>
      <para>Sets the output signature of the function-linking-graph.</para>
      <para>
        Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d11shader/nf-d3d11shader-id3d11functionlinkinggraph-setoutputsignature" />
      </para>
      <param name="pOutputParameters">
        An array of  <a href="https://docs.microsoft.com/windows/desktop/api/d3d11shader/ns-d3d11shader-d3d11_parameter_desc">D3D11_PARAMETER_DESC</a> structures for the parameters of the output signature.
      </param>
      <param name="cOutputParameters">
        The number of output parameters in the <i>pOutputParameters</i> array.
      </param>
      <param name="ppOutputNode">
        A pointer to a variable that receives a pointer to the <a href="https://docs.microsoft.com/windows/desktop/api/d3d11shader/nn-d3d11shader-id3d11linkingnode">ID3D11LinkingNode</a> interface that represents the output signature of the function-linking-graph.
      </param>
    </summary>
  </member>
  <member name="ID3D11Asynchronous::GetDataSize">
    <summary>
      <para>Get the size of the data (in bytes) that is output when calling ID3D11DeviceContext::GetData.</para>
      <para>
        Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d11/nf-d3d11-id3d11asynchronous-getdatasize" />
      </para>
    </summary>
  </member>
  <member name="ID3D11VideoContext::VideoProcessorGetStreamRotation">
    <summary>
      <para>Gets the stream rotation for an input stream on the video processor.</para>
      <para>
        Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d11/nf-d3d11-id3d11videocontext-videoprocessorgetstreamrotation" />
      </para>
      <param name="pVideoProcessor">
        A pointer to the <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nn-d3d11-id3d11videoprocessor">ID3D11VideoProcessor</a> interface. To get this pointer, call <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nf-d3d11-id3d11videodevice-createvideoprocessor">ID3D11VideoDevice::CreateVideoProcessor</a>.
      </param>
      <param name="StreamIndex">
        The zero-based index of the input stream. To get the maximum number of streams, call <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nf-d3d11-id3d11videoprocessorenumerator-getvideoprocessorcaps">ID3D11VideoProcessorEnumerator::GetVideoProcessorCaps</a> and check the <b>MaxStreamStates</b> structure member.
      </param>
      <param name="pEnable">Specifies if the stream is rotated.</param>
      <param name="pRotation">Specifies the rotation of the stream in a clockwise orientation.</param>
    </summary>
  </member>
  <member name="ID3D11ShaderReflectionType::IsEqual">
    <summary>
      <para>Indicates whether two ID3D11ShaderReflectionType Interface pointers have the same underlying type.</para>
      <para>
        Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d11shader/nf-d3d11shader-id3d11shaderreflectiontype-isequal" />
      </para>
      <param name="pType">
        A pointer to a <a href="https://docs.microsoft.com/windows/desktop/api/d3d11shader/nn-d3d11shader-id3d11shaderreflectiontype">ID3D11ShaderReflectionType Interface</a>.
      </param>
    </summary>
  </member>
  <member name="D3D11_VERTEX_SHADER_TRACE_DESC">
    <summary>
      <para>Describes an instance of a vertex shader to trace.</para>
      <para>
        Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d11shadertracing/ns-d3d11shadertracing-d3d11_vertex_shader_trace_desc" />
      </para>
    </summary>
  </member>
  <member name="D3D11_VERTEX_SHADER_TRACE_DESC::Invocation">
    <summary>The invocation number of the instance of the vertex shader.</summary>
  </member>
  <member name="D3D11_BUFFER_RTV">
    <summary>
      <para>Specifies the elements in a buffer resource to use in a render-target view.</para>
      <para>
        Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d11/ns-d3d11-d3d11_buffer_rtv" />
      </para>
    </summary>
  </member>
  <member name="D3D11_BUFFER_RTV::FirstElement">
    <summary>Number of bytes between the beginning of the buffer and the first element to access.</summary>
  </member>
  <member name="D3D11_BUFFER_RTV::ElementOffset">
    <summary>The offset of the first element in the view to access, relative to element 0.</summary>
  </member>
  <member name="D3D11_BUFFER_RTV::NumElements">
    <summary>The total number of elements in the view.</summary>
  </member>
  <member name="D3D11_BUFFER_RTV::ElementWidth">
    <summary>The width of each element (in bytes). This can be determined from the format stored in the render-target-view description.</summary>
  </member>
  <member name="ID3D11FunctionParameterReflection">
    <summary>
      <para>A function-parameter-reflection interface accesses function-parameter info.</para>
      <para>
        Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d11shader/nn-d3d11shader-id3d11functionparameterreflection" />
      </para>
    </summary>
  </member>
  <member name="D3D11_TEXTURECUBE_FACE">
    <summary>
      <para>The different faces of a cube texture.</para>
      <para>
        Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d11/ne-d3d11-d3d11_texturecube_face" />
      </para>
    </summary>
  </member>
  <member name="D3D11_TEXTURECUBE_FACE::D3D11_TEXTURECUBE_FACE_POSITIVE_X">
    <summary>Positive X face.</summary>
  </member>
  <member name="D3D11_TEXTURECUBE_FACE::D3D11_TEXTURECUBE_FACE_NEGATIVE_X">
    <summary>Negative X face.</summary>
  </member>
  <member name="D3D11_TEXTURECUBE_FACE::D3D11_TEXTURECUBE_FACE_POSITIVE_Y">
    <summary>Positive Y face.</summary>
  </member>
  <member name="D3D11_TEXTURECUBE_FACE::D3D11_TEXTURECUBE_FACE_NEGATIVE_Y">
    <summary>Negative Y face.</summary>
  </member>
  <member name="D3D11_TEXTURECUBE_FACE::D3D11_TEXTURECUBE_FACE_POSITIVE_Z">
    <summary>Positive Z face.</summary>
  </member>
  <member name="D3D11_TEXTURECUBE_FACE::D3D11_TEXTURECUBE_FACE_NEGATIVE_Z">
    <summary>Negative Z face.</summary>
  </member>
  <member name="ID3D11Linker::Link">
    <summary>
      <para>Links the shader and produces a shader blob that the Direct3D runtime can use.</para>
      <para>
        Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d11shader/nf-d3d11shader-id3d11linker-link" />
      </para>
      <param name="pEntry">
        A pointer to the <a href="https://docs.microsoft.com/windows/desktop/api/d3d11shader/nn-d3d11shader-id3d11moduleinstance">ID3D11ModuleInstance</a> interface for the shader module instance to link from.
      </param>
      <param name="pEntryName">The name of the shader module instance to link from.</param>
      <param name="pTargetName">The name for the shader blob that is produced.</param>
      <param name="uFlags">Reserved.</param>
      <param name="ppShaderBlob">
        A pointer to a variable that receives a pointer to the <a href="https://docs.microsoft.com/previous-versions/windows/desktop/legacy/ff728743(v=vs.85)">ID3DBlob</a> interface that you can use to access the compiled shader code.
      </param>
      <param name="ppErrorBuffer">
        A pointer to a variable that receives a pointer to the <a href="https://docs.microsoft.com/previous-versions/windows/desktop/legacy/ff728743(v=vs.85)">ID3DBlob</a> interface that you can use to access compiler error messages.
      </param>
    </summary>
  </member>
  <member name="D3D11_TEXTURE3D_DESC1">
    <summary>
      <para>Describes a 3D texture.</para>
      <para>
        Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d11_3/ns-d3d11_3-d3d11_texture3d_desc1" />
      </para>
    </summary>
  </member>
  <member name="D3D11_TEXTURE3D_DESC1::Width">
    <summary>
      Texture width (in texels). The  range is from 1 to D3D11_REQ_TEXTURE3D_U_V_OR_W_DIMENSION (2048). However, the range is actually constrained by the <a href="https://docs.microsoft.com/windows/desktop/direct3d11/overviews-direct3d-11-devices-downlevel-intro">feature level</a> at which you create the rendering device. For more information about restrictions, see Remarks.
    </summary>
  </member>
  <member name="D3D11_TEXTURE3D_DESC1::Height">
    <summary>
      Texture height (in texels). The  range is from 1 to D3D11_REQ_TEXTURE3D_U_V_OR_W_DIMENSION (2048). However, the range is actually constrained by the <a href="https://docs.microsoft.com/windows/desktop/direct3d11/overviews-direct3d-11-devices-downlevel-intro">feature level</a> at which you create the rendering device. For more information about restrictions, see Remarks.
    </summary>
  </member>
  <member name="D3D11_TEXTURE3D_DESC1::Depth">
    <summary>
      Texture depth (in texels). The  range is from 1 to D3D11_REQ_TEXTURE3D_U_V_OR_W_DIMENSION (2048). However, the range is actually constrained by the <a href="https://docs.microsoft.com/windows/desktop/direct3d11/overviews-direct3d-11-devices-downlevel-intro">feature level</a> at which you create the rendering device. For more information about restrictions, see Remarks.
    </summary>
  </member>
  <member name="D3D11_TEXTURE3D_DESC1::MipLevels">
    <summary>
      The maximum number of mipmap levels in the texture. See the remarks in <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ns-d3d11-d3d11_tex1d_srv">D3D11_TEX1D_SRV</a>. Use 1 for a multisampled texture; or 0 to generate a full set of subtextures.
    </summary>
  </member>
  <member name="D3D11_TEXTURE3D_DESC1::Format">
    <summary>
      Texture format (see <a href="https://docs.microsoft.com/windows/desktop/api/dxgiformat/ne-dxgiformat-dxgi_format">DXGI_FORMAT</a>).
    </summary>
  </member>
  <member name="D3D11_TEXTURE3D_DESC1::Usage">
    <summary>
      Value that identifies how the texture is to be read from and written to. The most common value is D3D11_USAGE_DEFAULT; see <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ne-d3d11-d3d11_usage">D3D11_USAGE</a> for all possible values.
    </summary>
  </member>
  <member name="D3D11_TEXTURE3D_DESC1::BindFlags">
    <summary>
      Flags (see <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ne-d3d11-d3d11_bind_flag">D3D11_BIND_FLAG</a>) for binding to pipeline stages. The flags can be combined by a logical OR.
    </summary>
  </member>
  <member name="D3D11_TEXTURE3D_DESC1::CPUAccessFlags">
    <summary>
      Flags (see <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ne-d3d11-d3d11_cpu_access_flag">D3D11_CPU_ACCESS_FLAG</a>) to specify the types of CPU access allowed. Use 0 if CPU access is not required. These flags can be combined with a logical OR.
    </summary>
  </member>
  <member name="D3D11_TEXTURE3D_DESC1::MiscFlags">
    <summary>
      Flags (see <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ne-d3d11-d3d11_resource_misc_flag">D3D11_RESOURCE_MISC_FLAG</a>) that identify other, less common resource options. Use 0 if none of these flags apply. These flags can be combined with a logical OR.
    </summary>
  </member>
  <member name="D3D11_TEXTURE3D_DESC1::TextureLayout">
    <summary>
      A <a href="https://docs.microsoft.com/windows/desktop/api/d3d11_3/ne-d3d11_3-d3d11_texture_layout">D3D11_TEXTURE_LAYOUT</a>-typed value that identifies the layout of the texture.

      The TextureLayout parameter selects both the actual layout of the texture in memory and the layout visible to the application while the texture is mapped.  These flags may not be requested without CPU access also requested.

      It is illegal to set CPU access flags on default textures without also setting Layout to a value other than D3D11_TEXTURE_LAYOUT_UNDEFINED.

      D3D11_TEXTURE_LAYOUT_ROW_MAJOR may not be used with 3D textures.  D3D11_TEXTURE_LAYOUT_64K_STANDARD_SWIZZLE may not be used with 3D textures that have mipmaps.
    </summary>
  </member>
  <member name="ID3D11Device1::CreateBlendState1">
    <summary>
      <para>Creates a blend-state object that encapsulates blend state for the output-merger stage and allows the configuration of logic operations.</para>
      <para>
        Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d11_1/nf-d3d11_1-id3d11device1-createblendstate1" />
      </para>
      <param name="pBlendStateDesc">
        A pointer to a  <a href="https://docs.microsoft.com/windows/win32/api/d3d11_1/ns-d3d11_1-d3d11_blend_desc1">D3D11_BLEND_DESC1</a> structure that describes blend state.
      </param>
      <param name="ppBlendState">
        Address of a pointer to the <a href="https://docs.microsoft.com/windows/desktop/api/d3d11_1/nn-d3d11_1-id3d11blendstate1">ID3D11BlendState1</a> interface for the blend-state object created.
      </param>
    </summary>
  </member>
  <member name="ID3D11InfoQueue::GetBreakOnID">
    <summary>
      <para>Get a message identifier to break on when a message with that identifier passes through the storage filter.</para>
      <para>
        Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d11sdklayers/nf-d3d11sdklayers-id3d11infoqueue-getbreakonid" />
      </para>
      <param name="ID">
        Message identifier to break on (see <a href="https://docs.microsoft.com/windows/desktop/api/d3d11sdklayers/ne-d3d11sdklayers-d3d11_message_id">D3D11_MESSAGE_ID</a>).
      </param>
    </summary>
  </member>
  <member name="D3D11_RESOURCE_DIMENSION">
    <summary>
      <para>Identifies the type of resource being used.</para>
      <para>
        Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d11/ne-d3d11-d3d11_resource_dimension" />
      </para>
    </summary>
  </member>
  <member name="D3D11_RESOURCE_DIMENSION::D3D11_RESOURCE_DIMENSION_UNKNOWN">
    <summary>Resource is of unknown type.</summary>
  </member>
  <member name="D3D11_RESOURCE_DIMENSION::D3D11_RESOURCE_DIMENSION_BUFFER">
    <summary>Resource is a buffer.</summary>
  </member>
  <member name="D3D11_RESOURCE_DIMENSION::D3D11_RESOURCE_DIMENSION_TEXTURE1D">
    <summary>Resource is a 1D texture.</summary>
  </member>
  <member name="D3D11_RESOURCE_DIMENSION::D3D11_RESOURCE_DIMENSION_TEXTURE2D">
    <summary>Resource is a 2D texture.</summary>
  </member>
  <member name="D3D11_RESOURCE_DIMENSION::D3D11_RESOURCE_DIMENSION_TEXTURE3D">
    <summary>Resource is a 3D texture.</summary>
  </member>
  <member name="D3D11_INPUT_CLASSIFICATION">
    <summary>
      <para>Type of data contained in an input slot.</para>
      <para>
        Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d11/ne-d3d11-d3d11_input_classification" />
      </para>
    </summary>
  </member>
  <member name="D3D11_INPUT_CLASSIFICATION::D3D11_INPUT_PER_VERTEX_DATA">
    <summary>Input data is per-vertex data.</summary>
  </member>
  <member name="D3D11_INPUT_CLASSIFICATION::D3D11_INPUT_PER_INSTANCE_DATA">
    <summary>Input data is per-instance data.</summary>
  </member>
  <member name="ID3D11LibraryReflection::GetFunctionByIndex">
    <summary>
      <para>Gets the function reflector.</para>
      <para>
        Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d11shader/nf-d3d11shader-id3d11libraryreflection-getfunctionbyindex" />
      </para>
      <param name="FunctionIndex">The zero-based index of the function reflector to retrieve.</param>
    </summary>
  </member>
  <member name="D3D11_FEATURE_DATA_SHADER_MIN_PRECISION_SUPPORT">
    <summary>
      <para>Describes precision support options for shaders in the current graphics driver.</para>
      <para>
        Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d11/ns-d3d11-d3d11_feature_data_shader_min_precision_support" />
      </para>
    </summary>
  </member>
  <member name="D3D11_FEATURE_DATA_SHADER_MIN_PRECISION_SUPPORT::PixelShaderMinPrecision">
    <summary>
      A combination of <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ne-d3d11-d3d11_shader_min_precision_support">D3D11_SHADER_MIN_PRECISION_SUPPORT</a>-typed values that are combined by using a bitwise OR operation. The resulting value specifies minimum precision levels that the driver supports for the pixel shader. A value of zero indicates that the driver supports only full 32-bit precision for the pixel shader.
    </summary>
  </member>
  <member name="D3D11_FEATURE_DATA_SHADER_MIN_PRECISION_SUPPORT::AllOtherShaderStagesMinPrecision">
    <summary>
      A combination of <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ne-d3d11-d3d11_shader_min_precision_support">D3D11_SHADER_MIN_PRECISION_SUPPORT</a>-typed values that are combined by using a bitwise OR operation. The resulting value specifies minimum precision levels that the driver supports for all other shader stages. A value of zero indicates that the driver supports only full 32-bit precision for all other shader stages.
    </summary>
  </member>
  <member name="ID3D11Query1">
    <summary>
      <para>Represents a query object for querying information from the graphics processing unit (GPU).</para>
      <para>
        Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d11_3/nn-d3d11_3-id3d11query1" />
      </para>
    </summary>
  </member>
  <member name="ID3D11DeviceContext::OMSetBlendState">
    <summary>
      <para>Set the blend state of the output-merger stage.</para>
      <para>
        Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d11/nf-d3d11-id3d11devicecontext-omsetblendstate" />
      </para>
      <param name="pBlendState">
        Pointer to a blend-state interface (see <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nn-d3d11-id3d11blendstate">ID3D11BlendState</a>). Pass <b>NULL</b> for a default blend state. For more info about default blend state, see Remarks.
      </param>
      <param name="BlendFactor">
        Array of blend factors, one for each RGBA component. The blend factors modulate values for the pixel shader, render target, or both. If you created  the blend-state object with <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ne-d3d11-d3d11_blend">D3D11_BLEND_BLEND_FACTOR</a> or <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ne-d3d11-d3d11_blend">D3D11_BLEND_INV_BLEND_FACTOR</a>, the blending stage uses the non-NULL array of blend factors. If you didn't create the blend-state object with <b>D3D11_BLEND_BLEND_FACTOR</b> or <b>D3D11_BLEND_INV_BLEND_FACTOR</b>, the blending stage does not use the non-NULL array of blend factors; the runtime stores the blend factors, and you can later call <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nf-d3d11-id3d11devicecontext-omgetblendstate">ID3D11DeviceContext::OMGetBlendState</a> to retrieve the blend factors. If you pass <b>NULL</b>, the runtime uses or stores a blend factor equal to { 1, 1, 1, 1 }.
      </param>
      <param name="SampleMask">32-bit sample coverage. The default value is 0xffffffff. See remarks.</param>
    </summary>
  </member>
  <member name="ID3D11ShaderReflectionType::GetDesc">
    <summary>
      <para>Get the description of a shader-reflection-variable type.</para>
      <para>
        Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d11shader/nf-d3d11shader-id3d11shaderreflectiontype-getdesc" />
      </para>
      <param name="pDesc">
        A pointer to a shader-type description (see <a href="https://docs.microsoft.com/windows/desktop/api/d3d11shader/ns-d3d11shader-d3d11_shader_type_desc">D3D11_SHADER_TYPE_DESC</a>).
      </param>
    </summary>
  </member>
  <member name="ID3D11DeviceContext::FinishCommandList">
    <summary>
      <para>Create a command list and record graphics commands into it.</para>
      <para>
        Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d11/nf-d3d11-id3d11devicecontext-finishcommandlist" />
      </para>
      <param name="RestoreDeferredContextState">
        A Boolean flag that determines whether the runtime saves deferred context state before it executes  <b>FinishCommandList</b> and restores it afterwards. Use <b>TRUE</b> to indicate that the runtime needs to save and restore the state. Use <b>FALSE</b> to indicate that the runtime will not save or restore any state. In this case, the deferred context will  return to its default state after the call to  <b>FinishCommandList</b> completes. For information about default state, see <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nf-d3d11-id3d11devicecontext-clearstate">ID3D11DeviceContext::ClearState</a>. Typically, use <b>FALSE</b> unless you restore the state to be nearly equivalent to the state that the runtime would restore if you passed <b>TRUE</b>. When you use <b>FALSE</b>, you can avoid unnecessary and inefficient state transitions.


        <div class="alert">
          <b>Note</b>  This parameter does not affect the command list that the current call to <b>FinishCommandList</b> returns. However, this parameter affects the command list of the next call to <b>FinishCommandList</b> on the same deferred context.
        </div>
        <div> </div>
      </param>
      <param name="ppCommandList">
        Upon completion of the method, the passed pointer to an <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nn-d3d11-id3d11commandlist">ID3D11CommandList</a> interface pointer is initialized with the recorded command list information. The resulting <b>ID3D11CommandList</b> object is immutable and can only be used with <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nf-d3d11-id3d11devicecontext-executecommandlist">ID3D11DeviceContext::ExecuteCommandList</a>.
      </param>
    </summary>
  </member>
  <member name="ID3D11InfoQueue::GetNumStoredMessagesAllowedByRetrievalFilter">
    <summary>
      <para>Get the number of messages that are able to pass through a retrieval filter.</para>
      <para>
        Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d11sdklayers/nf-d3d11sdklayers-id3d11infoqueue-getnumstoredmessagesallowedbyretrievalfilter" />
      </para>
    </summary>
  </member>
  <member name="ID3D11VideoProcessorEnumerator::GetVideoProcessorCaps">
    <summary>
      <para>Gets the capabilities of the video processor.</para>
      <para>
        Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d11/nf-d3d11-id3d11videoprocessorenumerator-getvideoprocessorcaps" />
      </para>
      <param name="pCaps">
        A pointer to a <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ns-d3d11-d3d11_video_processor_caps">D3D11_VIDEO_PROCESSOR_CAPS</a> structure that receives the capabilities.
      </param>
    </summary>
  </member>
  <member name="ID3D11InfoQueue::PushEmptyRetrievalFilter">
    <summary>
      <para>Push an empty retrieval filter onto the retrieval-filter stack.</para>
      <para>
        Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d11sdklayers/nf-d3d11sdklayers-id3d11infoqueue-pushemptyretrievalfilter" />
      </para>
    </summary>
  </member>
  <member name="ID3D11VideoContext::VideoProcessorGetOutputTargetRect">
    <summary>
      <para>Gets the current target rectangle for the video processor.</para>
      <para>
        Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d11/nf-d3d11-id3d11videocontext-videoprocessorgetoutputtargetrect" />
      </para>
      <param name="pVideoProcessor">
        A pointer to the <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nn-d3d11-id3d11videoprocessor">ID3D11VideoProcessor</a> interface. To get this pointer, call <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nf-d3d11-id3d11videodevice-createvideoprocessor">ID3D11VideoDevice::CreateVideoProcessor</a>.
      </param>
      <param name="Enabled">
        Receives the value <b>TRUE</b> if the target rectangle was explicitly set using the <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nf-d3d11-id3d11videocontext-videoprocessorsetoutputtargetrect">ID3D11VideoContext::VideoProcessorSetOutputTargetRect</a> method. Receives the value FALSE if the target rectangle was disabled or was never set.
      </param>
      <param name="pRect">
        If <i>Enabled</i> receives the value <b>TRUE</b>, this parameter receives the target rectangle. Otherwise, this parameter is ignored.
      </param>
    </summary>
  </member>
  <member name="D3D11_TEX2D_UAV1">
    <summary>
      <para>Describes a unordered-access 2D texture resource.</para>
      <para>
        Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d11_3/ns-d3d11_3-d3d11_tex2d_uav1" />
      </para>
    </summary>
  </member>
  <member name="D3D11_TEX2D_UAV1::MipSlice">
    <summary>The mipmap slice index.</summary>
  </member>
  <member name="D3D11_TEX2D_UAV1::PlaneSlice">
    <summary>The index (plane slice number) of the plane to use in the texture.</summary>
  </member>
  <member name="D3D11_QUERY_DESC">
    <summary>
      <para>Describes a query.</para>
      <para>
        Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d11/ns-d3d11-d3d11_query_desc" />
      </para>
    </summary>
  </member>
  <member name="D3D11_QUERY_DESC::Query">
    <summary>
      Type of query (see <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ne-d3d11-d3d11_query">D3D11_QUERY</a>).
    </summary>
  </member>
  <member name="D3D11_QUERY_DESC::MiscFlags">
    <summary>
      Miscellaneous flags (see <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ne-d3d11-d3d11_query_misc_flag">D3D11_QUERY_MISC_FLAG</a>).
    </summary>
  </member>
  <member name="D3D11_AUTHENTICATED_CONFIGURE_SHARED_RESOURCE_INPUT">
    <summary>
      <para>Contains input data for a D3D11_AUTHENTICATED_CONFIGURE_SHARED_RESOURCE command.</para>
      <para>
        Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d11/ns-d3d11-d3d11_authenticated_configure_shared_resource_input" />
      </para>
    </summary>
  </member>
  <member name="D3D11_AUTHENTICATED_CONFIGURE_SHARED_RESOURCE_INPUT::Parameters">
    <summary>
      A <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ns-d3d11-d3d11_authenticated_configure_input">D3D11_AUTHENTICATED_CONFIGURE_INPUT</a> structure that contains the command GUID and other data.
    </summary>
  </member>
  <member name="D3D11_AUTHENTICATED_CONFIGURE_SHARED_RESOURCE_INPUT::ProcessType">
    <summary>
      A <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ne-d3d11-d3d11_authenticated_process_identifier_type">D3D11_AUTHENTICATED_PROCESS_IDENTIFIER_TYPE</a> value that specifies the type of process.

      To specify the Desktop Window Manager (DWM) process, set this member to <b>D3D11_PROCESSIDTYPE_DWM</b>. Otherwise, set this member to <b>D3D11_PROCESSIDTYPE_HANDLE</b> and set the <b>ProcessHandle</b> member to a valid handle.
    </summary>
  </member>
  <member name="D3D11_AUTHENTICATED_CONFIGURE_SHARED_RESOURCE_INPUT::ProcessHandle">
    <summary>
      A process handle. If the <b>ProcessType</b> member equals <b>D3D11_PROCESSIDTYPE_HANDLE</b>, the <b>ProcessHandle</b> member specifies a handle to a process. Otherwise, the value is ignored.
    </summary>
  </member>
  <member name="D3D11_AUTHENTICATED_CONFIGURE_SHARED_RESOURCE_INPUT::AllowAccess">
    <summary>
      If <b>TRUE</b>, the specified process has access to restricted shared resources.
    </summary>
  </member>
  <member name="D3D11_TILE_REGION_SIZE">
    <summary>
      <para>Describes the size of a tiled region.</para>
      <para>
        Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d11_2/ns-d3d11_2-d3d11_tile_region_size" />
      </para>
    </summary>
  </member>
  <member name="D3D11_TILE_REGION_SIZE::NumTiles">
    <summary>The number of tiles in the tiled region.</summary>
  </member>
  <member name="D3D11_TILE_REGION_SIZE::bUseBox">
    <summary>
      Specifies whether the runtime uses the <b>Width</b>, <b>Height</b>, and <b>Depth</b> members to define the region.

      If <b>TRUE</b>, the runtime uses the <b>Width</b>, <b>Height</b>, and <b>Depth</b> members to define the region.

      If <b>FALSE</b>, the runtime ignores the <b>Width</b>, <b>Height</b>, and <b>Depth</b> members and uses the <b>NumTiles</b> member to traverse tiles in the resource linearly across x, then y, then z (as applicable) and then spills over mipmaps/arrays in subresource order.  For example, use this technique to map an entire resource at once.

      Regardless of whether you specify <b>TRUE</b> or <b>FALSE</b> for <b>bUseBox</b>, you use a <a href="https://docs.microsoft.com/windows/desktop/api/d3d11_2/ns-d3d11_2-d3d11_tiled_resource_coordinate">D3D11_TILED_RESOURCE_COORDINATE</a> structure to specify the starting location for the region within the resource as a separate parameter outside of this structure by using x, y, and z coordinates.

      When the region includes mipmaps that are packed with nonstandard tiling, <b>bUseBox</b> must be <b>FALSE</b> because tile dimensions are not standard and the app only knows a count of how many tiles are consumed by the packed area, which is per array slice.  The corresponding (separate) starting location parameter uses x to offset into the flat range of tiles in this case, and y and z coordinates must each be 0.
    </summary>
  </member>
  <member name="D3D11_TILE_REGION_SIZE::Width">
    <summary>The width of the tiled region, in tiles. Used for buffer and 1D, 2D, and 3D textures.</summary>
  </member>
  <member name="D3D11_TILE_REGION_SIZE::Height">
    <summary>The height of the tiled region, in tiles. Used for 2D and 3D textures.</summary>
  </member>
  <member name="D3D11_TILE_REGION_SIZE::Depth">
    <summary>The depth of the tiled region, in tiles. Used for 3D textures or arrays. For arrays, used for advancing in depth jumps to next slice of same mipmap size, which isn't contiguous in the subresource counting space if there are multiple mipmaps.</summary>
  </member>
  <member name="ID3D11DeviceContext::DrawInstanced">
    <summary>
      <para>Draw non-indexed, instanced primitives.</para>
      <para>
        Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d11/nf-d3d11-id3d11devicecontext-drawinstanced" />
      </para>
      <param name="VertexCountPerInstance">Number of vertices to draw.</param>
      <param name="InstanceCount">Number of instances to draw.</param>
      <param name="StartVertexLocation">Index of the first vertex.</param>
      <param name="StartInstanceLocation">A value added to each index before reading per-instance data from a vertex buffer.</param>
    </summary>
  </member>
  <member name="ID3D11Device3::CreateTexture3D1">
    <summary>
      <para>Creates a 3D texture.</para>
      <para>
        Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d11_3/nf-d3d11_3-id3d11device3-createtexture3d1" />
      </para>
      <param name="pDesc1">
        A pointer to a <a href="https://docs.microsoft.com/windows/desktop/api/d3d11_3/ns-d3d11_3-cd3d11_texture3d_desc1">D3D11_TEXTURE3D_DESC1</a> structure that describes a 3D texture resource. To create a typeless resource that can be interpreted at runtime into different, compatible formats, specify a typeless format in the texture description. To generate mipmap levels automatically, set the number of mipmap levels to 0.
      </param>
      <param name="pInitialData">
        A pointer to an array of <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ns-d3d11-d3d11_subresource_data">D3D11_SUBRESOURCE_DATA</a> structures that describe subresources for the 3D texture resource. Applications can't specify <b>NULL</b> for <i>pInitialData</i> when creating IMMUTABLE resources (see <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ne-d3d11-d3d11_usage">D3D11_USAGE</a>). If the resource is multisampled, <i>pInitialData</i> must be <b>NULL</b> because multisampled resources can't be initialized with data when they are created.

        If you don't pass anything to <i>pInitialData</i>, the initial content of the memory for the resource is undefined. In this case, you need to write the resource content some other way before the resource is read.

        You can determine the size of this array from the value in the <b>MipLevels</b> member of the <b>D3D11_TEXTURE3D_DESC1</b> structure to which <i>pDesc1</i> points. Arrays of 3D volume textures aren't supported.

        For more information about this array size, see Remarks.
      </param>
      <param name="ppTexture3D">
        A pointer to a memory block that receives a pointer to a <a href="https://docs.microsoft.com/windows/desktop/api/d3d11_3/nn-d3d11_3-id3d11texture3d1">ID3D11Texture3D1</a> interface for the created texture. Set this parameter to <b>NULL</b> to validate the other input parameters (the method will return <b>S_FALSE</b> if the other input parameters pass validation).
      </param>
    </summary>
  </member>
  <member name="ID3D11Device::CreateClassLinkage">
    <summary>
      <para>Creates class linkage libraries to enable dynamic shader linkage.</para>
      <para>
        Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d11/nf-d3d11-id3d11device-createclasslinkage" />
      </para>
      <param name="ppLinkage">
        A pointer to a class-linkage interface pointer (see <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nn-d3d11-id3d11classlinkage">ID3D11ClassLinkage</a>).
      </param>
    </summary>
  </member>
  <member name="D3D11_TEX2D_ARRAY_UAV">
    <summary>
      <para>Describes an array of unordered-access 2D texture resources.</para>
      <para>
        Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d11/ns-d3d11-d3d11_tex2d_array_uav" />
      </para>
    </summary>
  </member>
  <member name="D3D11_TEX2D_ARRAY_UAV::MipSlice">
    <summary>The mipmap slice index.</summary>
  </member>
  <member name="D3D11_TEX2D_ARRAY_UAV::FirstArraySlice">
    <summary>The zero-based index of the first array slice to be accessed.</summary>
  </member>
  <member name="D3D11_TEX2D_ARRAY_UAV::ArraySize">
    <summary>The number of slices in the array.</summary>
  </member>
  <member name="ID3D11Linker">
    <summary>
      <para>A linker interface is used to link a shader module.</para>
      <para>
        Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d11shader/nn-d3d11shader-id3d11linker" />
      </para>
    </summary>
  </member>
  <member name="ID3D11Device::CheckFormatSupport">
    <summary>
      <para>Get the support of a given format on the installed video device.</para>
      <para>
        Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d11/nf-d3d11-id3d11device-checkformatsupport" />
      </para>
      <param name="Format">
        A <a href="https://docs.microsoft.com/windows/desktop/api/dxgiformat/ne-dxgiformat-dxgi_format">DXGI_FORMAT</a> enumeration that describes a format for which to check for support.
      </param>
      <param name="pFormatSupport">
        A bitfield of <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ne-d3d11-d3d11_format_support">D3D11_FORMAT_SUPPORT</a> enumeration values describing how the specified format is supported on the installed device.
        The values are ORed together.
      </param>
    </summary>
  </member>
  <member name="D3D11_AUTHENTICATED_QUERY_OUTPUT_ID_COUNT_OUTPUT">
    <summary>
      <para>Contains the response to a D3D11_AUTHENTICATED_QUERY_OUTPUT_ID_COUNT query.</para>
      <para>
        Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d11/ns-d3d11-d3d11_authenticated_query_output_id_count_output" />
      </para>
    </summary>
  </member>
  <member name="D3D11_AUTHENTICATED_QUERY_OUTPUT_ID_COUNT_OUTPUT::Output">
    <summary>
      A <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ns-d3d11-d3d11_authenticated_query_output">D3D11_AUTHENTICATED_QUERY_OUTPUT</a> structure that contains a Message Authentication Code (MAC) and other data.
    </summary>
  </member>
  <member name="D3D11_AUTHENTICATED_QUERY_OUTPUT_ID_COUNT_OUTPUT::DeviceHandle">
    <summary>A handle to the device.</summary>
  </member>
  <member name="D3D11_AUTHENTICATED_QUERY_OUTPUT_ID_COUNT_OUTPUT::CryptoSessionHandle">
    <summary>A handle to the cryptographic session.</summary>
  </member>
  <member name="D3D11_AUTHENTICATED_QUERY_OUTPUT_ID_COUNT_OUTPUT::OutputIDCount">
    <summary>The number of output IDs associated with the specified device and cryptographic session.</summary>
  </member>
  <member name="ID3D11VideoContext::VideoProcessorGetOutputColorSpace">
    <summary>
      <para>Gets the current output color space for the video processor.</para>
      <para>
        Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d11/nf-d3d11-id3d11videocontext-videoprocessorgetoutputcolorspace" />
      </para>
      <param name="pVideoProcessor">
        A pointer to the <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nn-d3d11-id3d11videoprocessor">ID3D11VideoProcessor</a> interface. To get this pointer, call <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nf-d3d11-id3d11videodevice-createvideoprocessor">ID3D11VideoDevice::CreateVideoProcessor</a>.
      </param>
      <param name="pColorSpace">
        A pointer to a <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ns-d3d11-d3d11_video_processor_color_space">D3D11_VIDEO_PROCESSOR_COLOR_SPACE</a> structure. The method fills in the structure with the output color space.
      </param>
    </summary>
  </member>
  <member name="ID3D11VideoContext2::VideoProcessorGetStreamHDRMetaData">
    <summary>
      <para>Gets the HDR metadata associated with the video stream.</para>
      <para>
        Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d11_4/nf-d3d11_4-id3d11videocontext2-videoprocessorgetstreamhdrmetadata" />
      </para>
      <param name="pVideoProcessor">
        A pointer to the <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nn-d3d11-id3d11videoprocessor">ID3D11VideoProcessor</a> interface.
      </param>
      <param name="StreamIndex">Identifies the input stream.</param>
      <param name="pType">The type of the HDR metadata currently associated with the stream.</param>
      <param name="Size">
        The size of the memory referenced by <i>pHDRMetaData</i>.

        If <i>pHDRMetaData</i> is NULL, <i>Size</i> should be 0.
      </param>
      <param name="pMetaData">
        Pointer to a buffer that receives the HDR metadata.

        This parameter can be NULL.
      </param>
    </summary>
  </member>
  <member name="ID3D11InfoQueue::PushRetrievalFilter">
    <summary>
      <para>Push a retrieval filter onto the retrieval-filter stack.</para>
      <para>
        Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d11sdklayers/nf-d3d11sdklayers-id3d11infoqueue-pushretrievalfilter" />
      </para>
      <param name="pFilter">
        Pointer to a retrieval filter (see <a href="https://docs.microsoft.com/windows/desktop/api/d3d11sdklayers/ns-d3d11sdklayers-d3d11_info_queue_filter">D3D11_INFO_QUEUE_FILTER</a>).
      </param>
    </summary>
  </member>
  <member name="ID3D11RefTrackingOptions::SetTrackingOptions">
    <summary>
      <para>Sets graphics processing unit (GPU) debug reference tracking options.</para>
      <para>
        Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d11sdklayers/nf-d3d11sdklayers-id3d11reftrackingoptions-settrackingoptions" />
      </para>
      <param name="uOptions">
        A combination of <a href="https://docs.microsoft.com/windows/win32/api/d3d11sdklayers/ne-d3d11sdklayers-d3d11_shader_tracking_options">D3D11_SHADER_TRACKING_OPTIONS</a>-typed flags that are combined by using a bitwise <b>OR</b> operation. The resulting value identifies tracking options. If a flag is present, the tracking option that the flag represents is set to "on"; otherwise the tracking option is set to "off."
      </param>
    </summary>
  </member>
  <member name="ID3D11VideoContext1::DecoderUpdateDownsampling">
    <summary>
      <para>Updates the decoder downsampling parameters.</para>
      <para>
        Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d11_1/nf-d3d11_1-id3d11videocontext1-decoderupdatedownsampling" />
      </para>
      <param name="pDecoder">
        A pointer to the <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nn-d3d11-id3d11videodecoder">ID3D11VideoDecoder</a> interface.
      </param>
      <param name="pOutputDesc">The resolution, format, and colorspace of the output/display frames.  This is the destination resolution and format of the downsample operation.</param>
    </summary>
  </member>
  <member name="ID3D11CryptoSession::GetCryptoType">
    <summary>
      <para>Gets the type of encryption that is supported by this session.</para>
      <para>
        Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d11/nf-d3d11-id3d11cryptosession-getcryptotype" />
      </para>
      <param name="pCryptoType">
        Receives a GUID that specifies the encryption type. The following GUIDs are defined.

        <table>
          <tr>
            <th>Value</th>
            <th>Meaning</th>
          </tr>
          <tr>
            <td width="40%">
              <a id="D3D11_CRYPTO_TYPE_AES128_CTR"></a>
              <a id="d3d11_crypto_type_aes128_ctr"></a>
              <dl>
                <dt>
                  <b>D3D11_CRYPTO_TYPE_AES128_CTR</b>
                </dt>
              </dl>
            </td>
            <td width="60%">
              128-bit Advanced Encryption Standard CTR mode (AES-CTR) block cipher.


            </td>
          </tr>
        </table>
      </param>
    </summary>
  </member>
  <member name="D3D11_CHECK_MULTISAMPLE_QUALITY_LEVELS_FLAG">
    <summary>
      <para>Identifies how to check multisample quality levels.</para>
      <para>
        Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d11_2/ne-d3d11_2-d3d11_check_multisample_quality_levels_flag" />
      </para>
    </summary>
  </member>
  <member name="D3D11_CHECK_MULTISAMPLE_QUALITY_LEVELS_FLAG::D3D11_CHECK_MULTISAMPLE_QUALITY_LEVELS_TILED_RESOURCE">
    <summary>Indicates to check the multisample quality levels of a tiled resource.</summary>
  </member>
  <member name="D3D11_TEX1D_UAV">
    <summary>
      <para>Describes a unordered-access 1D texture resource.</para>
      <para>
        Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d11/ns-d3d11-d3d11_tex1d_uav" />
      </para>
    </summary>
  </member>
  <member name="D3D11_TEX1D_UAV::MipSlice">
    <summary>The mipmap slice index.</summary>
  </member>
  <member name="ID3D11VideoContext::VideoProcessorGetStreamLumaKey">
    <summary>
      <para>Gets the luma key for an input stream of the video processor.</para>
      <para>
        Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d11/nf-d3d11-id3d11videocontext-videoprocessorgetstreamlumakey" />
      </para>
      <param name="pVideoProcessor">
        A pointer to the <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nn-d3d11-id3d11videoprocessor">ID3D11VideoProcessor</a> interface. To get this pointer, call <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nf-d3d11-id3d11videodevice-createvideoprocessor">ID3D11VideoDevice::CreateVideoProcessor</a>.
      </param>
      <param name="StreamIndex">
        The zero-based index of the input stream. To get the maximum number of streams, call <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nf-d3d11-id3d11videoprocessorenumerator-getvideoprocessorcaps">ID3D11VideoProcessorEnumerator::GetVideoProcessorCaps</a> and check the <b>MaxStreamStates</b> structure member.
      </param>
      <param name="pEnabled">
        Receives the value <b>TRUE</b> if luma keying is enabled, or <b>FALSE</b> otherwise.
      </param>
      <param name="pLower">Receives the lower bound for the luma key. The valid range is [0…1].</param>
      <param name="pUpper">Receives the upper bound for the luma key. The valid range is [0…1].</param>
    </summary>
  </member>
  <member name="D3D11_SHADER_INPUT_BIND_DESC">
    <summary>
      <para>Describes how a shader resource is bound to a shader input.</para>
      <para>
        Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d11shader/ns-d3d11shader-d3d11_shader_input_bind_desc" />
      </para>
    </summary>
  </member>
  <member name="D3D11_SHADER_INPUT_BIND_DESC::Name">
    <summary>Name of the shader resource.</summary>
  </member>
  <member name="D3D11_SHADER_INPUT_BIND_DESC::Type">
    <summary>
      A <a href="https://docs.microsoft.com/windows/desktop/api/d3dcommon/ne-d3dcommon-d3d_shader_input_type">D3D_SHADER_INPUT_TYPE</a>-typed value that identifies the type of data in the resource.
    </summary>
  </member>
  <member name="D3D11_SHADER_INPUT_BIND_DESC::BindPoint">
    <summary>Starting bind point.</summary>
  </member>
  <member name="D3D11_SHADER_INPUT_BIND_DESC::BindCount">
    <summary>Number of contiguous bind points for arrays.</summary>
  </member>
  <member name="D3D11_SHADER_INPUT_BIND_DESC::uFlags">
    <summary>
      A combination of <a href="https://docs.microsoft.com/windows/desktop/api/d3dcommon/ne-d3dcommon-d3d_shader_input_flags">D3D_SHADER_INPUT_FLAGS</a>-typed values for shader input-parameter options.
    </summary>
  </member>
  <member name="D3D11_SHADER_INPUT_BIND_DESC::ReturnType">
    <summary>
      If the input is a texture, the <a href="https://docs.microsoft.com/windows/desktop/api/d3dcommon/ne-d3dcommon-d3d_resource_return_type">D3D_RESOURCE_RETURN_TYPE</a>-typed value that identifies the return type.
    </summary>
  </member>
  <member name="D3D11_SHADER_INPUT_BIND_DESC::Dimension">
    <summary>
      A <a href="https://docs.microsoft.com/windows/desktop/api/d3dcommon/ne-d3dcommon-d3d_srv_dimension">D3D_SRV_DIMENSION</a>-typed value that identifies the dimensions of the bound resource.
    </summary>
  </member>
  <member name="D3D11_SHADER_INPUT_BIND_DESC::NumSamples">
    <summary>The number of samples for a multisampled texture; when a texture isn't multisampled, the value is set to -1 (0xFFFFFFFF).</summary>
  </member>
  <member name="D3D11_STANDARD_MULTISAMPLE_QUALITY_LEVELS">
    <summary>
      <para>Specifies a multi-sample pattern type.</para>
      <para>
        Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d11/ne-d3d11-d3d11_standard_multisample_quality_levels" />
      </para>
    </summary>
  </member>
  <member name="D3D11_STANDARD_MULTISAMPLE_QUALITY_LEVELS::D3D11_STANDARD_MULTISAMPLE_PATTERN">
    <summary>Pre-defined multi-sample patterns required for Direct3D 11 and Direct3D 10.1 hardware.</summary>
  </member>
  <member name="D3D11_STANDARD_MULTISAMPLE_QUALITY_LEVELS::D3D11_CENTER_MULTISAMPLE_PATTERN">
    <summary>Pattern where all of the samples are located at the pixel center.</summary>
  </member>
  <member name="ID3D11SamplerState">
    <summary>
      <para>The sampler-state interface holds a description for sampler state that you can bind to any shader stage of the pipeline for reference by texture sample operations.</para>
      <para>
        Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d11/nn-d3d11-id3d11samplerstate" />
      </para>
    </summary>
  </member>
  <member name="ID3D11ShaderReflectionVariable::GetType">
    <summary>
      <para>Get a shader-variable type.</para>
      <para>
        Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d11shader/nf-d3d11shader-id3d11shaderreflectionvariable-gettype" />
      </para>
    </summary>
  </member>
  <member name="ID3D11VideoDevice::CreateCryptoSession">
    <summary>
      <para>Creates a cryptographic session to encrypt video content that is sent to the graphics driver.</para>
      <para>
        Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d11/nf-d3d11-id3d11videodevice-createcryptosession" />
      </para>
      <param name="pCryptoType">
        A pointer to a GUID that specifies the type of encryption to use. The following GUIDs are defined.



        <table>
          <tr>
            <th>Value</th>
            <th>Meaning</th>
          </tr>
          <tr>
            <td width="40%">
              <a id="D3D11_CRYPTO_TYPE_AES128_CTR"></a>
              <a id="d3d11_crypto_type_aes128_ctr"></a>
              <dl>
                <dt>
                  <b>D3D11_CRYPTO_TYPE_AES128_CTR</b>
                </dt>
              </dl>
            </td>
            <td width="60%">
              128-bit Advanced Encryption Standard CTR mode (AES-CTR) block cipher.


            </td>
          </tr>
        </table>
      </param>
      <param name="pDecoderProfile">
        A pointer to a GUID that specifies the decoding profile. For a list of possible values, see <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nf-d3d11-id3d11videodevice-getvideodecoderprofile">ID3D11VideoDevice::GetVideoDecoderProfile</a>. If decoding will not be used, set this parameter to <b>NULL</b>.
      </param>
      <param name="pKeyExchangeType">
        A pointer to a GUID that specifies the type of key exchange.

        <table>
          <tr>
            <th>Value</th>
            <th>Meaning</th>
          </tr>
          <tr>
            <td width="40%">
              <a id="D3D11_KEY_EXCHANGE_RSAES_OAEP"></a>
              <a id="d3d11_key_exchange_rsaes_oaep"></a>
              <dl>
                <dt>
                  <b>D3D11_KEY_EXCHANGE_RSAES_OAEP</b>
                </dt>
              </dl>
            </td>
            <td width="60%">
              The caller will create the session key, encrypt it with RSA Encryption Scheme - Optimal Asymmetric Encryption Padding (RSAES-OAEP) by using the driver's public key, and pass the session key to the driver.

            </td>
          </tr>
        </table>
      </param>
      <param name="ppCryptoSession">
        Receives a pointer to the <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nn-d3d11-id3d11cryptosession">ID3D11CryptoSession</a> interface. The caller must release the interface.
      </param>
    </summary>
  </member>
  <member name="D3D11_VIDEO_PROCESSOR_FILTER">
    <summary>
      <para>Identifies a video processor filter.</para>
      <para>
        Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d11/ne-d3d11-d3d11_video_processor_filter" />
      </para>
    </summary>
  </member>
  <member name="D3D11_VIDEO_PROCESSOR_FILTER::D3D11_VIDEO_PROCESSOR_FILTER_BRIGHTNESS">
    <summary>Brightness filter.</summary>
  </member>
  <member name="D3D11_VIDEO_PROCESSOR_FILTER::D3D11_VIDEO_PROCESSOR_FILTER_CONTRAST">
    <summary>Contrast filter.</summary>
  </member>
  <member name="D3D11_VIDEO_PROCESSOR_FILTER::D3D11_VIDEO_PROCESSOR_FILTER_HUE">
    <summary>Hue filter.</summary>
  </member>
  <member name="D3D11_VIDEO_PROCESSOR_FILTER::D3D11_VIDEO_PROCESSOR_FILTER_SATURATION">
    <summary>Saturation filter.</summary>
  </member>
  <member name="D3D11_VIDEO_PROCESSOR_FILTER::D3D11_VIDEO_PROCESSOR_FILTER_NOISE_REDUCTION">
    <summary>Noise reduction filter.</summary>
  </member>
  <member name="D3D11_VIDEO_PROCESSOR_FILTER::D3D11_VIDEO_PROCESSOR_FILTER_EDGE_ENHANCEMENT">
    <summary>Edge enhancement filter.</summary>
  </member>
  <member name="D3D11_VIDEO_PROCESSOR_FILTER::D3D11_VIDEO_PROCESSOR_FILTER_ANAMORPHIC_SCALING">
    <summary>Anamorphic scaling filter.</summary>
  </member>
  <member name="D3D11_VIDEO_PROCESSOR_FILTER::D3D11_VIDEO_PROCESSOR_FILTER_STEREO_ADJUSTMENT">
    <summary>
      Stereo adjustment filter. When stereo 3D video is enabled, this filter adjusts the offset between the left and right views, allowing the user to reduce potential eye strain.

      The filter value indicates the amount by which the left and right views are adjusted.  A positive value shifts the images away from each other: the left image toward the left, and the right image toward the right. A negative value shifts the images in the opposite directions, closer to each other.
    </summary>
  </member>
  <member name="ID3D11DeviceChild::GetDevice">
    <summary>
      <para>Get a pointer to the device that created this interface.</para>
      <para>
        Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d11/nf-d3d11-id3d11devicechild-getdevice" />
      </para>
      <param name="ppDevice">
        Address of a pointer to a device (see <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nn-d3d11-id3d11device">ID3D11Device</a>).
      </param>
    </summary>
  </member>
  <member name="ID3D11DeviceContext1::PSSetConstantBuffers1">
    <summary>
      <para>Sets the constant buffers that the pixel shader pipeline stage uses, and enables the shader to access other parts of the buffer.</para>
      <para>
        Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d11_1/nf-d3d11_1-id3d11devicecontext1-pssetconstantbuffers1" />
      </para>
      <param name="StartSlot">Index into the device's zero-based array to begin setting constant buffers to (ranges from 0 to D3D11_COMMONSHADER_CONSTANT_BUFFER_API_SLOT_COUNT - 1).</param>
      <param name="NumBuffers">
        Number of buffers to set (ranges from 0 to D3D11_COMMONSHADER_CONSTANT_BUFFER_API_SLOT_COUNT - <i>StartSlot</i>).
      </param>
      <param name="ppConstantBuffers">Array of constant buffers being given to the device.</param>
      <param name="pFirstConstant">
        An array that holds the offsets into the buffers that  <i>ppConstantBuffers</i> specifies.
        Each offset specifies where, from the shader's point of view, each constant buffer starts.
        Each offset is measured in shader constants, which are 16 bytes (4*32-bit components).
        Therefore, an offset of 16 indicates that the start of the associated constant buffer is 256 bytes into the constant buffer.
        Each offset must be a multiple of 16 constants.
      </param>
      <param name="pNumConstants">
        An array that holds the numbers of constants in the buffers that  <i>ppConstantBuffers</i> specifies.
        Each number specifies the number of constants that are contained in the constant buffer that the shader uses.
        Each number of constants starts from its respective offset that is specified in the <i>pFirstConstant</i> array.
        Each number of constants must be a multiple of 16 constants, in the range [0..4096].
      </param>
    </summary>
  </member>
  <member name="D3D11_TEX2D_ARRAY_DSV">
    <summary>
      <para>Specifies the subresources from an array 2D textures that are accessible to a depth-stencil view.</para>
      <para>
        Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d11/ns-d3d11-d3d11_tex2d_array_dsv" />
      </para>
    </summary>
  </member>
  <member name="D3D11_TEX2D_ARRAY_DSV::MipSlice">
    <summary>The index of the first mipmap level to use.</summary>
  </member>
  <member name="D3D11_TEX2D_ARRAY_DSV::FirstArraySlice">
    <summary>The index of the first texture to use in an array of textures.</summary>
  </member>
  <member name="D3D11_TEX2D_ARRAY_DSV::ArraySize">
    <summary>Number of textures to use.</summary>
  </member>
  <member name="ID3D11ModuleInstance::BindConstantBuffer">
    <summary>
      <para>Rebinds a constant buffer from a source slot to a destination slot.</para>
      <para>
        Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d11shader/nf-d3d11shader-id3d11moduleinstance-bindconstantbuffer" />
      </para>
      <param name="uSrcSlot">The source slot number for rebinding.</param>
      <param name="uDstSlot">The destination slot number for rebinding.</param>
      <param name="cbDstOffset">The offset in bytes of the destination slot for rebinding. The offset must have 16-byte alignment.</param>
    </summary>
  </member>
  <member name="ID3D11TracingDevice::SetShaderTrackingOptions">
    <summary>
      <para>Sets the reference rasterizer's race-condition tracking options for a specific shader.</para>
      <para>
        Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d11sdklayers/nf-d3d11sdklayers-id3d11tracingdevice-setshadertrackingoptions" />
      </para>
      <param name="pShader">
        A pointer to the <a href="https://docs.microsoft.com/windows/desktop/api/unknwn/nn-unknwn-iunknown">IUnknown</a> interface of a shader.
      </param>
      <param name="Options">
        A combination of <a href="https://docs.microsoft.com/windows/win32/api/d3d11sdklayers/ne-d3d11sdklayers-d3d11_shader_tracking_options">D3D11_SHADER_TRACKING_OPTIONS</a>-typed flags that are combined by using a bitwise <b>OR</b> operation. The resulting value identifies tracking options. If a flag is present, the tracking option that the flag represents is set to "on"; otherwise the tracking option is set to "off."
      </param>
    </summary>
  </member>
  <member name="ID3D11ShaderReflection::GetMinFeatureLevel">
    <summary>
      <para>Gets the minimum feature level.</para>
      <para>
        Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d11shader/nf-d3d11shader-id3d11shaderreflection-getminfeaturelevel" />
      </para>
      <param name="pLevel">
        A pointer to one of the enumerated values in <a href="https://docs.microsoft.com/windows/desktop/api/d3dcommon/ne-d3dcommon-d3d_feature_level">D3D_FEATURE_LEVEL</a>, which represents the minimum feature level.
      </param>
    </summary>
  </member>
  <member name="ID3D11ShaderTrace::TraceReady">
    <summary>
      <para>Specifies that the shader trace recorded and is ready to use.</para>
      <para>
        Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d11shadertracing/nf-d3d11shadertracing-id3d11shadertrace-traceready" />
      </para>
      <param name="pTestCount">
        An optional pointer to a variable that receives the number of times that a matching invocation for the trace occurred. If not used, set to NULL.
        For more information about this number, see Remarks.
      </param>
    </summary>
  </member>
  <member name="ID3D11VideoContext::VideoProcessorGetStreamAutoProcessingMode">
    <summary>
      <para>Queries whether automatic processing features of the video processor are enabled.</para>
      <para>
        Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d11/nf-d3d11-id3d11videocontext-videoprocessorgetstreamautoprocessingmode" />
      </para>
      <param name="pVideoProcessor">
        A pointer to the <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nn-d3d11-id3d11videoprocessor">ID3D11VideoProcessor</a> interface. To get this pointer, call <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nf-d3d11-id3d11videodevice-createvideoprocessor">ID3D11VideoDevice::CreateVideoProcessor</a>.
      </param>
      <param name="StreamIndex">
        The zero-based index of the input stream. To get the maximum number of streams, call <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nf-d3d11-id3d11videoprocessorenumerator-getvideoprocessorcaps">ID3D11VideoProcessorEnumerator::GetVideoProcessorCaps</a> and check the <b>MaxStreamStates</b> structure member.
      </param>
      <param name="pEnabled">
        Receives the value <b>TRUE</b> if automatic processing features are enabled, or <b>FALSE</b> otherwise.
      </param>
    </summary>
  </member>
  <member name="ID3D11Multithread::GetMultithreadProtected">
    <summary>
      <para>Find out if multithread protection is turned on or not.</para>
      <para>
        Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d11_4/nf-d3d11_4-id3d11multithread-getmultithreadprotected" />
      </para>
    </summary>
  </member>
  <member name="D3D11_AUTHENTICATED_CONFIGURE_CRYPTO_SESSION_INPUT">
    <summary>
      <para>Contains input data for a D3D11_AUTHENTICATED_CONFIGURE_CRYPTO_SESSION command.</para>
      <para>
        Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d11/ns-d3d11-d3d11_authenticated_configure_crypto_session_input" />
      </para>
    </summary>
  </member>
  <member name="D3D11_AUTHENTICATED_CONFIGURE_CRYPTO_SESSION_INPUT::Parameters">
    <summary>
      A <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ns-d3d11-d3d11_authenticated_configure_input">D3D11_AUTHENTICATED_CONFIGURE_INPUT</a> structure that contains the command GUID and other data.
    </summary>
  </member>
  <member name="D3D11_AUTHENTICATED_CONFIGURE_CRYPTO_SESSION_INPUT::DecoderHandle">
    <summary>
      A handle to the decoder device. Get this from <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nf-d3d11-id3d11videodecoder-getdriverhandle">ID3D11VideoDecoder::GetDriverHandle</a>.
    </summary>
  </member>
  <member name="D3D11_AUTHENTICATED_CONFIGURE_CRYPTO_SESSION_INPUT::CryptoSessionHandle">
    <summary>
      A handle to the cryptographic session. Get this from <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nf-d3d11-id3d11cryptosession-getcryptosessionhandle">ID3D11CryptoSession::GetCryptoSessionHandle</a>.
    </summary>
  </member>
  <member name="D3D11_AUTHENTICATED_CONFIGURE_CRYPTO_SESSION_INPUT::DeviceHandle">
    <summary>
      A handle to the Direct3D device. Get this from <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nf-d3d11-id3d11videocontext-queryauthenticatedchannel">D3D11VideoContext::QueryAuthenticatedChannel</a> using <b>D3D11_AUTHENTICATED_QUERY_DEVICE_HANDLE</b>.
    </summary>
  </member>
  <member name="D3D11_AUTHENTICATED_CONFIGURE_INITIALIZE_INPUT">
    <summary>
      <para>Contains input data for a D3D11_AUTHENTICATED_CONFIGURE_INITIALIZE command.</para>
      <para>
        Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d11/ns-d3d11-d3d11_authenticated_configure_initialize_input" />
      </para>
    </summary>
  </member>
  <member name="D3D11_AUTHENTICATED_CONFIGURE_INITIALIZE_INPUT::Parameters">
    <summary>
      A <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ns-d3d11-d3d11_authenticated_configure_input">D3D11_AUTHENTICATED_CONFIGURE_INPUT</a> structure that contains the command GUID and other data.
    </summary>
  </member>
  <member name="D3D11_AUTHENTICATED_CONFIGURE_INITIALIZE_INPUT::StartSequenceQuery">
    <summary>The initial sequence number for queries.</summary>
  </member>
  <member name="D3D11_AUTHENTICATED_CONFIGURE_INITIALIZE_INPUT::StartSequenceConfigure">
    <summary>The initial sequence number for commands.</summary>
  </member>
  <member name="D3D11_VIDEO_DECODER_BUFFER_DESC">
    <summary>
      <para>Describes a compressed buffer for decoding.</para>
      <para>
        Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d11/ns-d3d11-d3d11_video_decoder_buffer_desc" />
      </para>
    </summary>
  </member>
  <member name="D3D11_VIDEO_DECODER_BUFFER_DESC::BufferType">
    <summary>
      The type of buffer, specified as a member of the <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ne-d3d11-d3d11_video_decoder_buffer_type">D3D11_VIDEO_DECODER_BUFFER_TYPE</a> enumeration.
    </summary>
  </member>
  <member name="D3D11_VIDEO_DECODER_BUFFER_DESC::BufferIndex">
    <summary>Reserved.</summary>
  </member>
  <member name="D3D11_VIDEO_DECODER_BUFFER_DESC::DataOffset">
    <summary>The offset of the relevant data from the beginning of the buffer, in bytes. This value must be zero.</summary>
  </member>
  <member name="D3D11_VIDEO_DECODER_BUFFER_DESC::FirstMBaddress">
    <summary>The macroblock address of the first macroblock in the buffer. The macroblock address is given in raster scan order.</summary>
  </member>
  <member name="D3D11_VIDEO_DECODER_BUFFER_DESC::NumMBsInBuffer">
    <summary>The number of macroblocks of data in the buffer. This count includes skipped macroblocks.</summary>
  </member>
  <member name="D3D11_VIDEO_DECODER_BUFFER_DESC::Width">
    <summary>Reserved. Set to zero.</summary>
  </member>
  <member name="D3D11_VIDEO_DECODER_BUFFER_DESC::Height">
    <summary>Reserved. Set to zero.</summary>
  </member>
  <member name="D3D11_VIDEO_DECODER_BUFFER_DESC::Stride">
    <summary>Reserved. Set to zero.</summary>
  </member>
  <member name="D3D11_VIDEO_DECODER_BUFFER_DESC::ReservedBits">
    <summary>Reserved. Set to zero.</summary>
  </member>
  <member name="D3D11_VIDEO_DECODER_BUFFER_DESC::pIV">
    <summary>
      A pointer to a buffer that contains an initialization vector (IV) for encrypted data. If the decode buffer does not contain encrypted data, set this member to <b>NULL</b>.
    </summary>
  </member>
  <member name="D3D11_VIDEO_DECODER_BUFFER_DESC::IVSize">
    <summary>
      The size of the buffer specified in the <b>pIV</b> parameter. If <b>pIV</b> is <b>NULL</b>, set this member to zero.
    </summary>
  </member>
  <member name="D3D11_VIDEO_DECODER_BUFFER_DESC::PartialEncryption">
    <summary>
      If <b>TRUE</b>, the video surfaces are partially encrypted.
    </summary>
  </member>
  <member name="D3D11_VIDEO_DECODER_BUFFER_DESC::EncryptedBlockInfo">
    <summary>
      A <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ns-d3d11-d3d11_encrypted_block_info">D3D11_ENCRYPTED_BLOCK_INFO</a> structure that specifies which bytes of the surface are encrypted.
    </summary>
  </member>
  <member name="ID3D11FunctionReflection">
    <summary>
      <para>A function-reflection interface accesses function info.</para>
      <para>
        Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d11shader/nn-d3d11shader-id3d11functionreflection" />
      </para>
    </summary>
  </member>
  <member name="ID3D11Device::CreateComputeShader">
    <summary>
      <para>Create a compute shader.</para>
      <para>
        Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d11/nf-d3d11-id3d11device-createcomputeshader" />
      </para>
      <param name="pShaderBytecode">A pointer to a compiled shader.</param>
      <param name="BytecodeLength">
        Size of the compiled shader in <i>pShaderBytecode</i>.
      </param>
      <param name="pClassLinkage">
        A pointer to a <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nn-d3d11-id3d11classlinkage">ID3D11ClassLinkage</a>, which represents  class linkage interface; the value can be <b>NULL</b>.
      </param>
      <param name="ppComputeShader">
        Address of a pointer to an <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nn-d3d11-id3d11computeshader">ID3D11ComputeShader</a> interface. If this is <b>NULL</b>,
        all other parameters will be validated; if validation passes, CreateComputeShader returns S_FALSE instead of S_OK.
      </param>
    </summary>
  </member>
  <member name="ID3D11RasterizerState2::GetDesc2">
    <summary>
      <para>Gets the description for rasterizer state that you used to create the rasterizer-state object.</para>
      <para>
        Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d11_3/nf-d3d11_3-id3d11rasterizerstate2-getdesc2" />
      </para>
      <param name="pDesc">
        A pointer to a <a href="https://docs.microsoft.com/windows/desktop/api/d3d11_3/ns-d3d11_3-cd3d11_rasterizer_desc2">D3D11_RASTERIZER_DESC2</a> structure that receives a description of the rasterizer state. This rasterizer state can specify forced sample count and conservative rasterization mode.
      </param>
    </summary>
  </member>
  <member name="ID3D11Query1::GetDesc1">
    <summary>
      <para>Gets a query description.</para>
      <para>
        Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d11_3/nf-d3d11_3-id3d11query1-getdesc1" />
      </para>
      <param name="pDesc1">
        A pointer to a <a href="https://docs.microsoft.com/windows/desktop/api/d3d11_3/ns-d3d11_3-cd3d11_query_desc1">D3D11_QUERY_DESC1</a> structure that receives a description of the query.
      </param>
    </summary>
  </member>
  <member name="ID3D11Resource::GetType">
    <summary>
      <para>Get the type of the resource.</para>
      <para>
        Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d11/nf-d3d11-id3d11resource-gettype" />
      </para>
      <param name="pResourceDimension">
        Pointer to the resource type (see <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ne-d3d11-d3d11_resource_dimension">D3D11_RESOURCE_DIMENSION</a>).
      </param>
    </summary>
  </member>
  <member name="D3D11_AUTHENTICATED_CONFIGURE_OUTPUT">
    <summary>
      <para>Contains the response from the ID3D11VideoContext::ConfigureAuthenticatedChannel method.</para>
      <para>
        Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d11/ns-d3d11-d3d11_authenticated_configure_output" />
      </para>
    </summary>
  </member>
  <member name="D3D11_AUTHENTICATED_CONFIGURE_OUTPUT::omac">
    <summary>
      A <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ns-d3d11-d3d11_omac">D3D11_OMAC</a> structure that contains a Message Authentication Code (MAC) of the data. The driver uses AES-based one-key CBC MAC (OMAC) to calculate this value for the block of data that appears after this structure member.
    </summary>
  </member>
  <member name="D3D11_AUTHENTICATED_CONFIGURE_OUTPUT::ConfigureType">
    <summary>
      A GUID that specifies the command. For a list of GUIDs, see <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ns-d3d11-d3d11_authenticated_configure_input">D3D11_AUTHENTICATED_CONFIGURE_INPUT</a>.
    </summary>
  </member>
  <member name="D3D11_AUTHENTICATED_CONFIGURE_OUTPUT::hChannel">
    <summary>A handle to the authenticated channel.</summary>
  </member>
  <member name="D3D11_AUTHENTICATED_CONFIGURE_OUTPUT::SequenceNumber">
    <summary>The command sequence number.</summary>
  </member>
  <member name="D3D11_AUTHENTICATED_CONFIGURE_OUTPUT::ReturnCode">
    <summary>The result code for the command.</summary>
  </member>
  <member name="D3D11_VIDEO_CONTENT_PROTECTION_CAPS">
    <summary>
      <para>Describes the content-protection capabilities of a graphics driver.</para>
      <para>
        Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d11/ns-d3d11-d3d11_video_content_protection_caps" />
      </para>
    </summary>
  </member>
  <member name="D3D11_VIDEO_CONTENT_PROTECTION_CAPS::Caps">
    <summary>
      A bitwise <b>OR</b> of zero or more flags from the <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ne-d3d11-d3d11_content_protection_caps">D3D11_CONTENT_PROTECTION_CAPS</a> enumeration.
    </summary>
  </member>
  <member name="D3D11_VIDEO_CONTENT_PROTECTION_CAPS::KeyExchangeTypeCount">
    <summary>
      The number of cryptographic key-exchange types that are supported by the driver. To get the list of key-exchange types, call the <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nf-d3d11-id3d11videodevice-checkcryptokeyexchange">ID3D11VideoDevice::CheckCryptoKeyExchange</a> method.
    </summary>
  </member>
  <member name="D3D11_VIDEO_CONTENT_PROTECTION_CAPS::BlockAlignmentSize">
    <summary>The encyrption block size, in bytes. The size of data to be encrypted must be a multiple of this value.</summary>
  </member>
  <member name="D3D11_VIDEO_CONTENT_PROTECTION_CAPS::ProtectedMemorySize">
    <summary>The total amount of memory, in bytes, that can be used to hold protected surfaces.</summary>
  </member>
  <member name="D3D11_MESSAGE_ID">
    <summary>
      <para>Debug messages for setting up an info-queue filter (see D3D11_INFO_QUEUE_FILTER); use these messages to allow or deny message categories to pass through the storage and retrieval filters.</para>
      <para>
        Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d11sdklayers/ne-d3d11sdklayers-d3d11_message_id" />
      </para>
    </summary>
  </member>
  <member name="ID3D11Device::CreateGeometryShaderWithStreamOutput">
    <summary>
      <para>Creates a geometry shader that can write to streaming output buffers.</para>
      <para>
        Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d11/nf-d3d11-id3d11device-creategeometryshaderwithstreamoutput" />
      </para>
      <param name="pShaderBytecode">
        A pointer to the compiled geometry shader for a standard geometry shader plus stream output. For info on how to get this pointer, see <a href="https://docs.microsoft.com/windows/desktop/direct3dhlsl/dx-graphics-hlsl-using-shaders-10">Getting a Pointer to a Compiled Shader</a>.

        To create the stream output without using a geometry shader, pass a pointer to the output signature for the prior stage. To obtain this output signature, call the <a href="https://docs.microsoft.com/windows/desktop/direct3dhlsl/d3dgetoutputsignatureblob">D3DGetOutputSignatureBlob</a> compiler function. You can also pass a pointer to the compiled shader for the prior stage (for example, the <a href="https://docs.microsoft.com/previous-versions/bb205146(v=vs.85)">vertex-shader stage</a> or <a href="https://docs.microsoft.com/windows/desktop/direct3d11/direct3d-11-advanced-stages-tessellation">domain-shader stage</a>). This compiled shader provides the output signature for the data.
      </param>
      <param name="BytecodeLength">Size of the compiled geometry shader.</param>
      <param name="pSODeclaration">
        Pointer to a <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ns-d3d11-d3d11_so_declaration_entry">D3D11_SO_DECLARATION_ENTRY</a> array. Cannot be <b>NULL</b> if NumEntries &gt; 0.
      </param>
      <param name="NumEntries">The number of entries in the stream output declaration ( ranges from 0 to D3D11_SO_STREAM_COUNT * D3D11_SO_OUTPUT_COMPONENT_COUNT ).</param>
      <param name="pBufferStrides">An array of buffer strides; each stride is the size of an element for that buffer.</param>
      <param name="NumStrides">
        The number of strides (or buffers) in <i>pBufferStrides</i> (ranges from 0 to D3D11_SO_BUFFER_SLOT_COUNT).
      </param>
      <param name="RasterizedStream">
        The index number of the stream to be sent to the rasterizer stage (ranges from 0 to D3D11_SO_STREAM_COUNT - 1).
        Set to D3D11_SO_NO_RASTERIZED_STREAM if no stream is to be rasterized.
      </param>
      <param name="pClassLinkage">
        A pointer to a class linkage interface (see <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nn-d3d11-id3d11classlinkage">ID3D11ClassLinkage</a>); the value can be <b>NULL</b>.
      </param>
      <param name="ppGeometryShader">
        Address of a pointer to an <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nn-d3d11-id3d11geometryshader">ID3D11GeometryShader</a> interface, representing the geometry shader that was created.
        Set this to <b>NULL</b> to validate the other parameters; if validation passes, the method will return S_FALSE instead of S_OK.
      </param>
    </summary>
  </member>
  <member name="ID3D11InfoQueue::GetBreakOnSeverity">
    <summary>
      <para>Get a message severity level to break on when a message with that severity level passes through the storage filter.</para>
      <para>
        Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d11sdklayers/nf-d3d11sdklayers-id3d11infoqueue-getbreakonseverity" />
      </para>
      <param name="Severity">
        Message severity level to break on (see <a href="https://docs.microsoft.com/windows/desktop/api/d3d11sdklayers/ne-d3d11sdklayers-d3d11_message_severity">D3D11_MESSAGE_SEVERITY</a>).
      </param>
    </summary>
  </member>
  <member name="ID3D11ShaderReflection::GetOutputParameterDesc">
    <summary>
      <para>Get an output-parameter description for a shader.</para>
      <para>
        Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d11shader/nf-d3d11shader-id3d11shaderreflection-getoutputparameterdesc" />
      </para>
      <param name="ParameterIndex">A zero-based parameter index.</param>
      <param name="pDesc">
        A pointer to a shader-output-parameter description. See <a href="https://docs.microsoft.com/windows/win32/api/d3d11shader/ns-d3d11shader-d3d11_signature_parameter_desc">D3D11_SIGNATURE_PARAMETER_DESC</a>.
      </param>
    </summary>
  </member>
  <member name="D3D11_FILTER_TYPE">
    <summary>
      <para>Types of magnification or minification sampler filters.</para>
      <para>
        Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d11/ne-d3d11-d3d11_filter_type" />
      </para>
    </summary>
  </member>
  <member name="D3D11_FILTER_TYPE::D3D11_FILTER_TYPE_POINT">
    <summary>Point filtering used as a texture magnification or minification filter. The texel with coordinates nearest to the desired pixel value is used. The texture filter to be used between mipmap levels is nearest-point mipmap filtering. The rasterizer uses the color from the texel of the nearest mipmap texture.</summary>
  </member>
  <member name="D3D11_FILTER_TYPE::D3D11_FILTER_TYPE_LINEAR">
    <summary>Bilinear interpolation filtering used as a texture magnification or minification filter. A weighted average of a 2 x 2 area of texels surrounding the desired pixel is used. The texture filter to use between mipmap levels is trilinear mipmap interpolation. The rasterizer linearly interpolates pixel color, using the texels of the two nearest mipmap textures.</summary>
  </member>
  <member name="D3D11_BUFFER_UAV">
    <summary>
      <para>Describes the elements in a buffer to use in a unordered-access view.</para>
      <para>
        Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d11/ns-d3d11-d3d11_buffer_uav" />
      </para>
    </summary>
  </member>
  <member name="D3D11_BUFFER_UAV::FirstElement">
    <summary>The zero-based index of the first element to be accessed.</summary>
  </member>
  <member name="D3D11_BUFFER_UAV::NumElements">
    <summary>The number of elements in the resource. For structured buffers, this is the number of structures in the buffer.</summary>
  </member>
  <member name="D3D11_BUFFER_UAV::Flags">
    <summary>
      View options for the resource (see <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ne-d3d11-d3d11_buffer_uav_flag">D3D11_BUFFER_UAV_FLAG</a>).
    </summary>
  </member>
  <member name="ID3D11FunctionParameterReflection::GetDesc">
    <summary>
      <para>Fills the parameter descriptor structure for the function's parameter.</para>
      <para>
        Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d11shader/nf-d3d11shader-id3d11functionparameterreflection-getdesc" />
      </para>
      <param name="pDesc">
        A pointer to a <a href="https://docs.microsoft.com/windows/desktop/api/d3d11shader/ns-d3d11shader-d3d11_parameter_desc">D3D11_PARAMETER_DESC</a> structure that receives a description of the function's parameter.
      </param>
    </summary>
  </member>
  <member name="ID3D11DeviceContext1::DiscardResource">
    <summary>
      <para>Discards a resource from the device context.</para>
      <para>
        Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d11_1/nf-d3d11_1-id3d11devicecontext1-discardresource" />
      </para>
      <param name="pResource">
        A pointer to the <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nn-d3d11-id3d11resource">ID3D11Resource</a> interface for the resource to discard. The resource must have been created with usage <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ne-d3d11-d3d11_usage">D3D11_USAGE_DEFAULT</a> or <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ne-d3d11-d3d11_usage">D3D11_USAGE_DYNAMIC</a>, otherwise the runtime drops the call to <b>DiscardResource</b>; if the debug layer is enabled, the runtime returns an error message.
      </param>
    </summary>
  </member>
  <member name="D3D11_TEX3D_UAV">
    <summary>
      <para>Describes a unordered-access 3D texture resource.</para>
      <para>
        Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d11/ns-d3d11-d3d11_tex3d_uav" />
      </para>
    </summary>
  </member>
  <member name="D3D11_TEX3D_UAV::MipSlice">
    <summary>The mipmap slice index.</summary>
  </member>
  <member name="D3D11_TEX3D_UAV::FirstWSlice">
    <summary>The zero-based index of the first depth slice to be accessed.</summary>
  </member>
  <member name="D3D11_TEX3D_UAV::WSize">
    <summary>The number of depth slices.</summary>
  </member>
  <member name="ID3D11FunctionLinkingGraph::GetLastError">
    <summary>
      <para>Gets the error from the last function call of the function-linking-graph.</para>
      <para>
        Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d11shader/nf-d3d11shader-id3d11functionlinkinggraph-getlasterror" />
      </para>
      <param name="ppErrorBuffer">
        An pointer to a variable that receives a pointer to the <a href="https://docs.microsoft.com/previous-versions/windows/desktop/legacy/ff728743(v=vs.85)">ID3DBlob</a> interface that you can use to access the error.
      </param>
    </summary>
  </member>
  <member name="D3D11_TEX2D_DSV">
    <summary>
      <para>Specifies the subresource from a 2D texture that is accessible to a depth-stencil view.</para>
      <para>
        Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d11/ns-d3d11-d3d11_tex2d_dsv" />
      </para>
    </summary>
  </member>
  <member name="D3D11_TEX2D_DSV::MipSlice">
    <summary>The index of the first mipmap level to use.</summary>
  </member>
  <member name="ID3D11DeviceContext1::DiscardView">
    <summary>
      <para>Discards a resource view from the device context.</para>
      <para>
        Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d11_1/nf-d3d11_1-id3d11devicecontext1-discardview" />
      </para>
      <param name="pResourceView">
        A pointer to the <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nn-d3d11-id3d11view">ID3D11View</a> interface for the resource view to discard. The resource that underlies the view must have been created with usage <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ne-d3d11-d3d11_usage">D3D11_USAGE_DEFAULT</a> or <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ne-d3d11-d3d11_usage">D3D11_USAGE_DYNAMIC</a>, otherwise the runtime drops the call to <b>DiscardView</b>; if the debug layer is enabled, the runtime returns an error message.
      </param>
    </summary>
  </member>
  <member name="ID3D11ShaderReflection::GetNumInterfaceSlots">
    <summary>
      <para>Gets the number of interface slots in a shader.</para>
      <para>
        Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d11shader/nf-d3d11shader-id3d11shaderreflection-getnuminterfaceslots" />
      </para>
    </summary>
  </member>
  <member name="ID3D11FunctionReflection::GetFunctionParameter">
    <summary>
      <para>Gets the function parameter reflector.</para>
      <para>
        Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d11shader/nf-d3d11shader-id3d11functionreflection-getfunctionparameter" />
      </para>
      <param name="ParameterIndex">The zero-based index of the function parameter reflector to retrieve.</param>
    </summary>
  </member>
  <member name="D3D11_AUTHENTICATED_QUERY_ACCESSIBILITY_OUTPUT">
    <summary>
      <para>Contains the response to a D3D11_AUTHENTICATED_QUERY_ACCESSIBILITY_ATTRIBUTES query.</para>
      <para>
        Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d11/ns-d3d11-d3d11_authenticated_query_accessibility_output" />
      </para>
    </summary>
  </member>
  <member name="D3D11_AUTHENTICATED_QUERY_ACCESSIBILITY_OUTPUT::Output">
    <summary>
      A <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ns-d3d11-d3d11_authenticated_query_output">D3D11_AUTHENTICATED_QUERY_OUTPUT</a> structure that contains a Message Authentication Code (MAC) and other data.
    </summary>
  </member>
  <member name="D3D11_AUTHENTICATED_QUERY_ACCESSIBILITY_OUTPUT::BusType">
    <summary>
      A bitwise <b>OR</b> of flags from the <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ne-d3d11-d3d11_bus_type">D3D11_BUS_TYPE</a> enumeration.
    </summary>
  </member>
  <member name="D3D11_AUTHENTICATED_QUERY_ACCESSIBILITY_OUTPUT::AccessibleInContiguousBlocks">
    <summary>
      If <b>TRUE</b>, contiguous blocks of video memory may be accessible to the CPU or the bus.
    </summary>
  </member>
  <member name="D3D11_AUTHENTICATED_QUERY_ACCESSIBILITY_OUTPUT::AccessibleInNonContiguousBlocks">
    <summary>
      If <b>TRUE</b>, non-contiguous blocks of video memory may be accessible to the CPU or the bus.
    </summary>
  </member>
  <member name="ID3D11DeviceContext::ResolveSubresource">
    <summary>
      <para>Copy a multisampled resource into a non-multisampled resource.</para>
      <para>
        Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d11/nf-d3d11-id3d11devicecontext-resolvesubresource" />
      </para>
      <param name="pDstResource">
        Destination resource. Must be a created with the <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ne-d3d11-d3d11_usage">D3D11_USAGE_DEFAULT</a> flag and be single-sampled. See <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nn-d3d11-id3d11resource">ID3D11Resource</a>.
      </param>
      <param name="DstSubresource">
        A zero-based index, that identifies the destination subresource. Use <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nf-d3d11-d3d11calcsubresource">D3D11CalcSubresource</a> to calculate the index.
      </param>
      <param name="pSrcResource">Source resource. Must be multisampled.</param>
      <param name="SrcSubresource">The source subresource of the source resource.</param>
      <param name="Format">
        A <a href="https://docs.microsoft.com/windows/desktop/api/dxgiformat/ne-dxgiformat-dxgi_format">DXGI_FORMAT</a> that indicates how the multisampled resource will be resolved to a single-sampled resource.
        See remarks.
      </param>
    </summary>
  </member>
  <member name="ID3D11VideoContext::VideoProcessorBlt">
    <summary>
      <para>Performs a video processing operation on one or more input samples and writes the result to a Direct3D surface.</para>
      <para>
        Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d11/nf-d3d11-id3d11videocontext-videoprocessorblt" />
      </para>
      <param name="pVideoProcessor">
        A pointer to the <a href="https://docs.microsoft.com/windows/win32/api/d3d11/nn-d3d11-id3d11videoprocessor">ID3D11VideoProcessor</a> interface. To get this pointer, call the <a href="https://docs.microsoft.com/windows/win32/api/d3d11/nf-d3d11-id3d11videodevice-createvideoprocessor">ID3D11VideoDevice::CreateVideoProcessor</a> method.
      </param>
      <param name="pView">
        A pointer to the <a href="https://docs.microsoft.com/windows/win32/api/d3d11/nn-d3d11-id3d11videoprocessoroutputview">ID3D11VideoProcessorOutputView</a> interface for the output surface. The output of the video processing operation will be written to this surface.
      </param>
      <param name="OutputFrame">The frame number of the output video frame, indexed from zero.</param>
      <param name="StreamCount">The number of input streams to process.</param>
      <param name="pStreams">
        A pointer to an array of <a href="https://docs.microsoft.com/windows/win32/api/d3d11/ns-d3d11-d3d11_video_processor_stream">D3D11_VIDEO_PROCESSOR_STREAM</a> structures that contain information about the input streams. The caller allocates the array and fills in each structure. The number of elements in the array is given in the <i>StreamCount</i> parameter.
      </param>
    </summary>
  </member>
  <member name="D3D11_VIDEO_FRAME_FORMAT">
    <summary>
      <para>Describes how a video stream is interlaced.</para>
      <para>
        Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d11/ne-d3d11-d3d11_video_frame_format" />
      </para>
    </summary>
  </member>
  <member name="D3D11_VIDEO_FRAME_FORMAT::D3D11_VIDEO_FRAME_FORMAT_PROGRESSIVE">
    <summary>Frames are progressive.</summary>
  </member>
  <member name="D3D11_VIDEO_FRAME_FORMAT::D3D11_VIDEO_FRAME_FORMAT_INTERLACED_TOP_FIELD_FIRST">
    <summary>Frames are interlaced. The top field of each frame is displayed first.</summary>
  </member>
  <member name="D3D11_VIDEO_FRAME_FORMAT::D3D11_VIDEO_FRAME_FORMAT_INTERLACED_BOTTOM_FIELD_FIRST">
    <summary>Frame are interlaced. The bottom field of each frame is displayed first.</summary>
  </member>
  <member name="ID3D11ShaderReflectionType::GetMemberTypeByIndex">
    <summary>
      <para>Get a shader-reflection-variable type by index.</para>
      <para>
        Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d11shader/nf-d3d11shader-id3d11shaderreflectiontype-getmembertypebyindex" />
      </para>
      <param name="Index">Zero-based index.</param>
    </summary>
  </member>
  <member name="ID3D11VideoDevice::CheckCryptoKeyExchange">
    <summary>
      <para>Gets a cryptographic key-exchange mechanism that is supported by the driver.</para>
      <para>
        Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d11/nf-d3d11-id3d11videodevice-checkcryptokeyexchange" />
      </para>
      <param name="pCryptoType">
        A pointer to a GUID that specifies the type of encryption to be used. The following GUIDs are defined.

        <table>
          <tr>
            <th>Value</th>
            <th>Meaning</th>
          </tr>
          <tr>
            <td width="40%">
              <a id="D3D11_CRYPTO_TYPE_AES128_CTR"></a>
              <a id="d3d11_crypto_type_aes128_ctr"></a>
              <dl>
                <dt>
                  <b>D3D11_CRYPTO_TYPE_AES128_CTR</b>
                </dt>
              </dl>
            </td>
            <td width="60%">
              128-bit Advanced Encryption Standard CTR mode (AES-CTR) block cipher.


            </td>
          </tr>
        </table>
      </param>
      <param name="pDecoderProfile">
        A pointer to a GUID that specifies the decoding profile. To get  profiles that the driver supports, call <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nf-d3d11-id3d11videodevice-getvideodecoderprofile">ID3D11VideoDevice::GetVideoDecoderProfile</a>. If decoding will not be used, set this parameter to <b>NULL</b>.
      </param>
      <param name="Index">
        The zero-based index of the key-exchange type. The driver reports the number of types in the <b>KeyExchangeTypeCount</b> member of the <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ns-d3d11-d3d11_video_content_protection_caps">D3D11_VIDEO_CONTENT_PROTECTION_CAPS</a> structure.
      </param>
      <param name="pKeyExchangeType">Receives a GUID that identifies the type of key exchange.</param>
    </summary>
  </member>
  <member name="ID3D11VideoContext1::DecoderEnableDownsampling">
    <summary>
      <para>Indicates that decoder downsampling will be used and that the driver should allocate the appropriate reference frames.</para>
      <para>
        Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d11_1/nf-d3d11_1-id3d11videocontext1-decoderenabledownsampling" />
      </para>
      <param name="pDecoder">
        A pointer to the <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nn-d3d11-id3d11videodecoder">ID3D11VideoDecoder</a> interface.
      </param>
      <param name="InputColorSpace">The color space information of the reference frame data.</param>
      <param name="pOutputDesc">The resolution, format, and colorspace of the output/display frames.  This is the destination resolution and format of the downsample operation.</param>
      <param name="ReferenceFrameCount">The number of reference frames to be used in the operation.</param>
    </summary>
  </member>
  <member name="ID3D11FunctionReflection::GetVariableByName">
    <summary>
      <para>Gets a variable by name.</para>
      <para>
        Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d11shader/nf-d3d11shader-id3d11functionreflection-getvariablebyname" />
      </para>
      <param name="Name">A pointer to a string containing the variable name.</param>
    </summary>
  </member>
  <member name="D3D11_SHADER_TRACE_DESC">
    <summary>
      <para>Describes a shader-trace object.</para>
      <para>
        Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d11shadertracing/ns-d3d11shadertracing-d3d11_shader_trace_desc" />
      </para>
    </summary>
  </member>
  <member name="D3D11_SHADER_TRACE_DESC::Type">
    <summary>
      A <a href="https://docs.microsoft.com/windows/desktop/api/d3d11shadertracing/ne-d3d11shadertracing-d3d11_shader_type">D3D11_SHADER_TYPE</a>-typed value that identifies the type of shader that the shader-trace object describes. This member also determines which shader-trace type to use in the following union.
    </summary>
  </member>
  <member name="D3D11_SHADER_TRACE_DESC::Flags">
    <summary>
      A combination of the following flags that are combined by using a bitwise <b>OR</b> operation. The resulting value specifies how <a href="https://docs.microsoft.com/windows/desktop/api/d3d11shadertracing/nf-d3d11shadertracing-id3d11shadertracefactory-createshadertrace">ID3D11ShaderTraceFactory::CreateShaderTrace</a> creates the shader-trace object.

      <table>
        <tr>
          <th>Flag</th>
          <th>Description</th>
        </tr>
        <tr>
          <td>D3D11_SHADER_TRACE_FLAG_RECORD_REGISTER_WRITES (0x1)</td>
          <td>The shader trace object records register-writes.</td>
        </tr>
        <tr>
          <td>D3D11_SHADER_TRACE_FLAG_RECORD_REGISTER_READS (0x2)</td>
          <td>The shader trace object records register-reads.</td>
        </tr>
      </table>
    </summary>
  </member>
  <member name="D3D11_SHADER_TRACE_DESC::VertexShaderTraceDesc">
    <summary>
      A <a href="https://docs.microsoft.com/windows/desktop/api/d3d11shadertracing/ns-d3d11shadertracing-d3d11_vertex_shader_trace_desc">D3D11_VERTEX_SHADER_TRACE_DESC</a> structure that describes an instance of a vertex shader to trace.
    </summary>
  </member>
  <member name="D3D11_SHADER_TRACE_DESC::HullShaderTraceDesc">
    <summary>
      A <a href="https://docs.microsoft.com/windows/desktop/api/d3d11shadertracing/ns-d3d11shadertracing-d3d11_hull_shader_trace_desc">D3D11_HULL_SHADER_TRACE_DESC</a> structure that describes an instance of a hull shader to trace.
    </summary>
  </member>
  <member name="D3D11_SHADER_TRACE_DESC::DomainShaderTraceDesc">
    <summary>
      A <a href="https://docs.microsoft.com/windows/desktop/api/d3d11shadertracing/ns-d3d11shadertracing-d3d11_domain_shader_trace_desc">D3D11_DOMAIN_SHADER_TRACE_DESC</a> structure that describes an instance of a domain shader to trace.
    </summary>
  </member>
  <member name="D3D11_SHADER_TRACE_DESC::GeometryShaderTraceDesc">
    <summary>
      A <a href="https://docs.microsoft.com/windows/desktop/api/d3d11shadertracing/ns-d3d11shadertracing-d3d11_geometry_shader_trace_desc">D3D11_GEOMETRY_SHADER_TRACE_DESC</a> structure that describes an instance of a geometry shader to trace.
    </summary>
  </member>
  <member name="D3D11_SHADER_TRACE_DESC::PixelShaderTraceDesc">
    <summary>
      A <a href="https://docs.microsoft.com/windows/desktop/api/d3d11shadertracing/ns-d3d11shadertracing-d3d11_pixel_shader_trace_desc">D3D11_PIXEL_SHADER_TRACE_DESC</a> structure that describes an instance of a pixel shader to trace.
    </summary>
  </member>
  <member name="D3D11_SHADER_TRACE_DESC::ComputeShaderTraceDesc">
    <summary>
      A <a href="https://docs.microsoft.com/windows/desktop/api/d3d11shadertracing/ns-d3d11shadertracing-d3d11_compute_shader_trace_desc">D3D11_COMPUTE_SHADER_TRACE_DESC</a> structure that describes an instance of a compute shader to trace.
    </summary>
  </member>
  <member name="ID3D11DeviceContext::GetContextFlags">
    <summary>
      <para>Gets the initialization flags associated with the current deferred context.</para>
      <para>
        Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d11/nf-d3d11-id3d11devicecontext-getcontextflags" />
      </para>
    </summary>
  </member>
  <member name="ID3D11ModuleInstance::BindResourceAsUnorderedAccessViewByName">
    <summary>
      <para>Rebinds a resource by name as an unordered access view (UAV) to destination slots.</para>
      <para>
        Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d11shader/nf-d3d11shader-id3d11moduleinstance-bindresourceasunorderedaccessviewbyname" />
      </para>
      <param name="pSrvName">The name of the resource for rebinding.</param>
      <param name="uDstUavSlot">The first destination slot number for rebinding.</param>
      <param name="uCount">The number of slots for rebinding.</param>
    </summary>
  </member>
  <member name="ID3D11AuthenticatedChannel">
    <summary>
      <para>Provides a communication channel with the graphics driver or the Microsoft Direct3D runtime.</para>
      <para>
        Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d11/nn-d3d11-id3d11authenticatedchannel" />
      </para>
    </summary>
  </member>
  <member name="D3D11_AUTHENTICATED_QUERY_UNRESTRICTED_PROTECTED_SHARED_RESOURCE_COUNT_OUTPUT">
    <summary>
      <para>Contains the response to a D3D11_AUTHENTICATED_QUERY_UNRESTRICTED_PROTECTED_SHARED_RESOURCE_COUNT query.</para>
      <para>
        Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d11/ns-d3d11-d3d11_authenticated_query_unrestricted_protected_shared_resource_count_output" />
      </para>
    </summary>
  </member>
  <member name="D3D11_AUTHENTICATED_QUERY_UNRESTRICTED_PROTECTED_SHARED_RESOURCE_COUNT_OUTPUT::Output">
    <summary>
      A <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ns-d3d11-d3d11_authenticated_query_output">D3D11_AUTHENTICATED_QUERY_OUTPUT</a> structure that contains a Message Authentication Code (MAC) and other data.
    </summary>
  </member>
  <member name="D3D11_AUTHENTICATED_QUERY_UNRESTRICTED_PROTECTED_SHARED_RESOURCE_COUNT_OUTPUT::UnrestrictedProtectedSharedResourceCount">
    <summary>The number of protected, shared resources that can be opened by any process without restrictions.</summary>
  </member>
  <member name="ID3D11Counter::GetDesc">
    <summary>
      <para>Get a counter description.</para>
      <para>
        Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d11/nf-d3d11-id3d11counter-getdesc" />
      </para>
      <param name="pDesc">
        Pointer to a counter description (see <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ns-d3d11-d3d11_counter_desc">D3D11_COUNTER_DESC</a>).
      </param>
    </summary>
  </member>
  <member name="ID3D11VideoContext::VideoProcessorGetStreamFrameFormat">
    <summary>
      <para>Gets the format of an input stream on the video processor.</para>
      <para>
        Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d11/nf-d3d11-id3d11videocontext-videoprocessorgetstreamframeformat" />
      </para>
      <param name="pVideoProcessor">
        A pointer to the <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nn-d3d11-id3d11videoprocessor">ID3D11VideoProcessor</a> interface. To get this pointer, call <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nf-d3d11-id3d11videodevice-createvideoprocessor">ID3D11VideoDevice::CreateVideoProcessor</a>.
      </param>
      <param name="StreamIndex">
        The zero-based index of the input stream. To get the maximum number of streams, call <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nf-d3d11-id3d11videoprocessorenumerator-getvideoprocessorcaps">ID3D11VideoProcessorEnumerator::GetVideoProcessorCaps</a> and check the <b>MaxStreamStates</b> structure member.
      </param>
      <param name="pFrameFormat">
        Receives a <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ne-d3d11-d3d11_video_frame_format">D3D11_VIDEO_FRAME_FORMAT</a> value that specifies whether the stream contains interlaced or progressive frames.
      </param>
    </summary>
  </member>
  <member name="ID3D11DeviceContext::PSGetSamplers">
    <summary>
      <para>Get an array of sampler states from the pixel shader pipeline stage.</para>
      <para>
        Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d11/nf-d3d11-id3d11devicecontext-psgetsamplers" />
      </para>
      <param name="StartSlot">Index into a zero-based array to begin getting samplers from (ranges from 0 to D3D11_COMMONSHADER_SAMPLER_SLOT_COUNT - 1).</param>
      <param name="NumSamplers">Number of samplers to get from a device context. Each pipeline stage has a total of 16 sampler slots available (ranges from 0 to D3D11_COMMONSHADER_SAMPLER_SLOT_COUNT - StartSlot).</param>
      <param name="ppSamplers">
        Arry of sampler-state interface pointers (see <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nn-d3d11-id3d11samplerstate">ID3D11SamplerState</a>) to be returned by the device.
      </param>
    </summary>
  </member>
  <member name="ID3D11Device::GetDeviceRemovedReason">
    <summary>
      <para>Get the reason why the device was removed.</para>
      <para>
        Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d11/nf-d3d11-id3d11device-getdeviceremovedreason" />
      </para>
    </summary>
  </member>
  <member name="D3D11_TEXTURE2D_DESC">
    <summary>
      <para>Describes a 2D texture.</para>
      <para>
        Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d11/ns-d3d11-d3d11_texture2d_desc" />
      </para>
    </summary>
  </member>
  <member name="D3D11_TEXTURE2D_DESC::Width">
    <summary>
      Texture width (in texels). The  range is from 1 to D3D11_REQ_TEXTURE2D_U_OR_V_DIMENSION (16384). For a texture cube-map, the  range is from 1 to D3D11_REQ_TEXTURECUBE_DIMENSION (16384). However, the range is actually constrained by the <a href="https://docs.microsoft.com/windows/desktop/direct3d11/overviews-direct3d-11-devices-downlevel-intro">feature level</a> at which you create the rendering device. For more information about restrictions, see Remarks.
    </summary>
  </member>
  <member name="D3D11_TEXTURE2D_DESC::Height">
    <summary>
      Texture height (in texels). The  range is from 1 to D3D11_REQ_TEXTURE2D_U_OR_V_DIMENSION (16384). For a texture cube-map, the  range is from 1 to D3D11_REQ_TEXTURECUBE_DIMENSION (16384). However, the range is actually constrained by the <a href="https://docs.microsoft.com/windows/desktop/direct3d11/overviews-direct3d-11-devices-downlevel-intro">feature level</a> at which you create the rendering device. For more information about restrictions, see Remarks.
    </summary>
  </member>
  <member name="D3D11_TEXTURE2D_DESC::MipLevels">
    <summary>
      The maximum number of mipmap levels in the texture. See the remarks in <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ns-d3d11-d3d11_tex1d_srv">D3D11_TEX1D_SRV</a>. Use 1 for a multisampled texture; or 0 to generate a full set of subtextures.
    </summary>
  </member>
  <member name="D3D11_TEXTURE2D_DESC::ArraySize">
    <summary>
      Number of textures in the texture array. The  range is from 1 to D3D11_REQ_TEXTURE2D_ARRAY_AXIS_DIMENSION (2048). For a texture cube-map, this value is a multiple of 6 (that is, 6 times the value in the <b>NumCubes</b> member of <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ns-d3d11-d3d11_texcube_array_srv">D3D11_TEXCUBE_ARRAY_SRV</a>), and the  range is from 6 to 2046. The range is actually constrained by the <a href="https://docs.microsoft.com/windows/desktop/direct3d11/overviews-direct3d-11-devices-downlevel-intro">feature level</a> at which you create the rendering device. For more information about restrictions, see Remarks.
    </summary>
  </member>
  <member name="D3D11_TEXTURE2D_DESC::Format">
    <summary>
      Texture format (see <a href="https://docs.microsoft.com/windows/desktop/api/dxgiformat/ne-dxgiformat-dxgi_format">DXGI_FORMAT</a>).
    </summary>
  </member>
  <member name="D3D11_TEXTURE2D_DESC::SampleDesc">
    <summary>
      Structure that specifies multisampling parameters for the texture. See <a href="https://docs.microsoft.com/windows/desktop/api/dxgicommon/ns-dxgicommon-dxgi_sample_desc">DXGI_SAMPLE_DESC</a>.
    </summary>
  </member>
  <member name="D3D11_TEXTURE2D_DESC::Usage">
    <summary>
      Value that identifies how the texture is to be read from and written to. The most common value is D3D11_USAGE_DEFAULT; see <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ne-d3d11-d3d11_usage">D3D11_USAGE</a> for all possible values.
    </summary>
  </member>
  <member name="D3D11_TEXTURE2D_DESC::BindFlags">
    <summary>
      Flags (see <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ne-d3d11-d3d11_bind_flag">D3D11_BIND_FLAG</a>) for binding to pipeline stages. The flags can be combined by a logical OR.
    </summary>
  </member>
  <member name="D3D11_TEXTURE2D_DESC::CPUAccessFlags">
    <summary>
      Flags (see <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ne-d3d11-d3d11_cpu_access_flag">D3D11_CPU_ACCESS_FLAG</a>) to specify the types of CPU access allowed. Use 0 if CPU access is not required. These flags can be combined with a logical OR.
    </summary>
  </member>
  <member name="D3D11_TEXTURE2D_DESC::MiscFlags">
    <summary>
      Flags (see <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ne-d3d11-d3d11_resource_misc_flag">D3D11_RESOURCE_MISC_FLAG</a>) that identify other, less common resource options. Use 0 if none of these flags apply. These flags can be combined by using a logical OR. For a texture cube-map, set the <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ne-d3d11-d3d11_resource_misc_flag">D3D11_RESOURCE_MISC_TEXTURECUBE</a> flag. Cube-map arrays (that is, <b>ArraySize</b> &gt; 6) require feature level <a href="https://docs.microsoft.com/windows/desktop/api/d3dcommon/ne-d3dcommon-d3d_feature_level">D3D_FEATURE_LEVEL_10_1</a> or higher.
    </summary>
  </member>
  <member name="ID3D11VideoDevice::GetContentProtectionCaps">
    <summary>
      <para>Queries the driver for its content protection capabilities.</para>
      <para>
        Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d11/nf-d3d11-id3d11videodevice-getcontentprotectioncaps" />
      </para>
      <param name="pCryptoType">
        A pointer to a GUID that specifies the type of encryption to be used. The following GUIDs are defined.

        <table>
          <tr>
            <th>Value</th>
            <th>Meaning</th>
          </tr>
          <tr>
            <td width="40%">
              <a id="D3D11_CRYPTO_TYPE_AES128_CTR"></a>
              <a id="d3d11_crypto_type_aes128_ctr"></a>
              <dl>
                <dt>
                  <b>D3D11_CRYPTO_TYPE_AES128_CTR</b>
                </dt>
              </dl>
            </td>
            <td width="60%">
              128-bit Advanced Encryption Standard CTR mode (AES-CTR) block cipher.


            </td>
          </tr>
        </table>
         

        If no encryption will be used, set this parameter to <b>NULL</b>.
      </param>
      <param name="pDecoderProfile">
        A pointer to a GUID that specifies the decoding profile. To get profiles that the driver supports, call <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nf-d3d11-id3d11videodevice-getvideodecoderprofile">ID3D11VideoDevice::GetVideoDecoderProfile</a>. If decoding will not be used, set this parameter to <b>NULL</b>.

        The driver might disallow some combinations of encryption type and profile.
      </param>
      <param name="pCaps">
        A pointer to a <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ns-d3d11-d3d11_video_content_protection_caps">D3D11_VIDEO_CONTENT_PROTECTION_CAPS</a> structure. The method fills in this structure with the driver's content protection capabilities.
      </param>
    </summary>
  </member>
  <member name="ID3D11InfoQueue::ClearStorageFilter">
    <summary>
      <para>Remove a storage filter from the top of the storage-filter stack.</para>
      <para>
        Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d11sdklayers/nf-d3d11sdklayers-id3d11infoqueue-clearstoragefilter" />
      </para>
    </summary>
  </member>
  <member name="ID3D11ModuleInstance::BindUnorderedAccessView">
    <summary>
      <para>Rebinds an unordered access view (UAV) from source slot to destination slot.</para>
      <para>
        Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d11shader/nf-d3d11shader-id3d11moduleinstance-bindunorderedaccessview" />
      </para>
      <param name="uSrcSlot">The first source slot number for rebinding.</param>
      <param name="uDstSlot">The first destination slot number for rebinding.</param>
      <param name="uCount">The number of slots for rebinding.</param>
    </summary>
  </member>
  <member name="ID3D11DeviceContext::HSSetSamplers">
    <summary>
      <para>Set an array of sampler states to the hull-shader stage.</para>
      <para>
        Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d11/nf-d3d11-id3d11devicecontext-hssetsamplers" />
      </para>
      <param name="StartSlot">Index into the zero-based array to begin setting samplers to (ranges from 0 to D3D11_COMMONSHADER_SAMPLER_SLOT_COUNT - 1).</param>
      <param name="NumSamplers">Number of samplers in the array. Each pipeline stage has a total of 16 sampler slots available (ranges from 0 to D3D11_COMMONSHADER_SAMPLER_SLOT_COUNT - StartSlot).</param>
      <param name="ppSamplers">
        Pointer to an array of sampler-state interfaces (see <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nn-d3d11-id3d11samplerstate">ID3D11SamplerState</a>). See Remarks.
      </param>
    </summary>
  </member>
  <member name="ID3D11Device1">
    <summary>
      <para>The device interface represents a virtual adapter; it is used to create resources. ID3D11Device1 adds new methods to those in ID3D11Device.</para>
      <para>
        Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d11_1/nn-d3d11_1-id3d11device1" />
      </para>
    </summary>
  </member>
  <member name="D3D11_TILE_RANGE_FLAG">
    <summary>
      <para>Specifies a range of tile mappings to use with ID3D11DeviceContext2::UpdateTiles.</para>
      <para>
        Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d11_2/ne-d3d11_2-d3d11_tile_range_flag" />
      </para>
    </summary>
  </member>
  <member name="D3D11_TILE_RANGE_FLAG::D3D11_TILE_RANGE_NULL">
    <summary>
      The tile range is <b>NULL</b>.
    </summary>
  </member>
  <member name="D3D11_TILE_RANGE_FLAG::D3D11_TILE_RANGE_SKIP">
    <summary>Skip the tile range.</summary>
  </member>
  <member name="D3D11_TILE_RANGE_FLAG::D3D11_TILE_RANGE_REUSE_SINGLE_TILE">
    <summary>Reuse a single tile in the tile range.</summary>
  </member>
  <member name="ID3D11Multithread">
    <summary>
      <para>Provides threading protection for critical sections of a multi-threaded application.</para>
      <para>
        Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d11_4/nn-d3d11_4-id3d11multithread" />
      </para>
    </summary>
  </member>
  <member name="ID3D11DeviceContext::Dispatch">
    <summary>
      <para>Execute a command list from a thread group.</para>
      <para>
        Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d11/nf-d3d11-id3d11devicecontext-dispatch" />
      </para>
      <param name="ThreadGroupCountX">
        The number of groups dispatched in the x direction. <i>ThreadGroupCountX</i> must be less than or equal to D3D11_CS_DISPATCH_MAX_THREAD_GROUPS_PER_DIMENSION (65535).
      </param>
      <param name="ThreadGroupCountY">
        The number of groups dispatched in the y direction. <i>ThreadGroupCountY</i> must be less than or equal to D3D11_CS_DISPATCH_MAX_THREAD_GROUPS_PER_DIMENSION (65535).
      </param>
      <param name="ThreadGroupCountZ">
        The number of groups dispatched in the z direction.  <i>ThreadGroupCountZ</i> must be less than or equal to D3D11_CS_DISPATCH_MAX_THREAD_GROUPS_PER_DIMENSION (65535).
        In feature level 10 the value for <i>ThreadGroupCountZ</i> must be 1.
      </param>
    </summary>
  </member>
  <member name="ID3D11DeviceContext2::IsAnnotationEnabled">
    <summary>
      <para>Allows apps to determine when either a capture or profiling request is enabled.</para>
      <para>
        Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d11_2/nf-d3d11_2-id3d11devicecontext2-isannotationenabled" />
      </para>
    </summary>
  </member>
  <member name="ID3D11On12Device">
    <summary>
      <para>Handles the creation, wrapping, and releasing of D3D11 resources for Direct3D11on12.</para>
      <para>
        Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d11on12/nn-d3d11on12-id3d11on12device" />
      </para>
    </summary>
  </member>
  <member name="ID3D11ShaderResourceView">
    <summary>
      <para>A shader-resource-view interface specifies the subresources a shader can access during rendering. Examples of shader resources include a constant buffer, a texture buffer, and a texture.</para>
      <para>
        Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d11/nn-d3d11-id3d11shaderresourceview" />
      </para>
    </summary>
  </member>
  <member name="D3D11_COMPARISON_FUNC">
    <summary>
      <para>Comparison options.</para>
      <para>
        Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d11/ne-d3d11-d3d11_comparison_func" />
      </para>
    </summary>
  </member>
  <member name="D3D11_COMPARISON_FUNC::D3D11_COMPARISON_NEVER">
    <summary>Never pass the comparison.</summary>
  </member>
  <member name="D3D11_COMPARISON_FUNC::D3D11_COMPARISON_LESS">
    <summary>If the source data is less than the destination data, the comparison passes.</summary>
  </member>
  <member name="D3D11_COMPARISON_FUNC::D3D11_COMPARISON_EQUAL">
    <summary>If the source data is equal to the destination data, the comparison passes.</summary>
  </member>
  <member name="D3D11_COMPARISON_FUNC::D3D11_COMPARISON_LESS_EQUAL">
    <summary>If the source data is less than or equal to the destination data, the comparison passes.</summary>
  </member>
  <member name="D3D11_COMPARISON_FUNC::D3D11_COMPARISON_GREATER">
    <summary>If the source data is greater than the destination data, the comparison passes.</summary>
  </member>
  <member name="D3D11_COMPARISON_FUNC::D3D11_COMPARISON_NOT_EQUAL">
    <summary>If the source data is not equal to the destination data, the comparison passes.</summary>
  </member>
  <member name="D3D11_COMPARISON_FUNC::D3D11_COMPARISON_GREATER_EQUAL">
    <summary>If the source data is greater than or equal to the destination data, the comparison passes.</summary>
  </member>
  <member name="D3D11_COMPARISON_FUNC::D3D11_COMPARISON_ALWAYS">
    <summary>Always pass the comparison.</summary>
  </member>
  <member name="ID3D11DeviceContext::DrawAuto">
    <summary>
      <para>Draw geometry of an unknown size.</para>
      <para>
        Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d11/nf-d3d11-id3d11devicecontext-drawauto" />
      </para>
    </summary>
  </member>
  <member name="ID3D11VideoContext::VideoProcessorGetOutputStereoMode">
    <summary>
      <para>Queries whether the video processor produces stereo video frames.</para>
      <para>
        Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d11/nf-d3d11-id3d11videocontext-videoprocessorgetoutputstereomode" />
      </para>
      <param name="pVideoProcessor">
        A pointer to the <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nn-d3d11-id3d11videoprocessor">ID3D11VideoProcessor</a> interface. To get this pointer, call <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nf-d3d11-id3d11videodevice-createvideoprocessor">ID3D11VideoDevice::CreateVideoProcessor</a>.
      </param>
      <param name="pEnabled">
        Receives the value <b>TRUE</b> if stereo output is enabled, or <b>FALSE</b> otherwise.
      </param>
    </summary>
  </member>
  <member name="ID3D11DeviceContext::VSGetSamplers">
    <summary>
      <para>Get an array of sampler states from the vertex shader pipeline stage.</para>
      <para>
        Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d11/nf-d3d11-id3d11devicecontext-vsgetsamplers" />
      </para>
      <param name="StartSlot">Index into a zero-based array to begin getting samplers from (ranges from 0 to D3D11_COMMONSHADER_SAMPLER_SLOT_COUNT - 1).</param>
      <param name="NumSamplers">Number of samplers to get from a device context. Each pipeline stage has a total of 16 sampler slots available (ranges from 0 to D3D11_COMMONSHADER_SAMPLER_SLOT_COUNT - StartSlot).</param>
      <param name="ppSamplers">
        Arry of sampler-state interface pointers (see <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nn-d3d11-id3d11samplerstate">ID3D11SamplerState</a>) to be returned by the device.
      </param>
    </summary>
  </member>
  <member name="ID3D11InfoQueue::PushCopyOfStorageFilter">
    <summary>
      <para>Push a copy of storage filter currently on the top of the storage-filter stack onto the storage-filter stack.</para>
      <para>
        Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d11sdklayers/nf-d3d11sdklayers-id3d11infoqueue-pushcopyofstoragefilter" />
      </para>
    </summary>
  </member>
  <member name="ID3D11Device::CheckCounterInfo">
    <summary>
      <para>Get a counter's information.</para>
      <para>
        Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d11/nf-d3d11-id3d11device-checkcounterinfo" />
      </para>
      <param name="pCounterInfo">
        Pointer to counter information (see <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ns-d3d11-d3d11_counter_info">D3D11_COUNTER_INFO</a>).
      </param>
    </summary>
  </member>
  <member name="ID3D11SwitchToRef::GetUseRef">
    <summary>
      <para>ID3D11SwitchToRef::GetUseRef method</para>
      <para>
        Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d11sdklayers/nf-d3d11sdklayers-id3d11switchtoref-getuseref" />
      </para>
    </summary>
  </member>
  <member name="ID3D11DeviceContext::GSSetConstantBuffers">
    <summary>
      <para>Sets the constant buffers used by the geometry shader pipeline stage.</para>
      <para>
        Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d11/nf-d3d11-id3d11devicecontext-gssetconstantbuffers" />
      </para>
      <param name="StartSlot">
        Index into the device's zero-based array to begin setting constant buffers to (ranges from 0 to <b>D3D11_COMMONSHADER_CONSTANT_BUFFER_API_SLOT_COUNT</b> - 1).
      </param>
      <param name="NumBuffers">
        Number of buffers to set (ranges from 0 to <b>D3D11_COMMONSHADER_CONSTANT_BUFFER_API_SLOT_COUNT</b> - <i>StartSlot</i>).
      </param>
      <param name="ppConstantBuffers">
        Array of constant buffers (see <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nn-d3d11-id3d11buffer">ID3D11Buffer</a>) being given to the device.
      </param>
    </summary>
  </member>
  <member name="D3D11_CONSERVATIVE_RASTERIZATION_TIER">
    <summary>
      <para>Specifies if the hardware and driver support conservative rasterization and at what tier level.</para>
      <para>
        Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d11/ne-d3d11-d3d11_conservative_rasterization_tier" />
      </para>
    </summary>
  </member>
  <member name="D3D11_CONSERVATIVE_RASTERIZATION_TIER::D3D11_CONSERVATIVE_RASTERIZATION_NOT_SUPPORTED">
    <summary>Conservative rasterization isn't supported.</summary>
  </member>
  <member name="D3D11_CONSERVATIVE_RASTERIZATION_TIER::D3D11_CONSERVATIVE_RASTERIZATION_TIER_1">
    <summary>Tier_1 conservative rasterization is supported.</summary>
  </member>
  <member name="D3D11_CONSERVATIVE_RASTERIZATION_TIER::D3D11_CONSERVATIVE_RASTERIZATION_TIER_2">
    <summary>Tier_2 conservative rasterization is supported.</summary>
  </member>
  <member name="D3D11_CONSERVATIVE_RASTERIZATION_TIER::D3D11_CONSERVATIVE_RASTERIZATION_TIER_3">
    <summary>Tier_3 conservative rasterization is supported.</summary>
  </member>
  <member name="ID3D11Query">
    <summary>
      <para>A query interface queries information from the GPU.</para>
      <para>
        Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d11/nn-d3d11-id3d11query" />
      </para>
    </summary>
  </member>
  <member name="ID3D11ClassLinkage::GetClassInstance">
    <summary>
      <para>Gets the class-instance object that represents the specified HLSL class.</para>
      <para>
        Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d11/nf-d3d11-id3d11classlinkage-getclassinstance" />
      </para>
      <param name="pClassInstanceName">The name of a class for which to get the class instance.</param>
      <param name="InstanceIndex">The index of the class instance.</param>
      <param name="ppInstance">
        The address of a pointer to an <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nn-d3d11-id3d11classinstance">ID3D11ClassInstance</a> interface to initialize.
      </param>
    </summary>
  </member>
  <member name="D3D11_FEATURE_DATA_FORMAT_SUPPORT">
    <summary>
      <para>Describes which resources are supported by the current graphics driver for a given format.</para>
      <para>
        Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d11/ns-d3d11-d3d11_feature_data_format_support" />
      </para>
    </summary>
  </member>
  <member name="D3D11_FEATURE_DATA_FORMAT_SUPPORT::InFormat">
    <summary>
      <a href="https://docs.microsoft.com/windows/desktop/api/dxgiformat/ne-dxgiformat-dxgi_format">DXGI_FORMAT</a> to return information on.
    </summary>
  </member>
  <member name="D3D11_FEATURE_DATA_FORMAT_SUPPORT::OutFormatSupport">
    <summary>
      Combination of <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ne-d3d11-d3d11_format_support">D3D11_FORMAT_SUPPORT</a> flags indicating which resources are supported.
    </summary>
  </member>
  <member name="D3D11_FEATURE_DATA_D3D9_OPTIONS">
    <summary>
      <para>Describes Direct3D 9 feature options in the current graphics driver.</para>
      <para>
        Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d11/ns-d3d11-d3d11_feature_data_d3d9_options" />
      </para>
    </summary>
  </member>
  <member name="D3D11_FEATURE_DATA_D3D9_OPTIONS::FullNonPow2TextureSupport">
    <summary>
      Specifies whether the driver supports the nonpowers-of-2-unconditionally feature. For more information about this feature, see <a href="https://docs.microsoft.com/windows/desktop/direct3d11/overviews-direct3d-11-devices-downlevel-intro">feature level</a>. The runtime sets this member to <b>TRUE</b> for hardware at Direct3D 10 and higher feature levels.  For hardware at Direct3D 9.3 and lower feature levels, the runtime sets this member to <b>FALSE</b> if the hardware and driver support the powers-of-2 (2D textures must have widths and heights specified as powers of two) feature or the nonpowers-of-2-conditionally feature. For more information about this feature, see feature level.
    </summary>
  </member>
  <member name="D3D11_COUNTER">
    <summary>
      <para>Options for performance counters.</para>
      <para>
        Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d11/ne-d3d11-d3d11_counter" />
      </para>
    </summary>
  </member>
  <member name="D3D11_COUNTER::D3D11_COUNTER_DEVICE_DEPENDENT_0">
    <summary>Define a performance counter that is dependent on the hardware device.</summary>
  </member>
  <member name="ID3D11DeviceContext1::HSGetConstantBuffers1">
    <summary>
      <para>Gets the constant buffers that the hull-shader stage uses.</para>
      <para>
        Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d11_1/nf-d3d11_1-id3d11devicecontext1-hsgetconstantbuffers1" />
      </para>
      <param name="StartSlot">Index into the device's zero-based array to begin retrieving constant buffers from (ranges from 0 to D3D11_COMMONSHADER_CONSTANT_BUFFER_API_SLOT_COUNT - 1).</param>
      <param name="NumBuffers">
        Number of buffers to retrieve (ranges from 0 to D3D11_COMMONSHADER_CONSTANT_BUFFER_API_SLOT_COUNT - <i>StartSlot</i>).
      </param>
      <param name="ppConstantBuffers">Array of constant buffer interface pointers to be returned by the method.</param>
      <param name="pFirstConstant">
        A pointer to an array that receives the offsets into the buffers that  <i>ppConstantBuffers</i> specifies. Each offset specifies where, from the shader's point of view, each constant buffer starts.  Each offset is measured in shader constants, which are 16 bytes (4*32-bit components).  Therefore, an offset of 2 indicates that the start of the associated constant buffer is 32 bytes into the constant buffer. The runtime sets <i>pFirstConstant</i> to <b>NULL</b> if the buffers do not have offsets.
      </param>
      <param name="pNumConstants">
        A pointer to an array that receives the numbers of constants in the buffers that  <i>ppConstantBuffers</i> specifies. Each number specifies the number of constants that are contained in the constant buffer that the shader uses. Each number of constants starts from its respective offset that is specified in the <i>pFirstConstant</i> array. The runtime sets <i>pNumConstants</i> to <b>NULL</b> if it doesn't specify the numbers of constants in each buffer.
      </param>
    </summary>
  </member>
  <member name="D3D11_VIDEO_PROCESSOR_FORMAT_SUPPORT">
    <summary>
      <para>Specifies how a video format can be used for video processing.</para>
      <para>
        Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d11/ne-d3d11-d3d11_video_processor_format_support" />
      </para>
    </summary>
  </member>
  <member name="D3D11_VIDEO_PROCESSOR_FORMAT_SUPPORT::D3D11_VIDEO_PROCESSOR_FORMAT_SUPPORT_INPUT">
    <summary>The format can be used as the input to the video processor.</summary>
  </member>
  <member name="D3D11_VIDEO_PROCESSOR_FORMAT_SUPPORT::D3D11_VIDEO_PROCESSOR_FORMAT_SUPPORT_OUTPUT">
    <summary>The format can be used as the output from the video processor.</summary>
  </member>
  <member name="ID3D11ModuleInstance::BindSamplerByName">
    <summary>
      <para>Rebinds a sampler by name to destination slots.</para>
      <para>
        Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d11shader/nf-d3d11shader-id3d11moduleinstance-bindsamplerbyname" />
      </para>
      <param name="pName">The name of the sampler for rebinding.</param>
      <param name="uDstSlot">The first destination slot number for rebinding.</param>
      <param name="uCount">The number of slots for rebinding.</param>
    </summary>
  </member>
  <member name="ID3D11DeviceContext::CSGetUnorderedAccessViews">
    <summary>
      <para>Gets an array of views for an unordered resource.</para>
      <para>
        Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d11/nf-d3d11-id3d11devicecontext-csgetunorderedaccessviews" />
      </para>
      <param name="StartSlot">Index of the first element in the zero-based array to return (ranges from 0 to D3D11_1_UAV_SLOT_COUNT - 1).</param>
      <param name="NumUAVs">Number of views to get (ranges from 0 to D3D11_1_UAV_SLOT_COUNT - StartSlot).</param>
      <param name="ppUnorderedAccessViews">
        A pointer to an array of interface pointers (see <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nn-d3d11-id3d11unorderedaccessview">ID3D11UnorderedAccessView</a>) to get.
      </param>
    </summary>
  </member>
  <member name="ID3D11VideoContext1::VideoProcessorGetOutputShaderUsage">
    <summary>
      <para>Gets a value indicating whether the output surface from a call to ID3D11VideoContext::VideoProcessorBlt can be read by Direct3D shaders.</para>
      <para>
        Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d11_1/nf-d3d11_1-id3d11videocontext1-videoprocessorgetoutputshaderusage" />
      </para>
      <param name="pVideoProcessor">
        A pointer to the <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nn-d3d11-id3d11videoprocessor">ID3D11VideoProcessor</a> interface.
      </param>
      <param name="pShaderUsage">
        A pointer to a boolean value indicating if the output surface can be read by Direct3D shaders. True if the surface rendered using <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nf-d3d11-id3d11videocontext-videoprocessorblt">ID3D11VideoContext::VideoProcessorBlt</a> can be read by Direct3D shaders; otherwise, false.
      </param>
    </summary>
  </member>
  <member name="D3D11_DSV_DIMENSION">
    <summary>
      <para>Specifies how to access a resource used in a depth-stencil view.</para>
      <para>
        Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d11/ne-d3d11-d3d11_dsv_dimension" />
      </para>
    </summary>
  </member>
  <member name="D3D11_DSV_DIMENSION::D3D11_DSV_DIMENSION_UNKNOWN">
    <summary>
      <i>D3D11_DSV_DIMENSION_UNKNOWN</i> is not a valid value for <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ns-d3d11-d3d11_depth_stencil_view_desc">D3D11_DEPTH_STENCIL_VIEW_DESC</a> and is not used.
    </summary>
  </member>
  <member name="D3D11_DSV_DIMENSION::D3D11_DSV_DIMENSION_TEXTURE1D">
    <summary>The resource will be accessed as a 1D texture.</summary>
  </member>
  <member name="D3D11_DSV_DIMENSION::D3D11_DSV_DIMENSION_TEXTURE1DARRAY">
    <summary>The resource will be accessed as an array of 1D textures.</summary>
  </member>
  <member name="D3D11_DSV_DIMENSION::D3D11_DSV_DIMENSION_TEXTURE2D">
    <summary>The resource will be accessed as a 2D texture.</summary>
  </member>
  <member name="D3D11_DSV_DIMENSION::D3D11_DSV_DIMENSION_TEXTURE2DARRAY">
    <summary>The resource will be accessed as an array of 2D textures.</summary>
  </member>
  <member name="D3D11_DSV_DIMENSION::D3D11_DSV_DIMENSION_TEXTURE2DMS">
    <summary>The resource will be accessed as a 2D texture with multisampling.</summary>
  </member>
  <member name="D3D11_DSV_DIMENSION::D3D11_DSV_DIMENSION_TEXTURE2DMSARRAY">
    <summary>The resource will be accessed as an array of 2D textures with multisampling.</summary>
  </member>
  <member name="ID3D11LibraryReflection::GetDesc">
    <summary>
      <para>Fills the library descriptor structure for the library reflection.</para>
      <para>
        Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d11shader/nf-d3d11shader-id3d11libraryreflection-getdesc" />
      </para>
      <param name="pDesc">
        A pointer to a <a href="https://docs.microsoft.com/windows/desktop/api/d3d11shader/ns-d3d11shader-d3d11_library_desc">D3D11_LIBRARY_DESC</a> structure that receives a description of the library reflection.
      </param>
    </summary>
  </member>
  <member name="D3D11_VIDEO_PROCESSOR_AUTO_STREAM_CAPS">
    <summary>
      <para>Specifies the automatic image processing capabilities of the video processor.</para>
      <para>
        Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d11/ne-d3d11-d3d11_video_processor_auto_stream_caps" />
      </para>
    </summary>
  </member>
  <member name="D3D11_VIDEO_PROCESSOR_AUTO_STREAM_CAPS::D3D11_VIDEO_PROCESSOR_AUTO_STREAM_CAPS_DENOISE">
    <summary>Denoise.</summary>
  </member>
  <member name="D3D11_VIDEO_PROCESSOR_AUTO_STREAM_CAPS::D3D11_VIDEO_PROCESSOR_AUTO_STREAM_CAPS_DERINGING">
    <summary>Deringing.</summary>
  </member>
  <member name="D3D11_VIDEO_PROCESSOR_AUTO_STREAM_CAPS::D3D11_VIDEO_PROCESSOR_AUTO_STREAM_CAPS_EDGE_ENHANCEMENT">
    <summary>Edge enhancement.</summary>
  </member>
  <member name="D3D11_VIDEO_PROCESSOR_AUTO_STREAM_CAPS::D3D11_VIDEO_PROCESSOR_AUTO_STREAM_CAPS_COLOR_CORRECTION">
    <summary>Color correction.</summary>
  </member>
  <member name="D3D11_VIDEO_PROCESSOR_AUTO_STREAM_CAPS::D3D11_VIDEO_PROCESSOR_AUTO_STREAM_CAPS_FLESH_TONE_MAPPING">
    <summary>Flesh-tone mapping.</summary>
  </member>
  <member name="D3D11_VIDEO_PROCESSOR_AUTO_STREAM_CAPS::D3D11_VIDEO_PROCESSOR_AUTO_STREAM_CAPS_IMAGE_STABILIZATION">
    <summary>Image stabilization.</summary>
  </member>
  <member name="D3D11_VIDEO_PROCESSOR_AUTO_STREAM_CAPS::D3D11_VIDEO_PROCESSOR_AUTO_STREAM_CAPS_SUPER_RESOLUTION">
    <summary>Enhanced image resolution.</summary>
  </member>
  <member name="D3D11_VIDEO_PROCESSOR_AUTO_STREAM_CAPS::D3D11_VIDEO_PROCESSOR_AUTO_STREAM_CAPS_ANAMORPHIC_SCALING">
    <summary>Anamorphic scaling.</summary>
  </member>
  <member name="ID3D11VideoContext2::VideoProcessorSetStreamHDRMetaData">
    <summary>
      <para>Sets the HDR metadata associated with the video stream.</para>
      <para>
        Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d11_4/nf-d3d11_4-id3d11videocontext2-videoprocessorsetstreamhdrmetadata" />
      </para>
      <param name="pVideoProcessor">
        A pointer to the <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nn-d3d11-id3d11videoprocessor">ID3D11VideoProcessor</a> interface.
      </param>
      <param name="StreamIndex">Identifies the input stream.</param>
      <param name="Type">The type of HDR metadata supplied.</param>
      <param name="Size">
        The size of the HDR metadata supplied in <i>pHDRMetaData</i>.

        For <b>DXGI_HDR_METADATA_TYPE_NONE</b>, the size should be 0.

        For <b>DXGI_HDR_METADATA_TYPE_HDR10</b>, the size is <c>sizeof(DXGI_HDR_METADATA_HDR10)</c>.
      </param>
      <param name="pHDRMetaData">
        Pointer to the metadata information.

        For <b>DXGI_HDR_METADATA_TYPE_NONE</b>, this should be NULL.

        For <b>DXGI_HDR_METADATA_TYPE_HDR10</b>, this is a pointer to a <a href="https://docs.microsoft.com/windows/desktop/api/dxgi1_5/ns-dxgi1_5-dxgi_hdr_metadata_hdr10">DXGI_HDR_METADATA_HDR10</a> structure.
      </param>
    </summary>
  </member>
  <member name="D3D11_RENDER_TARGET_VIEW_DESC1">
    <summary>
      <para>Describes the subresources from a resource that are accessible using a render-target view.</para>
      <para>
        Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d11_3/ns-d3d11_3-d3d11_render_target_view_desc1" />
      </para>
    </summary>
  </member>
  <member name="D3D11_RENDER_TARGET_VIEW_DESC1::Format">
    <summary>
      A <a href="https://docs.microsoft.com/windows/desktop/api/dxgiformat/ne-dxgiformat-dxgi_format">DXGI_FORMAT</a>-typed value that specifies the data format.
    </summary>
  </member>
  <member name="D3D11_RENDER_TARGET_VIEW_DESC1::ViewDimension">
    <summary>
      A <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ne-d3d11-d3d11_rtv_dimension">D3D11_RTV_DIMENSION</a>-typed value that specifies the resource type and how the render-target resource will be accessed.
    </summary>
  </member>
  <member name="D3D11_RENDER_TARGET_VIEW_DESC1::Buffer">
    <summary>
      A <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ns-d3d11-d3d11_buffer_rtv">D3D11_BUFFER_RTV</a> structure that specifies which buffer elements can be accessed.
    </summary>
  </member>
  <member name="D3D11_RENDER_TARGET_VIEW_DESC1::Texture1D">
    <summary>
      A <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ns-d3d11-d3d11_tex1d_rtv">D3D11_TEX1D_RTV</a> structure that specifies the subresources in a 1D texture that can be accessed.
    </summary>
  </member>
  <member name="D3D11_RENDER_TARGET_VIEW_DESC1::Texture1DArray">
    <summary>
      A <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ns-d3d11-d3d11_tex1d_array_rtv">D3D11_TEX1D_ARRAY_RTV</a> structure that specifies the subresources in a 1D texture array that can be accessed.
    </summary>
  </member>
  <member name="D3D11_RENDER_TARGET_VIEW_DESC1::Texture2D">
    <summary>
      A <a href="https://docs.microsoft.com/windows/desktop/api/d3d11_3/ns-d3d11_3-d3d11_tex2d_rtv1">D3D11_TEX2D_RTV1</a> structure that specifies the subresources in a 2D texture that can be accessed.
    </summary>
  </member>
  <member name="D3D11_RENDER_TARGET_VIEW_DESC1::Texture2DArray">
    <summary>
      A <a href="https://docs.microsoft.com/windows/desktop/api/d3d11_3/ns-d3d11_3-d3d11_tex2d_array_rtv1">D3D11_TEX2D_ARRAY_RTV1</a> structure that specifies the subresources in a 2D texture array that can be accessed.
    </summary>
  </member>
  <member name="D3D11_RENDER_TARGET_VIEW_DESC1::Texture2DMS">
    <summary>
      A <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ns-d3d11-d3d11_tex2dms_rtv">D3D11_TEX2DMS_RTV</a> structure that specifies a single subresource because a multisampled 2D texture only contains one subresource.
    </summary>
  </member>
  <member name="D3D11_RENDER_TARGET_VIEW_DESC1::Texture2DMSArray">
    <summary>
      A <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ns-d3d11-d3d11_tex2dms_array_rtv">D3D11_TEX2DMS_ARRAY_RTV</a> structure that specifies the subresources in a multisampled 2D texture array that can be accessed.
    </summary>
  </member>
  <member name="D3D11_RENDER_TARGET_VIEW_DESC1::Texture3D">
    <summary>
      A <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ns-d3d11-d3d11_tex3d_rtv">D3D11_TEX3D_RTV</a> structure that specifies subresources in a 3D texture that can be accessed.
    </summary>
  </member>
  <member name="ID3D11Device5">
    <summary>
      <para>The device interface represents a virtual adapter; it is used to create resources. ID3D11Device5 adds new methods to those in ID3D11Device4.</para>
      <para>
        Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d11_4/nn-d3d11_4-id3d11device5" />
      </para>
    </summary>
  </member>
  <member name="ID3D11InfoQueue::GetNumStoredMessages">
    <summary>
      <para>Get the number of messages currently stored in the message queue.</para>
      <para>
        Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d11sdklayers/nf-d3d11sdklayers-id3d11infoqueue-getnumstoredmessages" />
      </para>
    </summary>
  </member>
  <member name="ID3D11SwitchToRef::SetUseRef">
    <summary>
      <para>ID3D11SwitchToRef::SetUseRef method</para>
      <para>
        Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d11sdklayers/nf-d3d11sdklayers-id3d11switchtoref-setuseref" />
      </para>
      <param name="UseRef">Reserved.</param>
    </summary>
  </member>
  <member name="ID3D11Device::CreateHullShader">
    <summary>
      <para>Create a hull shader.</para>
      <para>
        Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d11/nf-d3d11-id3d11device-createhullshader" />
      </para>
      <param name="pShaderBytecode">A pointer to a compiled shader.</param>
      <param name="BytecodeLength">Size of the compiled shader.</param>
      <param name="pClassLinkage">
        A pointer to a class linkage interface (see <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nn-d3d11-id3d11classlinkage">ID3D11ClassLinkage</a>); the value can be <b>NULL</b>.
      </param>
      <param name="ppHullShader">
        Address of a pointer to a <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nn-d3d11-id3d11hullshader">ID3D11HullShader</a> interface.
      </param>
    </summary>
  </member>
  <member name="D3D11_DSV_FLAG">
    <summary>
      <para>Depth-stencil view options.</para>
      <para>
        Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d11/ne-d3d11-d3d11_dsv_flag" />
      </para>
    </summary>
  </member>
  <member name="D3D11_DSV_FLAG::D3D11_DSV_READ_ONLY_DEPTH">
    <summary>Indicates that depth values are read only.</summary>
  </member>
  <member name="D3D11_DSV_FLAG::D3D11_DSV_READ_ONLY_STENCIL">
    <summary>Indicates that stencil values are read only.</summary>
  </member>
  <member name="ID3D11VideoDevice::CreateVideoProcessorOutputView">
    <summary>
      <para>Creates a resource view for a video processor, describing the output sample for the video processing operation.</para>
      <para>
        Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d11/nf-d3d11-id3d11videodevice-createvideoprocessoroutputview" />
      </para>
      <param name="pResource">
        A pointer to the <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nn-d3d11-id3d11resource">ID3D11Resource</a> interface of the output surface. The resource must be created with the <b>D3D11_BIND_RENDER_TARGET</b> flag. See <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ne-d3d11-d3d11_bind_flag">D3D11_BIND_FLAG</a>.
      </param>
      <param name="pEnum">
        A pointer to the <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nn-d3d11-id3d11videoprocessorenumerator">ID3D11VideoProcessorEnumerator</a> interface that specifies the video processor. To get this pointer, call <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nf-d3d11-id3d11videodevice-createvideoprocessorenumerator">ID3D11VideoDevice::CreateVideoProcessorEnumerator</a>.
      </param>
      <param name="pDesc">
        A pointer to a <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ns-d3d11-d3d11_video_processor_output_view_desc">D3D11_VIDEO_PROCESSOR_OUTPUT_VIEW_DESC</a> structure that describes the view.
      </param>
      <param name="ppVPOView">
        Receives a pointer to the <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nn-d3d11-id3d11videoprocessoroutputview">ID3D11VideoProcessorOutputView</a> interface. The caller must release the resource. If this parameter is <b>NULL</b>, the method checks whether the view is supported, but does not create the view.
      </param>
    </summary>
  </member>
  <member name="ID3D11VideoContext3">
    <summary>
      <para>Provides the video functionality of a Microsoft Direct3D 11 device.</para>
      <para>
        Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d11_4/nn-d3d11_4-id3d11videocontext3" />
      </para>
    </summary>
  </member>
  <member name="ID3D11InfoQueue::GetNumMessagesAllowedByStorageFilter">
    <summary>
      <para>Get the number of messages that were allowed to pass through a storage filter.</para>
      <para>
        Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d11sdklayers/nf-d3d11sdklayers-id3d11infoqueue-getnummessagesallowedbystoragefilter" />
      </para>
    </summary>
  </member>
  <member name="D3D11_MAP">
    <summary>
      <para>Identifies a resource to be accessed for reading and writing by the CPU. Applications may combine one or more of these flags.</para>
      <para>
        Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d11/ne-d3d11-d3d11_map" />
      </para>
    </summary>
  </member>
  <member name="D3D11_MAP::D3D11_MAP_READ">
    <summary>
      Resource is mapped for reading. The resource must have been created with read access
      (see <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ne-d3d11-d3d11_cpu_access_flag">D3D11_CPU_ACCESS_READ</a>).
    </summary>
  </member>
  <member name="D3D11_MAP::D3D11_MAP_WRITE">
    <summary>
      Resource is mapped for writing. The resource must have been created with write
      access (see <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ne-d3d11-d3d11_cpu_access_flag">D3D11_CPU_ACCESS_WRITE</a>).
    </summary>
  </member>
  <member name="D3D11_MAP::D3D11_MAP_READ_WRITE">
    <summary>
      Resource is mapped for reading and writing. The resource must have been created with read and write
      access (see <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ne-d3d11-d3d11_cpu_access_flag">D3D11_CPU_ACCESS_READ and D3D11_CPU_ACCESS_WRITE</a>).
    </summary>
  </member>
  <member name="D3D11_MAP::D3D11_MAP_WRITE_DISCARD">
    <summary>
      Resource is mapped for writing; the previous contents of the resource will be undefined. The resource must have been created with write access
      and dynamic usage (See <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ne-d3d11-d3d11_cpu_access_flag">D3D11_CPU_ACCESS_WRITE</a> and <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ne-d3d11-d3d11_usage">D3D11_USAGE_DYNAMIC</a>).
    </summary>
  </member>
  <member name="D3D11_MAP::D3D11_MAP_WRITE_NO_OVERWRITE">
    <summary>
      Resource is mapped for writing; the existing contents of the resource cannot be overwritten (see Remarks). This flag is only valid on vertex and
      index buffers. The resource must have been created with write access (see <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ne-d3d11-d3d11_cpu_access_flag">D3D11_CPU_ACCESS_WRITE</a>).
      Cannot be used on a resource created with the <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ne-d3d11-d3d11_bind_flag">D3D11_BIND_CONSTANT_BUFFER</a> flag.

      <div class="alert">
        <b>Note</b>  The Direct3D 11.1 runtime, which is available starting with Windows 8, enables  mapping dynamic constant buffers and shader resource views (SRVs) of dynamic buffers with <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ne-d3d11-d3d11_map">D3D11_MAP_WRITE_NO_OVERWRITE</a>.  The Direct3D 11 and earlier runtimes limited mapping to vertex or index buffers. To determine if a Direct3D device supports these features, call <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nf-d3d11-id3d11device-checkfeaturesupport">ID3D11Device::CheckFeatureSupport</a> with <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ne-d3d11-d3d11_feature">D3D11_FEATURE_D3D11_OPTIONS</a>. <b>CheckFeatureSupport</b> fills members of a <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ns-d3d11-d3d11_feature_data_d3d11_options">D3D11_FEATURE_DATA_D3D11_OPTIONS</a> structure with the device's features. The relevant members here are <b>MapNoOverwriteOnDynamicConstantBuffer</b> and <b>MapNoOverwriteOnDynamicBufferSRV</b>.
      </div>
      <div> </div>
    </summary>
  </member>
  <member name="D3D11_TEX2D_UAV">
    <summary>
      <para>Describes a unordered-access 2D texture resource.</para>
      <para>
        Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d11/ns-d3d11-d3d11_tex2d_uav" />
      </para>
    </summary>
  </member>
  <member name="D3D11_TEX2D_UAV::MipSlice">
    <summary>The mipmap slice index.</summary>
  </member>
  <member name="D3D11_TEX2D_ARRAY_UAV1">
    <summary>
      <para>Describes an array of unordered-access 2D texture resources.</para>
      <para>
        Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d11_3/ns-d3d11_3-d3d11_tex2d_array_uav1" />
      </para>
    </summary>
  </member>
  <member name="D3D11_TEX2D_ARRAY_UAV1::MipSlice">
    <summary>The mipmap slice index.</summary>
  </member>
  <member name="D3D11_TEX2D_ARRAY_UAV1::FirstArraySlice">
    <summary>The zero-based index of the first array slice to be accessed.</summary>
  </member>
  <member name="D3D11_TEX2D_ARRAY_UAV1::ArraySize">
    <summary>The number of slices in the array.</summary>
  </member>
  <member name="D3D11_TEX2D_ARRAY_UAV1::PlaneSlice">
    <summary>The index (plane slice number) of the plane to use in an array of textures.</summary>
  </member>
  <member name="ID3D11Device3::CreateTexture2D1">
    <summary>
      <para>Creates a 2D texture.</para>
      <para>
        Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d11_3/nf-d3d11_3-id3d11device3-createtexture2d1" />
      </para>
      <param name="pDesc1">
        A pointer to a <a href="https://docs.microsoft.com/windows/desktop/api/d3d11_3/ns-d3d11_3-cd3d11_texture2d_desc1">D3D11_TEXTURE2D_DESC1</a> structure that describes a 2D texture resource. To create a typeless resource that can be interpreted at runtime into different, compatible formats, specify a typeless format in the texture description. To generate mipmap levels automatically, set the number of mipmap levels to 0.
      </param>
      <param name="pInitialData">
        A pointer to an array of <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ns-d3d11-d3d11_subresource_data">D3D11_SUBRESOURCE_DATA</a> structures that describe subresources for the 2D texture resource. Applications can't specify <b>NULL</b> for <i>pInitialData</i> when creating IMMUTABLE resources (see <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ne-d3d11-d3d11_usage">D3D11_USAGE</a>). If the resource is multisampled, <i>pInitialData</i> must be <b>NULL</b> because multisampled resources can't be initialized with data when they're created.

        If you don't pass anything to <i>pInitialData</i>, the initial content of the memory for the resource is undefined. In this case, you need to write the resource content some other way before the resource is read.

        You can determine the size of this array from values in the <b>MipLevels</b> and <b>ArraySize</b> members of the <b>D3D11_TEXTURE2D_DESC1</b> structure to which <i>pDesc1</i> points by using the following calculation:

        MipLevels * ArraySize

        For more info about this array size, see Remarks.
      </param>
      <param name="ppTexture2D">
        A pointer to a memory block that receives a pointer to a <a href="https://docs.microsoft.com/windows/desktop/api/d3d11_3/nn-d3d11_3-id3d11texture2d1">ID3D11Texture2D1</a> interface for the created texture. Set this parameter to <b>NULL</b> to validate the other input parameters (the method will return <b>S_FALSE</b> if the other input parameters pass validation).
      </param>
    </summary>
  </member>
  <member name="ID3D11DeviceContext1::DiscardView1">
    <summary>
      <para>Discards the specified elements in a resource view from the device context.</para>
      <para>
        Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d11_1/nf-d3d11_1-id3d11devicecontext1-discardview1" />
      </para>
      <param name="pResourceView">
        A pointer to the <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nn-d3d11-id3d11view">ID3D11View</a> interface for the resource view to discard. The resource that underlies the view must have been created with usage <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ne-d3d11-d3d11_usage">D3D11_USAGE_DEFAULT</a> or <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ne-d3d11-d3d11_usage">D3D11_USAGE_DYNAMIC</a>, otherwise the runtime drops the call to <b>DiscardView1</b>; if the debug layer is enabled, the runtime returns an error message.
      </param>
      <param name="pRects">
        An array of <a href="https://docs.microsoft.com/windows/desktop/direct3d11/d3d11-rect">D3D11_RECT</a> structures for the rectangles in the resource view to discard. If <b>NULL</b>, <b>DiscardView1</b> discards the entire view and behaves the same as <a href="https://docs.microsoft.com/windows/desktop/api/d3d11_1/nf-d3d11_1-id3d11devicecontext1-discardview">DiscardView</a>.
      </param>
      <param name="NumRects">
        Number of rectangles in the array that the  <i>pRects</i> parameter specifies.
      </param>
    </summary>
  </member>
  <member name="ID3D11ShaderReflectionVariable">
    <summary>
      <para>This shader-reflection interface provides access to a variable.</para>
      <para>
        Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d11shader/nn-d3d11shader-id3d11shaderreflectionvariable" />
      </para>
    </summary>
  </member>
  <member name="D3D11_SHADER_BUFFER_DESC">
    <summary>
      <para>Describes a shader constant-buffer.</para>
      <para>
        Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d11shader/ns-d3d11shader-d3d11_shader_buffer_desc" />
      </para>
    </summary>
  </member>
  <member name="D3D11_SHADER_BUFFER_DESC::Name">
    <summary>The name of the buffer.</summary>
  </member>
  <member name="D3D11_SHADER_BUFFER_DESC::Type">
    <summary>
      A <a href="https://docs.microsoft.com/windows/desktop/api/d3dcommon/ne-d3dcommon-d3d_cbuffer_type">D3D_CBUFFER_TYPE</a>-typed value that indicates the intended use of the constant data.
    </summary>
  </member>
  <member name="D3D11_SHADER_BUFFER_DESC::Variables">
    <summary>The number of unique variables.</summary>
  </member>
  <member name="D3D11_SHADER_BUFFER_DESC::Size">
    <summary>Buffer size (in bytes).</summary>
  </member>
  <member name="D3D11_SHADER_BUFFER_DESC::uFlags">
    <summary>
      A combination of <a href="https://docs.microsoft.com/windows/desktop/api/d3dcommon/ne-d3dcommon-d3d_shader_cbuffer_flags">D3D_SHADER_CBUFFER_FLAGS</a>-typed values that are combined by using a bitwise OR operation. The resulting value specifies properties for the shader constant-buffer.
    </summary>
  </member>
  <member name="D3D11_VIDEO_PROCESSOR_CUSTOM_RATE">
    <summary>
      <para>Specifies a custom rate for frame-rate conversion or inverse telecine (IVTC).</para>
      <para>
        Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d11/ns-d3d11-d3d11_video_processor_custom_rate" />
      </para>
    </summary>
  </member>
  <member name="D3D11_VIDEO_PROCESSOR_CUSTOM_RATE::CustomRate">
    <summary>
      The ratio of the output frame rate to the input frame rate, expressed as a <a href="https://docs.microsoft.com/windows/desktop/api/dxgicommon/ns-dxgicommon-dxgi_rational">DXGI_RATIONAL</a> structure that holds a rational number.
    </summary>
  </member>
  <member name="D3D11_VIDEO_PROCESSOR_CUSTOM_RATE::OutputFrames">
    <summary>
      The number of output frames that will be generated for every <i>N</i> input samples, where <i>N</i> = <b>InputFramesOrFields</b>.
    </summary>
  </member>
  <member name="D3D11_VIDEO_PROCESSOR_CUSTOM_RATE::InputInterlaced">
    <summary>
      If <b>TRUE</b>, the input stream must be interlaced. Otherwise, the input stream must be progressive.
    </summary>
  </member>
  <member name="D3D11_VIDEO_PROCESSOR_CUSTOM_RATE::InputFramesOrFields">
    <summary>
      The number of input fields or frames for every <i>N</i> output frames that will be generated, where <i>N</i> = <b>OutputFrames</b>.
    </summary>
  </member>
  <member name="ID3D11On12Device2">
    <summary>
      <para>Enables you to take resources created through the Direct3D 11 APIs, and use them in Direct3D 12.</para>
      <para>
        Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d11on12/nn-d3d11on12-id3d11on12device2" />
      </para>
    </summary>
  </member>
  <member name="ID3D11CryptoSession">
    <summary>
      <para>Represents a cryptographic session.</para>
      <para>
        Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d11/nn-d3d11-id3d11cryptosession" />
      </para>
    </summary>
  </member>
  <member name="ID3D11RasterizerState::GetDesc">
    <summary>
      <para>Gets the description for rasterizer state that you used to create the rasterizer-state object.</para>
      <para>
        Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d11/nf-d3d11-id3d11rasterizerstate-getdesc" />
      </para>
      <param name="pDesc">
        A pointer to a <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ns-d3d11-d3d11_rasterizer_desc">D3D11_RASTERIZER_DESC</a> structure that receives a description of the rasterizer state.
      </param>
    </summary>
  </member>
  <member name="D3D11_VIDEO_PROCESSOR_FILTER_RANGE">
    <summary>
      <para>Defines the range of supported values for an image filter.</para>
      <para>
        Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d11/ns-d3d11-d3d11_video_processor_filter_range" />
      </para>
    </summary>
  </member>
  <member name="D3D11_VIDEO_PROCESSOR_FILTER_RANGE::Minimum">
    <summary>The minimum value of the filter.</summary>
  </member>
  <member name="D3D11_VIDEO_PROCESSOR_FILTER_RANGE::Maximum">
    <summary>The maximum value of the filter.</summary>
  </member>
  <member name="D3D11_VIDEO_PROCESSOR_FILTER_RANGE::Default">
    <summary>The default value of the filter.</summary>
  </member>
  <member name="D3D11_VIDEO_PROCESSOR_FILTER_RANGE::Multiplier">
    <summary>
      A multiplier. Use the following formula to translate the filter setting into the actual filter value: <i>Actual Value</i> = <i>Set Value</i> × <i>Multiplier</i>.
    </summary>
  </member>
  <member name="D3D11_1_CREATE_DEVICE_CONTEXT_STATE_FLAG">
    <summary>
      <para>Describes flags that are used to create a device context state object (ID3DDeviceContextState) with the ID3D11Device1::CreateDeviceContextState method.</para>
      <para>
        Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d11_1/ne-d3d11_1-d3d11_1_create_device_context_state_flag" />
      </para>
    </summary>
  </member>
  <member name="D3D11_1_CREATE_DEVICE_CONTEXT_STATE_FLAG::D3D11_1_CREATE_DEVICE_CONTEXT_STATE_SINGLETHREADED">
    <summary>
      You use this flag if your application will only call methods of Direct3D 11 and Direct3D 10 interfaces from a single thread. By default, Direct3D 11 and Direct3D 10 are  <a href="https://docs.microsoft.com/windows/desktop/direct3d11/overviews-direct3d-11-render-multi-thread-differences">thread-safe</a>.
      By using this flag, you can increase performance. However, if you use this flag and your application calls methods from multiple threads, undefined behavior might result.
    </summary>
  </member>
  <member name="ID3D11DeviceChild::SetPrivateDataInterface">
    <summary>
      <para>Associate an IUnknown-derived interface with this device child and associate that interface with an application-defined guid.</para>
      <para>
        Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d11/nf-d3d11-id3d11devicechild-setprivatedatainterface" />
      </para>
      <param name="guid">Guid associated with the interface.</param>
      <param name="pData">Pointer to an IUnknown-derived interface to be associated with the device child.</param>
    </summary>
  </member>
  <member name="ID3D11DeviceContext::IAGetPrimitiveTopology">
    <summary>
      <para>Get information about the primitive type, and data order that describes input data for the input assembler stage.</para>
      <para>
        Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d11/nf-d3d11-id3d11devicecontext-iagetprimitivetopology" />
      </para>
      <param name="pTopology">
        A pointer to the type of primitive, and ordering of the primitive data (see <a href="https://docs.microsoft.com/previous-versions/windows/desktop/legacy/ff476189(v=vs.85)">D3D11_PRIMITIVE_TOPOLOGY</a>).
      </param>
    </summary>
  </member>
  <member name="ID3D11Debug">
    <summary>
      <para>A debug interface controls debug settings, validates pipeline state and can only be used if the debug layer is turned on.</para>
      <para>
        Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d11sdklayers/nn-d3d11sdklayers-id3d11debug" />
      </para>
    </summary>
  </member>
  <member name="D3D11_TEXCUBE_ARRAY_SRV">
    <summary>
      <para>Specifies the subresources from an array of cube textures to use in a shader-resource view.</para>
      <para>
        Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d11/ns-d3d11-d3d11_texcube_array_srv" />
      </para>
    </summary>
  </member>
  <member name="D3D11_TEXCUBE_ARRAY_SRV::MostDetailedMip">
    <summary>
      Index of the most detailed mipmap level to use; this number is between 0 and <b>MipLevels</b> (from the original TextureCube for which <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nf-d3d11-id3d11device-createshaderresourceview">ID3D11Device::CreateShaderResourceView</a> creates a view) -1.
    </summary>
  </member>
  <member name="D3D11_TEXCUBE_ARRAY_SRV::MipLevels">
    <summary>
      The maximum number of mipmap levels for the view of the texture. See the remarks in <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ns-d3d11-d3d11_tex1d_srv">D3D11_TEX1D_SRV</a>.

      Set to -1 to indicate all the mipmap levels from <b>MostDetailedMip</b> on down to least detailed.
    </summary>
  </member>
  <member name="D3D11_TEXCUBE_ARRAY_SRV::First2DArrayFace">
    <summary>Index of the first 2D texture to use.</summary>
  </member>
  <member name="D3D11_TEXCUBE_ARRAY_SRV::NumCubes">
    <summary>Number of cube textures in the array.</summary>
  </member>
  <member name="ID3D11ShaderTrace::GetTraceStats">
    <summary>
      <para>Returns statistics about the trace.</para>
      <para>
        Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d11shadertracing/nf-d3d11shadertracing-id3d11shadertrace-gettracestats" />
      </para>
      <param name="pTraceStats">
        A pointer to a <a href="https://docs.microsoft.com/windows/desktop/api/d3d11shadertracing/ns-d3d11shadertracing-d3d11_trace_stats">D3D11_TRACE_STATS</a> structure. <b>GetTraceStats</b> fills the members of this structure with statistics about the trace.
      </param>
    </summary>
  </member>
  <member name="D3D11_AUTHENTICATED_QUERY_RESTRICTED_SHARED_RESOURCE_PROCESS_OUTPUT">
    <summary>
      <para>Contains the response to a D3D11_AUTHENTICATED_QUERY_RESTRICTED_SHARED_RESOURCE_PROCESS query.</para>
      <para>
        Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d11/ns-d3d11-d3d11_authenticated_query_restricted_shared_resource_process_output" />
      </para>
    </summary>
  </member>
  <member name="D3D11_AUTHENTICATED_QUERY_RESTRICTED_SHARED_RESOURCE_PROCESS_OUTPUT::Output">
    <summary>
      A <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ns-d3d11-d3d11_authenticated_query_output">D3D11_AUTHENTICATED_QUERY_OUTPUT</a> structure that contains a Message Authentication Code (MAC) and other data.
    </summary>
  </member>
  <member name="D3D11_AUTHENTICATED_QUERY_RESTRICTED_SHARED_RESOURCE_PROCESS_OUTPUT::ProcessIndex">
    <summary>The index of the process in the list of processes.</summary>
  </member>
  <member name="D3D11_AUTHENTICATED_QUERY_RESTRICTED_SHARED_RESOURCE_PROCESS_OUTPUT::ProcessIdentifier">
    <summary>
      A <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ne-d3d11-d3d11_authenticated_process_identifier_type">D3D11_AUTHENTICATED_PROCESS_IDENTIFIER_TYPE</a> value that specifies the type of process.
    </summary>
  </member>
  <member name="D3D11_AUTHENTICATED_QUERY_RESTRICTED_SHARED_RESOURCE_PROCESS_OUTPUT::ProcessHandle">
    <summary>
      A process handle. If the <b>ProcessIdentifier</b> member equals <b>D3D11_PROCESSIDTYPE_HANDLE</b>, the <b>ProcessHandle</b> member contains a valid handle to a process. Otherwise, this member is ignored.
    </summary>
  </member>
  <member name="D3D11_VIDEO_DECODER_EXTENSION">
    <summary>
      <para>Contains driver-specific data for the ID3D11VideoContext::DecoderExtension method.</para>
      <para>
        Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d11/ns-d3d11-d3d11_video_decoder_extension" />
      </para>
    </summary>
  </member>
  <member name="D3D11_VIDEO_DECODER_EXTENSION::Function">
    <summary>The function number. This number identifies the operation to perform. Currently no function numbers are defined.</summary>
  </member>
  <member name="D3D11_VIDEO_DECODER_EXTENSION::pPrivateInputData">
    <summary>A pointer to a buffer that contains input data for the driver.</summary>
  </member>
  <member name="D3D11_VIDEO_DECODER_EXTENSION::PrivateInputDataSize">
    <summary>
      The size of the <b>pPrivateInputData</b> buffer, in bytes.
    </summary>
  </member>
  <member name="D3D11_VIDEO_DECODER_EXTENSION::pPrivateOutputData">
    <summary>A pointer to a buffer that the driver can use to write output data.</summary>
  </member>
  <member name="D3D11_VIDEO_DECODER_EXTENSION::PrivateOutputDataSize">
    <summary>
      The size of the <b>pPrivateOutputData</b> buffer, in bytes.
    </summary>
  </member>
  <member name="D3D11_VIDEO_DECODER_EXTENSION::ResourceCount">
    <summary>
      The number of elements in the <b>ppResourceList</b> array. If <b>ppResourceList</b> is <b>NULL</b>, set <b>ResourceCount</b> to zero.
    </summary>
  </member>
  <member name="D3D11_VIDEO_DECODER_EXTENSION::ppResourceList">
    <summary>
      The address of an array of <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nn-d3d11-id3d11resource">ID3D11Resource</a> pointers. Use this member to pass Direct3D resources to the driver.
    </summary>
  </member>
  <member name="ID3D11VideoContext::DecoderBeginFrame">
    <summary>
      <para>Starts a decoding operation to decode a video frame.</para>
      <para>
        Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d11/nf-d3d11-id3d11videocontext-decoderbeginframe" />
      </para>
      <param name="pDecoder">
        A pointer to the <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nn-d3d11-id3d11videodecoder">ID3D11VideoDecoder</a> interface. To get this pointer, call <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nf-d3d11-id3d11videodevice-createvideodecoder">ID3D11VideoDevice::CreateVideoDecoder</a>.
      </param>
      <param name="pView">
        A pointer to the <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nn-d3d11-id3d11videodecoderoutputview">ID3D11VideoDecoderOutputView</a> interface. This interface describes the resource that will receive the decoded frame. To get this pointer, call <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nf-d3d11-id3d11videodevice-createvideodecoderoutputview">ID3D11VideoDevice::CreateVideoDecoderOutputView</a>.
      </param>
      <param name="ContentKeySize">
        The size of the content key that is specified in <i>pContentKey</i>. If <i>pContentKey</i> is NULL, set <i>ContentKeySize</i> to zero.
      </param>
      <param name="pContentKey">
        An optional pointer to a content key that was used to encrypt the frame data. If no content key was used, set this parameter to <b>NULL</b>. If the caller provides a content key, the caller must use the session key to encrypt the content key.
      </param>
    </summary>
  </member>
  <member name="D3D11_SUBRESOURCE_DATA">
    <summary>
      <para>Specifies data for initializing a subresource.</para>
      <para>
        Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d11/ns-d3d11-d3d11_subresource_data" />
      </para>
    </summary>
  </member>
  <member name="D3D11_SUBRESOURCE_DATA::pSysMem">
    <summary>Pointer to the initialization data.</summary>
  </member>
  <member name="D3D11_SUBRESOURCE_DATA::SysMemPitch">
    <summary>
      The distance (in bytes) from the beginning of one line of a texture to the next line.
      System-memory pitch is used only for 2D and 3D texture data as it is has no meaning for the other resource types. Specify the distance from the first pixel of one 2D slice of a 3D texture to the first pixel of the next 2D slice in that texture in the <b>SysMemSlicePitch</b> member.
    </summary>
  </member>
  <member name="D3D11_SUBRESOURCE_DATA::SysMemSlicePitch">
    <summary>
      The distance (in bytes) from the beginning of one depth level to the next.
      System-memory-slice pitch is only used for 3D texture data as it has no meaning for the other resource types.
    </summary>
  </member>
  <member name="ID3D11InfoQueue::GetMessageCountLimit">
    <summary>
      <para>Get the maximum number of messages that can be added to the message queue.</para>
      <para>
        Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d11sdklayers/nf-d3d11sdklayers-id3d11infoqueue-getmessagecountlimit" />
      </para>
    </summary>
  </member>
  <member name="D3D11_CONTEXT_TYPE">
    <summary>
      <para>Specifies the context in which a query occurs.</para>
      <para>
        Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d11_3/ne-d3d11_3-d3d11_context_type" />
      </para>
    </summary>
  </member>
  <member name="D3D11_CONTEXT_TYPE::D3D11_CONTEXT_TYPE_ALL">
    <summary>The query can occur in all contexts.</summary>
  </member>
  <member name="D3D11_CONTEXT_TYPE::D3D11_CONTEXT_TYPE_3D">
    <summary>The query occurs in the context of a 3D command queue.</summary>
  </member>
  <member name="D3D11_CONTEXT_TYPE::D3D11_CONTEXT_TYPE_COMPUTE">
    <summary>The query occurs in the context of a 3D compute queue.</summary>
  </member>
  <member name="D3D11_CONTEXT_TYPE::D3D11_CONTEXT_TYPE_COPY">
    <summary>The query occurs in the context of a 3D copy queue.</summary>
  </member>
  <member name="D3D11_CONTEXT_TYPE::D3D11_CONTEXT_TYPE_VIDEO">
    <summary>The query occurs in the context of video.</summary>
  </member>
  <member name="D3D11_AUTHENTICATED_CONFIGURE_ACCESSIBLE_ENCRYPTION_INPUT">
    <summary>
      <para>Contains input data for a D3D11_AUTHENTICATED_CONFIGURE_ENCRYPTION_WHEN_ACCESSIBLE command.</para>
      <para>
        Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d11/ns-d3d11-d3d11_authenticated_configure_accessible_encryption_input" />
      </para>
    </summary>
  </member>
  <member name="D3D11_AUTHENTICATED_CONFIGURE_ACCESSIBLE_ENCRYPTION_INPUT::Parameters">
    <summary>
      A <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ns-d3d11-d3d11_authenticated_configure_input">D3D11_AUTHENTICATED_CONFIGURE_INPUT</a> structure that contains the command GUID and other data.
    </summary>
  </member>
  <member name="D3D11_AUTHENTICATED_CONFIGURE_ACCESSIBLE_ENCRYPTION_INPUT::EncryptionGuid">
    <summary>A GUID that specifies the type of encryption to apply.</summary>
  </member>
  <member name="D3D11_SHADER_VERSION_TYPE">
    <summary>
      <para>Indicates shader type.</para>
      <para>
        Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d11shader/ne-d3d11shader-d3d11_shader_version_type" />
      </para>
    </summary>
  </member>
  <member name="D3D11_SHADER_VERSION_TYPE::D3D11_SHVER_PIXEL_SHADER">
    <summary>Pixel shader.</summary>
  </member>
  <member name="D3D11_SHADER_VERSION_TYPE::D3D11_SHVER_VERTEX_SHADER">
    <summary>Vertex shader.</summary>
  </member>
  <member name="D3D11_SHADER_VERSION_TYPE::D3D11_SHVER_GEOMETRY_SHADER">
    <summary>Geometry shader.</summary>
  </member>
  <member name="D3D11_SHADER_VERSION_TYPE::D3D11_SHVER_HULL_SHADER">
    <summary>Hull shader.</summary>
  </member>
  <member name="D3D11_SHADER_VERSION_TYPE::D3D11_SHVER_DOMAIN_SHADER">
    <summary>Domain shader.</summary>
  </member>
  <member name="D3D11_SHADER_VERSION_TYPE::D3D11_SHVER_COMPUTE_SHADER">
    <summary>Compute shader.</summary>
  </member>
  <member name="D3D11_SHADER_VERSION_TYPE::D3D11_SHVER_RESERVED0">
    <summary>Indicates the end of the enumeration constants.</summary>
  </member>
  <member name="ID3D11DeviceContext::DSGetSamplers">
    <summary>
      <para>Get an array of sampler state interfaces from the domain-shader stage.</para>
      <para>
        Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d11/nf-d3d11-id3d11devicecontext-dsgetsamplers" />
      </para>
      <param name="StartSlot">Index into a zero-based array to begin getting samplers from (ranges from 0 to D3D11_COMMONSHADER_SAMPLER_SLOT_COUNT - 1).</param>
      <param name="NumSamplers">Number of samplers to get from a device context. Each pipeline stage has a total of 16 sampler slots available (ranges from 0 to D3D11_COMMONSHADER_SAMPLER_SLOT_COUNT - StartSlot).</param>
      <param name="ppSamplers">
        Pointer to an array of sampler-state interfaces (see <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nn-d3d11-id3d11samplerstate">ID3D11SamplerState</a>).
      </param>
    </summary>
  </member>
  <member name="D3D11_TEX1D_ARRAY_SRV">
    <summary>
      <para>Specifies the subresources from an array of 1D textures to use in a shader-resource view.</para>
      <para>
        Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d11/ns-d3d11-d3d11_tex1d_array_srv" />
      </para>
    </summary>
  </member>
  <member name="D3D11_TEX1D_ARRAY_SRV::MostDetailedMip">
    <summary>
      Index of the most detailed mipmap level to use; this number is between 0 and <b>MipLevels</b> (from the original Texture1D for which <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nf-d3d11-id3d11device-createshaderresourceview">ID3D11Device::CreateShaderResourceView</a> creates a view) -1.
    </summary>
  </member>
  <member name="D3D11_TEX1D_ARRAY_SRV::MipLevels">
    <summary>
      The maximum number of mipmap levels for the view of the texture. See the remarks in <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ns-d3d11-d3d11_tex1d_srv">D3D11_TEX1D_SRV</a>.

      Set to -1 to indicate all the mipmap levels from <b>MostDetailedMip</b> on down to least detailed.
    </summary>
  </member>
  <member name="D3D11_TEX1D_ARRAY_SRV::FirstArraySlice">
    <summary>The index of the first texture to use in an array of textures.</summary>
  </member>
  <member name="D3D11_TEX1D_ARRAY_SRV::ArraySize">
    <summary>Number of textures in the array.</summary>
  </member>
  <member name="ID3D11DeviceContext2::ResizeTilePool">
    <summary>
      <para>Resizes a tile pool.</para>
      <para>
        Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d11_2/nf-d3d11_2-id3d11devicecontext2-resizetilepool" />
      </para>
      <param name="pTilePool">
        A pointer to an <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nn-d3d11-id3d11buffer">ID3D11Buffer</a> for the tile pool to resize.
      </param>
      <param name="NewSizeInBytes">The new size in bytes of the tile pool. The size must be a multiple of 64 KB or 0.</param>
    </summary>
  </member>
  <member name="ID3D11DeviceContext::RSGetViewports">
    <summary>
      <para>Gets the array of viewports bound to the rasterizer stage.</para>
      <para>
        Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d11/nf-d3d11-id3d11devicecontext-rsgetviewports" />
      </para>
      <param name="pNumViewports">
        A pointer to a variable that, on input, specifies the number of viewports (ranges from 0 to <b>D3D11_VIEWPORT_AND_SCISSORRECT_OBJECT_COUNT_PER_PIPELINE</b>)
        in the <i>pViewports</i> array; on output, the variable contains the actual number of viewports that are bound to the rasterizer stage.
        If <i>pViewports</i> is <b>NULL</b>, <b>RSGetViewports</b> fills the variable with the number of viewports currently bound.

        <div class="alert">
          <b>Note</b>  In some versions of the Windows SDK, a <a href="https://docs.microsoft.com/windows/desktop/direct3d11/overviews-direct3d-11-devices-layers">debug device</a> will raise an exception if the input value in the variable to which <i>pNumViewports</i> points is greater than <b>D3D11_VIEWPORT_AND_SCISSORRECT_OBJECT_COUNT_PER_PIPELINE</b> even if <i>pViewports</i> is <b>NULL</b>.  The regular runtime ignores the value in the variable to which <i>pNumViewports</i> points when <i>pViewports</i> is <b>NULL</b>.  This behavior of a debug device might be corrected in a future release of the Windows SDK.
        </div>
        <div> </div>
      </param>
      <param name="pViewports">
        An array of <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ns-d3d11-d3d11_viewport">D3D11_VIEWPORT</a> structures for the viewports that are bound to the rasterizer stage. If the number of viewports (in the variable to which <i>pNumViewports</i> points) is
        greater than the actual number of viewports currently bound, unused elements of the array contain 0.
        For info about how the viewport size depends on the device <a href="https://docs.microsoft.com/windows/desktop/direct3d11/overviews-direct3d-11-devices-downlevel-intro">feature level</a>, which has changed between Direct3D 11
        and Direct3D 10, see <b>D3D11_VIEWPORT</b>.
      </param>
    </summary>
  </member>
  <member name="ID3D11InfoQueue::GetMessage">
    <summary>
      <para>Get a message from the message queue.</para>
      <para>
        Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d11sdklayers/nf-d3d11sdklayers-id3d11infoqueue-getmessage" />
      </para>
      <param name="MessageIndex">
        Index into message queue after an optional retrieval filter has been applied. This can be between 0 and the number of messages in the message queue that pass through the retrieval filter (which can be obtained with <a href="https://docs.microsoft.com/windows/desktop/api/d3d11sdklayers/nf-d3d11sdklayers-id3d11infoqueue-getnumstoredmessagesallowedbyretrievalfilter">ID3D11InfoQueue::GetNumStoredMessagesAllowedByRetrievalFilter</a>). 0 is the message at the front of the message queue.
      </param>
      <param name="pMessage">
        Returned message (see <a href="https://docs.microsoft.com/windows/desktop/api/d3d11sdklayers/ns-d3d11sdklayers-d3d11_message">D3D11_MESSAGE</a>).
      </param>
      <param name="pMessageByteLength">Size of pMessage in bytes, including the size of the message string that the pMessage points to.</param>
    </summary>
  </member>
  <member name="D3D11_STENCIL_OP">
    <summary>
      <para>The stencil operations that can be performed during depth-stencil testing.</para>
      <para>
        Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d11/ne-d3d11-d3d11_stencil_op" />
      </para>
    </summary>
  </member>
  <member name="D3D11_STENCIL_OP::D3D11_STENCIL_OP_KEEP">
    <summary>Keep the existing stencil data.</summary>
  </member>
  <member name="D3D11_STENCIL_OP::D3D11_STENCIL_OP_ZERO">
    <summary>Set the stencil data to 0.</summary>
  </member>
  <member name="D3D11_STENCIL_OP::D3D11_STENCIL_OP_REPLACE">
    <summary>
      Set the stencil data to the reference value set by calling <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nf-d3d11-id3d11devicecontext-omsetdepthstencilstate">ID3D11DeviceContext::OMSetDepthStencilState</a>.
    </summary>
  </member>
  <member name="D3D11_STENCIL_OP::D3D11_STENCIL_OP_INCR_SAT">
    <summary>Increment the stencil value by 1, and clamp the result.</summary>
  </member>
  <member name="D3D11_STENCIL_OP::D3D11_STENCIL_OP_DECR_SAT">
    <summary>Decrement the stencil value by 1, and clamp the result.</summary>
  </member>
  <member name="D3D11_STENCIL_OP::D3D11_STENCIL_OP_INVERT">
    <summary>Invert the stencil data.</summary>
  </member>
  <member name="D3D11_STENCIL_OP::D3D11_STENCIL_OP_INCR">
    <summary>Increment the stencil value by 1, and wrap the result if necessary.</summary>
  </member>
  <member name="D3D11_STENCIL_OP::D3D11_STENCIL_OP_DECR">
    <summary>Decrement the stencil value by 1, and wrap the result if necessary.</summary>
  </member>
  <member name="ID3D11VideoDevice1">
    <summary>
      <para>Provides the video decoding and video processing capabilities of a Microsoft Direct3D 11 device.</para>
      <para>
        Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d11_1/nn-d3d11_1-id3d11videodevice1" />
      </para>
    </summary>
  </member>
  <member name="ID3D11ShaderReflection::GetVariableByName">
    <summary>
      <para>Gets a variable by name.</para>
      <para>
        Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d11shader/nf-d3d11shader-id3d11shaderreflection-getvariablebyname" />
      </para>
      <param name="Name">A pointer to a string containing the variable name.</param>
    </summary>
  </member>
  <member name="ID3D11VideoContext1::VideoProcessorSetOutputShaderUsage">
    <summary>
      <para>Sets a value indicating whether the output surface from a call to ID3D11VideoContext::VideoProcessorBlt will be read by Direct3D shaders.</para>
      <para>
        Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d11_1/nf-d3d11_1-id3d11videocontext1-videoprocessorsetoutputshaderusage" />
      </para>
      <param name="pVideoProcessor">
        A pointer to the <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nn-d3d11-id3d11videoprocessor">ID3D11VideoProcessor</a> interface.
      </param>
      <param name="ShaderUsage">
        True if the surface rendered using <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nf-d3d11-id3d11videocontext-videoprocessorblt">ID3D11VideoContext::VideoProcessorBlt</a> will be read by Direct3D shaders; otherwise, false. This may be set to false when multi-plane overlay hardware is supported.
      </param>
    </summary>
  </member>
  <member name="ID3D11View">
    <summary>
      <para>A view interface specifies the parts of a resource the pipeline can access during rendering.</para>
      <para>
        Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d11/nn-d3d11-id3d11view" />
      </para>
    </summary>
  </member>
  <member name="ID3D11VideoContext::GetDecoderBuffer">
    <summary>
      <para>Gets a pointer to a decoder buffer.</para>
      <para>
        Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d11/nf-d3d11-id3d11videocontext-getdecoderbuffer" />
      </para>
      <param name="pDecoder">
        A pointer to the <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nn-d3d11-id3d11videodecoder">ID3D11VideoDecoder</a> interface. To get this pointer, call <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nf-d3d11-id3d11videodevice-createvideodecoder">ID3D11VideoDevice::CreateVideoDecoder</a>.
      </param>
      <param name="Type">
        The type of buffer to retrieve, specified as a member of the <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ne-d3d11-d3d11_video_decoder_buffer_type">D3D11_VIDEO_DECODER_BUFFER_TYPE</a> enumeration.
      </param>
      <param name="pBufferSize">Receives the size of the buffer, in bytes.</param>
      <param name="ppBuffer">Receives a pointer to the start of the memory buffer.</param>
    </summary>
  </member>
  <member name="ID3D11VideoDevice::CreateVideoProcessorEnumerator">
    <summary>
      <para>Enumerates the video processor capabilities of the driver.</para>
      <para>
        Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d11/nf-d3d11-id3d11videodevice-createvideoprocessorenumerator" />
      </para>
      <param name="pDesc">
        A pointer to a <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ns-d3d11-d3d11_video_processor_content_desc">D3D11_VIDEO_PROCESSOR_CONTENT_DESC</a> structure that describes the video content.
      </param>
      <param name="ppEnum">
        Receives a pointer to the <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nn-d3d11-id3d11videoprocessorenumerator">ID3D11VideoProcessorEnumerator</a> interface. The caller must release the interface.
      </param>
    </summary>
  </member>
  <member name="ID3D11RefDefaultTrackingOptions::SetTrackingOptions">
    <summary>
      <para>Sets graphics processing unit (GPU) debug reference default tracking options for specific resource types.</para>
      <para>
        Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d11sdklayers/nf-d3d11sdklayers-id3d11refdefaulttrackingoptions-settrackingoptions" />
      </para>
      <param name="ResourceTypeFlags">
        A <a href="https://docs.microsoft.com/windows/desktop/api/d3d11sdklayers/ne-d3d11sdklayers-d3d11_shader_tracking_resource_type">D3D11_SHADER_TRACKING_RESOURCE_TYPE</a>-typed value that specifies the type of resource to track.
      </param>
      <param name="Options">
        A combination of <a href="https://docs.microsoft.com/windows/win32/api/d3d11sdklayers/ne-d3d11sdklayers-d3d11_shader_tracking_options">D3D11_SHADER_TRACKING_OPTIONS</a>-typed flags that are combined by using a bitwise <b>OR</b> operation. The resulting value identifies tracking options. If a flag is present, the tracking option that the flag represents is set to "on"; otherwise the tracking option is set to "off."
      </param>
    </summary>
  </member>
  <member name="D3D11_AUTHENTICATED_QUERY_ACCESSIBILITY_ENCRYPTION_GUID_OUTPUT">
    <summary>
      <para>Contains the response to a D3D11_AUTHENTICATED_QUERY_ENCRYPTION_WHEN_ACCESSIBLE_GUID query.</para>
      <para>
        Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d11/ns-d3d11-d3d11_authenticated_query_accessibility_encryption_guid_output" />
      </para>
    </summary>
  </member>
  <member name="D3D11_AUTHENTICATED_QUERY_ACCESSIBILITY_ENCRYPTION_GUID_OUTPUT::Output">
    <summary>
      A <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ns-d3d11-d3d11_authenticated_query_output">D3D11_AUTHENTICATED_QUERY_OUTPUT</a> structure that contains a Message Authentication Code (MAC) and other data.
    </summary>
  </member>
  <member name="D3D11_AUTHENTICATED_QUERY_ACCESSIBILITY_ENCRYPTION_GUID_OUTPUT::EncryptionGuidIndex">
    <summary>The index of the encryption GUID.</summary>
  </member>
  <member name="D3D11_AUTHENTICATED_QUERY_ACCESSIBILITY_ENCRYPTION_GUID_OUTPUT::EncryptionGuid">
    <summary>A GUID that specifies a supported encryption type.</summary>
  </member>
  <member name="ID3D11InfoQueue::AddRetrievalFilterEntries">
    <summary>
      <para>Add storage filters to the top of the retrieval-filter stack.</para>
      <para>
        Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d11sdklayers/nf-d3d11sdklayers-id3d11infoqueue-addretrievalfilterentries" />
      </para>
      <param name="pFilter">
        Array of retrieval filters (see <a href="https://docs.microsoft.com/windows/desktop/api/d3d11sdklayers/ns-d3d11sdklayers-d3d11_info_queue_filter">D3D11_INFO_QUEUE_FILTER</a>).
      </param>
    </summary>
  </member>
  <member name="ID3D11DeviceChild::SetPrivateData">
    <summary>
      <para>Set application-defined data to a device child and associate that data with an application-defined guid.</para>
      <para>
        Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d11/nf-d3d11-id3d11devicechild-setprivatedata" />
      </para>
      <param name="guid">Guid associated with the data.</param>
      <param name="DataSize">Size of the data.</param>
      <param name="pData">
        Pointer to the data to be stored with this device child. If pData is <b>NULL</b>, DataSize must also be 0, and any data previously associated with the specified guid will be destroyed.
      </param>
    </summary>
  </member>
  <member name="ID3D11DeviceContext::OMGetRenderTargetsAndUnorderedAccessViews">
    <summary>
      <para>Get pointers to the resources bound to the output-merger stage.</para>
      <para>
        Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d11/nf-d3d11-id3d11devicecontext-omgetrendertargetsandunorderedaccessviews" />
      </para>
      <param name="NumRTVs">The number of render-target views to retrieve.</param>
      <param name="ppRenderTargetViews">
        Pointer to an array of <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nn-d3d11-id3d11rendertargetview">ID3D11RenderTargetView</a>s, which represent render-target views. Specify <b>NULL</b> for this parameter when retrieval of render-target views is not required.
      </param>
      <param name="ppDepthStencilView">
        Pointer to a <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nn-d3d11-id3d11depthstencilview">ID3D11DepthStencilView</a>, which represents a depth-stencil view. Specify <b>NULL</b> for this parameter when retrieval of the depth-stencil view is not required.
      </param>
      <param name="UAVStartSlot">
        Index into a zero-based array to begin retrieving unordered-access views (ranges from 0 to D3D11_PS_CS_UAV_REGISTER_COUNT - 1).
        For pixel shaders <i>UAVStartSlot</i> should be equal to the number of render-target views that are bound.
      </param>
      <param name="NumUAVs">
        Number of unordered-access views to return in <i>ppUnorderedAccessViews</i>. This number ranges from 0 to D3D11_PS_CS_UAV_REGISTER_COUNT - <i>UAVStartSlot</i>.
      </param>
      <param name="ppUnorderedAccessViews">
        Pointer to an array of <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nn-d3d11-id3d11unorderedaccessview">ID3D11UnorderedAccessView</a>s, which represent unordered-access views that are retrieved. Specify <b>NULL</b> for this parameter when retrieval of unordered-access views is not required.
      </param>
    </summary>
  </member>
  <member name="ID3D11DeviceContext1::UpdateSubresource1">
    <summary>
      <para>The CPU copies data from memory to a subresource created in non-mappable memory.</para>
      <para>
        Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d11_1/nf-d3d11_1-id3d11devicecontext1-updatesubresource1" />
      </para>
      <param name="pDstResource">A pointer to the destination resource.</param>
      <param name="DstSubresource">
        A zero-based index that identifies the destination subresource. See <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nf-d3d11-d3d11calcsubresource">D3D11CalcSubresource</a> for more details.
      </param>
      <param name="pDstBox">
        A pointer to a box that defines the portion of the destination subresource to copy the resource data into. Coordinates are in bytes for buffers and in texels for textures. If <b>NULL</b>, <b>UpdateSubresource1</b> writes the data to the destination subresource with no offset. The dimensions of the source must fit the destination.

        An empty box results in a no-op. A box is empty if the top value is greater than or equal to the bottom value, or the left value is greater than or equal to the right value, or the front value is greater than or equal to the back value. When the box is empty, <b>UpdateSubresource1</b> doesn't perform an update operation.
      </param>
      <param name="pSrcData">A pointer to the source data in memory.</param>
      <param name="SrcRowPitch">The size of one row of the source data.</param>
      <param name="SrcDepthPitch">The size of one depth slice of source data.</param>
      <param name="CopyFlags">
        A <a href="https://docs.microsoft.com/windows/desktop/api/d3d11_1/ne-d3d11_1-d3d11_copy_flags">D3D11_COPY_FLAGS</a>-typed value that specifies how to perform the update operation. If you specify zero for no update option, <b>UpdateSubresource1</b> behaves like <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nf-d3d11-id3d11devicecontext-updatesubresource">ID3D11DeviceContext::UpdateSubresource</a>. For existing display drivers that can't process these flags, the runtime doesn't use them.
      </param>
    </summary>
  </member>
  <member name="ID3D11VideoContext::VideoProcessorGetOutputAlphaFillMode">
    <summary>
      <para>Gets the current alpha fill mode for the video processor.</para>
      <para>
        Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d11/nf-d3d11-id3d11videocontext-videoprocessorgetoutputalphafillmode" />
      </para>
      <param name="pVideoProcessor">
        A pointer to the <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nn-d3d11-id3d11videoprocessor">ID3D11VideoProcessor</a> interface. To get this pointer, call <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nf-d3d11-id3d11videodevice-createvideoprocessor">ID3D11VideoDevice::CreateVideoProcessor</a>.
      </param>
      <param name="pAlphaFillMode">
        Receives the alpha fill mode, as a <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ne-d3d11-d3d11_video_processor_alpha_fill_mode">D3D11_VIDEO_PROCESSOR_ALPHA_FILL_MODE</a> value.
      </param>
      <param name="pStreamIndex">
        If the alpha fill mode is <b>D3D11_VIDEO_PROCESSOR_ALPHA_FILL_MODE_SOURCE_STREAM</b>, this parameter receives the zero-based index of an input stream. The input stream provides the alpha values for the alpha fill.
      </param>
    </summary>
  </member>
  <member name="ID3D11Texture2D::GetDesc">
    <summary>
      <para>Get the properties of the texture resource.</para>
      <para>
        Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d11/nf-d3d11-id3d11texture2d-getdesc" />
      </para>
      <param name="pDesc">
        Pointer to a resource description (see <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ns-d3d11-d3d11_texture2d_desc">D3D11_TEXTURE2D_DESC</a>).
      </param>
    </summary>
  </member>
  <member name="ID3D11Device::CheckMultisampleQualityLevels">
    <summary>
      <para>Get the number of quality levels available during multisampling.</para>
      <para>
        Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d11/nf-d3d11-id3d11device-checkmultisamplequalitylevels" />
      </para>
      <param name="Format">
        The texture format. See <a href="https://docs.microsoft.com/windows/desktop/api/dxgiformat/ne-dxgiformat-dxgi_format">DXGI_FORMAT</a>.
      </param>
      <param name="SampleCount">The number of samples during multisampling.</param>
      <param name="pNumQualityLevels">Number of quality levels supported by the adapter. See remarks.</param>
    </summary>
  </member>
  <member name="ID3D11AuthenticatedChannel::GetCertificate">
    <summary>
      <para>Gets the driver's certificate chain.</para>
      <para>
        Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d11/nf-d3d11-id3d11authenticatedchannel-getcertificate" />
      </para>
      <param name="CertificateSize">
        The size of the <i>pCertificate</i> array, in bytes. To get the size of the certificate chain, call <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nf-d3d11-id3d11cryptosession-getcertificatesize">ID3D11CryptoSession::GetCertificateSize</a>.
      </param>
      <param name="pCertificate">A pointer to a byte array that receives the driver's certificate chain. The caller must allocate the array.</param>
    </summary>
  </member>
  <member name="ID3D11ShaderTrace::GetInitialRegisterContents">
    <summary>
      <para>Retrieves the initial contents of the specified input register.</para>
      <para name="pRegister">
        Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d11shadertracing/nf-d3d11shadertracing-id3d11shadertrace-getinitialregistercontents" />
      </para>
      <param name="pValue">
        A pointer to a  <a href="https://docs.microsoft.com/windows/desktop/api/d3d11shadertracing/ns-d3d11shadertracing-d3d11_trace_value">D3D11_TRACE_VALUE</a> structure. <b>GetInitialRegisterContents</b> fills the members of this structure with information about the initial contents.
      </param>
    </summary>
  </member>
  <member name="D3D11_CRYPTO_SESSION_STATUS">
    <summary>
      <para>Represents the status of an ID3D11CryptoSession interface.</para>
      <para>
        Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d11_1/ne-d3d11_1-d3d11_crypto_session_status" />
      </para>
    </summary>
  </member>
  <member name="D3D11_CRYPTO_SESSION_STATUS::D3D11_CRYPTO_SESSION_STATUS_OK">
    <summary>
      The <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nn-d3d11-id3d11cryptosession">ID3D11CryptoSession</a> is in a functional state.
    </summary>
  </member>
  <member name="D3D11_CRYPTO_SESSION_STATUS::D3D11_CRYPTO_SESSION_STATUS_KEY_LOST">
    <summary>
      The underlying hardware key for the specified <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nn-d3d11-id3d11cryptosession">ID3D11CryptoSession</a> has become lost.
    </summary>
  </member>
  <member name="D3D11_CRYPTO_SESSION_STATUS::D3D11_CRYPTO_SESSION_STATUS_KEY_AND_CONTENT_LOST">
    <summary>
      The underlying hardware key for the specified <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nn-d3d11-id3d11cryptosession">ID3D11CryptoSession</a> has become lost and protected content has become corrupted.
    </summary>
  </member>
  <member name="ID3D11UnorderedAccessView1::GetDesc1">
    <summary>
      <para>Gets a description of the resource.</para>
      <para>
        Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d11_3/nf-d3d11_3-id3d11unorderedaccessview1-getdesc1" />
      </para>
      <param name="pDesc1">
        A pointer to a <a href="https://docs.microsoft.com/windows/desktop/api/d3d11_3/ns-d3d11_3-cd3d11_unordered_access_view_desc1">D3D11_UNORDERED_ACCESS_VIEW_DESC1</a> structure that receives the description of the unordered-access resource.
      </param>
    </summary>
  </member>
  <member name="ID3D11BlendState1::GetDesc1">
    <summary>
      <para>Gets the description for blending state that you used to create the blend-state object.</para>
      <para>
        Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d11_1/nf-d3d11_1-id3d11blendstate1-getdesc1" />
      </para>
      <param name="pDesc">
        A pointer to a <a href="https://docs.microsoft.com/windows/desktop/api/d3d11_1/ns-d3d11_1-cd3d11_blend_desc1">D3D11_BLEND_DESC1</a> structure that receives a description of the blend state. This blend state can specify logical operations as well as blending operations.
      </param>
    </summary>
  </member>
  <member name="ID3D11RefTrackingOptions">
    <summary>
      <para>The tracking interface sets reference tracking options.</para>
      <para>
        Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d11sdklayers/nn-d3d11sdklayers-id3d11reftrackingoptions" />
      </para>
    </summary>
  </member>
  <member name="D3D11_RASTERIZER_DESC">
    <summary>
      <para>Describes rasterizer state.</para>
      <para>
        Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d11/ns-d3d11-d3d11_rasterizer_desc" />
      </para>
    </summary>
  </member>
  <member name="D3D11_RASTERIZER_DESC::FillMode">
    <summary>
      Determines the fill mode to use when rendering (see <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ne-d3d11-d3d11_fill_mode">D3D11_FILL_MODE</a>).
    </summary>
  </member>
  <member name="D3D11_RASTERIZER_DESC::CullMode">
    <summary>
      Indicates triangles facing the specified direction are not drawn (see <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ne-d3d11-d3d11_cull_mode">D3D11_CULL_MODE</a>).
    </summary>
  </member>
  <member name="D3D11_RASTERIZER_DESC::FrontCounterClockwise">
    <summary>
      Determines if a triangle is front- or back-facing. If this parameter is <b>TRUE</b>, a triangle will be considered front-facing if its vertices are counter-clockwise on the render target and considered back-facing if they are clockwise. If this parameter is <b>FALSE</b>, the opposite is true.
    </summary>
  </member>
  <member name="D3D11_RASTERIZER_DESC::DepthBias">
    <summary>
      Depth value added to a given pixel. For info about depth bias, see <a href="https://docs.microsoft.com/windows/desktop/direct3d11/d3d10-graphics-programming-guide-output-merger-stage-depth-bias">Depth Bias</a>.
    </summary>
  </member>
  <member name="D3D11_RASTERIZER_DESC::DepthBiasClamp">
    <summary>
      Maximum depth bias of a pixel. For info about depth bias, see <a href="https://docs.microsoft.com/windows/desktop/direct3d11/d3d10-graphics-programming-guide-output-merger-stage-depth-bias">Depth Bias</a>.
    </summary>
  </member>
  <member name="D3D11_RASTERIZER_DESC::SlopeScaledDepthBias">
    <summary>
      Scalar on a given pixel's slope. For info about depth bias, see <a href="https://docs.microsoft.com/windows/desktop/direct3d11/d3d10-graphics-programming-guide-output-merger-stage-depth-bias">Depth Bias</a>.
    </summary>
  </member>
  <member name="D3D11_RASTERIZER_DESC::DepthClipEnable">
    <summary>
      Enable clipping based on distance.

      The hardware always performs x and y clipping of rasterized coordinates. When <b>DepthClipEnable</b> is set to the default–<b>TRUE</b>, the hardware also clips the z value (that is, the hardware performs the last step of the following algorithm).


      <pre class="syntax" xml:space="preserve"><code>
0 &lt; w
-w &lt;= x &lt;= w (or arbitrarily wider range if implementation uses a guard band to reduce clipping burden)
-w &lt;= y &lt;= w (or arbitrarily wider range if implementation uses a guard band to reduce clipping burden)
0 &lt;= z &lt;= w
</code></pre>
      When you set <b>DepthClipEnable</b> to <b>FALSE</b>, the hardware skips the z clipping (that is, the last step in the preceding algorithm). However, the hardware still performs the "0 &lt; w" clipping. When z clipping is disabled, improper depth ordering at the pixel level might result. However, when z clipping is disabled, stencil shadow implementations are simplified. In other words, you can avoid complex special-case handling for geometry that goes beyond the back clipping plane.
    </summary>
  </member>
  <member name="D3D11_RASTERIZER_DESC::ScissorEnable">
    <summary>Enable scissor-rectangle culling. All pixels outside an active scissor rectangle are culled.</summary>
  </member>
  <member name="D3D11_RASTERIZER_DESC::MultisampleEnable">
    <summary>
      Specifies whether to use the quadrilateral or alpha line anti-aliasing algorithm on multisample antialiasing (MSAA) render targets. Set to <b>TRUE</b> to use the quadrilateral line anti-aliasing algorithm and to <b>FALSE</b> to use the alpha line anti-aliasing algorithm. For more info about this member, see Remarks.
    </summary>
  </member>
  <member name="D3D11_RASTERIZER_DESC::AntialiasedLineEnable">
    <summary>
      Specifies whether to enable line antialiasing; only applies if doing line drawing and <b>MultisampleEnable</b> is <b>FALSE</b>. For more info about this member, see Remarks.
    </summary>
  </member>
  <member name="ID3D11VideoDevice::SetPrivateDataInterface">
    <summary>
      <para>Sets a private IUnknown pointer on the video device and associates that pointer with a GUID.</para>
      <para>
        Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d11/nf-d3d11-id3d11videodevice-setprivatedatainterface" />
      </para>
      <param name="guid">The GUID associated with the pointer.</param>
      <param name="pData">
        A pointer to the <a href="https://docs.microsoft.com/windows/desktop/api/unknwn/nn-unknwn-iunknown">IUnknown</a> interface.
      </param>
    </summary>
  </member>
  <member name="ID3D11Device::CheckCounter">
    <summary>
      <para>Get the type, name, units of measure, and a description of an existing counter.</para>
      <para>
        Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d11/nf-d3d11-id3d11device-checkcounter" />
      </para>
      <param name="pDesc">
        Pointer to a counter description (see <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ns-d3d11-d3d11_counter_desc">D3D11_COUNTER_DESC</a>). Specifies which counter information is to be retrieved about.
      </param>
      <param name="pType">
        Pointer to the data type of a counter (see <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ne-d3d11-d3d11_counter_type">D3D11_COUNTER_TYPE</a>). Specifies the data type of the counter being retrieved.
      </param>
      <param name="pActiveCounters">Pointer to the number of hardware counters that are needed for this counter type to be created. All instances of the same counter type use the same hardware counters.</param>
      <param name="szName">
        String to be filled with a brief name for the counter. May be <b>NULL</b> if the application is not interested in the name of the counter.
      </param>
      <param name="pNameLength">
        Length of the string returned to szName. Can be <b>NULL</b>.
      </param>
      <param name="szUnits">
        Name of the units a counter measures, provided the memory the pointer points to has enough room to hold the string. Can be <b>NULL</b>. The returned string will always be in English.
      </param>
      <param name="pUnitsLength">
        Length of the string returned to szUnits. Can be <b>NULL</b>.
      </param>
      <param name="szDescription">
        A description of the counter, provided the memory the pointer points to has enough room to hold the string. Can be <b>NULL</b>. The returned string will always be in English.
      </param>
      <param name="pDescriptionLength">
        Length of the string returned to szDescription. Can be <b>NULL</b>.
      </param>
    </summary>
  </member>
  <member name="ID3D11Device::CreateUnorderedAccessView">
    <summary>
      <para>Creates a view for accessing an unordered access resource.</para>
      <para>
        Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d11/nf-d3d11-id3d11device-createunorderedaccessview" />
      </para>
      <param name="pResource">
        Pointer to an <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nn-d3d11-id3d11resource">ID3D11Resource</a> that represents a resources that will serve as an input to a shader.
      </param>
      <param name="pDesc">
        Pointer to an <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ns-d3d11-d3d11_unordered_access_view_desc">D3D11_UNORDERED_ACCESS_VIEW_DESC</a> that represents a shader-resource view description. Set this parameter to <b>NULL</b> to create a view that accesses the entire resource (using the format the resource was created with).
      </param>
      <param name="ppUAView">
        Address of a pointer to an <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nn-d3d11-id3d11unorderedaccessview">ID3D11UnorderedAccessView</a> that represents an unordered-access view. Set this parameter to <b>NULL</b> to validate the other input parameters (the method will return S_FALSE if the other input parameters pass validation).
      </param>
    </summary>
  </member>
  <member name="D3D11_HULL_SHADER_TRACE_DESC">
    <summary>
      <para>Describes an instance of a hull shader to trace.</para>
      <para>
        Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d11shadertracing/ns-d3d11shadertracing-d3d11_hull_shader_trace_desc" />
      </para>
    </summary>
  </member>
  <member name="D3D11_HULL_SHADER_TRACE_DESC::Invocation">
    <summary>The invocation number of the instance of the hull shader.</summary>
  </member>
  <member name="D3D11_FILL_MODE">
    <summary>
      <para>Determines the fill mode to use when rendering triangles.</para>
      <para>
        Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d11/ne-d3d11-d3d11_fill_mode" />
      </para>
    </summary>
  </member>
  <member name="D3D11_FILL_MODE::D3D11_FILL_WIREFRAME">
    <summary>Draw lines connecting the vertices. Adjacent vertices are not drawn.</summary>
  </member>
  <member name="D3D11_FILL_MODE::D3D11_FILL_SOLID">
    <summary>Fill the triangles formed by the vertices. Adjacent vertices are not drawn.</summary>
  </member>
  <member name="ID3D11DeviceContext::CSSetShader">
    <summary>
      <para>Set a compute shader to the device.</para>
      <para>
        Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d11/nf-d3d11-id3d11devicecontext-cssetshader" />
      </para>
      <param name="pComputeShader">
        Pointer to a compute shader (see <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nn-d3d11-id3d11computeshader">ID3D11ComputeShader</a>). Passing in <b>NULL</b> disables the shader for this pipeline stage.
      </param>
      <param name="ppClassInstances">
        A pointer to an array of class-instance interfaces (see <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nn-d3d11-id3d11classinstance">ID3D11ClassInstance</a>). Each interface used by a shader must have a corresponding class instance or the shader will get disabled. Set ppClassInstances to <b>NULL</b> if the shader does not use any interfaces.
      </param>
      <param name="NumClassInstances">The number of class-instance interfaces in the array.</param>
    </summary>
  </member>
  <member name="D3D11_DRAW_INSTANCED_INDIRECT_ARGS">
    <summary>
      <para>Arguments for draw instanced indirect.</para>
      <para>
        Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d11/ns-d3d11-d3d11_draw_instanced_indirect_args" />
      </para>
    </summary>
  </member>
  <member name="D3D11_DRAW_INSTANCED_INDIRECT_ARGS::VertexCountPerInstance">
    <summary>The number of vertices to draw.</summary>
  </member>
  <member name="D3D11_DRAW_INSTANCED_INDIRECT_ARGS::InstanceCount">
    <summary>The number of instances to draw.</summary>
  </member>
  <member name="D3D11_DRAW_INSTANCED_INDIRECT_ARGS::StartVertexLocation">
    <summary>The index of the first vertex.</summary>
  </member>
  <member name="D3D11_DRAW_INSTANCED_INDIRECT_ARGS::StartInstanceLocation">
    <summary>A value added to each index before reading per-instance data from a vertex buffer.</summary>
  </member>
  <member name="ID3D11ShaderReflection::GetConstantBufferByName">
    <summary>
      <para>Get a constant buffer by name.</para>
      <para>
        Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d11shader/nf-d3d11shader-id3d11shaderreflection-getconstantbufferbyname" />
      </para>
      <param name="Name">The constant-buffer name.</param>
    </summary>
  </member>
  <member name="ID3D11Device::CreateVertexShader">
    <summary>
      <para>Create a vertex-shader object from a compiled shader.</para>
      <para>
        Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d11/nf-d3d11-id3d11device-createvertexshader" />
      </para>
      <param name="pShaderBytecode">A pointer to the compiled shader.</param>
      <param name="BytecodeLength">Size of the compiled vertex shader.</param>
      <param name="pClassLinkage">
        A pointer to a class linkage interface (see <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nn-d3d11-id3d11classlinkage">ID3D11ClassLinkage</a>); the value can be <b>NULL</b>.
      </param>
      <param name="ppVertexShader">
        Address of a pointer to a <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nn-d3d11-id3d11vertexshader">ID3D11VertexShader</a> interface. If this is <b>NULL</b>, all other parameters will be validated, and if all parameters pass validation this API will return <b>S_FALSE</b> instead of <b>S_OK</b>.
      </param>
    </summary>
  </member>
  <member name="D3D11_BOX">
    <summary>
      <para>Defines a 3D box.</para>
      <para>
        Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d11/ns-d3d11-d3d11_box" />
      </para>
    </summary>
  </member>
  <member name="D3D11_BOX::left">
    <summary>The x position of the left hand side of the box.</summary>
  </member>
  <member name="D3D11_BOX::top">
    <summary>The y position of the top of the box.</summary>
  </member>
  <member name="D3D11_BOX::front">
    <summary>The z position of the front of the box.</summary>
  </member>
  <member name="D3D11_BOX::right">
    <summary>The x position of the right hand side of the box.</summary>
  </member>
  <member name="D3D11_BOX::bottom">
    <summary>The y position of the bottom of the box.</summary>
  </member>
  <member name="D3D11_BOX::back">
    <summary>The z position of the back of the box.</summary>
  </member>
  <member name="D3D11_AUTHENTICATED_QUERY_RESTRICTED_SHARED_RESOURCE_PROCESS_INPUT">
    <summary>
      <para>Contains input data for a D3D11_AUTHENTICATED_QUERY_RESTRICTED_SHARED_RESOURCE_PROCESS query.</para>
      <para>
        Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d11/ns-d3d11-d3d11_authenticated_query_restricted_shared_resource_process_input" />
      </para>
    </summary>
  </member>
  <member name="D3D11_AUTHENTICATED_QUERY_RESTRICTED_SHARED_RESOURCE_PROCESS_INPUT::Input">
    <summary>
      A <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ns-d3d11-d3d11_authenticated_query_input">D3D11_AUTHENTICATED_QUERY_INPUT</a> structure that contains the GUID for the query and other data.
    </summary>
  </member>
  <member name="D3D11_AUTHENTICATED_QUERY_RESTRICTED_SHARED_RESOURCE_PROCESS_INPUT::ProcessIndex">
    <summary>The index of the process.</summary>
  </member>
  <member name="ID3D11VideoContext::VideoProcessorSetOutputBackgroundColor">
    <summary>
      <para>Sets the background color for the video processor.</para>
      <para>
        Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d11/nf-d3d11-id3d11videocontext-videoprocessorsetoutputbackgroundcolor" />
      </para>
      <param name="pVideoProcessor">
        A pointer to the <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nn-d3d11-id3d11videoprocessor">ID3D11VideoProcessor</a> interface. To get this pointer, call <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nf-d3d11-id3d11videodevice-createvideoprocessor">ID3D11VideoDevice::CreateVideoProcessor</a>.
      </param>
      <param name="YCbCr">
        If <b>TRUE</b>, the color is specified as a YCbCr value. Otherwise, the color is specified as an RGB value.
      </param>
      <param name="pColor">
        A pointer to a <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ns-d3d11-d3d11_video_color">D3D11_VIDEO_COLOR</a> structure that specifies the background color.
      </param>
    </summary>
  </member>
  <member name="ID3D11DeviceContext::RSSetState">
    <summary>
      <para>Set the rasterizer state for the rasterizer stage of the pipeline.</para>
      <para>
        Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d11/nf-d3d11-id3d11devicecontext-rssetstate" />
      </para>
      <param name="pRasterizerState">
        Pointer to a rasterizer-state interface (see <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nn-d3d11-id3d11rasterizerstate">ID3D11RasterizerState</a>) to bind to the pipeline.
      </param>
    </summary>
  </member>
  <member name="D3D11_TEX1D_ARRAY_UAV">
    <summary>
      <para>Describes an array of unordered-access 1D texture resources.</para>
      <para>
        Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d11/ns-d3d11-d3d11_tex1d_array_uav" />
      </para>
    </summary>
  </member>
  <member name="D3D11_TEX1D_ARRAY_UAV::MipSlice">
    <summary>The mipmap slice index.</summary>
  </member>
  <member name="D3D11_TEX1D_ARRAY_UAV::FirstArraySlice">
    <summary>The zero-based index of the first array slice to be accessed.</summary>
  </member>
  <member name="D3D11_TEX1D_ARRAY_UAV::ArraySize">
    <summary>The number of slices in the array.</summary>
  </member>
  <member name="ID3D11VideoContext::GetEncryptionBltKey">
    <summary>
      <para>Gets the cryptographic key to decrypt the data returned by the ID3D11VideoContext::EncryptionBlt method.</para>
      <para>
        Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d11/nf-d3d11-id3d11videocontext-getencryptionbltkey" />
      </para>
      <param name="pCryptoSession">
        A pointer to the <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nn-d3d11-id3d11cryptosession">ID3D11CryptoSession</a> interface.
      </param>
      <param name="KeySize">
        The size of the <i>pReadbackKey</i> array, in bytes. The size should match the size of the session key.
      </param>
      <param name="pReadbackKey">A pointer to a byte array that receives the key. The key is encrypted using the session key.</param>
    </summary>
  </member>
  <member name="D3D11_TILE_MAPPING_FLAG">
    <summary>
      <para>Identifies how to perform a tile-mapping operation.</para>
      <para>
        Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d11_2/ne-d3d11_2-d3d11_tile_mapping_flag" />
      </para>
    </summary>
  </member>
  <member name="D3D11_TILE_MAPPING_FLAG::D3D11_TILE_MAPPING_NO_OVERWRITE">
    <summary>Indicates that no overwriting of tiles occurs in the tile-mapping operation.</summary>
  </member>
  <member name="ID3D11Texture1D">
    <summary>
      <para>A 1D texture interface accesses texel data, which is structured memory.</para>
      <para>
        Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d11/nn-d3d11-id3d11texture1d" />
      </para>
    </summary>
  </member>
  <member name="ID3D11Texture2D1::GetDesc1">
    <summary>
      <para>Gets the properties of the texture resource.</para>
      <para>
        Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d11_3/nf-d3d11_3-id3d11texture2d1-getdesc1" />
      </para>
      <param name="pDesc">
        A pointer to a <a href="https://docs.microsoft.com/windows/desktop/api/d3d11_3/ns-d3d11_3-cd3d11_texture2d_desc1">D3D11_TEXTURE2D_DESC1</a> structure that receives the description of the 2D texture.
      </param>
    </summary>
  </member>
  <member name="ID3D11VideoContext1::VideoProcessorGetStreamColorSpace1">
    <summary>
      <para>Gets the color space information for the video processor input stream.</para>
      <para>
        Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d11_1/nf-d3d11_1-id3d11videocontext1-videoprocessorgetstreamcolorspace1" />
      </para>
      <param name="pVideoProcessor">
        A pointer to the <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nn-d3d11-id3d11videoprocessor">ID3D11VideoProcessor</a> interface.
      </param>
      <param name="StreamIndex">An index identifying the input stream.</param>
      <param name="pColorSpace">
        A pointer to a  <a href="https://docs.microsoft.com/windows/desktop/api/dxgicommon/ne-dxgicommon-dxgi_color_space_type">DXGI_COLOR_SPACE_TYPE</a> value that specifies the colorspace for the video processor input stream.
      </param>
    </summary>
  </member>
  <member name="ID3D11CommandList">
    <summary>
      <para>The ID3D11CommandList interface encapsulates a list of graphics commands for play back.</para>
      <para>
        Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d11/nn-d3d11-id3d11commandlist" />
      </para>
    </summary>
  </member>
  <member name="ID3D11Debug::ReportLiveDeviceObjects">
    <summary>
      <para>Report information about a device object's lifetime.</para>
      <para>
        Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d11sdklayers/nf-d3d11sdklayers-id3d11debug-reportlivedeviceobjects" />
      </para>
      <param name="Flags">
        A value from the
        <a href="https://docs.microsoft.com/windows/desktop/api/d3d11sdklayers/ne-d3d11sdklayers-d3d11_rldo_flags">D3D11_RLDO_FLAGS</a> enumeration.
      </param>
    </summary>
  </member>
  <member name="ID3D11DeviceContext::OMGetRenderTargets">
    <summary>
      <para>Get pointers to the resources bound to the output-merger stage.</para>
      <para>
        Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d11/nf-d3d11-id3d11devicecontext-omgetrendertargets" />
      </para>
      <param name="NumViews">Number of render targets to retrieve.</param>
      <param name="ppRenderTargetViews">
        Pointer to an array of <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nn-d3d11-id3d11rendertargetview">ID3D11RenderTargetView</a>s which represent render target views. Specify <b>NULL</b> for this parameter when retrieval of a render target is not needed.
      </param>
      <param name="ppDepthStencilView">
        Pointer to a <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nn-d3d11-id3d11depthstencilview">ID3D11DepthStencilView</a>, which represents a depth-stencil view. Specify <b>NULL</b> for this parameter when retrieval of the depth-stencil view is not needed.
      </param>
    </summary>
  </member>
  <member name="D3D11_TEX2D_ARRAY_RTV">
    <summary>
      <para>Specifies the subresources from an array of 2D textures to use in a render-target view.</para>
      <para>
        Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d11/ns-d3d11-d3d11_tex2d_array_rtv" />
      </para>
    </summary>
  </member>
  <member name="D3D11_TEX2D_ARRAY_RTV::MipSlice">
    <summary>The index of the mipmap level to use mip slice.</summary>
  </member>
  <member name="D3D11_TEX2D_ARRAY_RTV::FirstArraySlice">
    <summary>The index of the first texture to use in an array of textures.</summary>
  </member>
  <member name="D3D11_TEX2D_ARRAY_RTV::ArraySize">
    <summary>
      Number of textures in the array to use in the render target view, starting from <b>FirstArraySlice</b>.
    </summary>
  </member>
  <member name="D3D11_VIDEO_COLOR_RGBA">
    <summary>
      <para>Specifies an RGB color value.</para>
      <para>
        Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d11/ns-d3d11-d3d11_video_color_rgba" />
      </para>
    </summary>
  </member>
  <member name="D3D11_VIDEO_COLOR_RGBA::R">
    <summary>The red value.</summary>
  </member>
  <member name="D3D11_VIDEO_COLOR_RGBA::G">
    <summary>The green value.</summary>
  </member>
  <member name="D3D11_VIDEO_COLOR_RGBA::B">
    <summary>The blue value.</summary>
  </member>
  <member name="D3D11_VIDEO_COLOR_RGBA::A">
    <summary>The alpha value. Values range from 0 (transparent) to 1 (opaque).</summary>
  </member>
  <member name="ID3D11Device::CreateSamplerState">
    <summary>
      <para>Create a sampler-state object that encapsulates sampling information for a texture.</para>
      <para>
        Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d11/nf-d3d11-id3d11device-createsamplerstate" />
      </para>
      <param name="pSamplerDesc">
        Pointer to a sampler state description (see <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ns-d3d11-d3d11_sampler_desc">D3D11_SAMPLER_DESC</a>).
      </param>
      <param name="ppSamplerState">
        Address of a pointer to the sampler state object created (see <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nn-d3d11-id3d11samplerstate">ID3D11SamplerState</a>).
      </param>
    </summary>
  </member>
  <member name="D3D11_VIDEO_PROCESSOR_STEREO_FORMAT">
    <summary>
      <para>Specifies the layout in memory of a stereo 3D video frame.</para>
      <para>
        Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d11/ne-d3d11-d3d11_video_processor_stereo_format" />
      </para>
    </summary>
  </member>
  <member name="D3D11_VIDEO_PROCESSOR_STEREO_FORMAT::D3D11_VIDEO_PROCESSOR_STEREO_FORMAT_MONO">
    <summary>The sample does not contain stereo data.  If the stereo format is not specified, this value is the default.</summary>
  </member>
  <member name="D3D11_VIDEO_PROCESSOR_STEREO_FORMAT::D3D11_VIDEO_PROCESSOR_STEREO_FORMAT_HORIZONTAL">
    <summary>
      Frame 0 and frame 1 are packed side-by-side, as shown in the following diagram.

      <img alt="Side-by-side packing" src="./images/dxgistereo3d02.png"/>

      All drivers that support stereo video must support this format.
    </summary>
  </member>
  <member name="D3D11_VIDEO_PROCESSOR_STEREO_FORMAT::D3D11_VIDEO_PROCESSOR_STEREO_FORMAT_VERTICAL">
    <summary>
      Frame 0 and frame 1 are packed top-to-bottom, as shown in the following diagram.

      <img alt="Top-to-bottom packing" src="./images/dxgistereo3d01.png"/>

      All drivers that support stereo video must support this format.
    </summary>
  </member>
  <member name="D3D11_VIDEO_PROCESSOR_STEREO_FORMAT::D3D11_VIDEO_PROCESSOR_STEREO_FORMAT_SEPARATE">
    <summary>
      Frame 0 and frame 1 are placed in separate resources or in separate texture array elements within the same resource.

      All drivers that support stereo video must support this format.
    </summary>
  </member>
  <member name="D3D11_VIDEO_PROCESSOR_STEREO_FORMAT::D3D11_VIDEO_PROCESSOR_STEREO_FORMAT_MONO_OFFSET">
    <summary>
      The sample contains non-stereo data. However, the driver should create a left/right output of this sample using a specified offset.  The offset is specified in the <i>MonoOffset</i> parameter of the <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nf-d3d11-id3d11videocontext-videoprocessorsetstreamstereoformat">ID3D11VideoContext::VideoProcessorSetStreamStereoFormat</a> method.

      This format is primarily intended for subtitles and other subpicture data, where the entire sample is presented on the same plane.

      Support for this stereo format is optional.
    </summary>
  </member>
  <member name="D3D11_VIDEO_PROCESSOR_STEREO_FORMAT::D3D11_VIDEO_PROCESSOR_STEREO_FORMAT_ROW_INTERLEAVED">
    <summary>
      Frame 0 and frame 1 are packed into interleaved rows, as shown in the following diagram.

      <img alt="Interleaved rows" src="./images/dxgistereo3d03.png"/>

      Support for this stereo format is optional.
    </summary>
  </member>
  <member name="D3D11_VIDEO_PROCESSOR_STEREO_FORMAT::D3D11_VIDEO_PROCESSOR_STEREO_FORMAT_COLUMN_INTERLEAVED">
    <summary>
      Frame 0 and frame 1 are packed into interleaved columns, as shown in the following diagram.

      <img alt="Interleaved columns" src="./images/dxgistereo3d04.png"/>

      Support for this stereo format is optional.
    </summary>
  </member>
  <member name="D3D11_VIDEO_PROCESSOR_STEREO_FORMAT::D3D11_VIDEO_PROCESSOR_STEREO_FORMAT_CHECKERBOARD">
    <summary>
      Frame 0 and frame 1 are packed in a checkerboard format, as shown in the following diagram.

      <img alt="Checkerboard packing" src="./images/dxgistereo3d05.png"/>

      Support for this stereo format is optional.
    </summary>
  </member>
  <member name="ID3D11Device::OpenSharedResource">
    <summary>
      <para>Give a device access to a shared resource created on a different device.</para>
      <para>
        Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d11/nf-d3d11-id3d11device-opensharedresource" />
      </para>
      <param name="hResource">A resource handle. See remarks.</param>
      <param name="ReturnedInterface">The globally unique identifier (GUID) for the resource interface. See remarks.</param>
      <param name="ppResource">Address of a pointer to the resource we are gaining access to.</param>
    </summary>
  </member>
  <member name="D3D11_AUTHENTICATED_QUERY_CRYPTO_SESSION_INPUT">
    <summary>
      <para>Contains input data for a D3D11_AUTHENTICATED_QUERY_CRYPTO_SESSION query.</para>
      <para>
        Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d11/ns-d3d11-d3d11_authenticated_query_crypto_session_input" />
      </para>
    </summary>
  </member>
  <member name="D3D11_AUTHENTICATED_QUERY_CRYPTO_SESSION_INPUT::Input">
    <summary>
      A <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ns-d3d11-d3d11_authenticated_query_input">D3D11_AUTHENTICATED_QUERY_INPUT</a> structure that contains the GUID for the query and other data.
    </summary>
  </member>
  <member name="D3D11_AUTHENTICATED_QUERY_CRYPTO_SESSION_INPUT::DecoderHandle">
    <summary>A handle to a decoder device.</summary>
  </member>
  <member name="D3D11_VIDEO_DECODER_DESC">
    <summary>
      <para>Describes a video stream for a Microsoft Direct3D 11 video decoder or video processor.</para>
      <para>
        Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d11/ns-d3d11-d3d11_video_decoder_desc" />
      </para>
    </summary>
  </member>
  <member name="D3D11_VIDEO_DECODER_DESC::Guid">
    <summary>
      The decoding profile. To get the list of profiles supported by the device, call the <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nf-d3d11-id3d11videodevice-getvideodecoderprofile">ID3D11VideoDevice::GetVideoDecoderProfile</a> method.
    </summary>
  </member>
  <member name="D3D11_VIDEO_DECODER_DESC::SampleWidth">
    <summary>The width of the video frame, in pixels.</summary>
  </member>
  <member name="D3D11_VIDEO_DECODER_DESC::SampleHeight">
    <summary>The height of the video frame, in pixels.</summary>
  </member>
  <member name="D3D11_VIDEO_DECODER_DESC::OutputFormat">
    <summary>
      The output surface format, specified as a <a href="https://docs.microsoft.com/windows/desktop/api/dxgiformat/ne-dxgiformat-dxgi_format">DXGI_FORMAT</a> value.
    </summary>
  </member>
  <member name="ID3D11ShaderTraceFactory::CreateShaderTrace">
    <summary>
      <para>Creates a shader-trace interface for a shader-trace information object.</para>
      <para>
        Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d11shadertracing/nf-d3d11shadertracing-id3d11shadertracefactory-createshadertrace" />
      </para>
      <param name="pShader">
        A pointer to the interface of the shader to create the shader-trace interface for. For example, <i>pShader</i> can be an instance of <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nn-d3d11-id3d11vertexshader">ID3D11VertexShader</a>, <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nn-d3d11-id3d11pixelshader">ID3D11PixelShader</a>, and so on.
      </param>
      <param name="pTraceDesc">
        A pointer to a  <a href="https://docs.microsoft.com/windows/desktop/api/d3d11shadertracing/ns-d3d11shadertracing-d3d11_shader_trace_desc">D3D11_SHADER_TRACE_DESC</a> structure that describes the shader-trace object to create. This parameter cannot be <b>NULL</b>.
      </param>
      <param name="ppShaderTrace">
        A pointer to a variable that receives a pointer to the <a href="https://docs.microsoft.com/windows/desktop/api/d3d11shadertracing/nn-d3d11shadertracing-id3d11shadertrace">ID3D11ShaderTrace</a> interface for the shader-trace object that <b>CreateShaderTrace</b> creates.
      </param>
    </summary>
  </member>
  <member name="D3D11_SHADER_CACHE_SUPPORT_FLAGS">
    <summary>
      <para>Describes the level of support for shader caching in the current graphics driver.</para>
      <para>
        Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d11/ne-d3d11-d3d11_shader_cache_support_flags" />
      </para>
    </summary>
  </member>
  <member name="D3D11_SHADER_CACHE_SUPPORT_FLAGS::D3D11_SHADER_CACHE_SUPPORT_NONE">
    <summary>Indicates that the driver does not support shader caching.</summary>
  </member>
  <member name="D3D11_SHADER_CACHE_SUPPORT_FLAGS::D3D11_SHADER_CACHE_SUPPORT_AUTOMATIC_INPROC_CACHE">
    <summary>Indicates that the driver supports an OS-managed shader cache that stores compiled shaders in memory during the current run of the application.</summary>
  </member>
  <member name="D3D11_SHADER_CACHE_SUPPORT_FLAGS::D3D11_SHADER_CACHE_SUPPORT_AUTOMATIC_DISK_CACHE">
    <summary>Indicates that the driver supports an OS-managed shader cache that stores compiled shaders on disk to accelerate future runs of the application.</summary>
  </member>
  <member name="ID3D11VideoContext::VideoProcessorSetStreamLumaKey">
    <summary>
      <para>Sets the luma key for an input stream on the video processor.</para>
      <para>
        Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d11/nf-d3d11-id3d11videocontext-videoprocessorsetstreamlumakey" />
      </para>
      <param name="pVideoProcessor">
        A pointer to the <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nn-d3d11-id3d11videoprocessor">ID3D11VideoProcessor</a> interface. To get this pointer, call <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nf-d3d11-id3d11videodevice-createvideoprocessor">ID3D11VideoDevice::CreateVideoProcessor</a>.
      </param>
      <param name="StreamIndex">
        The zero-based index of the input stream. To get the maximum number of streams, call <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nf-d3d11-id3d11videoprocessorenumerator-getvideoprocessorcaps">ID3D11VideoProcessorEnumerator::GetVideoProcessorCaps</a> and check the <b>MaxStreamStates</b> structure member.
      </param>
      <param name="Enable">Specifies whether luma keying is enabled.</param>
      <param name="Lower">
        The lower bound for the luma key. The valid range is [0…1]. If <i>Enable</i> is <b>FALSE</b>, this parameter is ignored.
      </param>
      <param name="Upper">
        The upper bound for the luma key. The valid range is [0…1]. If <i>Enable</i> is <b>FALSE</b>, this parameter is ignored.
      </param>
    </summary>
  </member>
  <member name="D3D11_TEX2D_ARRAY_RTV1">
    <summary>
      <para>Describes the subresources from an array of 2D textures to use in a render-target view.</para>
      <para>
        Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d11_3/ns-d3d11_3-d3d11_tex2d_array_rtv1" />
      </para>
    </summary>
  </member>
  <member name="D3D11_TEX2D_ARRAY_RTV1::MipSlice">
    <summary>The index of the mipmap level to use mip slice.</summary>
  </member>
  <member name="D3D11_TEX2D_ARRAY_RTV1::FirstArraySlice">
    <summary>The index of the first texture to use in an array of textures.</summary>
  </member>
  <member name="D3D11_TEX2D_ARRAY_RTV1::ArraySize">
    <summary>
      Number of textures in the array to use in the render-target view, starting from <b>FirstArraySlice</b>.
    </summary>
  </member>
  <member name="D3D11_TEX2D_ARRAY_RTV1::PlaneSlice">
    <summary>The index (plane slice number) of the plane to use in an array of textures.</summary>
  </member>
  <member name="D3D11_FEATURE_DATA_SHADER_CACHE">
    <summary>
      <para>Describes the level of shader caching supported in the current graphics driver.</para>
      <para>
        Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d11/ns-d3d11-d3d11_feature_data_shader_cache" />
      </para>
    </summary>
  </member>
  <member name="D3D11_FEATURE_DATA_SHADER_CACHE::SupportFlags">
    <summary>Indicates the level of caching supported.</summary>
  </member>
  <member name="ID3D11Device2::GetResourceTiling">
    <summary>
      <para>Gets info about how a tiled resource is broken into tiles.</para>
      <para>
        Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d11_2/nf-d3d11_2-id3d11device2-getresourcetiling" />
      </para>
      <param name="pTiledResource">A pointer to the tiled resource to get info about.</param>
      <param name="pNumTilesForEntireResource">A pointer to a variable that receives the number of tiles needed to store the entire tiled resource.</param>
      <param name="pPackedMipDesc">
        A pointer to a <a href="https://docs.microsoft.com/windows/desktop/api/d3d11_2/ns-d3d11_2-d3d11_packed_mip_desc">D3D11_PACKED_MIP_DESC</a> structure that <b>GetResourceTiling</b> fills with info about how the tiled resource's mipmaps are packed.
      </param>
      <param name="pStandardTileShapeForNonPackedMips">
        A pointer to a <a href="https://docs.microsoft.com/windows/desktop/api/d3d11_2/ns-d3d11_2-d3d11_tile_shape">D3D11_TILE_SHAPE</a> structure that <b>GetResourceTiling</b> fills with info about the tile shape. This is info about how pixels fit in the tiles, independent of tiled resource's dimensions,
        not including packed mipmaps.  If the entire tiled resource is packed, this parameter is meaningless because the tiled resource has no defined layout
        for packed mipmaps.
        In this situation, <b>GetResourceTiling</b> sets the members of <b>D3D11_TILE_SHAPE</b> to zeros.
      </param>
      <param name="pNumSubresourceTilings">
        A pointer to a variable that contains the number of tiles in the subresource. On input, this is the number of subresources to query tilings for; on output, this is the number that was actually retrieved at <i>pSubresourceTilingsForNonPackedMips</i> (clamped to what's available).
      </param>
      <param name="FirstSubresourceTilingToGet">
        The number of the first subresource tile to get. <b>GetResourceTiling</b> ignores this parameter if the number that <i>pNumSubresourceTilings</i> points to is 0.
      </param>
      <param name="pSubresourceTilingsForNonPackedMips">
        A pointer to a <a href="https://docs.microsoft.com/windows/desktop/api/d3d11_2/ns-d3d11_2-d3d11_subresource_tiling">D3D11_SUBRESOURCE_TILING</a> structure that <b>GetResourceTiling</b> fills with info about subresource tiles.


        If subresource tiles are part of packed mipmaps, <b>GetResourceTiling</b> sets the members of <a href="https://docs.microsoft.com/windows/desktop/api/d3d11_2/ns-d3d11_2-d3d11_subresource_tiling">D3D11_SUBRESOURCE_TILING</a> to zeros, except the <b>StartTileIndexInOverallResource</b> member, which <b>GetResourceTiling</b> sets to <b>D3D11_PACKED_TILE</b> (0xffffffff). The <b>D3D11_PACKED_TILE</b> constant indicates that the whole
        <b>D3D11_SUBRESOURCE_TILING</b> structure is meaningless for this situation, and the info that the <i>pPackedMipDesc</i> parameter points to applies.
      </param>
    </summary>
  </member>
  <member name="ID3D11Device::CreateBuffer">
    <summary>
      <para>Creates a buffer (vertex buffer, index buffer, or shader-constant buffer).</para>
      <para>
        Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d11/nf-d3d11-id3d11device-createbuffer" />
      </para>
      <param name="pDesc">
        A pointer to a <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ns-d3d11-d3d11_buffer_desc">D3D11_BUFFER_DESC</a> structure that describes the buffer.
      </param>
      <param name="pInitialData">
        A pointer to a <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ns-d3d11-d3d11_subresource_data">D3D11_SUBRESOURCE_DATA</a> structure that describes  the initialization data;
        use <b>NULL</b> to allocate space only (with the exception that it cannot be <b>NULL</b> if the usage flag is <b>D3D11_USAGE_IMMUTABLE</b>).


        If you don't pass anything to <i>pInitialData</i>, the initial content of the memory for the buffer is undefined.
        In this case, you need to write the buffer content some other way before the resource is read.
      </param>
      <param name="ppBuffer">
        Address of a pointer to the <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nn-d3d11-id3d11buffer">ID3D11Buffer</a> interface for the buffer object created.
        Set this parameter to <b>NULL</b> to validate the other input parameters (<b>S_FALSE</b> indicates a pass).
      </param>
    </summary>
  </member>
  <member name="ID3D11Device4">
    <summary>
      <para>The device interface represents a virtual adapter; it is used to create resources. ID3D11Device4 adds new methods to those in ID3D11Device3, such as RegisterDeviceRemovedEvent and UnregisterDeviceRemoved.</para>
      <para>
        Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d11_4/nn-d3d11_4-id3d11device4" />
      </para>
    </summary>
  </member>
  <member name="D3D11_DEPTH_STENCIL_VIEW_DESC">
    <summary>
      <para>Specifies the subresources of a texture that are accessible from a depth-stencil view.</para>
      <para>
        Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d11/ns-d3d11-d3d11_depth_stencil_view_desc" />
      </para>
    </summary>
  </member>
  <member name="D3D11_DEPTH_STENCIL_VIEW_DESC::Format">
    <summary>
      Resource data  format (see <a href="https://docs.microsoft.com/windows/desktop/api/dxgiformat/ne-dxgiformat-dxgi_format">DXGI_FORMAT</a>). See remarks for allowable formats.
    </summary>
  </member>
  <member name="D3D11_DEPTH_STENCIL_VIEW_DESC::ViewDimension">
    <summary>
      Type of resource (see <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ne-d3d11-d3d11_dsv_dimension">D3D11_DSV_DIMENSION</a>). Specifies how a depth-stencil resource will be accessed; the value is stored in the
      union in this structure.
    </summary>
  </member>
  <member name="D3D11_DEPTH_STENCIL_VIEW_DESC::Flags">
    <summary>
      A value that describes whether the texture is read only.  Pass 0 to specify that it is not read only; otherwise, pass one of the members of
      the <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ne-d3d11-d3d11_dsv_flag">D3D11_DSV_FLAG</a> enumerated type.
    </summary>
  </member>
  <member name="D3D11_DEPTH_STENCIL_VIEW_DESC::Texture1D">
    <summary>
      Specifies a 1D texture subresource (see <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ns-d3d11-d3d11_tex1d_dsv">D3D11_TEX1D_DSV</a>).
    </summary>
  </member>
  <member name="D3D11_DEPTH_STENCIL_VIEW_DESC::Texture1DArray">
    <summary>
      Specifies an array of 1D texture subresources (see <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ns-d3d11-d3d11_tex1d_array_dsv">D3D11_TEX1D_ARRAY_DSV</a>).
    </summary>
  </member>
  <member name="D3D11_DEPTH_STENCIL_VIEW_DESC::Texture2D">
    <summary>
      Specifies a 2D texture subresource (see <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ns-d3d11-d3d11_tex2d_dsv">D3D11_TEX2D_DSV</a>).
    </summary>
  </member>
  <member name="D3D11_DEPTH_STENCIL_VIEW_DESC::Texture2DArray">
    <summary>
      Specifies an array of 2D texture subresources (see <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ns-d3d11-d3d11_tex2d_array_dsv">D3D11_TEX2D_ARRAY_DSV</a>).
    </summary>
  </member>
  <member name="D3D11_DEPTH_STENCIL_VIEW_DESC::Texture2DMS">
    <summary>
      Specifies a multisampled 2D texture (see <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ns-d3d11-d3d11_tex2dms_dsv">D3D11_TEX2DMS_DSV</a>).
    </summary>
  </member>
  <member name="D3D11_DEPTH_STENCIL_VIEW_DESC::Texture2DMSArray">
    <summary>
      Specifies an array of multisampled 2D textures (see <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ns-d3d11-d3d11_tex2dms_array_dsv">D3D11_TEX2DMS_ARRAY_DSV</a>).
    </summary>
  </member>
  <member name="ID3D11DeviceContext::ClearUnorderedAccessViewFloat">
    <summary>
      <para>Clears an unordered access resource with a float value.</para>
      <para>
        Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d11/nf-d3d11-id3d11devicecontext-clearunorderedaccessviewfloat" />
      </para>
      <param name="pUnorderedAccessView">
        The <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nn-d3d11-id3d11unorderedaccessview">ID3D11UnorderedAccessView</a> to clear.
      </param>
      <param name="Values">Values to copy to corresponding channels, see remarks.</param>
    </summary>
  </member>
  <member name="ID3D11DeviceContext::VSGetShaderResources">
    <summary>
      <para>Get the vertex shader resources.</para>
      <para>
        Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d11/nf-d3d11-id3d11devicecontext-vsgetshaderresources" />
      </para>
      <param name="StartSlot">Index into the device's zero-based array to begin getting shader resources from (ranges from 0 to D3D11_COMMONSHADER_INPUT_RESOURCE_SLOT_COUNT - 1).</param>
      <param name="NumViews">The number of resources to get from the device. Up to a maximum of 128 slots are available for shader resources (ranges from 0 to D3D11_COMMONSHADER_INPUT_RESOURCE_SLOT_COUNT - StartSlot).</param>
      <param name="ppShaderResourceViews">
        Array of <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nn-d3d11-id3d11shaderresourceview">shader resource view</a> interfaces to be returned by the device.
      </param>
    </summary>
  </member>
  <member name="ID3D11DeviceContext1::CSGetConstantBuffers1">
    <summary>
      <para>Gets the constant buffers that the compute-shader stage uses.</para>
      <para>
        Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d11_1/nf-d3d11_1-id3d11devicecontext1-csgetconstantbuffers1" />
      </para>
      <param name="StartSlot">Index into the device's zero-based array to begin retrieving constant buffers from (ranges from 0 to D3D11_COMMONSHADER_CONSTANT_BUFFER_API_SLOT_COUNT - 1).</param>
      <param name="NumBuffers">
        Number of buffers to retrieve (ranges from 0 to D3D11_COMMONSHADER_CONSTANT_BUFFER_API_SLOT_COUNT - <i>StartSlot</i>).
      </param>
      <param name="ppConstantBuffers">Array of constant buffer interface pointers to be returned by the method.</param>
      <param name="pFirstConstant">
        A pointer to an array that receives the offsets into the buffers that  <i>ppConstantBuffers</i> specifies. Each offset specifies where, from the shader's point of view, each constant buffer starts.  Each offset is measured in shader constants, which are 16 bytes (4*32-bit components).  Therefore, an offset of 2 indicates that the start of the associated constant buffer is 32 bytes into the constant buffer. The runtime sets <i>pFirstConstant</i> to <b>NULL</b> if the buffers do not have offsets.
      </param>
      <param name="pNumConstants">
        A pointer to an array that receives the numbers of constants in the buffers that  <i>ppConstantBuffers</i> specifies. Each number specifies the number of constants that are contained in the constant buffer that the shader uses. Each number of constants starts from its respective offset that is specified in the <i>pFirstConstant</i> array. The runtime sets <i>pNumConstants</i> to <b>NULL</b> if it doesn't specify the numbers of constants in each buffer.
      </param>
    </summary>
  </member>
  <member name="ID3D11VideoContext::VideoProcessorGetStreamPalette">
    <summary>
      <para>Gets the color-palette entries for an input stream on the video processor.</para>
      <para>
        Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d11/nf-d3d11-id3d11videocontext-videoprocessorgetstreampalette" />
      </para>
      <param name="pVideoProcessor">
        A pointer to the <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nn-d3d11-id3d11videoprocessor">ID3D11VideoProcessor</a> interface. To get this pointer, call <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nf-d3d11-id3d11videodevice-createvideoprocessor">ID3D11VideoDevice::CreateVideoProcessor</a>.
      </param>
      <param name="StreamIndex">
        The zero-based index of the input stream. To get the maximum number of streams, call <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nf-d3d11-id3d11videoprocessorenumerator-getvideoprocessorcaps">ID3D11VideoProcessorEnumerator::GetVideoProcessorCaps</a> and check the <b>MaxStreamStates</b> structure member.
      </param>
      <param name="Count">
        The number of entries in the <i>pEntries</i> array.
      </param>
      <param name="pEntries">
        A pointer to a <b>UINT</b> array allocated by the caller. The method fills the array with the palette entries. For RGB streams, the palette entries use the <b>DXGI_FORMAT_B8G8R8A8</b> representation. For YCbCr streams, the palette entries use the <b>DXGI_FORMAT_AYUV</b> representation.
      </param>
    </summary>
  </member>
  <member name="D3D11_FILTER_REDUCTION_TYPE">
    <summary>
      <para>Specifies the type of sampler filter reduction.</para>
      <para>
        Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d11/ne-d3d11-d3d11_filter_reduction_type" />
      </para>
    </summary>
  </member>
  <member name="D3D11_FILTER_REDUCTION_TYPE::D3D11_FILTER_REDUCTION_TYPE_STANDARD">
    <summary>Indicates standard (default) filter reduction.</summary>
  </member>
  <member name="D3D11_FILTER_REDUCTION_TYPE::D3D11_FILTER_REDUCTION_TYPE_COMPARISON">
    <summary>Indicates a comparison filter reduction.</summary>
  </member>
  <member name="D3D11_FILTER_REDUCTION_TYPE::D3D11_FILTER_REDUCTION_TYPE_MINIMUM">
    <summary>Indicates minimum filter reduction.</summary>
  </member>
  <member name="D3D11_FILTER_REDUCTION_TYPE::D3D11_FILTER_REDUCTION_TYPE_MAXIMUM">
    <summary>Indicates maximum filter reduction.</summary>
  </member>
  <member name="D3D11_TEX3D_RTV">
    <summary>
      <para>Specifies the subresources from a 3D texture to use in a render-target view.</para>
      <para>
        Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d11/ns-d3d11-d3d11_tex3d_rtv" />
      </para>
    </summary>
  </member>
  <member name="D3D11_TEX3D_RTV::MipSlice">
    <summary>The index of the mipmap level to use mip slice.</summary>
  </member>
  <member name="D3D11_TEX3D_RTV::FirstWSlice">
    <summary>First depth level to use.</summary>
  </member>
  <member name="D3D11_TEX3D_RTV::WSize">
    <summary>
      Number of depth levels to use in the render-target view, starting from <b>FirstWSlice</b>. A value of -1 indicates all of the slices along the w axis, starting from <b>FirstWSlice</b>.
    </summary>
  </member>
  <member name="ID3D11ModuleInstance::BindSampler">
    <summary>
      <para>Rebinds a sampler from source slot to destination slot.</para>
      <para>
        Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d11shader/nf-d3d11shader-id3d11moduleinstance-bindsampler" />
      </para>
      <param name="uSrcSlot">The first source slot number for rebinding.</param>
      <param name="uDstSlot">The first destination slot number for rebinding.</param>
      <param name="uCount">The number of slots for rebinding.</param>
    </summary>
  </member>
  <member name="ID3D11Fence::CreateSharedHandle">
    <summary>
      <para>Creates a shared handle to a fence object.</para>
      <para>
        Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d11_3/nf-d3d11_3-id3d11fence-createsharedhandle" />
      </para>
      <param name="pAttributes">
        A pointer to a <a href="https://docs.microsoft.com/previous-versions/windows/desktop/legacy/aa379560(v=vs.85)">SECURITY_ATTRIBUTES</a>structure that contains two separate but related data members: an optional security descriptor, and a <b>Boolean</b>value that determines whether child processes can inherit the returned handle.


        Set this parameter to <b>NULL</b> if you want child processes that the
        application might create to not  inherit  the handle returned by
        <b>CreateSharedHandle</b>, and if you want the resource that is associated with the returned handle to get a default security
        descriptor.


        The <b>lpSecurityDescriptor</b> member of the structure specifies a
        <a href="https://docs.microsoft.com/windows/desktop/api/winnt/ns-winnt-security_descriptor">SECURITY_DESCRIPTOR</a> for the resource.
        Set this member to <b>NULL</b> if you want the runtime to assign a default security descriptor to the resource that is associated with the returned handle.
        The ACLs in the default security descriptor for the resource come from the primary or impersonation token of the creator.
        For more info, see <a href="https://docs.microsoft.com/windows/desktop/Sync/synchronization-object-security-and-access-rights">Synchronization Object Security and Access Rights</a>.
      </param>
      <param name="dwAccess">Currently the only value this parameter accepts is GENERIC_ALL.</param>
      <param name="lpName">
        A <b>NULL</b>-terminated <b>UNICODE</b> string that contains the name to associate with the shared heap.
        The name is limited to MAX_PATH characters.
        Name comparison is case-sensitive.


        If <i>Name</i> matches the name of an existing resource, <b>CreateSharedHandle</b> fails with <a href="https://docs.microsoft.com/windows/desktop/direct3ddxgi/dxgi-error">DXGI_ERROR_NAME_ALREADY_EXISTS</a>.
        This occurs because these objects share the same namespace.


        The name can have a "Global\" or "Local\" prefix to explicitly create the object in the global or session namespace.
        The remainder of the name can contain any character except the backslash character (\\).
        For more information, see
        <a href="https://docs.microsoft.com/windows/desktop/TermServ/kernel-object-namespaces">Kernel Object Namespaces</a>.
        Fast user switching is implemented using Terminal Services sessions.
        Kernel object names must follow the guidelines outlined for Terminal Services so that applications can support multiple users.


        The object can be created in a private namespace.
        For more information, see <a href="https://docs.microsoft.com/windows/desktop/Sync/object-namespaces">Object Namespaces</a>.
      </param>
      <param name="pHandle">
        A pointer to a variable that receives the NT HANDLE value to the resource to share.
        You can use this handle in calls to access the resource.
      </param>
    </summary>
  </member>
  <member name="D3D11_QUERY_DATA_SO_STATISTICS">
    <summary>
      <para>Query information about the amount of data streamed out to the stream-output buffers in between ID3D11DeviceContext::Begin and ID3D11DeviceContext::End.</para>
      <para>
        Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d11/ns-d3d11-d3d11_query_data_so_statistics" />
      </para>
    </summary>
  </member>
  <member name="D3D11_QUERY_DATA_SO_STATISTICS::NumPrimitivesWritten">
    <summary>Number of primitives (that is, points, lines, and triangles) written to the stream-output buffers.</summary>
  </member>
  <member name="D3D11_QUERY_DATA_SO_STATISTICS::PrimitivesStorageNeeded">
    <summary>Number of primitives that would have been written to the stream-output buffers if there had been enough space for them all.</summary>
  </member>
  <member name="D3D11_BLEND_DESC">
    <summary>
      <para>Describes the blend state that you use in a call to ID3D11Device::CreateBlendState to create a blend-state object.</para>
      <para>
        Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d11/ns-d3d11-d3d11_blend_desc" />
      </para>
    </summary>
  </member>
  <member name="D3D11_BLEND_DESC::AlphaToCoverageEnable">
    <summary>
      Specifies whether to use alpha-to-coverage as a multisampling technique when setting a pixel to a render target. For more info about using alpha-to-coverage, see <a href="https://docs.microsoft.com/windows/desktop/direct3d11/d3d10-graphics-programming-guide-blend-state">Alpha-To-Coverage</a>.
    </summary>
  </member>
  <member name="D3D11_BLEND_DESC::IndependentBlendEnable">
    <summary>
      Specifies whether to enable independent blending in simultaneous render targets.  Set to <b>TRUE</b> to enable independent blending. If set to <b>FALSE</b>, only the RenderTarget[0] members are used; RenderTarget[1..7] are ignored.
    </summary>
  </member>
  <member name="D3D11_BLEND_DESC::RenderTarget">
    <summary>
      An array of <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ns-d3d11-d3d11_render_target_blend_desc">D3D11_RENDER_TARGET_BLEND_DESC</a> structures that describe the blend states for render targets; these correspond to the eight render targets
      that can be bound to the <a href="https://docs.microsoft.com/windows/desktop/direct3d11/d3d10-graphics-programming-guide-output-merger-stage">output-merger stage</a> at one time.
    </summary>
  </member>
  <member name="D3D11_AUTHENTICATED_QUERY_CRYPTO_SESSION_OUTPUT">
    <summary>
      <para>Contains the response to a D3D11_AUTHENTICATED_QUERY_CRYPTO_SESSION query.</para>
      <para>
        Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d11/ns-d3d11-d3d11_authenticated_query_crypto_session_output" />
      </para>
    </summary>
  </member>
  <member name="D3D11_AUTHENTICATED_QUERY_CRYPTO_SESSION_OUTPUT::Output">
    <summary>
      A <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ns-d3d11-d3d11_authenticated_query_output">D3D11_AUTHENTICATED_QUERY_OUTPUT</a> structure that contains a Message Authentication Code (MAC) and other data.
    </summary>
  </member>
  <member name="D3D11_AUTHENTICATED_QUERY_CRYPTO_SESSION_OUTPUT::DecoderHandle">
    <summary>A handle to a decoder device.</summary>
  </member>
  <member name="D3D11_AUTHENTICATED_QUERY_CRYPTO_SESSION_OUTPUT::CryptoSessionHandle">
    <summary>A handle to the cryptographic session that is associated with the decoder device.</summary>
  </member>
  <member name="D3D11_AUTHENTICATED_QUERY_CRYPTO_SESSION_OUTPUT::DeviceHandle">
    <summary>A handle to the Direct3D device that is associated with the decoder device.</summary>
  </member>
  <member name="D3D11_SAMPLER_DESC">
    <summary>
      <para>Describes a sampler state.</para>
      <para>
        Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d11/ns-d3d11-d3d11_sampler_desc" />
      </para>
    </summary>
  </member>
  <member name="D3D11_SAMPLER_DESC::Filter">
    <summary>
      Filtering method to use when sampling a texture (see <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ne-d3d11-d3d11_filter">D3D11_FILTER</a>).
    </summary>
  </member>
  <member name="D3D11_SAMPLER_DESC::AddressU">
    <summary>
      Method to use for resolving a u texture coordinate that is outside the 0 to 1 range (see <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ne-d3d11-d3d11_texture_address_mode">D3D11_TEXTURE_ADDRESS_MODE</a>).
    </summary>
  </member>
  <member name="D3D11_SAMPLER_DESC::AddressV">
    <summary>Method to use for resolving a v texture coordinate that is outside the 0 to 1 range.</summary>
  </member>
  <member name="D3D11_SAMPLER_DESC::AddressW">
    <summary>Method to use for resolving a w texture coordinate that is outside the 0 to 1 range.</summary>
  </member>
  <member name="D3D11_SAMPLER_DESC::MipLODBias">
    <summary>Offset from the calculated mipmap level. For example, if Direct3D calculates that a texture should be sampled at mipmap level 3 and MipLODBias is 2, then the texture will be sampled at mipmap level 5.</summary>
  </member>
  <member name="D3D11_SAMPLER_DESC::MaxAnisotropy">
    <summary>Clamping value used if D3D11_FILTER_ANISOTROPIC or D3D11_FILTER_COMPARISON_ANISOTROPIC is specified in Filter. Valid values are between 1 and 16.</summary>
  </member>
  <member name="D3D11_SAMPLER_DESC::ComparisonFunc">
    <summary>
      A function that compares sampled data against existing sampled data. The function options are listed in <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ne-d3d11-d3d11_comparison_func">D3D11_COMPARISON_FUNC</a>.
    </summary>
  </member>
  <member name="D3D11_SAMPLER_DESC::BorderColor">
    <summary>Border color to use if D3D11_TEXTURE_ADDRESS_BORDER is specified for AddressU, AddressV, or AddressW. Range must be between 0.0 and 1.0 inclusive.</summary>
  </member>
  <member name="D3D11_SAMPLER_DESC::MinLOD">
    <summary>Lower end of the mipmap range to clamp access to, where 0 is the largest and most detailed mipmap level and any level higher than that is less detailed.</summary>
  </member>
  <member name="D3D11_SAMPLER_DESC::MaxLOD">
    <summary>Upper end of the mipmap range to clamp access to, where 0 is the largest and most detailed mipmap level and any level higher than that is less detailed. This value must be greater than or equal to MinLOD. To have no upper limit on LOD set this to a large value such as D3D11_FLOAT32_MAX.</summary>
  </member>
  <member name="ID3D11Multithread::Leave">
    <summary>
      <para>Leave a device's critical section.</para>
      <para>
        Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d11_4/nf-d3d11_4-id3d11multithread-leave" />
      </para>
    </summary>
  </member>
  <member name="D3D11_VIDEO_PROCESSOR_STREAM">
    <summary>
      <para>Contains stream-level data for the ID3D11VideoContext::VideoProcessorBlt method.</para>
      <para>
        Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d11/ns-d3d11-d3d11_video_processor_stream" />
      </para>
    </summary>
  </member>
  <member name="D3D11_VIDEO_PROCESSOR_STREAM::Enable">
    <summary>
      Specifies whether this input stream is enabled. If the value is <b>TRUE</b>, the <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nf-d3d11-id3d11videocontext-videoprocessorblt">VideoProcessorBlt</a> method blits this stream to the output surface. Otherwise, this stream is not blitted.

      The maximum number of streams that can be enabled at one time is given in the <b>MaxInputStreams</b> member of the <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ns-d3d11-d3d11_video_processor_caps">D3D11_VIDEO_PROCESSOR_CAPS</a> structure.
    </summary>
  </member>
  <member name="D3D11_VIDEO_PROCESSOR_STREAM::OutputIndex">
    <summary>The zero-based index number of the output frame.</summary>
  </member>
  <member name="D3D11_VIDEO_PROCESSOR_STREAM::InputFrameOrField">
    <summary>The zero-based index number of the input frame or field.</summary>
  </member>
  <member name="D3D11_VIDEO_PROCESSOR_STREAM::PastFrames">
    <summary>The number of past reference frames.</summary>
  </member>
  <member name="D3D11_VIDEO_PROCESSOR_STREAM::FutureFrames">
    <summary>The number of future reference frames.</summary>
  </member>
  <member name="D3D11_VIDEO_PROCESSOR_STREAM::ppPastSurfaces">
    <summary>
      A pointer to an array of <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nn-d3d11-id3d11videoprocessorinputview">ID3D11VideoProcessorInputView</a> pointers, allocated by the caller. This array contains the past reference frames for the video processing operation. The number of elements in the array is equal to <b>PastFrames</b>.
    </summary>
  </member>
  <member name="D3D11_VIDEO_PROCESSOR_STREAM::pInputSurface">
    <summary>
      A pointer to the <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nn-d3d11-id3d11videoprocessorinputview">ID3D11VideoProcessorInputView</a> interface of the surface that contains the current input frame.
    </summary>
  </member>
  <member name="D3D11_VIDEO_PROCESSOR_STREAM::ppFutureSurfaces">
    <summary>
      A pointer to an array of <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nn-d3d11-id3d11videoprocessorinputview">ID3D11VideoProcessorInputView</a> pointers, allocated by the caller. This array contains the future reference frames for the video processing operation. The number of elements in the array is equal to <b>FutureFrames</b>.
    </summary>
  </member>
  <member name="D3D11_VIDEO_PROCESSOR_STREAM::ppPastSurfacesRight">
    <summary>
      If the stereo 3D format is <b>D3D11_VIDEO_PROCESSOR_STEREO_FORMAT_SEPARATE</b>, this member points to an array that contains the past reference frames for the right view. The number of elements in the array is equal to <b>PastFrames</b>.

      For any other stereo 3D format, set this member to <b>NULL</b>. For more information, see <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nf-d3d11-id3d11videocontext-videoprocessorsetstreamstereoformat">ID3D11VideoContext::VideoProcessorSetStreamStereoFormat</a>.
    </summary>
  </member>
  <member name="D3D11_VIDEO_PROCESSOR_STREAM::pInputSurfaceRight">
    <summary>
      If the stereo 3D format is <b>D3D11_VIDEO_PROCESSOR_STEREO_FORMAT_SEPARATE</b>, this member contains a pointer to the current input frame for the right view.

      For any other stereo 3D format, set this member to <b>NULL</b>.
    </summary>
  </member>
  <member name="D3D11_VIDEO_PROCESSOR_STREAM::ppFutureSurfacesRight">
    <summary>
      If the stereo 3D format is <b>D3D11_VIDEO_PROCESSOR_STEREO_FORMAT_SEPARATE</b>, this member points to an array that contains the future reference frames for the right view. The number of elements in the array is equal to <b>FutureFrames</b>.

      For any other stereo 3D format, set this member to <b>NULL</b>.
    </summary>
  </member>
  <member name="ID3D11CryptoSession::GetDecoderProfile">
    <summary>
      <para>Gets the decoding profile of the session.</para>
      <para>
        Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d11/nf-d3d11-id3d11cryptosession-getdecoderprofile" />
      </para>
      <param name="pDecoderProfile">
        Receives the decoding profile. For a list of possible values, see <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nf-d3d11-id3d11videodevice-getvideodecoderprofile">ID3D11VideoDevice::GetVideoDecoderProfile</a>.
      </param>
    </summary>
  </member>
  <member name="ID3D11RenderTargetView::GetDesc">
    <summary>
      <para>Get the properties of a render target view.</para>
      <para>
        Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d11/nf-d3d11-id3d11rendertargetview-getdesc" />
      </para>
      <param name="pDesc">
        Pointer to the description of a render target view (see <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ns-d3d11-d3d11_render_target_view_desc">D3D11_RENDER_TARGET_VIEW_DESC</a>).
      </param>
    </summary>
  </member>
  <member name="ID3D11VideoContext::VideoProcessorSetStreamStereoFormat">
    <summary>
      <para>Enables or disables stereo 3D video for an input stream on the video processor.</para>
      <para>
        Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d11/nf-d3d11-id3d11videocontext-videoprocessorsetstreamstereoformat" />
      </para>
      <param name="pVideoProcessor">
        A pointer to the <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nn-d3d11-id3d11videoprocessor">ID3D11VideoProcessor</a> interface. To get this pointer, call <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nf-d3d11-id3d11videodevice-createvideoprocessor">ID3D11VideoDevice::CreateVideoProcessor</a>.
      </param>
      <param name="StreamIndex">
        The zero-based index of the input stream. To get the maximum number of streams, call <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nf-d3d11-id3d11videoprocessorenumerator-getvideoprocessorcaps">ID3D11VideoProcessorEnumerator::GetVideoProcessorCaps</a> and check the <b>MaxStreamStates</b> structure member.
      </param>
      <param name="Enable">
        Specifies whether stereo 3D is enabled for this stream. If the value is <b>FALSE</b>, the remaining parameters of this method are ignored.
      </param>
      <param name="Format">
        Specifies the layout of the two stereo views in memory, as a <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ne-d3d11-d3d11_video_processor_stereo_format">D3D11_VIDEO_PROCESSOR_STEREO_FORMAT</a> value.
      </param>
      <param name="LeftViewFrame0">
        If <b>TRUE</b>, frame 0 contains the left view. Otherwise, frame 0 contains the right view.

        This parameter is ignored for the following stereo formats:

        <ul>
          <li>
            <b>D3D11_VIDEO_PROCESSOR_STEREO_FORMAT_MONO </b>
          </li>
          <li>
            <b>D3D11_VIDEO_PROCESSOR_STEREO_FORMAT_MONO_OFFSET</b>
          </li>
        </ul>
      </param>
      <param name="BaseViewFrame0">
        If <b>TRUE</b>, frame 0 contains the base view. Otherwise, frame 1 contains the base view.

        This parameter is ignored for the following stereo formats:

        <ul>
          <li>
            <b>D3D11_VIDEO_PROCESSOR_STEREO_FORMAT_MONO </b>
          </li>
          <li>
            <b>D3D11_VIDEO_PROCESSOR_STEREO_FORMAT_MONO_OFFSET</b>
          </li>
          <li>
            When <b>D3D11_VIDEO_PROCESSOR_STEREO_FORMAT_SEPARATE</b> is used and the application wants to convert the stereo data to mono, it can either:<ul>
              <li>Specify the base view as a mono input.</li>
              <li>
                Specify both resources and allow the driver to do the conversion from the base view.  In this case, <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ns-d3d11-d3d11_video_processor_stream">D3D11_VIDEO_PROCESSOR_STREAM.hInputSurface</a> is considered frame 0 and <b>D3D11_VIDEO_PROCESSOR_STREAM.hInputSurfaceRight</b> is considered frame 1.
              </li>
            </ul>
          </li>
        </ul>
      </param>
      <param name="FlipMode">
        A flag from the  <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ne-d3d11-d3d11_video_processor_stereo_flip_mode">D3D11_VIDEO_PROCESSOR_STEREO_FLIP_MODE</a> enumeration, specifying whether one of the views is flipped.
      </param>
      <param name="MonoOffset">
        For <b>D3D11_VIDEO_PROCESSOR_STEREO_FORMAT_MONO_OFFSET</b> format, this parameter specifies how to generate the left and right views:

        <ul>
          <li>
            If <i>MonoOffset</i> is positive, the right view is shifted to the right by that many pixels, and the left view is shifted to the left by the same amount.
          </li>
          <li>
            If <i>MonoOffset</i> is negative, the right view is shifted to the left by that many pixels, and the left view is shifted to right by the same amount.
          </li>
        </ul>
        If <i>Format</i> is not <b>D3D11_VIDEO_PROCESSOR_STEREO_FORMAT_MONO_OFFSET</b>, this parameter must be zero.
      </param>
    </summary>
  </member>
  <member name="ID3D11VideoContext1::VideoProcessorSetStreamColorSpace1">
    <summary>
      <para>Sets the color space information for the video processor input stream.</para>
      <para>
        Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d11_1/nf-d3d11_1-id3d11videocontext1-videoprocessorsetstreamcolorspace1" />
      </para>
      <param name="pVideoProcessor">
        A pointer to the <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nn-d3d11-id3d11videoprocessor">ID3D11VideoProcessor</a> interface.
      </param>
      <param name="StreamIndex">An index identifying the input stream.</param>
      <param name="ColorSpace">
        A  <a href="https://docs.microsoft.com/windows/desktop/api/dxgicommon/ne-dxgicommon-dxgi_color_space_type">DXGI_COLOR_SPACE_TYPE</a> value that specifies the colorspace for the video processor input stream.
      </param>
    </summary>
  </member>
  <member name="ID3D11DeviceContext::HSGetShader">
    <summary>
      <para>Get the hull shader currently set on the device.</para>
      <para>
        Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d11/nf-d3d11-id3d11devicecontext-hsgetshader" />
      </para>
      <param name="ppHullShader">
        Address of a pointer to a hull shader (see <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nn-d3d11-id3d11hullshader">ID3D11HullShader</a>) to be returned by the method.
      </param>
      <param name="ppClassInstances">
        Pointer to an array of class instance interfaces (see <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nn-d3d11-id3d11classinstance">ID3D11ClassInstance</a>).
      </param>
      <param name="pNumClassInstances">The number of class-instance elements in the array.</param>
    </summary>
  </member>
  <member name="D3D11_CLEAR_FLAG">
    <summary>
      <para>Specifies the parts of the depth stencil to clear.</para>
      <para>
        Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d11/ne-d3d11-d3d11_clear_flag" />
      </para>
    </summary>
  </member>
  <member name="D3D11_CLEAR_FLAG::D3D11_CLEAR_DEPTH">
    <summary>Clear the depth buffer, using fast clear if possible, then place the resource in a compressed state.</summary>
  </member>
  <member name="D3D11_CLEAR_FLAG::D3D11_CLEAR_STENCIL">
    <summary>Clear the stencil buffer, using fast clear if possible, then place the resource in a compressed state.</summary>
  </member>
  <member name="ID3D11Device::CreateInputLayout">
    <summary>
      <para>Create an input-layout object to describe the input-buffer data for the input-assembler stage.</para>
      <para>
        Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d11/nf-d3d11-id3d11device-createinputlayout" />
      </para>
      <param name="pInputElementDescs">
        An array of the input-assembler stage input data types; each type is described by an element description (see <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ns-d3d11-d3d11_input_element_desc">D3D11_INPUT_ELEMENT_DESC</a>).
      </param>
      <param name="NumElements">The number of input-data types in the array of input-elements.</param>
      <param name="pShaderBytecodeWithInputSignature">A pointer to the compiled shader.  The compiled shader code contains a input signature which is validated against the array of elements. See remarks.</param>
      <param name="BytecodeLength">Size of the compiled shader.</param>
      <param name="ppInputLayout">
        A pointer to the input-layout object created (see <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nn-d3d11-id3d11inputlayout">ID3D11InputLayout</a>). To validate the other input parameters, set this pointer to be <b>NULL</b> and verify that the method returns S_FALSE.
      </param>
    </summary>
  </member>
  <member name="D3D11CreateDevice">
    <summary>
      <para>Creates a device that represents the display adapter.</para>
      <para>
        Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d11/nf-d3d11-d3d11createdevice" />
      </para>
      <param name="pAdapter">
        A pointer to the video adapter to use when creating a <a href="https://docs.microsoft.com/windows/desktop/direct3d11/overviews-direct3d-11-devices-intro">device</a>. Pass <b>NULL</b> to use the default adapter, which is the first adapter that is enumerated by <a href="https://docs.microsoft.com/windows/desktop/api/dxgi/nf-dxgi-idxgifactory-enumadapters">IDXGIFactory1::EnumAdapters</a>.

        <div class="alert">
          <b>Note</b>  Do not mix the use of DXGI 1.0 (<a href="https://docs.microsoft.com/windows/desktop/api/dxgi/nn-dxgi-idxgifactory">IDXGIFactory</a>) and DXGI 1.1 (<a href="https://docs.microsoft.com/windows/desktop/api/dxgi/nn-dxgi-idxgifactory1">IDXGIFactory1</a>) in an application. Use <b>IDXGIFactory</b> or <b>IDXGIFactory1</b>, but not both in an application.
        </div>
        <div> </div>
      </param>
      <param name="DriverType">
        The <a href="https://docs.microsoft.com/windows/desktop/api/d3dcommon/ne-d3dcommon-d3d_driver_type">D3D_DRIVER_TYPE</a>, which represents the driver type to create.
      </param>
      <param name="Software">
        A handle to a DLL that implements a software rasterizer.
        If <i>DriverType</i> is <i>D3D_DRIVER_TYPE_SOFTWARE</i>,
        <i>Software</i> must not be <b>NULL</b>. Get the handle by
        calling <a href="https://docs.microsoft.com/windows/desktop/api/libloaderapi/nf-libloaderapi-loadlibrarya">LoadLibrary</a>,
        <a href="https://docs.microsoft.com/windows/desktop/api/libloaderapi/nf-libloaderapi-loadlibraryexa">LoadLibraryEx</a> ,
        or <a href="https://docs.microsoft.com/windows/desktop/api/libloaderapi/nf-libloaderapi-getmodulehandlea">GetModuleHandle</a>.
      </param>
      <param name="Flags">
        The runtime <a href="https://docs.microsoft.com/windows/desktop/direct3d11/overviews-direct3d-11-devices-layers">layers</a> to enable (see <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ne-d3d11-d3d11_create_device_flag">D3D11_CREATE_DEVICE_FLAG</a>);
        values can be bitwise OR'd together.
      </param>
      <param name="pFeatureLevels">
        A pointer to an array of <a href="https://docs.microsoft.com/windows/desktop/api/d3dcommon/ne-d3dcommon-d3d_feature_level">D3D_FEATURE_LEVEL</a>s, which determine the order of feature levels to attempt to create.
        If <i>pFeatureLevels</i> is set to <b>NULL</b>,
        this function uses the following array of feature levels:



        <code>
          {
          D3D_FEATURE_LEVEL_11_0,
          D3D_FEATURE_LEVEL_10_1,
          D3D_FEATURE_LEVEL_10_0,
          D3D_FEATURE_LEVEL_9_3,
          D3D_FEATURE_LEVEL_9_2,
          D3D_FEATURE_LEVEL_9_1,
          };
        </code>


        <div class="alert">
          <b>Note</b>  If the Direct3D 11.1 runtime is present on the computer and <i>pFeatureLevels</i> is set to <b>NULL</b>, this function won't create a <a href="https://docs.microsoft.com/windows/desktop/api/d3dcommon/ne-d3dcommon-d3d_feature_level">D3D_FEATURE_LEVEL_11_1</a> device. To create a <b>D3D_FEATURE_LEVEL_11_1</b> device, you must explicitly provide a <b>D3D_FEATURE_LEVEL</b> array that includes <b>D3D_FEATURE_LEVEL_11_1</b>. If you provide a <b>D3D_FEATURE_LEVEL</b> array that contains <b>D3D_FEATURE_LEVEL_11_1</b> on a computer that doesn't have the Direct3D 11.1 runtime installed, this function immediately fails with E_INVALIDARG.
        </div>
        <div> </div>
      </param>
      <param name="FeatureLevels">
        The number of elements in <i>pFeatureLevels</i>.
      </param>
      <param name="SDKVersion">
        The SDK version; use <i>D3D11_SDK_VERSION</i>.
      </param>
      <param name="ppDevice">
        Returns the address of a pointer to an <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nn-d3d11-id3d11device">ID3D11Device</a> object that represents the device created. If this parameter is <b>NULL</b>, no ID3D11Device will be returned.
      </param>
      <param name="pFeatureLevel">
        If successful, returns the first <a href="https://docs.microsoft.com/windows/desktop/api/d3dcommon/ne-d3dcommon-d3d_feature_level">D3D_FEATURE_LEVEL</a> from the <i>pFeatureLevels</i> array which succeeded. Supply <b>NULL</b> as an input if you don't need to determine which feature level is supported.
      </param>
      <param name="ppImmediateContext">
        Returns the address of a pointer to an <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nn-d3d11-id3d11devicecontext">ID3D11DeviceContext</a> object that represents the device context. If this parameter is <b>NULL</b>, no ID3D11DeviceContext will be returned.
      </param>
    </summary>
  </member>
  <member name="ID3D11ShaderReflection::GetResourceBindingDescByName">
    <summary>
      <para>Get a description of how a resource is bound to a shader.</para>
      <para>
        Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d11shader/nf-d3d11shader-id3d11shaderreflection-getresourcebindingdescbyname" />
      </para>
      <param name="Name">The constant-buffer name of the resource.</param>
      <param name="pDesc">
        A pointer to an input-binding description. See <a href="https://docs.microsoft.com/windows/win32/api/d3d11shader/ns-d3d11shader-d3d11_shader_input_bind_desc">D3D11_SHADER_INPUT_BIND_DESC</a>.
      </param>
    </summary>
  </member>
  <member name="ID3D11VideoContext1::GetDataForNewHardwareKey">
    <summary>
      <para>Allows the driver to return IHV specific information used when initializing the new hardware key.</para>
      <para>
        Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d11_1/nf-d3d11_1-id3d11videocontext1-getdatafornewhardwarekey" />
      </para>
      <param name="pCryptoSession">
        A pointer to the ID3D11CryptoSession interface.  To get this pointer, call <a href="https://docs.microsoft.com/windows/desktop/api/d3d9/nf-d3d9-idirect3ddevice9video-createcryptosession">ID3D11VideoDevice1::CreateCryptoSession</a>.
      </param>
      <param name="PrivateInputSize">
        The size of the memory referenced by the <i>pPrivateInputData</i> parameter.
      </param>
      <param name="pPrivatInputData">The private input data. The contents of this parameter is defined by the implementation of the secure execution environment. It may contain data about the license or about the stream properties.</param>
      <param name="pPrivateOutputData">A pointer to the private output data. The return data is defined by the implementation of the secure execution environment. It may contain graphics-specific data to be associated with the underlying hardware key.</param>
    </summary>
  </member>
  <member name="ID3D11DeviceContext::GetResourceMinLOD">
    <summary>
      <para>Gets the minimum level-of-detail (LOD).</para>
      <para>
        Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d11/nf-d3d11-id3d11devicecontext-getresourceminlod" />
      </para>
      <param name="pResource">
        A pointer to an <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nn-d3d11-id3d11resource">ID3D11Resource</a> which represents the resource.
      </param>
    </summary>
  </member>
  <member name="ID3D11DepthStencilState::GetDesc">
    <summary>
      <para>Gets the description for depth-stencil state that you used to create the depth-stencil-state object.</para>
      <para>
        Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d11/nf-d3d11-id3d11depthstencilstate-getdesc" />
      </para>
      <param name="pDesc">
        A pointer to a <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ns-d3d11-d3d11_depth_stencil_desc">D3D11_DEPTH_STENCIL_DESC</a> structure that receives a description of the depth-stencil state.
      </param>
    </summary>
  </member>
  <member name="ID3D11DeviceContext::RSGetScissorRects">
    <summary>
      <para>Get the array of scissor rectangles bound to the rasterizer stage.</para>
      <para>
        Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d11/nf-d3d11-id3d11devicecontext-rsgetscissorrects" />
      </para>
      <param name="pNumRects">
        The number of scissor rectangles (ranges between 0 and D3D11_VIEWPORT_AND_SCISSORRECT_OBJECT_COUNT_PER_PIPELINE) bound; set <i>pRects</i> to <b>NULL</b> to use <i>pNumRects</i> to see how many rectangles would be returned.
      </param>
      <param name="pRects">
        An array of scissor rectangles (see <a href="https://docs.microsoft.com/windows/desktop/direct3d11/d3d11-rect">D3D11_RECT</a>). If NumRects is greater than the number of scissor rects currently bound, then unused members of the array will contain 0.
      </param>
    </summary>
  </member>
  <member name="ID3D11DeviceContext::IAGetIndexBuffer">
    <summary>
      <para>Get a pointer to the index buffer that is bound to the input-assembler stage.</para>
      <para>
        Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d11/nf-d3d11-id3d11devicecontext-iagetindexbuffer" />
      </para>
      <param name="pIndexBuffer">
        A pointer to an index buffer returned by the method (see <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nn-d3d11-id3d11buffer">ID3D11Buffer</a>).
      </param>
      <param name="Format">
        Specifies format of the data in the index buffer (see <a href="https://docs.microsoft.com/windows/desktop/api/dxgiformat/ne-dxgiformat-dxgi_format">DXGI_FORMAT</a>). These formats provide the size and type of
        the data in the buffer. The only formats allowed for index buffer data are 16-bit (DXGI_FORMAT_R16_UINT) and 32-bit (DXGI_FORMAT_R32_UINT)
        integers.
      </param>
      <param name="Offset">Offset (in bytes) from the start of the index buffer, to the first index to use.</param>
    </summary>
  </member>
  <member name="ID3D11VertexShader">
    <summary>
      <para>A vertex-shader interface manages an executable program (a vertex shader) that controls the vertex-shader stage.</para>
      <para>
        Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d11/nn-d3d11-id3d11vertexshader" />
      </para>
    </summary>
  </member>
  <member name="D3D11_TRACE_STEP">
    <summary>
      <para>Describes a trace step, which is an instruction.</para>
      <para>
        Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d11shadertracing/ns-d3d11shadertracing-d3d11_trace_step" />
      </para>
    </summary>
  </member>
  <member name="D3D11_TRACE_STEP::ID">
    <summary>
      A number that identifies the instruction, as an offset into the executable instructions that are present in the shader.

      HLSL debugging information uses the same convention. Therefore, HLSL instructions are matched to a set of IDs. You can then map an ID to a disassembled string that can be displayed to the user.
    </summary>
  </member>
  <member name="D3D11_TRACE_STEP::InstructionActive">
    <summary>A value that specifies whether the instruction is active. This value is TRUE if something happened; therefore, you should parse other data in this structure. Otherwise, nothing happened; for example, if an instruction is disabled due to flow control even though other pixels in the stamp execute it.</summary>
  </member>
  <member name="D3D11_TRACE_STEP::NumRegistersWritten">
    <summary>
      The number of registers for the instruction that are written to. The range of registers is [0...NumRegistersWritten-1]. You can pass a register number to the <i>writtenRegisterIndex</i> parameter of  <a href="https://docs.microsoft.com/windows/desktop/api/d3d11shadertracing/nf-d3d11shadertracing-id3d11shadertrace-getwrittenregister">ID3D11ShaderTrace::GetWrittenRegister</a> to retrieve individual write-register information.
    </summary>
  </member>
  <member name="D3D11_TRACE_STEP::NumRegistersRead">
    <summary>
      The number of registers for the instruction that are read from. The range of registers is [0...NumRegistersRead-1]. You can pass a register number to the <i>readRegisterIndex</i> parameter of  <a href="https://docs.microsoft.com/windows/desktop/api/d3d11shadertracing/nf-d3d11shadertracing-id3d11shadertrace-getreadregister">ID3D11ShaderTrace::GetReadRegister</a> to retrieve individual read-register information.
    </summary>
  </member>
  <member name="D3D11_TRACE_STEP::OpcodeType">
    <summary>
      A number that specifies the type of instruction (for example, <a href="https://docs.microsoft.com/windows/desktop/direct3dhlsl/add---vs">add</a>, <a href="https://docs.microsoft.com/windows/desktop/direct3dhlsl/dx-graphics-hlsl-mul">mul</a>, and so on). You can ignore this member if you do not know the number for the instruction type. This member offers a minor convenience at the cost of bloating the trace slightly.  You can use the <b>ID</b> member and map back to the original shader code to retrieve the full information about the instruction.
    </summary>
  </member>
  <member name="D3D11_TRACE_STEP::CurrentGlobalCycle">
    <summary>
      The global cycle count for this step.  You can use this member to correlate parallel thread execution via multiple simultaneous traces, for example, for the compute shader.


      <div class="alert">
        <b>Note</b>  Multiple threads at the same point in execution might log the same <b>CurrentGlobalCycle</b>.
      </div>
      <div> </div>
    </summary>
  </member>
  <member name="ID3D11Device::CheckFeatureSupport">
    <summary>
      <para>Gets information about the features that are supported by the current graphics driver.</para>
      <para>
        Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d11/nf-d3d11-id3d11device-checkfeaturesupport" />
      </para>
      <param name="Feature">
        A member of the <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ne-d3d11-d3d11_feature">D3D11_FEATURE</a> enumerated type that describes which feature to query for support.
      </param>
      <param name="pFeatureSupportData">Upon completion of the method, the passed structure is filled with data that describes the feature support.</param>
      <param name="FeatureSupportDataSize">
        The size of the structure passed to the <i>pFeatureSupportData</i> parameter.
      </param>
    </summary>
  </member>
  <member name="ID3D11Debug::SetSwapChain">
    <summary>
      <para>Sets a swap chain that the runtime will use for automatically calling IDXGISwapChain::Present.</para>
      <para>
        Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d11sdklayers/nf-d3d11sdklayers-id3d11debug-setswapchain" />
      </para>
      <param name="pSwapChain">
        Swap chain that the runtime will use for automatically calling <a href="https://docs.microsoft.com/windows/desktop/api/dxgi/nf-dxgi-idxgiswapchain-present">IDXGISwapChain::Present</a>; must have been created with the DXGI_SWAP_EFFECT_SEQUENTIAL swap-effect flag.
      </param>
    </summary>
  </member>
  <member name="ID3D11ShaderReflectionType::GetMemberTypeByName">
    <summary>
      <para>Get a shader-reflection-variable type by name.</para>
      <para>
        Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d11shader/nf-d3d11shader-id3d11shaderreflectiontype-getmembertypebyname" />
      </para>
      <param name="Name">Member name.</param>
    </summary>
  </member>
  <member name="ID3D11VideoDecoder::GetDriverHandle">
    <summary>
      <para>Gets a handle to the driver.</para>
      <para>
        Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d11/nf-d3d11-id3d11videodecoder-getdriverhandle" />
      </para>
      <param name="pDriverHandle">Receives a handle to the driver.</param>
    </summary>
  </member>
  <member name="D3D11_VIDEO_COLOR_YCbCrA">
    <summary>
      <para>Specifies a YCbCr color value.</para>
      <para>
        Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d11/ns-d3d11-d3d11_video_color_ycbcra" />
      </para>
    </summary>
  </member>
  <member name="D3D11_VIDEO_COLOR_YCbCrA::Y">
    <summary>The Y luma value.</summary>
  </member>
  <member name="D3D11_VIDEO_COLOR_YCbCrA::Cb">
    <summary>The Cb chroma value.</summary>
  </member>
  <member name="D3D11_VIDEO_COLOR_YCbCrA::Cr">
    <summary>The Cr chroma value.</summary>
  </member>
  <member name="D3D11_VIDEO_COLOR_YCbCrA::A">
    <summary>The alpha value. Values range from 0 (transparent) to 1 (opaque).</summary>
  </member>
  <member name="ID3D11RasterizerState1::GetDesc1">
    <summary>
      <para>Gets the description for rasterizer state that you used to create the rasterizer-state object.</para>
      <para>
        Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d11_1/nf-d3d11_1-id3d11rasterizerstate1-getdesc1" />
      </para>
      <param name="pDesc">
        A pointer to a <a href="https://docs.microsoft.com/windows/desktop/api/d3d11_1/ns-d3d11_1-cd3d11_rasterizer_desc1">D3D11_RASTERIZER_DESC1</a> structure that receives a description of the rasterizer state. This rasterizer state can specify forced sample count.
      </param>
    </summary>
  </member>
  <member name="ID3D11Device5::OpenSharedFence">
    <summary>
      <para>Opens a handle for a shared fence by using HANDLE and REFIID.</para>
      <para>
        Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d11_4/nf-d3d11_4-id3d11device5-opensharedfence" />
      </para>
      <param name="hFence">
        The handle that was returned by a call to <a href="https://docs.microsoft.com/windows/win32/api/d3d11_3/nf-d3d11_3-id3d11fence-createsharedhandle">ID3D11Fence::CreateSharedHandle</a> or <a href="https://docs.microsoft.com/windows/win32/api/d3d12/nf-d3d12-id3d12device-createsharedhandle">ID3D12Device::CreateSharedHandle</a>.
      </param>
      <param name="ReturnedInterface">
        The globally unique identifier (<b>GUID</b>) for the <a href="https://docs.microsoft.com/windows/win32/api/d3d11_3/nn-d3d11_3-id3d11fence">ID3D11Fence</a> interface. The <b>REFIID</b>, or <b>GUID</b>, of the interface can be obtained by using the __uuidof() macro. For example, __uuidof(ID3D11Fence) will get the <b>GUID</b> of the interface to the fence.
      </param>
      <param name="ppFence">
        A pointer to a memory block that receives a pointer to the <a href="https://docs.microsoft.com/windows/win32/api/d3d11_3/nn-d3d11_3-id3d11fence">ID3D11Fence</a> interface.
      </param>
    </summary>
  </member>
  <member name="ID3D11ShaderReflection">
    <summary>
      <para>A shader-reflection interface accesses shader information.</para>
      <para>
        Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d11shader/nn-d3d11shader-id3d11shaderreflection" />
      </para>
    </summary>
  </member>
  <member name="ID3D11Texture3D1">
    <summary>
      <para>A 3D texture interface represents texel data, which is structured memory.</para>
      <para>
        Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d11_3/nn-d3d11_3-id3d11texture3d1" />
      </para>
    </summary>
  </member>
  <member name="ID3D11GeometryShader">
    <summary>
      <para>A geometry-shader interface manages an executable program (a geometry shader) that controls the geometry-shader stage.</para>
      <para>
        Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d11/nn-d3d11-id3d11geometryshader" />
      </para>
    </summary>
  </member>
  <member name="ID3D11UnorderedAccessView">
    <summary>
      <para>A view interface specifies the parts of a resource the pipeline can access during rendering.</para>
      <para>
        Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d11/nn-d3d11-id3d11unorderedaccessview" />
      </para>
    </summary>
  </member>
  <member name="D3D11_TRACE_VALUE">
    <summary>
      <para>Describes a trace value.</para>
      <para>
        Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d11shadertracing/ns-d3d11shadertracing-d3d11_trace_value" />
      </para>
    </summary>
  </member>
  <member name="D3D11_TRACE_VALUE::Bits">
    <summary>
      An array of bits that make up the trace value. The [0] element is X.


      <div class="alert">
        <b>Note</b>  This member can hold <b>float</b>, <b>UINT</b>, or <b>INT</b> data.
        The elements are specified as <b>UINT</b> rather than using a union to minimize the risk of x86 SNaN-&gt;QNaN quashing during float assignment.
        If the bits are displayed, they can be interpreted as <b>float</b> at the last moment.
      </div>
      <div> </div>
    </summary>
  </member>
  <member name="D3D11_TRACE_VALUE::ValidMask">
    <summary>
      A combination of the following component values that are combined by using a bitwise <b>OR</b> operation.
      The resulting value specifies the component trace mask.


      <table>
        <tr>
          <th>Flag</th>
          <th>Description</th>
        </tr>
        <tr>
          <td>D3D11_TRACE_COMPONENT_X (0x1)</td>
          <td>The x component of the trace mask.</td>
        </tr>
        <tr>
          <td>D3D11_TRACE_COMPONENT_Y (0x2)</td>
          <td>The y component of the trace mask.</td>
        </tr>
        <tr>
          <td>D3D11_TRACE_COMPONENT_Z (0x4)</td>
          <td>The depth z component of the trace mask.</td>
        </tr>
        <tr>
          <td>D3D11_TRACE_COMPONENT_W (0x8)</td>
          <td>The depth w component of the trace mask.</td>
        </tr>
      </table>
       

      Ignore unmasked values, particularly if deltas are accumulated.
    </summary>
  </member>
  <member name="ID3D11DeviceContext::SOGetTargets">
    <summary>
      <para>Get the target output buffers for the stream-output stage of the pipeline.</para>
      <para>
        Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d11/nf-d3d11-id3d11devicecontext-sogettargets" />
      </para>
      <param name="NumBuffers">Number of buffers to get.</param>
      <param name="ppSOTargets">
        An array of output buffers (see <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nn-d3d11-id3d11buffer">ID3D11Buffer</a>) to be retrieved from the device.
      </param>
    </summary>
  </member>
  <member name="ID3D11DeviceContext::ClearUnorderedAccessViewUint">
    <summary>
      <para>Clears an unordered access resource with bit-precise values.</para>
      <para>
        Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d11/nf-d3d11-id3d11devicecontext-clearunorderedaccessviewuint" />
      </para>
      <param name="pUnorderedAccessView">
        The <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nn-d3d11-id3d11unorderedaccessview">ID3D11UnorderedAccessView</a> to clear.
      </param>
      <param name="Values">Values to copy to corresponding channels, see remarks.</param>
    </summary>
  </member>
  <member name="ID3D11DeviceContext::GSGetSamplers">
    <summary>
      <para>Get an array of sampler state interfaces from the geometry shader pipeline stage.</para>
      <para>
        Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d11/nf-d3d11-id3d11devicecontext-gsgetsamplers" />
      </para>
      <param name="StartSlot">Index into a zero-based array to begin getting samplers from (ranges from 0 to D3D11_COMMONSHADER_SAMPLER_SLOT_COUNT - 1).</param>
      <param name="NumSamplers">Number of samplers to get from a device context. Each pipeline stage has a total of 16 sampler slots available (ranges from 0 to D3D11_COMMONSHADER_SAMPLER_SLOT_COUNT - StartSlot).</param>
      <param name="ppSamplers">
        Pointer to an array of sampler-state interfaces (see <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nn-d3d11-id3d11samplerstate">ID3D11SamplerState</a>).
      </param>
    </summary>
  </member>
  <member name="D3D11_VIDEO_DECODER_SUB_SAMPLE_MAPPING_BLOCK">
    <summary>
      <para>Describes a sub sample mapping block.</para>
      <para>
        Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d11_1/ns-d3d11_1-d3d11_video_decoder_sub_sample_mapping_block" />
      </para>
    </summary>
  </member>
  <member name="D3D11_VIDEO_DECODER_SUB_SAMPLE_MAPPING_BLOCK::ClearSize">
    <summary>The number of clear (non-encrypted) bytes at the start of the block.</summary>
  </member>
  <member name="D3D11_VIDEO_DECODER_SUB_SAMPLE_MAPPING_BLOCK::EncryptedSize">
    <summary>The number of encrypted bytes following the clear bytes.</summary>
  </member>
  <member name="ID3D11InfoQueue::GetNumMessagesDiscardedByMessageCountLimit">
    <summary>
      <para>Get the number of messages that were discarded due to the message count limit.</para>
      <para>
        Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d11sdklayers/nf-d3d11sdklayers-id3d11infoqueue-getnummessagesdiscardedbymessagecountlimit" />
      </para>
    </summary>
  </member>
  <member name="ID3D11VideoDevice::GetVideoDecoderConfigCount">
    <summary>
      <para>Gets the number of decoder configurations that the driver supports for a specified video description.</para>
      <para>
        Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d11/nf-d3d11-id3d11videodevice-getvideodecoderconfigcount" />
      </para>
      <param name="pDesc">
        A pointer to a  <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ns-d3d11-d3d11_video_decoder_desc">D3D11_VIDEO_DECODER_DESC</a> structure that describes the video stream.
      </param>
      <param name="pCount">Receives the number of decoder configurations.</param>
    </summary>
  </member>
  <member name="ID3D11FunctionReflection::GetResourceBindingDesc">
    <summary>
      <para>Gets a description of how a resource is bound to a function.</para>
      <para>
        Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d11shader/nf-d3d11shader-id3d11functionreflection-getresourcebindingdesc" />
      </para>
      <param name="ResourceIndex">A zero-based resource index.</param>
      <param name="pDesc">
        A pointer to a <a href="https://docs.microsoft.com/windows/win32/api/d3d11shader/ns-d3d11shader-d3d11_shader_input_bind_desc">D3D11_SHADER_INPUT_BIND_DESC</a> structure that describes input binding of the resource.
      </param>
    </summary>
  </member>
  <member name="ID3D11VideoProcessorOutputView">
    <summary>
      <para>Identifies the output surfaces that can be accessed during video processing.</para>
      <para>
        Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d11/nn-d3d11-id3d11videoprocessoroutputview" />
      </para>
    </summary>
  </member>
  <member name="D3D11_BLEND">
    <summary>
      <para>Blend factors, which modulate values for the pixel shader and render target.</para>
      <para>
        Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d11/ne-d3d11-d3d11_blend" />
      </para>
    </summary>
  </member>
  <member name="D3D11_BLEND::D3D11_BLEND_ZERO">
    <summary>The blend factor is (0, 0, 0, 0). No pre-blend operation.</summary>
  </member>
  <member name="D3D11_BLEND::D3D11_BLEND_ONE">
    <summary>The blend factor is (1, 1, 1, 1). No pre-blend operation.</summary>
  </member>
  <member name="D3D11_BLEND::D3D11_BLEND_SRC_COLOR">
    <summary>The blend factor is (Rₛ, Gₛ, Bₛ, Aₛ), that is color data (RGB) from a pixel shader. No pre-blend operation.</summary>
  </member>
  <member name="D3D11_BLEND::D3D11_BLEND_INV_SRC_COLOR">
    <summary>The blend factor is (1 - Rₛ, 1 - Gₛ, 1 - Bₛ, 1 - Aₛ), that is color data (RGB) from a pixel shader. The pre-blend operation inverts the data, generating 1 - RGB.</summary>
  </member>
  <member name="D3D11_BLEND::D3D11_BLEND_SRC_ALPHA">
    <summary>The blend factor is (Aₛ, Aₛ, Aₛ, Aₛ), that is alpha data (A) from a pixel shader. No pre-blend operation.</summary>
  </member>
  <member name="D3D11_BLEND::D3D11_BLEND_INV_SRC_ALPHA">
    <summary>The blend factor is ( 1 - Aₛ, 1 - Aₛ, 1 - Aₛ, 1 - Aₛ), that is alpha data (A) from a pixel shader. The pre-blend operation inverts the data, generating 1 - A.</summary>
  </member>
  <member name="D3D11_BLEND::D3D11_BLEND_DEST_ALPHA">
    <summary>
      The blend factor is (A<sub>d</sub> A<sub>d</sub> A<sub>d</sub> A<sub>d</sub>), that is alpha data from a render target. No pre-blend operation.
    </summary>
  </member>
  <member name="D3D11_BLEND::D3D11_BLEND_INV_DEST_ALPHA">
    <summary>
      The blend factor is (1 - A<sub>d</sub> 1 - A<sub>d</sub> 1 - A<sub>d</sub> 1 - A<sub>d</sub>), that is alpha data from a render target. The pre-blend operation inverts the data, generating 1 - A.
    </summary>
  </member>
  <member name="D3D11_BLEND::D3D11_BLEND_DEST_COLOR">
    <summary>
      The blend factor is (R<sub>d</sub>, G<sub>d</sub>, B<sub>d</sub>, A<sub>d</sub>), that is color data from a render target. No pre-blend operation.
    </summary>
  </member>
  <member name="D3D11_BLEND::D3D11_BLEND_INV_DEST_COLOR">
    <summary>
      The blend factor is (1 - R<sub>d</sub>, 1 - G<sub>d</sub>, 1 - B<sub>d</sub>, 1 - A<sub>d</sub>), that is color data from a render target. The pre-blend operation inverts the data, generating 1 - RGB.
    </summary>
  </member>
  <member name="D3D11_BLEND::D3D11_BLEND_SRC_ALPHA_SAT">
    <summary>
      The blend factor is (f, f, f, 1); where f = min(Aₛ, 1
      - A<sub>d</sub>). The pre-blend operation clamps the data to 1 or less.
    </summary>
  </member>
  <member name="D3D11_BLEND::D3D11_BLEND_BLEND_FACTOR">
    <summary>
      The blend factor is the blend factor set with <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nf-d3d11-id3d11devicecontext-omsetblendstate">ID3D11DeviceContext::OMSetBlendState</a>. No pre-blend operation.
    </summary>
  </member>
  <member name="D3D11_BLEND::D3D11_BLEND_INV_BLEND_FACTOR">
    <summary>
      The blend factor is the blend factor set with <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nf-d3d11-id3d11devicecontext-omsetblendstate">ID3D11DeviceContext::OMSetBlendState</a>. The pre-blend operation inverts the blend factor, generating 1 - blend_factor.
    </summary>
  </member>
  <member name="D3D11_BLEND::D3D11_BLEND_SRC1_COLOR">
    <summary>The blend factor is data sources both as color data output by a pixel shader. There is no pre-blend operation. This blend factor supports dual-source color blending.</summary>
  </member>
  <member name="D3D11_BLEND::D3D11_BLEND_INV_SRC1_COLOR">
    <summary>The blend factor is data sources both as color data output by a pixel shader. The pre-blend operation inverts the data, generating 1 - RGB. This blend factor supports dual-source color blending.</summary>
  </member>
  <member name="D3D11_BLEND::D3D11_BLEND_SRC1_ALPHA">
    <summary>The blend factor is data sources as alpha data output by a pixel shader. There is no pre-blend operation. This blend factor supports dual-source color blending.</summary>
  </member>
  <member name="D3D11_BLEND::D3D11_BLEND_INV_SRC1_ALPHA">
    <summary>The blend factor is data sources as alpha data output by a pixel shader. The pre-blend operation inverts the data, generating 1 - A. This blend factor supports dual-source color blending.</summary>
  </member>
  <member name="ID3D11ModuleInstance::BindConstantBufferByName">
    <summary>
      <para>Rebinds a constant buffer by name to a destination slot.</para>
      <para>
        Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d11shader/nf-d3d11shader-id3d11moduleinstance-bindconstantbufferbyname" />
      </para>
      <param name="pName">The name of the constant buffer for rebinding.</param>
      <param name="uDstSlot">The destination slot number for rebinding.</param>
      <param name="cbDstOffset">The offset in bytes of the destination slot for rebinding. The offset must have 16-byte alignment.</param>
    </summary>
  </member>
  <member name="ID3D11DeviceContext1::ClearView">
    <summary>
      <para>Sets all the elements in a resource view to one value.</para>
      <para>
        Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d11_1/nf-d3d11_1-id3d11devicecontext1-clearview" />
      </para>
      <param name="pView">
        A pointer to the <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nn-d3d11-id3d11view">ID3D11View</a> interface that represents the resource view to clear.
      </param>
      <param name="Color">A 4-component array that represents the color to use to clear the resource view.</param>
      <param name="pRect">
        An array of <a href="https://docs.microsoft.com/windows/desktop/direct3d11/d3d11-rect">D3D11_RECT</a> structures for the rectangles in the resource view to clear. If <b>NULL</b>, <b>ClearView</b> clears the entire surface.
      </param>
      <param name="NumRects">
        Number of rectangles in the array that the  <i>pRect</i> parameter specifies.
      </param>
    </summary>
  </member>
  <member name="ID3D11Device3::CreateRenderTargetView1">
    <summary>
      <para>Creates a render-target view for accessing resource data.</para>
      <para>
        Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d11_3/nf-d3d11_3-id3d11device3-createrendertargetview1" />
      </para>
      <param name="pResource">
        Pointer to a <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nn-d3d11-id3d11resource">ID3D11Resource</a> that represents a render target. This resource must have been created with the <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ne-d3d11-d3d11_bind_flag">D3D11_BIND_RENDER_TARGET</a> flag.
      </param>
      <param name="pDesc1">
        Pointer to a <a href="https://docs.microsoft.com/windows/win32/api/d3d11_3/ns-d3d11_3-d3d11_render_target_view_desc1">D3D11_RENDER_TARGET_VIEW_DESC1</a> that represents a render-target view description. Set this parameter to <b>NULL</b> to create a view that accesses all of the subresources in mipmap level 0.
      </param>
      <param name="ppRTView1">
        A pointer to a memory block that receives a pointer to a <a href="https://docs.microsoft.com/windows/desktop/api/d3d11_3/nn-d3d11_3-id3d11rendertargetview1">ID3D11RenderTargetView1</a> interface for the created render-target view. Set this parameter to <b>NULL</b> to validate the other input parameters (the method will return <b>S_FALSE</b> if the other input parameters pass validation).
      </param>
    </summary>
  </member>
  <member name="ID3D11Query::GetDesc">
    <summary>
      <para>Get a query description.</para>
      <para>
        Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d11/nf-d3d11-id3d11query-getdesc" />
      </para>
      <param name="pDesc">
        Pointer to a query description (see <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ns-d3d11-d3d11_query_desc">D3D11_QUERY_DESC</a>).
      </param>
    </summary>
  </member>
  <member name="ID3D11DeviceContext::GetPredication">
    <summary>
      <para>Get the rendering predicate state.</para>
      <para>
        Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d11/nf-d3d11-id3d11devicecontext-getpredication" />
      </para>
      <param name="ppPredicate">
        Address of a pointer to a predicate (see <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nn-d3d11-id3d11predicate">ID3D11Predicate</a>). Value stored here will be <b>NULL</b> upon device creation.
      </param>
      <param name="pPredicateValue">
        Address of a boolean to fill with the predicate comparison value. <b>FALSE</b> upon device creation.
      </param>
    </summary>
  </member>
  <member name="ID3D11VideoContext::QueryAuthenticatedChannel">
    <summary>
      <para>Sends a query to an authenticated channel.</para>
      <para>
        Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d11/nf-d3d11-id3d11videocontext-queryauthenticatedchannel" />
      </para>
      <param name="pChannel">
        A pointer to the <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nn-d3d11-id3d11authenticatedchannel">ID3D11AuthenticatedChannel</a> interface.
      </param>
      <param name="InputSize">
        The size of the <i>pInput</i> array, in bytes.
      </param>
      <param name="pInput">
        A pointer to a byte array that contains input data for the query. This array always starts with a <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ns-d3d11-d3d11_authenticated_query_input">D3D11_AUTHENTICATED_QUERY_INPUT</a> structure. The <b>QueryType</b> member of the structure specifies the query and defines the meaning of the rest of the array.
      </param>
      <param name="OutputSize">
        The size of the <i>pOutput</i> array, in bytes.
      </param>
      <param name="pOutput">
        A pointer to a byte array that receives the result of the query. This array always starts with a <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ns-d3d11-d3d11_authenticated_query_output">D3D11_AUTHENTICATED_QUERY_OUTPUT</a> structure. The meaning of the rest of the array depends on the query.
      </param>
    </summary>
  </member>
  <member name="ID3D11VideoDevice2">
    <summary>
      <para>Provides the video decoding and video processing capabilities of a Microsoft Direct3D 11 device.</para>
      <para>
        Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d11_4/nn-d3d11_4-id3d11videodevice2" />
      </para>
    </summary>
  </member>
  <member name="ID3D11CryptoSession::GetCertificateSize">
    <summary>
      <para>Gets the size of the driver's certificate chain.</para>
      <para>
        Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d11/nf-d3d11-id3d11cryptosession-getcertificatesize" />
      </para>
      <param name="pCertificateSize">Receives the size of the certificate chain, in bytes.</param>
    </summary>
  </member>
  <member name="D3D11_TEXTURE_ADDRESS_MODE">
    <summary>
      <para>Identify a technique for resolving texture coordinates that are outside of the boundaries of a texture.</para>
      <para>
        Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d11/ne-d3d11-d3d11_texture_address_mode" />
      </para>
    </summary>
  </member>
  <member name="D3D11_TEXTURE_ADDRESS_MODE::D3D11_TEXTURE_ADDRESS_WRAP">
    <summary>Tile the texture at every (u,v) integer junction. For example, for u values between 0 and 3, the texture is repeated three times.</summary>
  </member>
  <member name="D3D11_TEXTURE_ADDRESS_MODE::D3D11_TEXTURE_ADDRESS_MIRROR">
    <summary>Flip the texture at every (u,v) integer junction. For u values between 0 and 1, for example, the texture is addressed normally; between 1 and 2, the texture is flipped (mirrored); between 2 and 3, the texture is normal again; and so on.</summary>
  </member>
  <member name="D3D11_TEXTURE_ADDRESS_MODE::D3D11_TEXTURE_ADDRESS_CLAMP">
    <summary>Texture coordinates outside the range [0.0, 1.0] are set to the texture color at 0.0 or 1.0, respectively.</summary>
  </member>
  <member name="D3D11_TEXTURE_ADDRESS_MODE::D3D11_TEXTURE_ADDRESS_BORDER">
    <summary>
      Texture coordinates outside the range [0.0, 1.0] are set to the border color specified in <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ns-d3d11-d3d11_sampler_desc">D3D11_SAMPLER_DESC</a> or HLSL code.
    </summary>
  </member>
  <member name="D3D11_TEXTURE_ADDRESS_MODE::D3D11_TEXTURE_ADDRESS_MIRROR_ONCE">
    <summary>Similar to D3D11_TEXTURE_ADDRESS_MIRROR and D3D11_TEXTURE_ADDRESS_CLAMP. Takes the absolute value of the texture coordinate (thus, mirroring around 0), and then clamps to the maximum value.</summary>
  </member>
  <member name="ID3D11Device1::OpenSharedResource1">
    <summary>
      <para>Gives a device access to a shared resource that is referenced by a handle and that was created on a different device.</para>
      <para>
        Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d11_1/nf-d3d11_1-id3d11device1-opensharedresource1" />
      </para>
      <param name="hResource">A handle to the resource to open. For more info about this parameter, see Remarks.</param>
      <param name="returnedInterface">The globally unique identifier (GUID) for the resource interface. For more info about this parameter, see Remarks.</param>
      <param name="ppResource">A pointer to a variable that receives a pointer to the interface for the shared resource object to access.</param>
    </summary>
  </member>
  <member name="ID3D11Device3::CreateQuery1">
    <summary>
      <para>Creates a query object for querying information from the graphics processing unit (GPU).</para>
      <para>
        Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d11_3/nf-d3d11_3-id3d11device3-createquery1" />
      </para>
      <param name="pQueryDesc1">
        Pointer to a <a href="https://docs.microsoft.com/windows/desktop/api/d3d11_3/ns-d3d11_3-cd3d11_query_desc1">D3D11_QUERY_DESC1</a> structure that represents a query description.
      </param>
      <param name="ppQuery1">
        A pointer to a memory block that receives a pointer to a <a href="https://docs.microsoft.com/windows/desktop/api/d3d11_3/nn-d3d11_3-id3d11query1">ID3D11Query1</a> interface for the created query object. Set this parameter to <b>NULL</b> to validate the other input parameters (the method will return <b>S_FALSE</b> if the other input parameters pass validation).
      </param>
    </summary>
  </member>
  <member name="D3D11_FEATURE_DATA_ARCHITECTURE_INFO">
    <summary>
      <para>Describes information about Direct3D 11.1 adapter architecture.</para>
      <para>
        Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d11/ns-d3d11-d3d11_feature_data_architecture_info" />
      </para>
    </summary>
  </member>
  <member name="D3D11_FEATURE_DATA_ARCHITECTURE_INFO::TileBasedDeferredRenderer">
    <summary>
      Specifies whether a rendering device batches rendering commands and performs multipass rendering into tiles or bins over a render area. Certain API usage patterns that are fine for TileBasedDefferredRenderers (TBDRs) can perform worse on non-TBDRs and vice versa.  Applications that are careful about rendering can be friendly to both TBDR and non-TBDR architectures. <b>TRUE</b> if the rendering device batches rendering commands and <b>FALSE</b> otherwise.
    </summary>
  </member>
  <member name="D3D11_DEVICE_CONTEXT_TYPE">
    <summary>
      <para>Device context options.</para>
      <para>
        Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d11/ne-d3d11-d3d11_device_context_type" />
      </para>
    </summary>
  </member>
  <member name="D3D11_DEVICE_CONTEXT_TYPE::D3D11_DEVICE_CONTEXT_IMMEDIATE">
    <summary>The device context is an immediate context.</summary>
  </member>
  <member name="D3D11_DEVICE_CONTEXT_TYPE::D3D11_DEVICE_CONTEXT_DEFERRED">
    <summary>The device context is a deferred context.</summary>
  </member>
  <member name="D3D11_TILED_RESOURCES_TIER">
    <summary>
      <para>Indicates the tier level at which tiled resources are supported.</para>
      <para>
        Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d11/ne-d3d11-d3d11_tiled_resources_tier" />
      </para>
    </summary>
  </member>
  <member name="D3D11_TILED_RESOURCES_TIER::D3D11_TILED_RESOURCES_NOT_SUPPORTED">
    <summary>Tiled resources are not supported.</summary>
  </member>
  <member name="D3D11_TILED_RESOURCES_TIER::D3D11_TILED_RESOURCES_TIER_1">
    <summary>
      Tier_1 tiled resources are supported.

      The device supports calls to <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nf-d3d11-id3d11device-createtexture2d">CreateTexture2D</a> and so on with the <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ne-d3d11-d3d11_resource_misc_flag">D3D11_RESOURCE_MISC_TILED</a> flag.


      The device supports calls to <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nf-d3d11-id3d11device-createbuffer">CreateBuffer</a> with the <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ne-d3d11-d3d11_resource_misc_flag">D3D11_RESOURCE_MISC_TILE_POOL</a> flag.


      If you access tiles (read or write) that are <b>NULL</b>-mapped, you get undefined behavior, which includes device-removed.  Apps can map all tiles to a single "default" tile to avoid this condition.
    </summary>
  </member>
  <member name="D3D11_TILED_RESOURCES_TIER::D3D11_TILED_RESOURCES_TIER_2">
    <summary>
      Tier_2 tiled resources are supported.


      Superset of Tier_1 functionality, which includes this additional support:


      <ul>
        <li>
          On Tier_1, if the size of a texture mipmap level is an integer multiple of the standard tile shape for its format, it is guaranteed to be nonpacked. On Tier_2, this guarantee is expanded to include mipmap levels whose size is at least one standard tile shape.
          For more info, see <a href="https://docs.microsoft.com/windows/desktop/api/d3d11_2/ns-d3d11_2-d3d11_packed_mip_desc">D3D11_PACKED_MIP_DESC</a>.
        </li>
        <li>
          Shader instructions are available for clamping level-of-detail (LOD) and for obtaining status about the shader operation. For info about one of these shader instructions, see <a href="https://docs.microsoft.com/windows/desktop/direct3dhlsl/sample-s-float--int-uint-">Sample(S,float,int,float,uint)</a>.
        </li>
        <li>
          Reading from <b>NULL</b>-mapped tiles treat that sampled value as zero.  Writes to <b>NULL</b>-mapped tiles are discarded.
        </li>
      </ul>
    </summary>
  </member>
  <member name="D3D11_TILED_RESOURCES_TIER::D3D11_TILED_RESOURCES_TIER_3">
    <summary>
      Tier_3 tiled resources are supported.


      Superset of Tier_2 functionality, Tier 3 is essentially Tier 2 but with the additional support of Texture3D for Tiled Resources.
    </summary>
  </member>
  <member name="D3D11_TEX2DMS_ARRAY_DSV">
    <summary>
      <para>Specifies the subresources from an array of multisampled 2D textures for a depth-stencil view.</para>
      <para>
        Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d11/ns-d3d11-d3d11_tex2dms_array_dsv" />
      </para>
    </summary>
  </member>
  <member name="D3D11_TEX2DMS_ARRAY_DSV::FirstArraySlice">
    <summary>The index of the first texture to use in an array of textures.</summary>
  </member>
  <member name="D3D11_TEX2DMS_ARRAY_DSV::ArraySize">
    <summary>Number of textures to use.</summary>
  </member>
  <member name="D3D11_COUNTER_DESC">
    <summary>
      <para>Describes a counter.</para>
      <para>
        Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d11/ns-d3d11-d3d11_counter_desc" />
      </para>
    </summary>
  </member>
  <member name="D3D11_COUNTER_DESC::Counter">
    <summary>
      Type of counter (see <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ne-d3d11-d3d11_counter">D3D11_COUNTER</a>).
    </summary>
  </member>
  <member name="D3D11_COUNTER_DESC::MiscFlags">
    <summary>Reserved.</summary>
  </member>
  <member name="D3D11_MAPPED_SUBRESOURCE">
    <summary>
      <para>Provides access to subresource data.</para>
      <para>
        Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d11/ns-d3d11-d3d11_mapped_subresource" />
      </para>
    </summary>
  </member>
  <member name="D3D11_MAPPED_SUBRESOURCE::pData">
    <summary>
      Pointer to the data. When <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nf-d3d11-id3d11devicecontext-map">ID3D11DeviceContext::Map</a> provides the pointer, the runtime ensures that the pointer has a specific alignment, depending on the following feature levels:

      <ul>
        <li>
          For <a href="https://docs.microsoft.com/windows/desktop/api/d3dcommon/ne-d3dcommon-d3d_feature_level">D3D_FEATURE_LEVEL_10_0</a> and higher, the pointer is aligned to 16 bytes.
        </li>
        <li>
          For lower than <a href="https://docs.microsoft.com/windows/desktop/api/d3dcommon/ne-d3dcommon-d3d_feature_level">D3D_FEATURE_LEVEL_10_0</a>, the pointer is aligned to 4 bytes.
        </li>
      </ul>
    </summary>
  </member>
  <member name="D3D11_MAPPED_SUBRESOURCE::RowPitch">
    <summary>The row pitch, or width, or physical size (in bytes) of the data.</summary>
  </member>
  <member name="D3D11_MAPPED_SUBRESOURCE::DepthPitch">
    <summary>The depth pitch, or width, or physical size (in bytes)of the data.</summary>
  </member>
  <member name="ID3D11Debug::SetFeatureMask">
    <summary>
      <para>Set a bit field of flags that will turn debug features on and off.</para>
      <para>
        Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d11sdklayers/nf-d3d11sdklayers-id3d11debug-setfeaturemask" />
      </para>
      <param name="Mask">A combination of feature-mask flags that are combined by using a bitwise OR operation. If a flag is present, that feature will be set to on, otherwise the feature will be set to off. For descriptions of the feature-mask flags, see Remarks.</param>
    </summary>
  </member>
  <member name="D3D11_INFO_QUEUE_FILTER">
    <summary>
      <para>Debug message filter; contains a lists of message types to allow or deny.</para>
      <para>
        Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d11sdklayers/ns-d3d11sdklayers-d3d11_info_queue_filter" />
      </para>
    </summary>
  </member>
  <member name="D3D11_INFO_QUEUE_FILTER::AllowList">
    <summary>
      Types of messages that you want to allow. See <a href="https://docs.microsoft.com/windows/desktop/api/d3d11sdklayers/ns-d3d11sdklayers-d3d11_info_queue_filter_desc">D3D11_INFO_QUEUE_FILTER_DESC</a>.
    </summary>
  </member>
  <member name="D3D11_INFO_QUEUE_FILTER::DenyList">
    <summary>Types of messages that you want to deny.</summary>
  </member>
  <member name="ID3D11Linker::AddClipPlaneFromCBuffer">
    <summary>
      <para>Adds a clip plane with the plane coefficients taken from a cbuffer entry for 10Level9 shaders.</para>
      <para>
        Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d11shader/nf-d3d11shader-id3d11linker-addclipplanefromcbuffer" />
      </para>
      <param name="uCBufferSlot">
        The <a href="https://docs.microsoft.com/windows/desktop/direct3dhlsl/dx-graphics-hlsl-constants">cbuffer</a> slot number.
      </param>
      <param name="uCBufferEntry">
        The <a href="https://docs.microsoft.com/windows/desktop/direct3dhlsl/dx-graphics-hlsl-constants">cbuffer</a> entry number.
      </param>
    </summary>
  </member>
  <member name="ID3D11DeviceContext2::SetMarkerInt">
    <summary>
      <para>Allows applications to annotate graphics commands.</para>
      <para>
        Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d11_2/nf-d3d11_2-id3d11devicecontext2-setmarkerint" />
      </para>
      <param name="pLabel">
        An optional string that will be logged to <a href="https://docs.microsoft.com/previous-versions/dotnet/netframework-3.0/ms751538(v=vs.85)">ETW</a> when ETW logging is active. If <b>‘#d’</b> appears in the string, it will be replaced by the value of the <i>Data</i> parameter similar to the way <b>printf</b> works.
      </param>
      <param name="Data">A signed data value that will be logged to ETW when ETW logging is active.</param>
    </summary>
  </member>
  <member name="D3D11_FEATURE_DATA_D3D11_OPTIONS3">
    <summary>
      <para>Describes Direct3D 11.3 feature options in the current graphics driver.</para>
      <para>
        Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d11/ns-d3d11-d3d11_feature_data_d3d11_options3" />
      </para>
    </summary>
  </member>
  <member name="D3D11_FEATURE_DATA_D3D11_OPTIONS3::VPAndRTArrayIndexFromAnyShaderFeedingRasterizer">
    <summary>Whether to use the VP and RT array index from any shader feeding the rasterizer.</summary>
  </member>
  <member name="D3D11_FEATURE_DATA_D3D9_SIMPLE_INSTANCING_SUPPORT">
    <summary>
      <para>Describes whether simple instancing is supported.</para>
      <para>
        Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d11/ns-d3d11-d3d11_feature_data_d3d9_simple_instancing_support" />
      </para>
    </summary>
  </member>
  <member name="D3D11_FEATURE_DATA_D3D9_SIMPLE_INSTANCING_SUPPORT::SimpleInstancingSupported">
    <summary>
      Specifies whether the hardware and driver support simple instancing. The runtime sets this member to <b>TRUE</b> if  the hardware and driver support simple instancing.
    </summary>
  </member>
  <member name="ID3D11ClassLinkage::CreateClassInstance">
    <summary>
      <para>Initializes a class-instance object that represents an HLSL class instance.</para>
      <para>
        Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d11/nf-d3d11-id3d11classlinkage-createclassinstance" />
      </para>
      <param name="pClassTypeName">The type name of a class to initialize.</param>
      <param name="ConstantBufferOffset">Identifies the constant buffer that contains the class data.</param>
      <param name="ConstantVectorOffset">The four-component vector offset from the start of the constant buffer where the class data will begin. Consequently, this is not a byte offset.</param>
      <param name="TextureOffset">The texture slot for the first texture; there may be multiple textures following the offset.</param>
      <param name="SamplerOffset">The sampler slot for the first sampler; there may be multiple samplers following the offset.</param>
      <param name="ppInstance">
        The address of a pointer to an <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nn-d3d11-id3d11classinstance">ID3D11ClassInstance</a> interface to initialize.
      </param>
    </summary>
  </member>
  <member name="ID3D11VideoProcessorEnumerator::CheckVideoProcessorFormat">
    <summary>
      <para>Queries whether the video processor supports a specified video format.</para>
      <para>
        Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d11/nf-d3d11-id3d11videoprocessorenumerator-checkvideoprocessorformat" />
      </para>
      <param name="Format">
        The video format to query, specified as a <a href="https://docs.microsoft.com/windows/desktop/api/dxgiformat/ne-dxgiformat-dxgi_format">DXGI_FORMAT</a> value.
      </param>
      <param name="pFlags">
        Receives a bitwise <b>OR</b> of zero or more flags from the <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ne-d3d11-d3d11_video_processor_format_support">D3D11_VIDEO_PROCESSOR_FORMAT_SUPPORT</a> enumeration.
      </param>
    </summary>
  </member>
  <member name="D3D11_MESSAGE">
    <summary>
      <para>A debug message in the Information Queue.</para>
      <para>
        Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d11sdklayers/ns-d3d11sdklayers-d3d11_message" />
      </para>
    </summary>
  </member>
  <member name="D3D11_MESSAGE::Category">
    <summary>
      The category of the message. See <a href="https://docs.microsoft.com/windows/desktop/api/d3d11sdklayers/ne-d3d11sdklayers-d3d11_message_category">D3D11_MESSAGE_CATEGORY</a>.
    </summary>
  </member>
  <member name="D3D11_MESSAGE::Severity">
    <summary>
      The severity of the message. See <a href="https://docs.microsoft.com/windows/desktop/api/d3d11sdklayers/ne-d3d11sdklayers-d3d11_message_severity">D3D11_MESSAGE_SEVERITY</a>.
    </summary>
  </member>
  <member name="D3D11_MESSAGE::ID">
    <summary>
      The ID of the message. See <a href="https://docs.microsoft.com/windows/desktop/api/d3d11sdklayers/ne-d3d11sdklayers-d3d11_message_id">D3D11_MESSAGE_ID</a>.
    </summary>
  </member>
  <member name="D3D11_MESSAGE::pDescription">
    <summary>The message string.</summary>
  </member>
  <member name="D3D11_MESSAGE::DescriptionByteLength">
    <summary>The length of pDescription in bytes.</summary>
  </member>
  <member name="ID3D11VideoDevice1::GetCryptoSessionPrivateDataSize">
    <summary>
      <para>Retrieves optional sizes for private driver data.</para>
      <para>
        Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d11_1/nf-d3d11_1-id3d11videodevice1-getcryptosessionprivatedatasize" />
      </para>
      <param name="pCryptoType">Indicates the crypto type for which the private input and output size is queried.</param>
      <param name="pDecoderProfile">Indicates the decoder profile for which the private input and output size is queried.</param>
      <param name="pKeyExchangeType">Indicates the key exchange type for which the private input and output size is queried.</param>
      <param name="pPrivateInputSize">Returns the size of private data that the driver needs for input commands.</param>
      <param name="pPrivateOutputSize">Returns the size of private data that the driver needs for output commands.</param>
    </summary>
  </member>
  <member name="ID3D11ShaderTrace::PSSelectStamp">
    <summary>
      <para>Sets the specified pixel-shader stamp.</para>
      <para>
        Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d11shadertracing/nf-d3d11shadertracing-id3d11shadertrace-psselectstamp" />
      </para>
      <param name="stampIndex">The index of the stamp to select.</param>
    </summary>
  </member>
  <member name="D3D11_TEX2D_SRV1">
    <summary>
      <para>Describes the subresource from a 2D texture to use in a shader-resource view.</para>
      <para>
        Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d11_3/ns-d3d11_3-d3d11_tex2d_srv1" />
      </para>
    </summary>
  </member>
  <member name="D3D11_TEX2D_SRV1::MostDetailedMip">
    <summary>
      Index of the most detailed mipmap level to use; this number is between 0 and (<b>MipLevels</b> (from the original Texture2D for which
      <a href="https://docs.microsoft.com/windows/desktop/api/d3d11_3/nf-d3d11_3-id3d11device3-createshaderresourceview1">ID3D11Device3::CreateShaderResourceView1</a>creates a view) - 1 ).
    </summary>
  </member>
  <member name="D3D11_TEX2D_SRV1::MipLevels">
    <summary>
      The maximum number of mipmap levels for the view of the texture. See the remarks in <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ns-d3d11-d3d11_tex1d_srv">D3D11_TEX1D_SRV</a>.


      Set to -1 to indicate all the mipmap levels from <b>MostDetailedMip</b> on down to least detailed.
    </summary>
  </member>
  <member name="D3D11_TEX2D_SRV1::PlaneSlice">
    <summary>The index (plane slice number) of the plane to use in the texture.</summary>
  </member>
  <member name="ID3D11Resource::SetEvictionPriority">
    <summary>
      <para>Set the eviction priority of a resource.</para>
      <para>
        Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d11/nf-d3d11-id3d11resource-setevictionpriority" />
      </para>
      <param name="EvictionPriority" />
    </summary>
  </member>
  <member name="ID3D11DeviceContext::CSGetShader">
    <summary>
      <para>Get the compute shader currently set on the device.</para>
      <para>
        Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d11/nf-d3d11-id3d11devicecontext-csgetshader" />
      </para>
      <param name="ppComputeShader">
        Address of a pointer to a Compute shader (see <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nn-d3d11-id3d11computeshader">ID3D11ComputeShader</a>) to be returned by the method.
      </param>
      <param name="ppClassInstances">
        Pointer to an array of class instance interfaces (see <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nn-d3d11-id3d11classinstance">ID3D11ClassInstance</a>).
      </param>
      <param name="pNumClassInstances">The number of class-instance elements in the array.</param>
    </summary>
  </member>
  <member name="ID3D11VideoDevice::CreateAuthenticatedChannel">
    <summary>
      <para>Creates a channel to communicate with the Microsoft Direct3D device or the graphics driver.</para>
      <para>
        Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d11/nf-d3d11-id3d11videodevice-createauthenticatedchannel" />
      </para>
      <param name="ChannelType">
        Specifies the type of channel, as a member of the <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ne-d3d11-d3d11_authenticated_channel_type">D3D11_AUTHENTICATED_CHANNEL_TYPE</a> enumeration.
      </param>
      <param name="ppAuthenticatedChannel">
        Receives a pointer to the <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nn-d3d11-id3d11authenticatedchannel">ID3D11AuthenticatedChannel</a> interface. The caller must release the interface.
      </param>
    </summary>
  </member>
  <member name="ID3D11InfoQueue::AddStorageFilterEntries">
    <summary>
      <para>Add storage filters to the top of the storage-filter stack.</para>
      <para>
        Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d11sdklayers/nf-d3d11sdklayers-id3d11infoqueue-addstoragefilterentries" />
      </para>
      <param name="pFilter">
        Array of storage filters (see <a href="https://docs.microsoft.com/windows/desktop/api/d3d11sdklayers/ns-d3d11sdklayers-d3d11_info_queue_filter">D3D11_INFO_QUEUE_FILTER</a>).
      </param>
    </summary>
  </member>
  <member name="ID3D11DeviceContext1::GSSetConstantBuffers1">
    <summary>
      <para>Sets the constant buffers that the geometry shader pipeline stage uses.</para>
      <para>
        Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d11_1/nf-d3d11_1-id3d11devicecontext1-gssetconstantbuffers1" />
      </para>
      <param name="StartSlot">Index into the device's zero-based array to begin setting constant buffers to (ranges from 0 to D3D11_COMMONSHADER_CONSTANT_BUFFER_API_SLOT_COUNT - 1).</param>
      <param name="NumBuffers">
        Number of buffers to set (ranges from 0 to D3D11_COMMONSHADER_CONSTANT_BUFFER_API_SLOT_COUNT - <i>StartSlot</i>).
      </param>
      <param name="ppConstantBuffers">
        Array of constant buffers (see <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nn-d3d11-id3d11buffer">ID3D11Buffer</a>) being given to the device.
      </param>
      <param name="pFirstConstant">
        An array that holds the offsets into the buffers that  <i>ppConstantBuffers</i> specifies. Each offset specifies where, from the shader's point of view, each constant buffer starts.  Each offset is measured in shader constants, which are 16 bytes (4*32-bit components).  Therefore, an offset of 16 indicates that the start of the associated constant buffer is 256 bytes into the constant buffer. Each offset must be a multiple of 16 constants.
      </param>
      <param name="pNumConstants">
        An array that holds the numbers of constants in the buffers that  <i>ppConstantBuffers</i> specifies. Each number specifies the number of constants that are contained in the constant buffer that the shader uses. Each number of constants starts from its respective offset that is specified in the <i>pFirstConstant</i> array. Each number of constants must be a multiple of 16 constants, in the range [0..4096].
      </param>
    </summary>
  </member>
  <member name="ID3D11FunctionLinkingGraph::PassValueWithSwizzle">
    <summary>
      <para>Passes a value with swizzle from a source linking node to a destination linking node.</para>
      <para>
        Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d11shader/nf-d3d11shader-id3d11functionlinkinggraph-passvaluewithswizzle" />
      </para>
      <param name="pSrcNode">
        A pointer to the <a href="https://docs.microsoft.com/windows/desktop/api/d3d11shader/nn-d3d11shader-id3d11linkingnode">ID3D11LinkingNode</a> interface for the source linking node.
      </param>
      <param name="SrcParameterIndex">The zero-based index of the source parameter.</param>
      <param name="pSrcSwizzle">The name of the source swizzle.</param>
      <param name="pDstNode">
        A pointer to the <a href="https://docs.microsoft.com/windows/desktop/api/d3d11shader/nn-d3d11shader-id3d11linkingnode">ID3D11LinkingNode</a> interface for the destination linking node.
      </param>
      <param name="DstParameterIndex">The zero-based index of the destination parameter.</param>
      <param name="pDstSwizzle">The name of the destination swizzle.</param>
    </summary>
  </member>
  <member name="D3D11_COUNTER_TYPE">
    <summary>
      <para>Data type of a performance counter.</para>
      <para>
        Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d11/ne-d3d11-d3d11_counter_type" />
      </para>
    </summary>
  </member>
  <member name="D3D11_COUNTER_TYPE::D3D11_COUNTER_TYPE_FLOAT32">
    <summary>32-bit floating point.</summary>
  </member>
  <member name="D3D11_COUNTER_TYPE::D3D11_COUNTER_TYPE_UINT16">
    <summary>16-bit unsigned integer.</summary>
  </member>
  <member name="D3D11_COUNTER_TYPE::D3D11_COUNTER_TYPE_UINT32">
    <summary>32-bit unsigned integer.</summary>
  </member>
  <member name="D3D11_COUNTER_TYPE::D3D11_COUNTER_TYPE_UINT64">
    <summary>64-bit unsigned integer.</summary>
  </member>
  <member name="D3D11_AUTHENTICATED_PROTECTION_FLAGS">
    <summary>
      <para>Specifies the protection level for video content.</para>
      <para>
        Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d11/ns-d3d11-d3d11_authenticated_protection_flags" />
      </para>
    </summary>
  </member>
  <member name="D3D11_AUTHENTICATED_PROTECTION_FLAGS::ProtectionEnabled">
    <summary>If 1, video content protection is enabled.</summary>
  </member>
  <member name="D3D11_AUTHENTICATED_PROTECTION_FLAGS::OverlayOrFullscreenRequired">
    <summary>If 1, the application requires video to be displayed using either a hardware overlay or full-screen exclusive mode.</summary>
  </member>
  <member name="D3D11_AUTHENTICATED_PROTECTION_FLAGS::Reserved">
    <summary>Reserved. Set all bits to zero.</summary>
  </member>
  <member name="D3D11_AUTHENTICATED_PROTECTION_FLAGS::Value">
    <summary>Use this member to access all of the bits in the union.</summary>
  </member>
  <member name="ID3D11VideoContext::VideoProcessorSetOutputStereoMode">
    <summary>
      <para>Specifies whether the video processor produces stereo video frames.</para>
      <para>
        Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d11/nf-d3d11-id3d11videocontext-videoprocessorsetoutputstereomode" />
      </para>
      <param name="pVideoProcessor">
        A pointer to the <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nn-d3d11-id3d11videoprocessor">ID3D11VideoProcessor</a> interface. To get this pointer, call <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nf-d3d11-id3d11videodevice-createvideoprocessor">ID3D11VideoDevice::CreateVideoProcessor</a>.
      </param>
      <param name="Enable">
        If <b>TRUE</b>, stereo output is enabled. Otherwise, the video processor produces mono video frames.
      </param>
    </summary>
  </member>
  <member name="ID3D11DeviceContext::DispatchIndirect">
    <summary>
      <para>Execute a command list over one or more thread groups.</para>
      <para>
        Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d11/nf-d3d11-id3d11devicecontext-dispatchindirect" />
      </para>
      <param name="pBufferForArgs">
        A pointer to an <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nn-d3d11-id3d11buffer">ID3D11Buffer</a>, which must be loaded with data that matches the argument list for <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nf-d3d11-id3d11devicecontext-dispatch">ID3D11DeviceContext::Dispatch</a>.
      </param>
      <param name="AlignedByteOffsetForArgs">A byte-aligned offset between the start of the buffer and the arguments.</param>
    </summary>
  </member>
  <member name="ID3D11InfoQueue::GetMuteDebugOutput">
    <summary>
      <para>Get a boolean that turns the debug output on or off.</para>
      <para>
        Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d11sdklayers/nf-d3d11sdklayers-id3d11infoqueue-getmutedebugoutput" />
      </para>
    </summary>
  </member>
  <member name="ID3D11DeviceContext::GSGetShader">
    <summary>
      <para>Get the geometry shader currently set on the device.</para>
      <para>
        Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d11/nf-d3d11-id3d11devicecontext-gsgetshader" />
      </para>
      <param name="ppGeometryShader">
        Address of a pointer to a geometry shader (see <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nn-d3d11-id3d11geometryshader">ID3D11GeometryShader</a>) to be returned by the method.
      </param>
      <param name="ppClassInstances">
        Pointer to an array of class instance interfaces (see <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nn-d3d11-id3d11classinstance">ID3D11ClassInstance</a>).
      </param>
      <param name="pNumClassInstances">The number of class-instance elements in the array.</param>
    </summary>
  </member>
  <member name="ID3D11DeviceContext::HSSetConstantBuffers">
    <summary>
      <para>Set the constant buffers used by the hull-shader stage.</para>
      <para>
        Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d11/nf-d3d11-id3d11devicecontext-hssetconstantbuffers" />
      </para>
      <param name="StartSlot">
        Index into the device's zero-based array to begin setting constant buffers to (ranges from 0 to <b>D3D11_COMMONSHADER_CONSTANT_BUFFER_API_SLOT_COUNT</b> - 1).
      </param>
      <param name="NumBuffers">
        Number of buffers to set (ranges from 0 to <b>D3D11_COMMONSHADER_CONSTANT_BUFFER_API_SLOT_COUNT</b> - <i>StartSlot</i>).
      </param>
      <param name="ppConstantBuffers">
        Array of constant buffers (see <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nn-d3d11-id3d11buffer">ID3D11Buffer</a>) being given to the device.
      </param>
    </summary>
  </member>
  <member name="ID3D11Device4::UnregisterDeviceRemoved">
    <summary>
      <para>Unregisters the &quot;device removed&quot; event.</para>
      <para>
        Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d11_4/nf-d3d11_4-id3d11device4-unregisterdeviceremoved" />
      </para>
      <param name="dwCookie">
        Information about the "device removed" event,
        retrieved during a successful <a href="https://docs.microsoft.com/windows/desktop/api/d3d11_4/nf-d3d11_4-id3d11device4-registerdeviceremovedevent">RegisterDeviceRemovedEvent</a> call.
      </param>
    </summary>
  </member>
  <member name="ID3D11DeviceContext::GSSetSamplers">
    <summary>
      <para>Set an array of sampler states to the geometry shader pipeline stage.</para>
      <para>
        Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d11/nf-d3d11-id3d11devicecontext-gssetsamplers" />
      </para>
      <param name="StartSlot">Index into the device's zero-based array to begin setting samplers to (ranges from 0 to D3D11_COMMONSHADER_SAMPLER_SLOT_COUNT - 1).</param>
      <param name="NumSamplers">Number of samplers in the array. Each pipeline stage has a total of 16 sampler slots available (ranges from 0 to D3D11_COMMONSHADER_SAMPLER_SLOT_COUNT - StartSlot).</param>
      <param name="ppSamplers">
        Pointer to an array of sampler-state interfaces (see <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nn-d3d11-id3d11samplerstate">ID3D11SamplerState</a>). See Remarks.
      </param>
    </summary>
  </member>
  <member name="ID3D11DeviceContext::CSSetShaderResources">
    <summary>
      <para>Bind an array of shader resources to the compute-shader stage.</para>
      <para>
        Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d11/nf-d3d11-id3d11devicecontext-cssetshaderresources" />
      </para>
      <param name="StartSlot">Index into the device's zero-based array to begin setting shader resources to (ranges from 0 to D3D11_COMMONSHADER_INPUT_RESOURCE_SLOT_COUNT - 1).</param>
      <param name="NumViews">Number of shader resources to set. Up to a maximum of 128 slots are available for shader resources(ranges from 0 to D3D11_COMMONSHADER_INPUT_RESOURCE_SLOT_COUNT - StartSlot).</param>
      <param name="ppShaderResourceViews">
        Array of <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nn-d3d11-id3d11shaderresourceview">shader resource view</a> interfaces to set to the device.
      </param>
    </summary>
  </member>
  <member name="ID3D11VideoDecoderOutputView">
    <summary>
      <para>Identifies the output surfaces that can be accessed during video decoding.</para>
      <para>
        Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d11/nn-d3d11-id3d11videodecoderoutputview" />
      </para>
    </summary>
  </member>
  <member name="ID3D11DeviceContext::IASetPrimitiveTopology">
    <summary>
      <para>Bind information about the primitive type, and data order that describes input data for the input assembler stage.</para>
      <para>
        Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d11/nf-d3d11-id3d11devicecontext-iasetprimitivetopology" />
      </para>
      <param name="Topology">
        The type of primitive and ordering of the primitive data (see <a href="https://docs.microsoft.com/previous-versions/windows/desktop/legacy/ff476189(v=vs.85)">D3D11_PRIMITIVE_TOPOLOGY</a>).
      </param>
    </summary>
  </member>
  <member name="D3D11_USAGE">
    <summary>
      <para>Identifies expected resource use during rendering. The usage directly reflects whether a resource is accessible by the CPU and/or the graphics processing unit (GPU).</para>
      <para>
        Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d11/ne-d3d11-d3d11_usage" />
      </para>
    </summary>
  </member>
  <member name="D3D11_USAGE::D3D11_USAGE_DEFAULT">
    <summary>A resource that requires read and write access by the GPU. This is likely to be the most common usage choice.</summary>
  </member>
  <member name="D3D11_USAGE::D3D11_USAGE_IMMUTABLE">
    <summary>A resource that can only be read by the GPU. It cannot be written by the GPU, and cannot be accessed at all by the CPU. This type of resource must be initialized when it is created, since it cannot be changed after creation.</summary>
  </member>
  <member name="D3D11_USAGE::D3D11_USAGE_DYNAMIC">
    <summary>
      A resource that is accessible by both the GPU (read only) and the CPU (write only). A dynamic resource is a good choice for a resource that will be updated by the CPU at least once per frame. To update a dynamic resource, use a <b>Map</b> method.

      For info about how to use dynamic resources, see <a href="https://docs.microsoft.com/windows/desktop/direct3d11/how-to--use-dynamic-resources">How to: Use dynamic resources</a>.
    </summary>
  </member>
  <member name="D3D11_USAGE::D3D11_USAGE_STAGING">
    <summary>A resource that supports data transfer (copy) from the GPU to the CPU.</summary>
  </member>
  <member name="D3D11_FEATURE_DATA_D3D11_OPTIONS">
    <summary>
      <para>Describes Direct3D 11.1 feature options in the current graphics driver.</para>
      <para>
        Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d11/ns-d3d11-d3d11_feature_data_d3d11_options" />
      </para>
    </summary>
  </member>
  <member name="D3D11_FEATURE_DATA_D3D11_OPTIONS::OutputMergerLogicOp">
    <summary>
      Specifies whether logic operations are available in blend state. The runtime sets this member to <b>TRUE</b> if logic operations are available in blend state and <b>FALSE</b> otherwise. This member is <b>FALSE</b> for <a href="https://docs.microsoft.com/windows/desktop/direct3d11/overviews-direct3d-11-devices-downlevel-intro">feature level</a> 9.1, 9.2, and 9.3. This member is optional for feature level 10, 10.1, and 11. This member is <b>TRUE</b> for feature level 11.1.
    </summary>
  </member>
  <member name="D3D11_FEATURE_DATA_D3D11_OPTIONS::UAVOnlyRenderingForcedSampleCount">
    <summary>
      Specifies whether the driver can render with no render target views (RTVs) or depth stencil views (DSVs), and only unordered access views (UAVs) bound. The runtime sets this member to <b>TRUE</b> if the driver can render with no RTVs or DSVs and only UAVs bound and <b>FALSE</b> otherwise. If <b>TRUE</b>, you can set the <b>ForcedSampleCount</b> member of <a href="https://docs.microsoft.com/windows/desktop/api/d3d11_1/ns-d3d11_1-cd3d11_rasterizer_desc1">D3D11_RASTERIZER_DESC1</a> to 1, 4, or 8 when you render with no RTVs or DSV and only UAVs bound. For <a href="https://docs.microsoft.com/windows/desktop/direct3d11/overviews-direct3d-11-devices-downlevel-intro">feature level</a> 11.1, this member is always <b>TRUE</b> and you can also set <b>ForcedSampleCount</b> to 16 in addition to 1, 4, or 8. The default value of <b>ForcedSampleCount</b> is 0, which means the same as if the value is set to 1. You can always set <b>ForcedSampleCount</b> to 0 or 1 for UAV-only rendering independently of how this member is set.
    </summary>
  </member>
  <member name="D3D11_FEATURE_DATA_D3D11_OPTIONS::DiscardAPIsSeenByDriver">
    <summary>
      Specifies whether the driver supports the <a href="https://docs.microsoft.com/windows/desktop/api/d3d11_1/nf-d3d11_1-id3d11devicecontext1-discardview">ID3D11DeviceContext1::DiscardView</a> and <a href="https://docs.microsoft.com/windows/desktop/api/d3d11_1/nf-d3d11_1-id3d11devicecontext1-discardresource">ID3D11DeviceContext1::DiscardResource</a> methods. The runtime sets this member to <b>TRUE</b> if the driver supports these methods and <b>FALSE</b> otherwise. How this member is set does not indicate whether the driver actually uses these methods; that is, the driver might ignore these methods if they are not useful to the hardware. If <b>FALSE</b>, the runtime does not expose these methods to the driver because the driver does not support them. You can monitor this member during development to rule out legacy drivers on hardware where these methods might have otherwise been beneficial. You are not required to write separate code paths based on whether this member is <b>TRUE</b> or <b>FALSE</b>; you can call these methods whenever applicable.
    </summary>
  </member>
  <member name="D3D11_FEATURE_DATA_D3D11_OPTIONS::FlagsForUpdateAndCopySeenByDriver">
    <summary>
      Specifies whether the driver supports new semantics for copy and update that are exposed by the <a href="https://docs.microsoft.com/windows/desktop/api/d3d11_1/nf-d3d11_1-id3d11devicecontext1-copysubresourceregion1">ID3D11DeviceContext1::CopySubresourceRegion1</a> and <a href="https://docs.microsoft.com/windows/desktop/api/d3d11_1/nf-d3d11_1-id3d11devicecontext1-updatesubresource1">ID3D11DeviceContext1::UpdateSubresource1</a> methods. The runtime sets this member to <b>TRUE</b> if the driver supports new semantics for copy and update. The runtime sets this member to <b>FALSE</b> only for legacy drivers. The runtime handles this member similarly to the <b>DiscardAPIsSeenByDriver</b> member.
    </summary>
  </member>
  <member name="D3D11_FEATURE_DATA_D3D11_OPTIONS::ClearView">
    <summary>
      Specifies whether the driver supports the <a href="https://docs.microsoft.com/windows/desktop/api/d3d11_1/nf-d3d11_1-id3d11devicecontext1-clearview">ID3D11DeviceContext1::ClearView</a> method. The runtime sets this member to <b>TRUE</b> if the driver supports this method and <b>FALSE</b> otherwise. If <b>FALSE</b>, the runtime does not expose this method to the driver because the driver does not support it.

      <div class="alert">
        <b>Note</b>  For <a href="https://docs.microsoft.com/windows/desktop/direct3d11/overviews-direct3d-11-devices-downlevel-intro">feature level</a> 9.1, 9.2, and 9.3, this member is always <b>TRUE</b> because the option is emulated by the runtime.
      </div>
      <div> </div>
    </summary>
  </member>
  <member name="D3D11_FEATURE_DATA_D3D11_OPTIONS::CopyWithOverlap">
    <summary>
      Specifies whether you can call <a href="https://docs.microsoft.com/windows/desktop/api/d3d11_1/nf-d3d11_1-id3d11devicecontext1-copysubresourceregion1">ID3D11DeviceContext1::CopySubresourceRegion1</a> with overlapping source and destination rectangles. The runtime sets this member to <b>TRUE</b> if you can call <b>CopySubresourceRegion1</b> with overlapping source and destination rectangles and <b>FALSE</b> otherwise. If <b>FALSE</b>, the runtime does not expose this method to the driver because the driver does not support it.

      <div class="alert">
        <b>Note</b>  For <a href="https://docs.microsoft.com/windows/desktop/direct3d11/overviews-direct3d-11-devices-downlevel-intro">feature level</a> 9.1, 9.2, and 9.3, this member is always <b>TRUE</b> because drivers already support the option for these feature levels.
      </div>
      <div> </div>
    </summary>
  </member>
  <member name="D3D11_FEATURE_DATA_D3D11_OPTIONS::ConstantBufferPartialUpdate">
    <summary>
      Specifies whether the driver supports partial updates of constant buffers. The runtime sets this member to <b>TRUE</b> if the driver supports partial updates of constant buffers and <b>FALSE</b> otherwise. If <b>FALSE</b>, the runtime does not expose this operation to the driver because the driver does not support it.

      <div class="alert">
        <b>Note</b>  For <a href="https://docs.microsoft.com/windows/desktop/direct3d11/overviews-direct3d-11-devices-downlevel-intro">feature level</a> 9.1, 9.2, and 9.3, this member is always <b>TRUE</b> because the option is emulated by the runtime.
      </div>
      <div> </div>
    </summary>
  </member>
  <member name="D3D11_FEATURE_DATA_D3D11_OPTIONS::ConstantBufferOffsetting">
    <summary>
      Specifies whether the driver supports new semantics for setting offsets in constant buffers for a shader. The runtime sets this member to <b>TRUE</b> if the driver supports allowing you to specify offsets when you call new methods like the <a href="https://docs.microsoft.com/windows/desktop/api/d3d11_1/nf-d3d11_1-id3d11devicecontext1-vssetconstantbuffers1">ID3D11DeviceContext1::VSSetConstantBuffers1</a> method and <b>FALSE</b> otherwise. If <b>FALSE</b>, the runtime does not expose this operation to the driver because the driver does not support it.

      <div class="alert">
        <b>Note</b>  For <a href="https://docs.microsoft.com/windows/desktop/direct3d11/overviews-direct3d-11-devices-downlevel-intro">feature level</a> 9.1, 9.2, and 9.3, this member is always <b>TRUE</b> because the option is emulated by the runtime.
      </div>
      <div> </div>
    </summary>
  </member>
  <member name="D3D11_FEATURE_DATA_D3D11_OPTIONS::MapNoOverwriteOnDynamicConstantBuffer">
    <summary>
      Specifies whether you can call <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nf-d3d11-id3d11devicecontext-map">ID3D11DeviceContext::Map</a> with <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ne-d3d11-d3d11_map">D3D11_MAP_WRITE_NO_OVERWRITE</a> on a dynamic constant buffer (that is, whether the driver supports this operation). The runtime sets this member to <b>TRUE</b> if the driver supports this operation and <b>FALSE</b> otherwise. If <b>FALSE</b>, the runtime fails this method because the driver does not support the operation.

      <div class="alert">
        <b>Note</b>  For <a href="https://docs.microsoft.com/windows/desktop/direct3d11/overviews-direct3d-11-devices-downlevel-intro">feature level</a> 9.1, 9.2, and 9.3, this member is always <b>TRUE</b> because the option is emulated by the runtime.
      </div>
      <div> </div>
    </summary>
  </member>
  <member name="D3D11_FEATURE_DATA_D3D11_OPTIONS::MapNoOverwriteOnDynamicBufferSRV">
    <summary>
      Specifies whether you can call <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nf-d3d11-id3d11devicecontext-map">ID3D11DeviceContext::Map</a> with <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ne-d3d11-d3d11_map">D3D11_MAP_WRITE_NO_OVERWRITE</a> on a dynamic buffer SRV (that is, whether the driver supports this operation). The runtime sets this member to <b>TRUE</b> if the driver supports this operation and <b>FALSE</b> otherwise. If <b>FALSE</b>, the runtime fails this method because the driver does not support the operation.
    </summary>
  </member>
  <member name="D3D11_FEATURE_DATA_D3D11_OPTIONS::MultisampleRTVWithForcedSampleCountOne">
    <summary>
      Specifies whether the driver supports multisample rendering when you render with RTVs bound. If <b>TRUE</b>, you can set the <b>ForcedSampleCount</b> member of <a href="https://docs.microsoft.com/windows/desktop/api/d3d11_1/ns-d3d11_1-cd3d11_rasterizer_desc1">D3D11_RASTERIZER_DESC1</a> to 1 with a multisample RTV bound. The driver can support this option on <a href="https://docs.microsoft.com/windows/desktop/direct3d11/overviews-direct3d-11-devices-downlevel-intro">feature level</a> 10 and higher. If <b>FALSE</b>, the rasterizer-state creation will fail because the driver is legacy or the feature level is too low.
    </summary>
  </member>
  <member name="D3D11_FEATURE_DATA_D3D11_OPTIONS::SAD4ShaderInstructions">
    <summary>
      Specifies whether the hardware and driver support the <a href="https://docs.microsoft.com/windows/desktop/direct3dhlsl/dx-graphics-hlsl-msad4">msad4</a> intrinsic function in shaders. The runtime sets this member to <b>TRUE</b> if the hardware and driver support calls to <b>msad4</b> intrinsic functions in shaders. If <b>FALSE</b>, the driver is legacy or the hardware does not support the option; the runtime will fail shader creation for shaders that use <b>msad4</b>.
    </summary>
  </member>
  <member name="D3D11_FEATURE_DATA_D3D11_OPTIONS::ExtendedDoublesShaderInstructions">
    <summary>
      Specifies whether the hardware and driver support the <a href="https://docs.microsoft.com/windows/desktop/direct3dhlsl/dx-graphics-hlsl-fma">fma</a> intrinsic function and other extended doubles instructions (<b>DDIV</b> and <b>DRCP</b>) in shaders. The <b>fma</b> intrinsic function emits an extended doubles <b>DFMA</b> instruction. The runtime sets this member to <b>TRUE</b> if the hardware and driver support extended doubles instructions in shaders (<a href="https://docs.microsoft.com/windows/desktop/direct3dhlsl/d3d11-graphics-reference-sm5">shader model 5</a> and higher). Support of this option implies support of basic double-precision shader instructions as well. You can use the <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ne-d3d11-d3d11_feature">D3D11_FEATURE_DOUBLES</a> value to query for support of double-precision shaders. If <b>FALSE</b>, the hardware and driver do not support the option; the runtime will fail shader creation for shaders that use extended doubles instructions.
    </summary>
  </member>
  <member name="D3D11_FEATURE_DATA_D3D11_OPTIONS::ExtendedResourceSharing">
    <summary>
      Specifies whether the hardware and driver have [extended support for shared Texture2D resource types and formats](/windows/win32/direct3d11/direct3d-11-1-features#extended-support-for-shared-texture2d-resources). The runtime sets this member to <b>TRUE</b> if the hardware and driver support extended Texture2D resource sharing.
    </summary>
  </member>
  <member name="D3D11_RENDER_TARGET_BLEND_DESC1">
    <summary>
      <para>Describes the blend state for a render target.</para>
      <para>
        Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d11_1/ns-d3d11_1-d3d11_render_target_blend_desc1" />
      </para>
    </summary>
  </member>
  <member name="D3D11_RENDER_TARGET_BLEND_DESC1::BlendEnable">
    <summary>
      Enable (or disable) blending.

      &gt; [!NOTE]
      &gt; It's not valid for <i>LogicOpEnable</i> and <i>BlendEnable</i> to both be <b>TRUE</b>.
    </summary>
  </member>
  <member name="D3D11_RENDER_TARGET_BLEND_DESC1::LogicOpEnable">
    <summary>
      Enable (or disable) a logical operation.

      &gt; [!NOTE]
      &gt; If you set <i>LogicOpEnable</i> to <b>TRUE</b>, then <i>BlendEnable</i> must be <b>FALSE</b>, and the system's [<b>D3D11_FEATURE_DATA_D3D11_OPTIONS::OutputMergerLogicOp</b>](../d3d11/ns-d3d11-d3d11_feature_data_d3d11_options.md) option must be <b>TRUE</b>.
    </summary>
  </member>
  <member name="D3D11_RENDER_TARGET_BLEND_DESC1::SrcBlend">
    <summary>
      This <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ne-d3d11-d3d11_blend">blend option</a> specifies the operation to perform on the RGB value that the pixel shader outputs. The <b>BlendOp</b> member defines how to combine the <b>SrcBlend</b> and <b>DestBlend</b> operations.
    </summary>
  </member>
  <member name="D3D11_RENDER_TARGET_BLEND_DESC1::DestBlend">
    <summary>
      This <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ne-d3d11-d3d11_blend">blend option</a> specifies the operation to perform on the current RGB value in the render target. The <b>BlendOp</b> member defines how to combine the <b>SrcBlend</b> and <b>DestBlend</b> operations.
    </summary>
  </member>
  <member name="D3D11_RENDER_TARGET_BLEND_DESC1::BlendOp">
    <summary>
      This <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ne-d3d11-d3d11_blend_op">blend operation</a> defines how to combine the <b>SrcBlend</b> and <b>DestBlend</b> operations.
    </summary>
  </member>
  <member name="D3D11_RENDER_TARGET_BLEND_DESC1::SrcBlendAlpha">
    <summary>
      This <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ne-d3d11-d3d11_blend">blend option</a> specifies the operation to perform on the alpha value that the pixel shader outputs. Blend options that end in _COLOR are not allowed. The <b>BlendOpAlpha</b> member defines how to combine the <b>SrcBlendAlpha</b> and <b>DestBlendAlpha</b> operations.
    </summary>
  </member>
  <member name="D3D11_RENDER_TARGET_BLEND_DESC1::DestBlendAlpha">
    <summary>
      This <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ne-d3d11-d3d11_blend">blend option</a> specifies the operation to perform on the current alpha value in the render target. Blend options that end in _COLOR are not allowed. The <b>BlendOpAlpha</b> member defines how to combine the <b>SrcBlendAlpha</b> and <b>DestBlendAlpha</b> operations.
    </summary>
  </member>
  <member name="D3D11_RENDER_TARGET_BLEND_DESC1::BlendOpAlpha">
    <summary>
      This <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ne-d3d11-d3d11_blend_op">blend operation</a> defines how to combine the <b>SrcBlendAlpha</b> and <b>DestBlendAlpha</b> operations.
    </summary>
  </member>
  <member name="D3D11_RENDER_TARGET_BLEND_DESC1::LogicOp">
    <summary>
      A <a href="https://docs.microsoft.com/windows/desktop/api/d3d11_1/ne-d3d11_1-d3d11_logic_op">D3D11_LOGIC_OP</a>-typed value that specifies the logical operation to configure for the render target.
    </summary>
  </member>
  <member name="D3D11_RENDER_TARGET_BLEND_DESC1::RenderTargetWriteMask">
    <summary>A write mask.</summary>
  </member>
  <member name="D3D11_COUNTER_INFO">
    <summary>
      <para>Information about the video card's performance counter capabilities.</para>
      <para>
        Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d11/ns-d3d11-d3d11_counter_info" />
      </para>
    </summary>
  </member>
  <member name="D3D11_COUNTER_INFO::LastDeviceDependentCounter">
    <summary>
      Largest device-dependent counter ID that the device supports. If none are supported, this value will be 0. Otherwise it will be greater than or equal to D3D11_COUNTER_DEVICE_DEPENDENT_0. See <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ne-d3d11-d3d11_counter">D3D11_COUNTER</a>.
    </summary>
  </member>
  <member name="D3D11_COUNTER_INFO::NumSimultaneousCounters">
    <summary>Number of counters that can be simultaneously supported.</summary>
  </member>
  <member name="D3D11_COUNTER_INFO::NumDetectableParallelUnits">
    <summary>Number of detectable parallel units that the counter is able to discern. Values are 1 ~ 4. Use NumDetectableParallelUnits to interpret the values of the VERTEX_PROCESSING, GEOMETRY_PROCESSING, PIXEL_PROCESSING, and OTHER_GPU_PROCESSING counters.</summary>
  </member>
  <member name="ID3D11InfoQueue::GetRetrievalFilter">
    <summary>
      <para>Get the retrieval filter at the top of the retrieval-filter stack.</para>
      <para>
        Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d11sdklayers/nf-d3d11sdklayers-id3d11infoqueue-getretrievalfilter" />
      </para>
      <param name="pFilter">Retrieval filter at the top of the retrieval-filter stack.</param>
      <param name="pFilterByteLength">
        Size of the retrieval filter in bytes. If pFilter is <b>NULL</b>, the size of the retrieval filter will be output to this parameter.
      </param>
    </summary>
  </member>
  <member name="ID3D11InfoQueue::GetStorageFilter">
    <summary>
      <para>Get the storage filter at the top of the storage-filter stack.</para>
      <para>
        Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d11sdklayers/nf-d3d11sdklayers-id3d11infoqueue-getstoragefilter" />
      </para>
      <param name="pFilter">Storage filter at the top of the storage-filter stack.</param>
      <param name="pFilterByteLength">
        Size of the storage filter in bytes. If pFilter is <b>NULL</b>, the size of the storage filter will be output to this parameter.
      </param>
    </summary>
  </member>
  <member name="ID3D11Device::CreateDepthStencilView">
    <summary>
      <para>Create a depth-stencil view for accessing resource data.</para>
      <para>
        Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d11/nf-d3d11-id3d11device-createdepthstencilview" />
      </para>
      <param name="pResource">
        Pointer to the resource that will serve as the depth-stencil surface. This resource must have been created with the <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ne-d3d11-d3d11_bind_flag">D3D11_BIND_DEPTH_STENCIL</a> flag.
      </param>
      <param name="pDesc">
        Pointer to a depth-stencil-view description (see <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ns-d3d11-d3d11_depth_stencil_view_desc">D3D11_DEPTH_STENCIL_VIEW_DESC</a>). Set this parameter to <b>NULL</b> to create a view that accesses mipmap level 0 of the entire resource (using the format the resource was created with).
      </param>
      <param name="ppDepthStencilView">
        Address of a pointer to an <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nn-d3d11-id3d11depthstencilview">ID3D11DepthStencilView</a>. Set this parameter to <b>NULL</b> to validate the other input parameters (the method will return S_FALSE if the other input parameters pass validation).
      </param>
    </summary>
  </member>
  <member name="ID3D11InfoQueue::ClearRetrievalFilter">
    <summary>
      <para>Remove a retrieval filter from the top of the retrieval-filter stack.</para>
      <para>
        Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d11sdklayers/nf-d3d11sdklayers-id3d11infoqueue-clearretrievalfilter" />
      </para>
    </summary>
  </member>
  <member name="D3D11_FEATURE_DATA_D3D11_OPTIONS2">
    <summary>
      <para>Describes Direct3D 11.3 feature options in the current graphics driver.</para>
      <para>
        Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d11/ns-d3d11-d3d11_feature_data_d3d11_options2" />
      </para>
    </summary>
  </member>
  <member name="D3D11_FEATURE_DATA_D3D11_OPTIONS2::PSSpecifiedStencilRefSupported">
    <summary>
      Specifies whether the hardware and driver support <b>PSSpecifiedStencilRef</b>.
      The runtime sets this member to <b>TRUE</b> if the hardware and driver support this option.
    </summary>
  </member>
  <member name="D3D11_FEATURE_DATA_D3D11_OPTIONS2::TypedUAVLoadAdditionalFormats">
    <summary>
      Specifies whether the hardware and driver support <b>TypedUAVLoadAdditionalFormats</b>.
      The runtime sets this member to <b>TRUE</b> if the hardware and driver support this option.
    </summary>
  </member>
  <member name="D3D11_FEATURE_DATA_D3D11_OPTIONS2::ROVsSupported">
    <summary>
      Specifies whether the hardware and driver support ROVs.
      The runtime sets this member to <b>TRUE</b> if the hardware and driver support this option.
    </summary>
  </member>
  <member name="D3D11_FEATURE_DATA_D3D11_OPTIONS2::ConservativeRasterizationTier">
    <summary>
      Specifies whether the hardware and driver support conservative rasterization.
      The runtime sets this member to a <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ne-d3d11-d3d11_conservative_rasterization_tier">D3D11_CONSERVATIVE_RASTERIZATION_TIER</a>-typed value that indicates if the hardware and driver support conservative rasterization and at what tier level.
    </summary>
  </member>
  <member name="D3D11_FEATURE_DATA_D3D11_OPTIONS2::TiledResourcesTier">
    <summary>
      Specifies whether the hardware and driver support tiled resources.
      The runtime sets this member to a <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ne-d3d11-d3d11_tiled_resources_tier">D3D11_TILED_RESOURCES_TIER</a>-typed value that indicates if the hardware and driver support tiled resources and at what tier level.
    </summary>
  </member>
  <member name="D3D11_FEATURE_DATA_D3D11_OPTIONS2::MapOnDefaultTextures">
    <summary>
      Specifies whether the hardware and driver support mapping on default textures.
      The runtime sets this member to <b>TRUE</b> if the hardware and driver support this option.
    </summary>
  </member>
  <member name="D3D11_FEATURE_DATA_D3D11_OPTIONS2::StandardSwizzle">
    <summary>
      Specifies whether the hardware and driver support standard swizzle.
      The runtime sets this member to <b>TRUE</b> if the hardware and driver support this option.
    </summary>
  </member>
  <member name="D3D11_FEATURE_DATA_D3D11_OPTIONS2::UnifiedMemoryArchitecture">
    <summary>
      Specifies whether the hardware and driver support Unified Memory Architecture.
      The runtime sets this member to <b>TRUE</b> if the hardware and driver support this option.
    </summary>
  </member>
  <member name="D3D11_TEXTURE2D_DESC1">
    <summary>
      <para>Describes a 2D texture.</para>
      <para>
        Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d11_3/ns-d3d11_3-d3d11_texture2d_desc1" />
      </para>
    </summary>
  </member>
  <member name="D3D11_TEXTURE2D_DESC1::Width">
    <summary>
      Texture width (in texels). The  range is from 1 to D3D11_REQ_TEXTURE2D_U_OR_V_DIMENSION (16384). For a texture cube-map, the  range is from 1 to D3D11_REQ_TEXTURECUBE_DIMENSION (16384). However, the range is actually constrained by the <a href="https://docs.microsoft.com/windows/desktop/direct3d11/overviews-direct3d-11-devices-downlevel-intro">feature level</a> at which you create the rendering device. For more information about restrictions, see Remarks.
    </summary>
  </member>
  <member name="D3D11_TEXTURE2D_DESC1::Height">
    <summary>
      Texture height (in texels). The  range is from 1 to D3D11_REQ_TEXTURE2D_U_OR_V_DIMENSION (16384). For a texture cube-map, the  range is from 1 to D3D11_REQ_TEXTURECUBE_DIMENSION (16384). However, the range is actually constrained by the <a href="https://docs.microsoft.com/windows/desktop/direct3d11/overviews-direct3d-11-devices-downlevel-intro">feature level</a> at which you create the rendering device. For more information about restrictions, see Remarks.
    </summary>
  </member>
  <member name="D3D11_TEXTURE2D_DESC1::MipLevels">
    <summary>
      The maximum number of mipmap levels in the texture. See the remarks in <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ns-d3d11-d3d11_tex1d_srv">D3D11_TEX1D_SRV</a>. Use 1 for a multisampled texture; or 0 to generate a full set of subtextures.
    </summary>
  </member>
  <member name="D3D11_TEXTURE2D_DESC1::ArraySize">
    <summary>
      Number of textures in the texture array. The  range is from 1 to D3D11_REQ_TEXTURE2D_ARRAY_AXIS_DIMENSION (2048). For a texture cube-map, this value is a multiple of 6 (that is, 6 times the value in the <b>NumCubes</b> member of <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ns-d3d11-d3d11_texcube_array_srv">D3D11_TEXCUBE_ARRAY_SRV</a>), and the  range is from 6 to 2046. The range is actually constrained by the <a href="https://docs.microsoft.com/windows/desktop/direct3d11/overviews-direct3d-11-devices-downlevel-intro">feature level</a> at which you create the rendering device. For more information about restrictions, see Remarks.
    </summary>
  </member>
  <member name="D3D11_TEXTURE2D_DESC1::Format">
    <summary>
      Texture format (see <a href="https://docs.microsoft.com/windows/desktop/api/dxgiformat/ne-dxgiformat-dxgi_format">DXGI_FORMAT</a>).
    </summary>
  </member>
  <member name="D3D11_TEXTURE2D_DESC1::SampleDesc">
    <summary>
      Structure that specifies multisampling parameters for the texture. See <a href="https://docs.microsoft.com/windows/desktop/api/dxgicommon/ns-dxgicommon-dxgi_sample_desc">DXGI_SAMPLE_DESC</a>.
    </summary>
  </member>
  <member name="D3D11_TEXTURE2D_DESC1::Usage">
    <summary>
      Value that identifies how the texture is to be read from and written to. The most common value is D3D11_USAGE_DEFAULT; see <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ne-d3d11-d3d11_usage">D3D11_USAGE</a> for all possible values.
    </summary>
  </member>
  <member name="D3D11_TEXTURE2D_DESC1::BindFlags">
    <summary>
      Flags (see <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ne-d3d11-d3d11_bind_flag">D3D11_BIND_FLAG</a>) for binding to pipeline stages. The flags can be combined by a logical OR.
    </summary>
  </member>
  <member name="D3D11_TEXTURE2D_DESC1::CPUAccessFlags">
    <summary>
      Flags (see <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ne-d3d11-d3d11_cpu_access_flag">D3D11_CPU_ACCESS_FLAG</a>) to specify the types of CPU access allowed. Use 0 if CPU access is not required. These flags can be combined with a logical OR.
    </summary>
  </member>
  <member name="D3D11_TEXTURE2D_DESC1::MiscFlags">
    <summary>
      Flags (see <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ne-d3d11-d3d11_resource_misc_flag">D3D11_RESOURCE_MISC_FLAG</a>) that identify other, less common resource options. Use 0 if none of these flags apply. These flags can be combined by using a logical OR. For a texture cube-map, set the <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ne-d3d11-d3d11_resource_misc_flag">D3D11_RESOURCE_MISC_TEXTURECUBE</a> flag. Cube-map arrays (that is, <b>ArraySize</b> &gt; 6) require feature level <a href="https://docs.microsoft.com/windows/desktop/api/d3dcommon/ne-d3dcommon-d3d_feature_level">D3D_FEATURE_LEVEL_10_1</a> or higher.
    </summary>
  </member>
  <member name="D3D11_TEXTURE2D_DESC1::TextureLayout">
    <summary>
      A <a href="https://docs.microsoft.com/windows/desktop/api/d3d11_3/ne-d3d11_3-d3d11_texture_layout">D3D11_TEXTURE_LAYOUT</a>-typed value that identifies the layout of the texture.

      The TextureLayout parameter selects both the actual layout of the texture in memory and the layout visible to the application while the texture is mapped.  These flags may not be requested without CPU access also requested.

      It is illegal to set CPU access flags on default textures without also setting TextureLayout to a value other than D3D11_TEXTURE_LAYOUT_UNDEFINED.

      D3D11_TEXTURE_LAYOUT_ROW_MAJOR may only be used to create non-multisampled, textures with a single subresource (Planar YUV textures are supported).  These textures may only be used as a source and destination of copy operations, and BindFlags must be zero.


      D3D11_TEXTURE_LAYOUT_64K_STANDARD_SWIZZLE may only be used to create non-multisampled, non-depth-stencil textures.
    </summary>
  </member>
  <member name="ID3D11InfoQueue::GetNumMessagesDeniedByStorageFilter">
    <summary>
      <para>Get the number of messages that were denied passage through a storage filter.</para>
      <para>
        Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d11sdklayers/nf-d3d11sdklayers-id3d11infoqueue-getnummessagesdeniedbystoragefilter" />
      </para>
    </summary>
  </member>
  <member name="ID3D11Debug::ValidateContextForDispatch">
    <summary>
      <para>Verifies whether the dispatch pipeline state is valid.</para>
      <para>
        Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d11sdklayers/nf-d3d11sdklayers-id3d11debug-validatecontextfordispatch" />
      </para>
      <param name="pContext">
        A pointer to the <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nn-d3d11-id3d11devicecontext">ID3D11DeviceContext</a> that represents a device context.
      </param>
    </summary>
  </member>
  <member name="D3D11_TEX2DMS_ARRAY_RTV">
    <summary>
      <para>Specifies the subresources from a an array of multisampled 2D textures to use in a render-target view.</para>
      <para>
        Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d11/ns-d3d11-d3d11_tex2dms_array_rtv" />
      </para>
    </summary>
  </member>
  <member name="D3D11_TEX2DMS_ARRAY_RTV::FirstArraySlice">
    <summary>The index of the first texture to use in an array of textures.</summary>
  </member>
  <member name="D3D11_TEX2DMS_ARRAY_RTV::ArraySize">
    <summary>Number of textures to use.</summary>
  </member>
  <member name="D3D11_VIDEO_PROCESSOR_CAPS">
    <summary>
      <para>Describes the capabilities of a Microsoft Direct3D 11 video processor.</para>
      <para>
        Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d11/ns-d3d11-d3d11_video_processor_caps" />
      </para>
    </summary>
  </member>
  <member name="D3D11_VIDEO_PROCESSOR_CAPS::DeviceCaps">
    <summary>
      A bitwise <b>OR</b> of zero or more flags from the <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ne-d3d11-d3d11_video_processor_device_caps">D3D11_VIDEO_PROCESSOR_DEVICE_CAPS</a>  enumeration.
    </summary>
  </member>
  <member name="D3D11_VIDEO_PROCESSOR_CAPS::FeatureCaps">
    <summary>
      A bitwise <b>OR</b> of zero or more flags from the   <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ne-d3d11-d3d11_video_processor_feature_caps">D3D11_VIDEO_PROCESSOR_FEATURE_CAPS</a> enumeration.
    </summary>
  </member>
  <member name="D3D11_VIDEO_PROCESSOR_CAPS::FilterCaps">
    <summary>
      A bitwise <b>OR</b> of zero or more flags from the  <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ne-d3d11-d3d11_video_processor_filter_caps">D3D11_VIDEO_PROCESSPR_FILTER_CAPS</a> enumeration.
    </summary>
  </member>
  <member name="D3D11_VIDEO_PROCESSOR_CAPS::InputFormatCaps">
    <summary>
      A bitwise <b>OR</b> of zero or more flags from the  <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ne-d3d11-d3d11_video_processor_format_caps">D3D11_VIDEO_PROCESSOR_FORMAT_CAPS</a> enumeration.
    </summary>
  </member>
  <member name="D3D11_VIDEO_PROCESSOR_CAPS::AutoStreamCaps">
    <summary>
      A bitwise <b>OR</b> of zero or more flags from the  <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ne-d3d11-d3d11_video_processor_auto_stream_caps">D3D11_VIDEO_PROCESSOR_AUTO_STREAM_CAPS</a> enumeration.
    </summary>
  </member>
  <member name="D3D11_VIDEO_PROCESSOR_CAPS::StereoCaps">
    <summary>
      A bitwise <b>OR</b> of zero or more flags from the   <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ne-d3d11-d3d11_video_processor_stereo_caps">D3D11_VIDEO_PROCESSOR_STEREO_CAPS</a> enumeration.
    </summary>
  </member>
  <member name="D3D11_VIDEO_PROCESSOR_CAPS::RateConversionCapsCount">
    <summary>
      The number of frame-rate conversion capabilities. To enumerate the frame-rate conversion capabilities, call the <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nf-d3d11-id3d11videoprocessorenumerator-getvideoprocessorrateconversioncaps">ID3D11VideoProcessorEnumerator::GetVideoProcessorRateConversionCaps</a> method.
    </summary>
  </member>
  <member name="D3D11_VIDEO_PROCESSOR_CAPS::MaxInputStreams">
    <summary>The maximum number of input streams that can be enabled at the same time.</summary>
  </member>
  <member name="D3D11_VIDEO_PROCESSOR_CAPS::MaxStreamStates">
    <summary>The maximum number of input streams for which the device can store state data.</summary>
  </member>
  <member name="ID3D11DeviceContext4::Wait">
    <summary>
      <para>Waits until the specified fence reaches or exceeds the specified value before future work can begin.</para>
      <para>
        Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d11_3/nf-d3d11_3-id3d11devicecontext4-wait" />
      </para>
      <param name="pFence">
        A pointer to the <a href="https://docs.microsoft.com/windows/win32/api/d3d11_3/nn-d3d11_3-id3d11fence">ID3D11Fence</a> object.
      </param>
      <param name="Value">
        The value that the device context is waiting for the fence to reach or exceed.  So when  <a href="https://docs.microsoft.com/windows/win32/api/d3d11_3/nf-d3d11_3-id3d11fence-getcompletedvalue">ID3D11Fence::GetCompletedValue</a> is greater than or equal to <i>Value</i>, the wait is terminated.
      </param>
    </summary>
  </member>
  <member name="ID3D11LinkingNode">
    <summary>
      <para>A linking-node interface is used for shader linking.</para>
      <para>
        Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d11shader/nn-d3d11shader-id3d11linkingnode" />
      </para>
    </summary>
  </member>
  <member name="ID3D11DeviceContext::OMGetDepthStencilState">
    <summary>
      <para>Gets the depth-stencil state of the output-merger stage.</para>
      <para>
        Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d11/nf-d3d11-id3d11devicecontext-omgetdepthstencilstate" />
      </para>
      <param name="ppDepthStencilState">
        Address of a pointer to a depth-stencil state interface (see <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nn-d3d11-id3d11depthstencilstate">ID3D11DepthStencilState</a>) to be filled with information from the device.
      </param>
      <param name="pStencilRef">Pointer to the stencil reference value used in the depth-stencil test.</param>
    </summary>
  </member>
  <member name="ID3D11VideoDevice::GetVideoDecoderProfile">
    <summary>
      <para>Gets a profile that is supported by the driver.</para>
      <para>
        Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d11/nf-d3d11-id3d11videodevice-getvideodecoderprofile" />
      </para>
      <param name="Index">
        The zero-based index of the profile. To get the number of profiles that the driver supports, call <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nf-d3d11-id3d11videodevice-getvideodecoderprofilecount">ID3D11VideoDevice::GetVideoDecoderProfileCount</a>.
      </param>
      <param name="pDecoderProfile">Receives a GUID that identifies the profile.</param>
    </summary>
  </member>
  <member name="D3D11_TEX2DMS_DSV">
    <summary>
      <para>Specifies the subresource from a multisampled 2D texture that is accessible to a depth-stencil view.</para>
      <para>
        Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d11/ns-d3d11-d3d11_tex2dms_dsv" />
      </para>
    </summary>
  </member>
  <member name="D3D11_TEX2DMS_DSV::UnusedField_NothingToDefine">
    <summary>Unused.</summary>
  </member>
  <member name="ID3D11TracingDevice">
    <summary>
      <para>The tracing device interface sets shader tracking information, which enables accurate logging and playback of shader execution.</para>
      <para>
        Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d11sdklayers/nn-d3d11sdklayers-id3d11tracingdevice" />
      </para>
    </summary>
  </member>
  <member name="D3D11_TEXCUBE_SRV">
    <summary>
      <para>Specifies the subresource from a cube texture to use in a shader-resource view.</para>
      <para>
        Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d11/ns-d3d11-d3d11_texcube_srv" />
      </para>
    </summary>
  </member>
  <member name="D3D11_TEXCUBE_SRV::MostDetailedMip">
    <summary>
      Index of the most detailed mipmap level to use; this number is between 0 and <b>MipLevels</b> (from the original TextureCube for which <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nf-d3d11-id3d11device-createshaderresourceview">ID3D11Device::CreateShaderResourceView</a> creates a view) -1.
    </summary>
  </member>
  <member name="D3D11_TEXCUBE_SRV::MipLevels">
    <summary>
      The maximum number of mipmap levels for the view of the texture. See the remarks in <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ns-d3d11-d3d11_tex1d_srv">D3D11_TEX1D_SRV</a>.

      Set to -1 to indicate all the mipmap levels from <b>MostDetailedMip</b> on down to least detailed.
    </summary>
  </member>
  <member name="ID3D11Device::CreateDomainShader">
    <summary>
      <para>Create a domain shader.</para>
      <para>
        Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d11/nf-d3d11-id3d11device-createdomainshader" />
      </para>
      <param name="pShaderBytecode">A pointer to a compiled shader.</param>
      <param name="BytecodeLength">Size of the compiled shader.</param>
      <param name="pClassLinkage">
        A pointer to a class linkage interface (see <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nn-d3d11-id3d11classlinkage">ID3D11ClassLinkage</a>); the value can be <b>NULL</b>.
      </param>
      <param name="ppDomainShader">
        Address of a pointer to a <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nn-d3d11-id3d11domainshader">ID3D11DomainShader</a> interface. If this is <b>NULL</b>, all other parameters will be validated, and if all parameters pass validation this API will return <b>S_FALSE</b> instead of <b>S_OK</b>.
      </param>
    </summary>
  </member>
  <member name="ID3D11CryptoSession::GetCertificate">
    <summary>
      <para>Gets the driver's certificate chain.</para>
      <para>
        Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d11/nf-d3d11-id3d11cryptosession-getcertificate" />
      </para>
      <param name="CertificateSize">
        The size of the <i>pCertificate</i> array, in bytes. To get the size of the certificate chain, call <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nf-d3d11-id3d11cryptosession-getcertificatesize">ID3D11CryptoSession::GetCertificateSize</a>.
      </param>
      <param name="pCertificate">A pointer to a byte array that receives the driver's certificate chain. The caller must allocate the array.</param>
    </summary>
  </member>
  <member name="D3D11_VDOV_DIMENSION">
    <summary>
      <para>Specifies how to access a resource that is used in a video decoding output view.</para>
      <para>
        Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d11/ne-d3d11-d3d11_vdov_dimension" />
      </para>
    </summary>
  </member>
  <member name="D3D11_VDOV_DIMENSION::D3D11_VDOV_DIMENSION_UNKNOWN">
    <summary>Not a valid value.</summary>
  </member>
  <member name="D3D11_VDOV_DIMENSION::D3D11_VDOV_DIMENSION_TEXTURE2D">
    <summary>The resource will be accessed as a 2D texture.</summary>
  </member>
  <member name="ID3D11FunctionLinkingGraph::GenerateHlsl">
    <summary>
      <para>Generates Microsoft High Level Shader Language (HLSL) shader code that represents the function-linking-graph.</para>
      <para>
        Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d11shader/nf-d3d11shader-id3d11functionlinkinggraph-generatehlsl" />
      </para>
      <param name="uFlags">Reserved</param>
      <param name="ppBuffer">
        An pointer to a variable that receives a pointer to the <a href="https://docs.microsoft.com/previous-versions/windows/desktop/legacy/ff728743(v=vs.85)">ID3DBlob</a> interface that you can use to access the HLSL shader source code that represents the function-linking-graph. You can compile this HLSL code, but first you must  add code or include statements for the functions called in the function-linking-graph.
      </param>
    </summary>
  </member>
  <member name="D3D11_KEY_EXCHANGE_HW_PROTECTION_INPUT_DATA">
    <summary>
      <para>Represents key exchange input data for hardware content protection.</para>
      <para>
        Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d11_1/ns-d3d11_1-d3d11_key_exchange_hw_protection_input_data" />
      </para>
    </summary>
  </member>
  <member name="D3D11_KEY_EXCHANGE_HW_PROTECTION_INPUT_DATA::PrivateDataSize">
    <summary>
      The size of the private data reserved for IHV usage. This size is determined from the <i>pPrivateInputSize</i> parameter returned by the <a href="https://docs.microsoft.com/windows/desktop/api/d3d11_1/nf-d3d11_1-id3d11videodevice1-getcryptosessionprivatedatasize">ID3D11VideoDevice1::GetCryptoSessionPrivateDataSize</a> function.
    </summary>
  </member>
  <member name="D3D11_KEY_EXCHANGE_HW_PROTECTION_INPUT_DATA::HWProtectionDataSize">
    <summary>The size of the DRM command data.</summary>
  </member>
  <member name="D3D11_KEY_EXCHANGE_HW_PROTECTION_INPUT_DATA::pbInput">
    <summary>
      If <b>PrivateDataSize</b> is greater than 0,  pbInput[0] – <b>pbInput</b>[<b>PrivateDataSize</b> - 1] is reserved for IHV use.

      <b>pbInput</b>[<b>PrivateDataSize</b>] – <b>pbInput</b>[<b>HWProtectionDataSize</b> + <b>PrivateDataSize</b> - 1] contains the input data for the DRM command. The format and size of the DRM command is defined by the DRM specification.
    </summary>
  </member>
  <member name="ID3D11DeviceChild">
    <summary>
      <para>A device-child interface accesses data used by a device.</para>
      <para>
        Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d11/nn-d3d11-id3d11devicechild" />
      </para>
    </summary>
  </member>
  <member name="D3D11_RLDO_FLAGS">
    <summary>
      <para>Options for the amount of information to report about a device object's lifetime.</para>
      <para>
        Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d11sdklayers/ne-d3d11sdklayers-d3d11_rldo_flags" />
      </para>
    </summary>
  </member>
  <member name="D3D11_RLDO_FLAGS::D3D11_RLDO_SUMMARY">
    <summary>Specifies to obtain a summary about a device object's lifetime.</summary>
  </member>
  <member name="D3D11_RLDO_FLAGS::D3D11_RLDO_DETAIL">
    <summary>Specifies to obtain detailed information about a device object's lifetime.</summary>
  </member>
  <member name="D3D11_RLDO_FLAGS::D3D11_RLDO_IGNORE_INTERNAL">
    <summary>This flag indicates to ignore objects which have no external refcounts keeping them alive. D3D objects are printed using an external refcount and an internal refcount. Typically, all objects are printed. This flag means ignore the objects whose external refcount is 0, because the application is not responsible for keeping them alive.</summary>
  </member>
  <member name="D3D11_VIDEO_PROCESSOR_CONTENT_DESC">
    <summary>
      <para>Describes a video stream for a video processor.</para>
      <para>
        Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d11/ns-d3d11-d3d11_video_processor_content_desc" />
      </para>
    </summary>
  </member>
  <member name="D3D11_VIDEO_PROCESSOR_CONTENT_DESC::InputFrameFormat">
    <summary>
      A member of the <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ne-d3d11-d3d11_video_frame_format">D3D11_VIDEO_FRAME_FORMAT</a> enumeration that describes how the video stream is interlaced.
    </summary>
  </member>
  <member name="D3D11_VIDEO_PROCESSOR_CONTENT_DESC::InputFrameRate">
    <summary>
      The frame rate of the input video stream, specified as a <a href="https://docs.microsoft.com/windows/desktop/api/dxgicommon/ns-dxgicommon-dxgi_rational">DXGI_RATIONAL</a> structure.
    </summary>
  </member>
  <member name="D3D11_VIDEO_PROCESSOR_CONTENT_DESC::InputWidth">
    <summary>The width of the input frames, in pixels.</summary>
  </member>
  <member name="D3D11_VIDEO_PROCESSOR_CONTENT_DESC::InputHeight">
    <summary>The height of the input frames, in pixels.</summary>
  </member>
  <member name="D3D11_VIDEO_PROCESSOR_CONTENT_DESC::OutputFrameRate">
    <summary>
      The frame rate of the output video stream, specified as a <a href="https://docs.microsoft.com/windows/desktop/api/dxgicommon/ns-dxgicommon-dxgi_rational">DXGI_RATIONAL</a> structure.
    </summary>
  </member>
  <member name="D3D11_VIDEO_PROCESSOR_CONTENT_DESC::OutputWidth">
    <summary>The width of the output frames, in pixels.</summary>
  </member>
  <member name="D3D11_VIDEO_PROCESSOR_CONTENT_DESC::OutputHeight">
    <summary>The height of the output frames, in pixels.</summary>
  </member>
  <member name="D3D11_VIDEO_PROCESSOR_CONTENT_DESC::Usage">
    <summary>
      A member of the <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ne-d3d11-d3d11_video_usage">D3D11_VIDEO_USAGE</a> enumeration that describes how the video processor will be used. The value indicates the desired trade-off between speed and video quality. The driver uses this flag as a hint when it creates the video processor.
    </summary>
  </member>
  <member name="ID3D11DeviceContext::VSSetConstantBuffers">
    <summary>
      <para>Sets the constant buffers used by the vertex shader pipeline stage.</para>
      <para>
        Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d11/nf-d3d11-id3d11devicecontext-vssetconstantbuffers" />
      </para>
      <param name="StartSlot">
        Index into the device's zero-based array to begin setting constant buffers to (ranges from 0 to <b>D3D11_COMMONSHADER_CONSTANT_BUFFER_API_SLOT_COUNT</b> - 1).
      </param>
      <param name="NumBuffers">
        Number of buffers to set (ranges from 0 to <b>D3D11_COMMONSHADER_CONSTANT_BUFFER_API_SLOT_COUNT</b> - <i>StartSlot</i>).
      </param>
      <param name="ppConstantBuffers">
        Array of constant buffers (see <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nn-d3d11-id3d11buffer">ID3D11Buffer</a>) being given to the device.
      </param>
    </summary>
  </member>
  <member name="ID3D11VideoDevice::CreateVideoProcessor">
    <summary>
      <para>Creates a video processor device for Microsoft Direct3D 11.</para>
      <para>
        Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d11/nf-d3d11-id3d11videodevice-createvideoprocessor" />
      </para>
      <param name="pEnum">
        A pointer to the <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nn-d3d11-id3d11videoprocessorenumerator">ID3D11VideoProcessorEnumerator</a> interface. To get this pointer, call <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nf-d3d11-id3d11videodevice-createvideoprocessorenumerator">ID3D11VideoDevice::CreateVideoProcessorEnumerator</a>.
      </param>
      <param name="RateConversionIndex">
        Specifies the frame-rate conversion capabilities for the video processor. The value is a zero-based index that corresponds to the <i>TypeIndex</i> parameter of the <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nf-d3d11-id3d11videoprocessorenumerator-getvideoprocessorrateconversioncaps">ID3D11VideoProcessorEnumerator::GetVideoProcessorRateConversionCaps</a> method.
      </param>
      <param name="ppVideoProcessor">
        Receives a pointer to the <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nn-d3d11-id3d11videoprocessor">ID3D11VideoProcessor</a> interface. The caller must release the interface.
      </param>
    </summary>
  </member>
  <member name="ID3D11Device3::CreateUnorderedAccessView1">
    <summary>
      <para>Creates a view for accessing an unordered access resource.</para>
      <para>
        Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d11_3/nf-d3d11_3-id3d11device3-createunorderedaccessview1" />
      </para>
      <param name="pResource">
        Pointer to an <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nn-d3d11-id3d11resource">ID3D11Resource</a> that represents a resources that will serve as an input to a shader.
      </param>
      <param name="pDesc1">
        Pointer to a <a href="https://docs.microsoft.com/windows/desktop/api/d3d11_3/ns-d3d11_3-cd3d11_unordered_access_view_desc1">D3D11_UNORDERED_ACCESS_VIEW_DESC1</a> structure that represents an unordered-access view description. Set this parameter to <b>NULL</b> to create a view that accesses the entire resource (using the format the resource was created with).
      </param>
      <param name="ppUAView1">
        A pointer to a memory block that receives a pointer to a <a href="https://docs.microsoft.com/windows/desktop/api/d3d11_3/nn-d3d11_3-id3d11unorderedaccessview1">ID3D11UnorderedAccessView1</a> interface for the created unordered-access view. Set this parameter to <b>NULL</b> to validate the other input parameters (the method will return <b>S_FALSE</b> if the other input parameters pass validation).
      </param>
    </summary>
  </member>
  <member name="D3D11_SHADER_RESOURCE_VIEW_DESC">
    <summary>
      <para>Describes a shader-resource view.</para>
      <para>
        Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d11/ns-d3d11-d3d11_shader_resource_view_desc" />
      </para>
    </summary>
  </member>
  <member name="D3D11_SHADER_RESOURCE_VIEW_DESC::Format">
    <summary>
      A <a href="https://docs.microsoft.com/windows/desktop/api/dxgiformat/ne-dxgiformat-dxgi_format">DXGI_FORMAT</a> specifying the viewing format. See remarks.
    </summary>
  </member>
  <member name="D3D11_SHADER_RESOURCE_VIEW_DESC::ViewDimension">
    <summary>
      The resource type of the view. See <a href="https://docs.microsoft.com/previous-versions/windows/desktop/legacy/ff476217(v=vs.85)">D3D11_SRV_DIMENSION</a>. You must set <i>ViewDimension</i> to the same resource type as that of the underlying resource. This parameter also determines which _SRV to use in the union below.
    </summary>
  </member>
  <member name="D3D11_SHADER_RESOURCE_VIEW_DESC::Buffer">
    <summary>
      View the resource as a buffer using information from a shader-resource view (see <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ns-d3d11-d3d11_buffer_srv">D3D11_BUFFER_SRV</a>).
    </summary>
  </member>
  <member name="D3D11_SHADER_RESOURCE_VIEW_DESC::Texture1D">
    <summary>
      View the resource as a 1D texture using information from a shader-resource view (see <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ns-d3d11-d3d11_tex1d_srv">D3D11_TEX1D_SRV</a>).
    </summary>
  </member>
  <member name="D3D11_SHADER_RESOURCE_VIEW_DESC::Texture1DArray">
    <summary>
      View the resource as a 1D-texture array using information from a shader-resource view (see <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ns-d3d11-d3d11_tex1d_array_srv">D3D11_TEX1D_ARRAY_SRV</a>).
    </summary>
  </member>
  <member name="D3D11_SHADER_RESOURCE_VIEW_DESC::Texture2D">
    <summary>
      View the resource as a 2D-texture using information from a shader-resource view (see <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ns-d3d11-d3d11_tex2d_srv">D3D11_TEX2D_SRV</a>).
    </summary>
  </member>
  <member name="D3D11_SHADER_RESOURCE_VIEW_DESC::Texture2DArray">
    <summary>
      View the resource as a 2D-texture array using information from a shader-resource view (see <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ns-d3d11-d3d11_tex2d_array_srv">D3D11_TEX2D_ARRAY_SRV</a>).
    </summary>
  </member>
  <member name="D3D11_SHADER_RESOURCE_VIEW_DESC::Texture2DMS">
    <summary>
      View the resource as a 2D-multisampled texture using information from a shader-resource view (see <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ns-d3d11-d3d11_tex2dms_srv">D3D11_TEX2DMS_SRV</a>).
    </summary>
  </member>
  <member name="D3D11_SHADER_RESOURCE_VIEW_DESC::Texture2DMSArray">
    <summary>
      View the resource as a 2D-multisampled-texture array using information from a shader-resource view (see <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ns-d3d11-d3d11_tex2dms_array_srv">D3D11_TEX2DMS_ARRAY_SRV</a>).
    </summary>
  </member>
  <member name="D3D11_SHADER_RESOURCE_VIEW_DESC::Texture3D">
    <summary>
      View the resource as a 3D texture using information from a shader-resource view (see <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ns-d3d11-d3d11_tex3d_srv">D3D11_TEX3D_SRV</a>).
    </summary>
  </member>
  <member name="D3D11_SHADER_RESOURCE_VIEW_DESC::TextureCube">
    <summary>
      View the resource as a 3D-cube texture using information from a shader-resource view (see <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ns-d3d11-d3d11_texcube_srv">D3D11_TEXCUBE_SRV</a>).
    </summary>
  </member>
  <member name="D3D11_SHADER_RESOURCE_VIEW_DESC::TextureCubeArray">
    <summary>
      View the resource as a 3D-cube-texture array using information from a shader-resource view (see <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ns-d3d11-d3d11_texcube_array_srv">D3D11_TEXCUBE_ARRAY_SRV</a>).
    </summary>
  </member>
  <member name="D3D11_SHADER_RESOURCE_VIEW_DESC::BufferEx">
    <summary>
      View the resource as a raw buffer using information from a shader-resource view (see <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ns-d3d11-d3d11_bufferex_srv">D3D11_BUFFEREX_SRV</a>). For more info about raw viewing of buffers, see <a href="https://docs.microsoft.com/windows/desktop/direct3d11/overviews-direct3d-11-resources-intro">Raw Views of Buffers</a>.
    </summary>
  </member>
  <member name="D3D11_FEATURE_DATA_D3D9_OPTIONS1">
    <summary>
      <para>Describes Direct3D 9 feature options in the current graphics driver.</para>
      <para>
        Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d11/ns-d3d11-d3d11_feature_data_d3d9_options1" />
      </para>
    </summary>
  </member>
  <member name="D3D11_FEATURE_DATA_D3D9_OPTIONS1::FullNonPow2TextureSupported">
    <summary>
      Specifies whether the driver supports the nonpowers-of-2-unconditionally feature. For more info about this feature, see <a href="https://docs.microsoft.com/windows/desktop/direct3d11/overviews-direct3d-11-devices-downlevel-intro">feature level</a>. The runtime sets this member to <b>TRUE</b> for hardware at Direct3D 10 and higher feature levels.  For hardware at Direct3D 9.3 and lower feature levels, the runtime sets this member to <b>FALSE</b> if the hardware and driver support the powers-of-2 (2D textures must have widths and heights specified as powers of two) feature or the nonpowers-of-2-conditionally feature.
    </summary>
  </member>
  <member name="D3D11_FEATURE_DATA_D3D9_OPTIONS1::DepthAsTextureWithLessEqualComparisonFilterSupported">
    <summary>
      Specifies whether the driver supports the shadowing feature with the comparison-filtering mode set to less than or equal to. The runtime sets this member to <b>TRUE</b> for hardware at Direct3D 10 and higher <a href="https://docs.microsoft.com/windows/desktop/direct3d11/overviews-direct3d-11-devices-downlevel-intro">feature levels</a>.  For hardware at Direct3D 9.3 and lower feature levels, the runtime sets this member to <b>TRUE</b> only if the hardware and driver support the shadowing feature; otherwise <b>FALSE</b>.
    </summary>
  </member>
  <member name="D3D11_FEATURE_DATA_D3D9_OPTIONS1::SimpleInstancingSupported">
    <summary>
      Specifies whether the hardware and driver support simple instancing. The runtime sets this member to <b>TRUE</b> if  the hardware and driver support simple instancing.
    </summary>
  </member>
  <member name="D3D11_FEATURE_DATA_D3D9_OPTIONS1::TextureCubeFaceRenderTargetWithNonCubeDepthStencilSupported">
    <summary>
      Specifies whether the hardware and driver support setting a single face of a <a href="https://docs.microsoft.com/windows/desktop/direct3dhlsl/texturecube">TextureCube</a> as a render target while the depth stencil surface that is bound alongside can be a <a href="https://docs.microsoft.com/windows/desktop/direct3dhlsl/sm5-object-texture2d">Texture2D</a> (as opposed to <b>TextureCube</b>). The runtime sets this member to <b>TRUE</b> if  the hardware and driver support this feature; otherwise <b>FALSE</b>.

      If the hardware and driver don't support this feature, the app must match the render target surface type with the depth stencil surface type. Because hardware at Direct3D 9.3 and lower <a href="https://docs.microsoft.com/windows/desktop/direct3d11/overviews-direct3d-11-devices-downlevel-intro">feature levels</a> doesn't allow <a href="https://docs.microsoft.com/windows/desktop/direct3dhlsl/texturecube">TextureCube</a> depth surfaces, the only way to render a scene into a <b>TextureCube</b> while having depth buffering enabled is to render each <b>TextureCube</b> face separately to a <a href="https://docs.microsoft.com/windows/desktop/direct3dhlsl/sm5-object-texture2d">Texture2D</a> render target first (because that can be matched with a <b>Texture2D</b> depth), and then copy the results into the <b>TextureCube</b>.  If  the hardware and driver support this feature, the app can just render to the <b>TextureCube</b> faces directly while getting depth buffering out of a <b>Texture2D</b> depth buffer.

      You only need to query this feature from  hardware at Direct3D 9.3 and lower <a href="https://docs.microsoft.com/windows/desktop/direct3d11/overviews-direct3d-11-devices-downlevel-intro">feature levels</a> because hardware at Direct3D 10.0 and higher feature levels allow <a href="https://docs.microsoft.com/windows/desktop/direct3dhlsl/texturecube">TextureCube</a> depth surfaces.
    </summary>
  </member>
  <member name="ID3D11DeviceContext::GSGetShaderResources">
    <summary>
      <para>Get the geometry shader resources.</para>
      <para>
        Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d11/nf-d3d11-id3d11devicecontext-gsgetshaderresources" />
      </para>
      <param name="StartSlot">Index into the device's zero-based array to begin getting shader resources from (ranges from 0 to D3D11_COMMONSHADER_INPUT_RESOURCE_SLOT_COUNT - 1).</param>
      <param name="NumViews">The number of resources to get from the device. Up to a maximum of 128 slots are available for shader resources (ranges from 0 to D3D11_COMMONSHADER_INPUT_RESOURCE_SLOT_COUNT - StartSlot).</param>
      <param name="ppShaderResourceViews">
        Array of <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nn-d3d11-id3d11shaderresourceview">shader resource view</a> interfaces to be returned by the device.
      </param>
    </summary>
  </member>
  <member name="ID3D11DeviceContext::CSSetSamplers">
    <summary>
      <para>Set an array of sampler states to the compute-shader stage.</para>
      <para>
        Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d11/nf-d3d11-id3d11devicecontext-cssetsamplers" />
      </para>
      <param name="StartSlot">Index into the device's zero-based array to begin setting samplers to (ranges from 0 to D3D11_COMMONSHADER_SAMPLER_SLOT_COUNT - 1).</param>
      <param name="NumSamplers">Number of samplers in the array. Each pipeline stage has a total of 16 sampler slots available (ranges from 0 to D3D11_COMMONSHADER_SAMPLER_SLOT_COUNT - StartSlot).</param>
      <param name="ppSamplers">
        Pointer to an array of sampler-state interfaces (see <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nn-d3d11-id3d11samplerstate">ID3D11SamplerState</a>). See Remarks.
      </param>
    </summary>
  </member>
  <member name="ID3D11DeviceContext::PSSetConstantBuffers">
    <summary>
      <para>Sets the constant buffers used by the pixel shader pipeline stage.</para>
      <para>
        Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d11/nf-d3d11-id3d11devicecontext-pssetconstantbuffers" />
      </para>
      <param name="StartSlot">
        Index into the device's zero-based array to begin setting constant buffers to (ranges from 0 to <b>D3D11_COMMONSHADER_CONSTANT_BUFFER_API_SLOT_COUNT</b> - 1).
      </param>
      <param name="NumBuffers">
        Number of buffers to set (ranges from 0 to <b>D3D11_COMMONSHADER_CONSTANT_BUFFER_API_SLOT_COUNT</b> - <i>StartSlot</i>).
      </param>
      <param name="ppConstantBuffers">
        Array of constant buffers (see <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nn-d3d11-id3d11buffer">ID3D11Buffer</a>) being given to the device.
      </param>
    </summary>
  </member>
  <member name="ID3D11DeviceContext::HSSetShaderResources">
    <summary>
      <para>Bind an array of shader resources to the hull-shader stage.</para>
      <para>
        Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d11/nf-d3d11-id3d11devicecontext-hssetshaderresources" />
      </para>
      <param name="StartSlot">Index into the device's zero-based array to begin setting shader resources to (ranges from 0 to D3D11_COMMONSHADER_INPUT_RESOURCE_SLOT_COUNT - 1).</param>
      <param name="NumViews">Number of shader resources to set. Up to a maximum of 128 slots are available for shader resources(ranges from 0 to D3D11_COMMONSHADER_INPUT_RESOURCE_SLOT_COUNT - StartSlot).</param>
      <param name="ppShaderResourceViews">
        Array of <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nn-d3d11-id3d11shaderresourceview">shader resource view</a> interfaces to set to the device.
      </param>
    </summary>
  </member>
  <member name="D3D11_VIDEO_DECODER_HISTOGRAM_COMPONENT_FLAGS">
    <summary>
      <para>Flags for indicating a subset of components used with video decode histogram.</para>
      <para>
        Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d11_4/ne-d3d11_4-d3d11_video_decoder_histogram_component_flags" />
      </para>
    </summary>
  </member>
  <member name="D3D11_VIDEO_DECODER_HISTOGRAM_COMPONENT_FLAGS::D3D11_VIDEO_DECODER_HISTOGRAM_COMPONENT_FLAG_NONE">
    <summary>No associated component.</summary>
  </member>
  <member name="D3D11_VIDEO_DECODER_HISTOGRAM_COMPONENT_FLAGS::D3D11_VIDEO_DECODER_HISTOGRAM_COMPONENT_FLAG_Y">
    <summary>If the format is a YUV format, indicates the Y component.</summary>
  </member>
  <member name="D3D11_VIDEO_DECODER_HISTOGRAM_COMPONENT_FLAGS::D3D11_VIDEO_DECODER_HISTOGRAM_COMPONENT_FLAG_U">
    <summary>If the format is a YUV format, indicates the U component.</summary>
  </member>
  <member name="D3D11_VIDEO_DECODER_HISTOGRAM_COMPONENT_FLAGS::D3D11_VIDEO_DECODER_HISTOGRAM_COMPONENT_FLAG_V">
    <summary>If the format is a YUV format, indicates the V component.</summary>
  </member>
  <member name="D3D11_VIDEO_DECODER_HISTOGRAM_COMPONENT_FLAGS::D3D11_VIDEO_DECODER_HISTOGRAM_COMPONENT_FLAG_R">
    <summary>If the format is an RGB/BGR format, indicates the R component.</summary>
  </member>
  <member name="D3D11_VIDEO_DECODER_HISTOGRAM_COMPONENT_FLAGS::D3D11_VIDEO_DECODER_HISTOGRAM_COMPONENT_FLAG_G">
    <summary>If the format is an RGB/BGR format, indicates the G component.</summary>
  </member>
  <member name="D3D11_VIDEO_DECODER_HISTOGRAM_COMPONENT_FLAGS::D3D11_VIDEO_DECODER_HISTOGRAM_COMPONENT_FLAG_B">
    <summary>If the format is an RGB/BGR format, indicates the B component.</summary>
  </member>
  <member name="D3D11_VIDEO_DECODER_HISTOGRAM_COMPONENT_FLAGS::D3D11_VIDEO_DECODER_HISTOGRAM_COMPONENT_FLAG_A">
    <summary>If the format is an RGB/BGR format, indicates the A component.</summary>
  </member>
  <member name="D3D11_VIDEO_PROCESSOR_OUTPUT_RATE">
    <summary>
      <para>Specifies the rate at which the video processor produces output frames from an input stream.</para>
      <para>
        Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d11/ne-d3d11-d3d11_video_processor_output_rate" />
      </para>
    </summary>
  </member>
  <member name="D3D11_VIDEO_PROCESSOR_OUTPUT_RATE::D3D11_VIDEO_PROCESSOR_OUTPUT_RATE_NORMAL">
    <summary>The output is the normal frame rate.</summary>
  </member>
  <member name="D3D11_VIDEO_PROCESSOR_OUTPUT_RATE::D3D11_VIDEO_PROCESSOR_OUTPUT_RATE_HALF">
    <summary>The output is half the frame rate.</summary>
  </member>
  <member name="D3D11_VIDEO_PROCESSOR_OUTPUT_RATE::D3D11_VIDEO_PROCESSOR_OUTPUT_RATE_CUSTOM">
    <summary>The output is a custom frame rate.</summary>
  </member>
  <member name="ID3D11ShaderReflectionType">
    <summary>
      <para>This shader-reflection interface provides access to variable type.</para>
      <para>
        Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d11shader/nn-d3d11shader-id3d11shaderreflectiontype" />
      </para>
    </summary>
  </member>
  <member name="ID3D11ShaderReflection::GetPatchConstantParameterDesc">
    <summary>
      <para>Get a patch-constant parameter description for a shader.</para>
      <para>
        Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d11shader/nf-d3d11shader-id3d11shaderreflection-getpatchconstantparameterdesc" />
      </para>
      <param name="ParameterIndex">A zero-based parameter index.</param>
      <param name="pDesc">
        A pointer to a shader-input-signature description. See <a href="https://docs.microsoft.com/windows/win32/api/d3d11shader/ns-d3d11shader-d3d11_signature_parameter_desc">D3D11_SIGNATURE_PARAMETER_DESC</a>.
      </param>
    </summary>
  </member>
  <member name="D3D11_OMAC">
    <summary>
      <para>Contains a Message Authentication Code (MAC).</para>
      <para>
        Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d11/ns-d3d11-d3d11_omac" />
      </para>
    </summary>
  </member>
  <member name="D3D11_OMAC::Omac">
    <summary>A byte array that contains the cryptographic MAC value of the message.</summary>
  </member>
  <member name="ID3D11BlendState1">
    <summary>
      <para>The blend-state interface holds a description for blending state that you can bind to the output-merger stage. This blend-state interface supports logical operations as well as blending operations.</para>
      <para>
        Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d11_1/nn-d3d11_1-id3d11blendstate1" />
      </para>
    </summary>
  </member>
  <member name="ID3D11VideoProcessorEnumerator">
    <summary>
      <para>Enumerates the video processor capabilities of a Microsoft Direct3D 11 device.</para>
      <para>
        Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d11/nn-d3d11-id3d11videoprocessorenumerator" />
      </para>
    </summary>
  </member>
  <member name="ID3D11ModuleInstance::BindResourceAsUnorderedAccessView">
    <summary>
      <para>Rebinds a resource as an unordered access view (UAV) from source slot to destination slot.</para>
      <para>
        Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d11shader/nf-d3d11shader-id3d11moduleinstance-bindresourceasunorderedaccessview" />
      </para>
      <param name="uSrcSrvSlot">The first source slot number for rebinding.</param>
      <param name="uDstUavSlot">The first destination slot number for rebinding.</param>
      <param name="uCount">The number of slots for rebinding.</param>
    </summary>
  </member>
  <member name="ID3D11LibraryReflection">
    <summary>
      <para>A library-reflection interface accesses library info.</para>
      <para>
        Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d11shader/nn-d3d11shader-id3d11libraryreflection" />
      </para>
    </summary>
  </member>
  <member name="D3D11_MESSAGE_SEVERITY">
    <summary>
      <para>Debug message severity levels for an information queue.</para>
      <para>
        Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d11sdklayers/ne-d3d11sdklayers-d3d11_message_severity" />
      </para>
    </summary>
  </member>
  <member name="D3D11_MESSAGE_SEVERITY::D3D11_MESSAGE_SEVERITY_CORRUPTION">
    <summary>Defines some type of corruption which has occurred.</summary>
  </member>
  <member name="D3D11_MESSAGE_SEVERITY::D3D11_MESSAGE_SEVERITY_ERROR">
    <summary>Defines an error message.</summary>
  </member>
  <member name="D3D11_MESSAGE_SEVERITY::D3D11_MESSAGE_SEVERITY_WARNING">
    <summary>Defines a warning message.</summary>
  </member>
  <member name="D3D11_MESSAGE_SEVERITY::D3D11_MESSAGE_SEVERITY_INFO">
    <summary>Defines an information message.</summary>
  </member>
  <member name="D3D11_MESSAGE_SEVERITY::D3D11_MESSAGE_SEVERITY_MESSAGE">
    <summary>
      Defines a message other than corruption, error, warning, or information.

      <b>Direct3D 11:  </b>This value is not supported until Direct3D 11.1.
    </summary>
  </member>
  <member name="ID3D11DeviceContext2::BeginEventInt">
    <summary>
      <para>Allows applications to annotate the beginning of a range of graphics commands.</para>
      <para>
        Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d11_2/nf-d3d11_2-id3d11devicecontext2-begineventint" />
      </para>
      <param name="pLabel">
        An optional string that will be logged to <a href="https://docs.microsoft.com/previous-versions/dotnet/netframework-3.0/ms751538(v=vs.85)">ETW</a> when ETW logging is active. If <b>‘#d’</b> appears in the string, it will be replaced by the value of the <i>Data</i> parameter similar to the way <b>printf</b> works.
      </param>
      <param name="Data">A signed data value that will be logged to ETW when ETW logging is active.</param>
    </summary>
  </member>
  <member name="ID3D11VideoContext::StartSessionKeyRefresh">
    <summary>
      <para>Gets a random number that can be used to refresh the session key.</para>
      <para>
        Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d11/nf-d3d11-id3d11videocontext-startsessionkeyrefresh" />
      </para>
      <param name="pCryptoSession">
        A pointer to the <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nn-d3d11-id3d11cryptosession">ID3D11CryptoSession</a> interface.
      </param>
      <param name="RandomNumberSize">
        The size of the <i>pRandomNumber</i> array, in bytes. The size should match the size of the session key.
      </param>
      <param name="pRandomNumber">A pointer to a byte array that receives a random number.</param>
    </summary>
  </member>
  <member name="D3D11_BLEND_OP">
    <summary>
      <para>RGB or alpha blending operation.</para>
      <para>
        Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d11/ne-d3d11-d3d11_blend_op" />
      </para>
    </summary>
  </member>
  <member name="D3D11_BLEND_OP::D3D11_BLEND_OP_ADD">
    <summary>Add source 1 and source 2.</summary>
  </member>
  <member name="D3D11_BLEND_OP::D3D11_BLEND_OP_SUBTRACT">
    <summary>Subtract source 1 from source 2.</summary>
  </member>
  <member name="D3D11_BLEND_OP::D3D11_BLEND_OP_REV_SUBTRACT">
    <summary>Subtract source 2 from source 1.</summary>
  </member>
  <member name="D3D11_BLEND_OP::D3D11_BLEND_OP_MIN">
    <summary>Find the minimum of source 1 and source 2.</summary>
  </member>
  <member name="D3D11_BLEND_OP::D3D11_BLEND_OP_MAX">
    <summary>Find the maximum of source 1 and source 2.</summary>
  </member>
  <member name="D3D11_CPU_ACCESS_FLAG">
    <summary>
      <para>Specifies the types of CPU access allowed for a resource.</para>
      <para>
        Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d11/ne-d3d11-d3d11_cpu_access_flag" />
      </para>
    </summary>
  </member>
  <member name="D3D11_CPU_ACCESS_FLAG::D3D11_CPU_ACCESS_WRITE">
    <summary>
      The resource is to be mappable so that the CPU can change its contents. Resources created with this flag cannot be set as outputs of the pipeline and must be created with either dynamic or staging usage (see <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ne-d3d11-d3d11_usage">D3D11_USAGE</a>).
    </summary>
  </member>
  <member name="D3D11_CPU_ACCESS_FLAG::D3D11_CPU_ACCESS_READ">
    <summary>
      The resource is to be mappable so that the CPU can read its contents. Resources created with this flag cannot be set as either inputs or outputs to the pipeline and must be created with staging usage (see <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ne-d3d11-d3d11_usage">D3D11_USAGE</a>).
    </summary>
  </member>
  <member name="ID3D11DeviceContext::HSGetConstantBuffers">
    <summary>
      <para>Get the constant buffers used by the hull-shader stage.</para>
      <para>
        Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d11/nf-d3d11-id3d11devicecontext-hsgetconstantbuffers" />
      </para>
      <param name="StartSlot">Index into the device's zero-based array to begin retrieving constant buffers from (ranges from 0 to D3D11_COMMONSHADER_CONSTANT_BUFFER_API_SLOT_COUNT - 1).</param>
      <param name="NumBuffers">Number of buffers to retrieve (ranges from 0 to D3D11_COMMONSHADER_CONSTANT_BUFFER_API_SLOT_COUNT - StartSlot).</param>
      <param name="ppConstantBuffers">
        Array of constant buffer interface pointers (see <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nn-d3d11-id3d11buffer">ID3D11Buffer</a>) to be returned by the method.
      </param>
    </summary>
  </member>
  <member name="ID3D11DeviceContext2::UpdateTileMappings">
    <summary>
      <para>Updates mappings of tile locations in tiled resources to memory locations in a tile pool.</para>
      <para>
        Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d11_2/nf-d3d11_2-id3d11devicecontext2-updatetilemappings" />
      </para>
      <param name="pTiledResource">A pointer to the tiled resource.</param>
      <param name="NumTiledResourceRegions">The number of tiled resource regions.</param>
      <param name="pTiledResourceRegionStartCoordinates">
        An array of <a href="https://docs.microsoft.com/windows/desktop/api/d3d11_2/ns-d3d11_2-d3d11_tiled_resource_coordinate">D3D11_TILED_RESOURCE_COORDINATE</a> structures that describe the starting coordinates of the tiled resource regions. The <i>NumTiledResourceRegions</i> parameter specifies the number of <b>D3D11_TILED_RESOURCE_COORDINATE</b> structures in the array.
      </param>
      <param name="pTiledResourceRegionSizes">
        An array of <a href="https://docs.microsoft.com/windows/desktop/api/d3d11_2/ns-d3d11_2-d3d11_tile_region_size">D3D11_TILE_REGION_SIZE</a> structures that describe the sizes of the tiled resource regions. The <i>NumTiledResourceRegions</i> parameter specifies the number of <b>D3D11_TILE_REGION_SIZE</b> structures in the array.
      </param>
      <param name="pTilePool">A pointer to the tile pool.</param>
      <param name="NumRanges">The number of tile-pool ranges.</param>
      <param name="pRangeFlags">
        An array of <a href="https://docs.microsoft.com/windows/desktop/api/d3d11_2/ne-d3d11_2-d3d11_tile_range_flag">D3D11_TILE_RANGE_FLAG</a> values that describe each tile-pool range. The <i>NumRanges</i> parameter specifies the number of values in the array.
      </param>
      <param name="pTilePoolStartOffsets">An array of offsets into the tile pool. These are 0-based tile offsets, counting in tiles (not bytes).</param>
      <param name="pRangeTileCounts">
        An array of tiles.

        An array of values that specify the number of tiles in each tile-pool range. The <i>NumRanges</i> parameter specifies the number of values in the array.
      </param>
      <param name="Flags">
        A combination of <a href="https://docs.microsoft.com/windows/desktop/api/d3d11_2/ne-d3d11_2-d3d11_tile_mapping_flag">D3D11_TILE_MAPPING_FLAGS</a> values that are combined by using a bitwise OR operation.
      </param>
    </summary>
  </member>
  <member name="ID3D11VideoProcessorEnumerator::GetVideoProcessorCustomRate">
    <summary>
      <para>Gets a list of custom frame rates that a video processor supports.</para>
      <para>
        Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d11/nf-d3d11-id3d11videoprocessorenumerator-getvideoprocessorcustomrate" />
      </para>
      <param name="TypeIndex">
        The zero-based index of the frame-rate capability group. To get the maxmum index, call <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nf-d3d11-id3d11videoprocessorenumerator-getvideoprocessorcaps">ID3D11VideoProcessorEnumerator::GetVideoProcessorCaps </a> and check the <b>RateConversionCapsCount</b> member of the <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ns-d3d11-d3d11_video_processor_caps">D3D11_VIDEO_PROCESSOR_CAPS</a> structure.
      </param>
      <param name="CustomRateIndex">
        The zero-based index of the custom rate to retrieve. To get the maximum index, call <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nf-d3d11-id3d11videoprocessorenumerator-getvideoprocessorrateconversioncaps">ID3D11VideoProcessorEnumerator::GetVideoProcessorRateConversionCaps</a> and check the <b>CustomRateCount</b> member of the <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ns-d3d11-d3d11_video_processor_rate_conversion_caps">D3D11_VIDEO_PROCESSOR_RATE_CONVERSION_CAPS</a> structure.

        This index value is always relative to the capability group specified in the <i>TypeIndex</i> parameter.
      </param>
      <param name="pRate">
        A pointer to a <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ns-d3d11-d3d11_video_processor_custom_rate">D3D11_VIDEO_PROCESSOR_CUSTOM_RATE</a> structure that receives the custom rate.
      </param>
    </summary>
  </member>
  <member name="ID3D11BlendState">
    <summary>
      <para>The blend-state interface holds a description for blending state that you can bind to the output-merger stage.</para>
      <para>
        Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d11/nn-d3d11-id3d11blendstate" />
      </para>
    </summary>
  </member>
  <member name="D3D11_VIDEO_PROCESSOR_INPUT_VIEW_DESC">
    <summary>
      <para>Describes a video processor input view.</para>
      <para>
        Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d11/ns-d3d11-d3d11_video_processor_input_view_desc" />
      </para>
    </summary>
  </member>
  <member name="D3D11_VIDEO_PROCESSOR_INPUT_VIEW_DESC::FourCC">
    <summary>The surface format. If zero, the driver uses the DXGI format that was used to create the resource. If you are using feature level 9, the value must be zero.</summary>
  </member>
  <member name="D3D11_VIDEO_PROCESSOR_INPUT_VIEW_DESC::ViewDimension">
    <summary>
      The resource type of the view, specified as a member of the <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ne-d3d11-d3d11_vpiv_dimension">D3D11_VPIV_DIMENSION</a> enumeration.
    </summary>
  </member>
  <member name="D3D11_VIDEO_PROCESSOR_INPUT_VIEW_DESC::Texture2D">
    <summary>
      A <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ns-d3d11-d3d11_tex2d_vpiv">D3D11_TEX2D_VPIV</a> structure that identifies the texture resource.
    </summary>
  </member>
  <member name="ID3D11DeviceContext::IASetVertexBuffers">
    <summary>
      <para>Bind an array of vertex buffers to the input-assembler stage.</para>
      <para>
        Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d11/nf-d3d11-id3d11devicecontext-iasetvertexbuffers" />
      </para>
      <param name="StartSlot">
        The first input slot for binding. The first vertex buffer is explicitly bound to the start slot; this causes each additional vertex buffer in the array to be implicitly bound to each subsequent input slot. The maximum of 16 or 32 input slots (ranges from 0 to D3D11_IA_VERTEX_INPUT_RESOURCE_SLOT_COUNT - 1) are available; the <a href="https://docs.microsoft.com/windows/desktop/direct3d11/overviews-direct3d-11-devices-downlevel-intro">maximum number of input slots depends on the feature level</a>.
      </param>
      <param name="NumBuffers">The number of vertex buffers in the array. The number of buffers (plus the starting slot) can't exceed the total number of IA-stage input slots (ranges from 0 to D3D11_IA_VERTEX_INPUT_RESOURCE_SLOT_COUNT - StartSlot).</param>
      <param name="ppVertexBuffers">
        A pointer to an array of vertex buffers (see <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nn-d3d11-id3d11buffer">ID3D11Buffer</a>). The vertex buffers must have been created with the <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ne-d3d11-d3d11_bind_flag">D3D11_BIND_VERTEX_BUFFER</a> flag.
      </param>
      <param name="pStrides">Pointer to an array of stride values; one stride value for each buffer in the vertex-buffer array. Each stride is the size (in bytes) of the elements that are to be used from that vertex buffer.</param>
      <param name="pOffsets">Pointer to an array of offset values; one offset value for each buffer in the vertex-buffer array. Each offset is the number of bytes between the first element of a vertex buffer and the first element that will be used.</param>
    </summary>
  </member>
  <member name="ID3D11VideoContext1::SubmitDecoderBuffers1">
    <summary>
      <para>Submits one or more buffers for decoding.</para>
      <para>
        Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d11_1/nf-d3d11_1-id3d11videocontext1-submitdecoderbuffers1" />
      </para>
      <param name="pDecoder">
        A pointer to the <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nn-d3d11-id3d11videodecoder">ID3D11VideoDecoder</a> interface. To get this pointer, call the <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nf-d3d11-id3d11videodevice-createvideodecoder">ID3D11VideoDevice::CreateVideoDecoder</a> method.
      </param>
      <param name="NumBuffers">The number of buffers submitted for decoding.</param>
      <param name="pBufferDesc">
        A pointer to an array of <a href="https://docs.microsoft.com/windows/desktop/api/d3d11_1/ns-d3d11_1-d3d11_video_decoder_buffer_desc1">D3D11_VIDEO_DECODER_BUFFER_DESC1</a> structures. The <i>NumBuffers</i> parameter specifies the number of elements in the array. Each element in the array describes a compressed buffer for decoding.
      </param>
    </summary>
  </member>
  <member name="D3D11_QUERY_DESC1">
    <summary>
      <para>Describes a query.</para>
      <para>
        Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d11_3/ns-d3d11_3-d3d11_query_desc1" />
      </para>
    </summary>
  </member>
  <member name="D3D11_QUERY_DESC1::Query">
    <summary>
      A <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ne-d3d11-d3d11_query">D3D11_QUERY</a>-typed value that specifies the type of query.
    </summary>
  </member>
  <member name="D3D11_QUERY_DESC1::MiscFlags">
    <summary>
      A combination of <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ne-d3d11-d3d11_query_misc_flag">D3D11_QUERY_MISC_FLAG</a>-typed values that are combined by using a bitwise OR operation. The resulting value specifies query behavior.
    </summary>
  </member>
  <member name="D3D11_QUERY_DESC1::ContextType">
    <summary>
      A <a href="https://docs.microsoft.com/windows/desktop/api/d3d11_3/ne-d3d11_3-d3d11_context_type">D3D11_CONTEXT_TYPE</a>-typed value that specifies the context for the query.
    </summary>
  </member>
  <member name="ID3D11ShaderTraceFactory">
    <summary>
      <para>An ID3D11ShaderTraceFactory interface implements a method for generating shader trace information objects.</para>
      <para>
        Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d11shadertracing/nn-d3d11shadertracing-id3d11shadertracefactory" />
      </para>
    </summary>
  </member>
  <member name="ID3D11ShaderReflectionConstantBuffer::GetDesc">
    <summary>
      <para>Get a constant-buffer description.</para>
      <para>
        Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d11shader/nf-d3d11shader-id3d11shaderreflectionconstantbuffer-getdesc" />
      </para>
      <param name="pDesc">
        A pointer to a <a href="https://docs.microsoft.com/windows/desktop/api/d3d11shader/ns-d3d11shader-d3d11_shader_buffer_desc">D3D11_SHADER_BUFFER_DESC</a>, which represents a shader-buffer description.
      </param>
    </summary>
  </member>
  <member name="ID3D11DeviceContext::GSSetShaderResources">
    <summary>
      <para>Bind an array of shader resources to the geometry shader stage.</para>
      <para>
        Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d11/nf-d3d11-id3d11devicecontext-gssetshaderresources" />
      </para>
      <param name="StartSlot">Index into the device's zero-based array to begin setting shader resources to (ranges from 0 to D3D11_COMMONSHADER_INPUT_RESOURCE_SLOT_COUNT - 1).</param>
      <param name="NumViews">Number of shader resources to set. Up to a maximum of 128 slots are available for shader resources(ranges from 0 to D3D11_COMMONSHADER_INPUT_RESOURCE_SLOT_COUNT - StartSlot).</param>
      <param name="ppShaderResourceViews">
        Array of <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nn-d3d11-id3d11shaderresourceview">shader resource view</a> interfaces to set to the device.
      </param>
    </summary>
  </member>
  <member name="D3D11_RASTERIZER_DESC2">
    <summary>
      <para>Describes rasterizer state.</para>
      <para>
        Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d11_3/ns-d3d11_3-d3d11_rasterizer_desc2" />
      </para>
    </summary>
  </member>
  <member name="D3D11_RASTERIZER_DESC2::FillMode">
    <summary>
      A <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ne-d3d11-d3d11_fill_mode">D3D11_FILL_MODE</a>-typed value that determines the fill mode to use when rendering.
    </summary>
  </member>
  <member name="D3D11_RASTERIZER_DESC2::CullMode">
    <summary>
      A <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ne-d3d11-d3d11_cull_mode">D3D11_CULL_MODE</a>-typed value that indicates that triangles facing the specified direction are not drawn.
    </summary>
  </member>
  <member name="D3D11_RASTERIZER_DESC2::FrontCounterClockwise">
    <summary>
      Specifies whether a triangle is front- or back-facing. If <b>TRUE</b>, a triangle will be considered front-facing if its vertices are counter-clockwise on the render target and considered back-facing if they are clockwise. If <b>FALSE</b>, the opposite is true.
    </summary>
  </member>
  <member name="D3D11_RASTERIZER_DESC2::DepthBias">
    <summary>
      Depth value added to a given pixel. For info about depth bias, see <a href="https://docs.microsoft.com/windows/desktop/direct3d11/d3d10-graphics-programming-guide-output-merger-stage-depth-bias">Depth Bias</a>.
    </summary>
  </member>
  <member name="D3D11_RASTERIZER_DESC2::DepthBiasClamp">
    <summary>
      Maximum depth bias of a pixel. For info about depth bias, see <a href="https://docs.microsoft.com/windows/desktop/direct3d11/d3d10-graphics-programming-guide-output-merger-stage-depth-bias">Depth Bias</a>.
    </summary>
  </member>
  <member name="D3D11_RASTERIZER_DESC2::SlopeScaledDepthBias">
    <summary>
      Scalar on a given pixel's slope. For info about depth bias, see <a href="https://docs.microsoft.com/windows/desktop/direct3d11/d3d10-graphics-programming-guide-output-merger-stage-depth-bias">Depth Bias</a>.
    </summary>
  </member>
  <member name="D3D11_RASTERIZER_DESC2::DepthClipEnable">
    <summary>
      Specifies whether to enable clipping based on distance.

      The hardware always performs x and y clipping of rasterized coordinates. When <b>DepthClipEnable</b> is set to the default–<b>TRUE</b>, the hardware also clips the z value (that is, the hardware performs the last step of the following algorithm).

      <pre class="syntax" xml:space="preserve"><code>
0 &lt; w
-w &lt;= x &lt;= w (or arbitrarily wider range if implementation uses a guard band to reduce clipping burden)
-w &lt;= y &lt;= w (or arbitrarily wider range if implementation uses a guard band to reduce clipping burden)
0 &lt;= z &lt;= w
</code></pre>
      When you set <b>DepthClipEnable</b> to <b>FALSE</b>, the hardware skips the z clipping (that is, the last step in the preceding algorithm). However, the hardware still performs the "0 &lt; w" clipping. When z clipping is disabled, improper depth ordering at the pixel level might result. However, when z clipping is disabled, stencil shadow implementations are simplified. In other words, you can avoid complex special-case handling for geometry that goes beyond the back clipping plane.
    </summary>
  </member>
  <member name="D3D11_RASTERIZER_DESC2::ScissorEnable">
    <summary>Specifies whether to enable scissor-rectangle culling. All pixels outside an active scissor rectangle are culled.</summary>
  </member>
  <member name="D3D11_RASTERIZER_DESC2::MultisampleEnable">
    <summary>
      Specifies whether to use the quadrilateral or alpha line anti-aliasing algorithm on multisample antialiasing (MSAA) render targets. Set to <b>TRUE</b> to use the quadrilateral line anti-aliasing algorithm and to <b>FALSE</b> to use the alpha line anti-aliasing algorithm. For more info about this member, see Remarks.
    </summary>
  </member>
  <member name="D3D11_RASTERIZER_DESC2::AntialiasedLineEnable">
    <summary>
      Specifies whether to enable line antialiasing; only applies if doing line drawing and <b>MultisampleEnable</b> is <b>FALSE</b>. For more info about this member, see Remarks.
    </summary>
  </member>
  <member name="D3D11_RASTERIZER_DESC2::ForcedSampleCount">
    <summary>
      The sample count that is forced while UAV rendering or rasterizing. Valid values are 0, 1, 2, 4, 8, and optionally 16. 0 indicates that the sample count is not forced.

      <div class="alert">
        <b>Note</b>  If you want to render with <b>ForcedSampleCount</b> set to 1 or greater, you must follow these guidelines:

        <ul>
          <li>Don't bind depth-stencil views.</li>
          <li>Disable depth testing.</li>
          <li>Ensure the shader doesn't output depth.</li>
          <li>
            If you have any render-target views bound (<a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ne-d3d11-d3d11_bind_flag">D3D11_BIND_RENDER_TARGET</a>) and <b>ForcedSampleCount</b> is greater than 1, ensure that every render target has only a single sample.
          </li>
          <li>
            Don't operate the shader at sample frequency. Therefore, <a href="https://docs.microsoft.com/windows/desktop/api/d3d11shader/nf-d3d11shader-id3d11shaderreflection-issamplefrequencyshader">ID3D11ShaderReflection::IsSampleFrequencyShader</a> returns <b>FALSE</b>.
          </li>
        </ul>Otherwise, rendering behavior is undefined. For info about how to configure depth-stencil, see <a href="https://docs.microsoft.com/windows/desktop/direct3d11/d3d10-graphics-programming-guide-depth-stencil">Configuring Depth-Stencil Functionality</a>.
      </div>
      <div> </div>
    </summary>
  </member>
  <member name="D3D11_RASTERIZER_DESC2::ConservativeRaster">
    <summary>
      A <a href="https://docs.microsoft.com/windows/desktop/api/d3d11_3/ne-d3d11_3-d3d11_conservative_rasterization_mode">D3D11_CONSERVATIVE_RASTERIZATION_MODE</a>-typed value that identifies whether conservative rasterization is on or off.
    </summary>
  </member>
  <member name="ID3D11InfoQueue::GetBreakOnCategory">
    <summary>
      <para>Get a message category to break on when a message with that category passes through the storage filter.</para>
      <para>
        Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d11sdklayers/nf-d3d11sdklayers-id3d11infoqueue-getbreakoncategory" />
      </para>
      <param name="Category">
        Message category to break on (see <a href="https://docs.microsoft.com/windows/desktop/api/d3d11sdklayers/ne-d3d11sdklayers-d3d11_message_category">D3D11_MESSAGE_CATEGORY</a>).
      </param>
    </summary>
  </member>
  <member name="D3D11_TRACE_GS_INPUT_PRIMITIVE">
    <summary>
      <para>Identifies the type of geometry shader input primitive.</para>
      <para>
        Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d11shadertracing/ne-d3d11shadertracing-d3d11_trace_gs_input_primitive" />
      </para>
    </summary>
  </member>
  <member name="D3D11_TRACE_GS_INPUT_PRIMITIVE::D3D11_TRACE_GS_INPUT_PRIMITIVE_UNDEFINED">
    <summary>Identifies the geometry shader input primitive as undefined.</summary>
  </member>
  <member name="D3D11_TRACE_GS_INPUT_PRIMITIVE::D3D11_TRACE_GS_INPUT_PRIMITIVE_POINT">
    <summary>Identifies the geometry shader input primitive as a point.</summary>
  </member>
  <member name="D3D11_TRACE_GS_INPUT_PRIMITIVE::D3D11_TRACE_GS_INPUT_PRIMITIVE_LINE">
    <summary>Identifies the geometry shader input primitive as a line.</summary>
  </member>
  <member name="D3D11_TRACE_GS_INPUT_PRIMITIVE::D3D11_TRACE_GS_INPUT_PRIMITIVE_TRIANGLE">
    <summary>Identifies the geometry shader input primitive as a triangle.</summary>
  </member>
  <member name="D3D11_TRACE_GS_INPUT_PRIMITIVE::D3D11_TRACE_GS_INPUT_PRIMITIVE_LINE_ADJ">
    <summary>Identifies the geometry shader input primitive as an adjacent line.</summary>
  </member>
  <member name="D3D11_TRACE_GS_INPUT_PRIMITIVE::D3D11_TRACE_GS_INPUT_PRIMITIVE_TRIANGLE_ADJ">
    <summary>Identifies the geometry shader input primitive as an adjacent triangle.</summary>
  </member>
  <member name="ID3D11DeviceContext3">
    <summary>
      <para>The device context interface represents a device context; it is used to render commands. ID3D11DeviceContext3 adds new methods to those in ID3D11DeviceContext2.</para>
      <para>
        Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d11_3/nn-d3d11_3-id3d11devicecontext3" />
      </para>
    </summary>
  </member>
  <member name="ID3D11InfoQueue::SetBreakOnSeverity">
    <summary>
      <para>Set a message severity level to break on when a message with that severity level passes through the storage filter.</para>
      <para>
        Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d11sdklayers/nf-d3d11sdklayers-id3d11infoqueue-setbreakonseverity" />
      </para>
      <param name="Severity">
        A <a href="https://docs.microsoft.com/windows/desktop/api/d3d11sdklayers/ne-d3d11sdklayers-d3d11_message_severity">D3D11_MESSAGE_SEVERITY</a>, which represents a message severity level to break on.
      </param>
      <param name="bEnable">Turns this breaking condition on or off (true for on, false for off).</param>
    </summary>
  </member>
  <member name="ID3D11ModuleInstance::BindUnorderedAccessViewByName">
    <summary>
      <para>Rebinds an unordered access view (UAV) by name to destination slots.</para>
      <para>
        Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d11shader/nf-d3d11shader-id3d11moduleinstance-bindunorderedaccessviewbyname" />
      </para>
      <param name="pName">The name of the UAV for rebinding.</param>
      <param name="uDstSlot">The first destination slot number for rebinding.</param>
      <param name="uCount">The number of slots for rebinding.</param>
    </summary>
  </member>
  <member name="D3D11_RASTERIZER_DESC1">
    <summary>
      <para>Describes rasterizer state.</para>
      <para>
        Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d11_1/ns-d3d11_1-d3d11_rasterizer_desc1" />
      </para>
    </summary>
  </member>
  <member name="D3D11_RASTERIZER_DESC1::FillMode">
    <summary>Determines the fill mode to use when rendering.</summary>
  </member>
  <member name="D3D11_RASTERIZER_DESC1::CullMode">
    <summary>Indicates that triangles facing the specified direction are not drawn.</summary>
  </member>
  <member name="D3D11_RASTERIZER_DESC1::FrontCounterClockwise">
    <summary>
      Specifies whether a triangle is front- or back-facing. If <b>TRUE</b>, a triangle will be considered front-facing if its vertices are counter-clockwise on the render target and considered back-facing if they are clockwise. If <b>FALSE</b>, the opposite is true.
    </summary>
  </member>
  <member name="D3D11_RASTERIZER_DESC1::DepthBias">
    <summary>
      Depth value added to a given pixel. For info about depth bias, see <a href="https://docs.microsoft.com/windows/desktop/direct3d11/d3d10-graphics-programming-guide-output-merger-stage-depth-bias">Depth Bias</a>.
    </summary>
  </member>
  <member name="D3D11_RASTERIZER_DESC1::DepthBiasClamp">
    <summary>
      Maximum depth bias of a pixel. For info about depth bias, see <a href="https://docs.microsoft.com/windows/desktop/direct3d11/d3d10-graphics-programming-guide-output-merger-stage-depth-bias">Depth Bias</a>.
    </summary>
  </member>
  <member name="D3D11_RASTERIZER_DESC1::SlopeScaledDepthBias">
    <summary>
      Scalar on a given pixel's slope. For info about depth bias, see <a href="https://docs.microsoft.com/windows/desktop/direct3d11/d3d10-graphics-programming-guide-output-merger-stage-depth-bias">Depth Bias</a>.
    </summary>
  </member>
  <member name="D3D11_RASTERIZER_DESC1::DepthClipEnable">
    <summary>
      Specifies whether to enable clipping based on distance.

      The hardware always performs x and y clipping of rasterized coordinates. When <b>DepthClipEnable</b> is set to the default–<b>TRUE</b>, the hardware also clips the z value (that is, the hardware performs the last step of the following algorithm).


      <pre class="syntax" xml:space="preserve"><code>
0 &lt; w
-w &lt;= x &lt;= w (or arbitrarily wider range if implementation uses a guard band to reduce clipping burden)
-w &lt;= y &lt;= w (or arbitrarily wider range if implementation uses a guard band to reduce clipping burden)
0 &lt;= z &lt;= w
</code></pre>
      When you set <b>DepthClipEnable</b> to <b>FALSE</b>, the hardware skips the z clipping (that is, the last step in the preceding algorithm). However, the hardware still performs the "0 &lt; w" clipping. When z clipping is disabled, improper depth ordering at the pixel level might result. However, when z clipping is disabled, stencil shadow implementations are simplified. In other words, you can avoid complex special-case handling for geometry that goes beyond the back clipping plane.
    </summary>
  </member>
  <member name="D3D11_RASTERIZER_DESC1::ScissorEnable">
    <summary>Specifies whether to enable scissor-rectangle culling. All pixels outside an active scissor rectangle are culled.</summary>
  </member>
  <member name="D3D11_RASTERIZER_DESC1::MultisampleEnable">
    <summary>
      Specifies whether to use the quadrilateral or alpha line anti-aliasing algorithm on multisample antialiasing (MSAA) render targets. Set to <b>TRUE</b> to use the quadrilateral line anti-aliasing algorithm and to <b>FALSE</b> to use the alpha line anti-aliasing algorithm. For more info about this member, see Remarks.
    </summary>
  </member>
  <member name="D3D11_RASTERIZER_DESC1::AntialiasedLineEnable">
    <summary>
      Specifies whether to enable line antialiasing; only applies if doing line drawing and <b>MultisampleEnable</b> is <b>FALSE</b>. For more info about this member, see Remarks.
    </summary>
  </member>
  <member name="D3D11_RASTERIZER_DESC1::ForcedSampleCount">
    <summary>
      The sample count that is forced while UAV rendering or rasterizing. Valid values are 0, 1, 2, 4, 8, and optionally 16. 0 indicates that the sample count is not forced.

      <div class="alert">
        <b>Note</b>  If you want to render with <b>ForcedSampleCount</b> set to 1 or greater, you must follow these guidelines:

        <ul>
          <li>Don't bind depth-stencil views.</li>
          <li>Disable depth testing.</li>
          <li>Ensure the shader doesn't output depth.</li>
          <li>
            If you have any render-target views bound (<a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ne-d3d11-d3d11_bind_flag">D3D11_BIND_RENDER_TARGET</a>) and <b>ForcedSampleCount</b> is greater than 1, ensure that every render target has only a single sample.
          </li>
          <li>
            Don't operate the shader at sample frequency. Therefore, <a href="https://docs.microsoft.com/windows/desktop/api/d3d11shader/nf-d3d11shader-id3d11shaderreflection-issamplefrequencyshader">ID3D11ShaderReflection::IsSampleFrequencyShader</a> returns <b>FALSE</b>.
          </li>
        </ul>Otherwise, rendering behavior is undefined. For info about how to configure depth-stencil, see <a href="https://docs.microsoft.com/windows/desktop/direct3d11/d3d10-graphics-programming-guide-depth-stencil">Configuring Depth-Stencil Functionality</a>.
      </div>
      <div> </div>
    </summary>
  </member>
  <member name="ID3D11InfoQueue::AddApplicationMessage">
    <summary>
      <para>Add a user-defined message to the message queue and send that message to debug output.</para>
      <para>
        Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d11sdklayers/nf-d3d11sdklayers-id3d11infoqueue-addapplicationmessage" />
      </para>
      <param name="Severity">
        Severity of a message (see <a href="https://docs.microsoft.com/windows/desktop/api/d3d11sdklayers/ne-d3d11sdklayers-d3d11_message_severity">D3D11_MESSAGE_SEVERITY</a>).
      </param>
      <param name="pDescription">Message string.</param>
    </summary>
  </member>
</doc>
