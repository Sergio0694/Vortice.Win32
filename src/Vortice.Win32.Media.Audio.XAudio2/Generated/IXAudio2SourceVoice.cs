// ------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
// ------------------------------------------------------------------------------

namespace Win32.Media.Audio.XAudio2;

/// <include file='../XAudio2.xml' path='doc/member[@name="IXAudio2SourceVoice"]/*' />
/// <unmanaged>IXAudio2SourceVoice</unmanaged>
[NativeTypeName("struct IXAudio2SourceVoice : IXAudio2Voice")]
[NativeInheritance("IXAudio2Voice")]
public unsafe partial struct IXAudio2SourceVoice : IXAudio2SourceVoice.Interface
{
	public void** lpVtbl;

	/// <inheritdoc cref="IXAudio2Voice.GetVoiceDetails" />
	[MethodImpl(MethodImplOptions.AggressiveInlining)]
	[VtblIndex(0)]
	public void GetVoiceDetails(VoiceDetails* pVoiceDetails)
	{
#if NET6_0_OR_GREATER
		((delegate* unmanaged<IXAudio2SourceVoice*, VoiceDetails*, void>)(lpVtbl[0]))((IXAudio2SourceVoice*)Unsafe.AsPointer(ref this), pVoiceDetails);
#else
		((delegate* unmanaged[Stdcall]<IXAudio2SourceVoice*, VoiceDetails*, void>)(lpVtbl[0]))((IXAudio2SourceVoice*)Unsafe.AsPointer(ref this), pVoiceDetails);
#endif
	}

	/// <inheritdoc cref="IXAudio2Voice.SetOutputVoices" />
	[MethodImpl(MethodImplOptions.AggressiveInlining)]
	[VtblIndex(1)]
	public HResult SetOutputVoices(VoiceSends* pSendList)
	{
#if NET6_0_OR_GREATER
		return ((delegate* unmanaged<IXAudio2SourceVoice*, VoiceSends*, int>)(lpVtbl[1]))((IXAudio2SourceVoice*)Unsafe.AsPointer(ref this), pSendList);
#else
		return ((delegate* unmanaged[Stdcall]<IXAudio2SourceVoice*, VoiceSends*, int>)(lpVtbl[1]))((IXAudio2SourceVoice*)Unsafe.AsPointer(ref this), pSendList);
#endif
	}

	/// <inheritdoc cref="IXAudio2Voice.SetEffectChain" />
	[MethodImpl(MethodImplOptions.AggressiveInlining)]
	[VtblIndex(2)]
	public HResult SetEffectChain(EffectChain* pEffectChain)
	{
#if NET6_0_OR_GREATER
		return ((delegate* unmanaged<IXAudio2SourceVoice*, EffectChain*, int>)(lpVtbl[2]))((IXAudio2SourceVoice*)Unsafe.AsPointer(ref this), pEffectChain);
#else
		return ((delegate* unmanaged[Stdcall]<IXAudio2SourceVoice*, EffectChain*, int>)(lpVtbl[2]))((IXAudio2SourceVoice*)Unsafe.AsPointer(ref this), pEffectChain);
#endif
	}

	/// <inheritdoc cref="IXAudio2Voice.EnableEffect" />
	[MethodImpl(MethodImplOptions.AggressiveInlining)]
	[VtblIndex(3)]
	public HResult EnableEffect(uint EffectIndex, uint OperationSet)
	{
#if NET6_0_OR_GREATER
		return ((delegate* unmanaged<IXAudio2SourceVoice*, uint, uint, int>)(lpVtbl[3]))((IXAudio2SourceVoice*)Unsafe.AsPointer(ref this), EffectIndex, OperationSet);
#else
		return ((delegate* unmanaged[Stdcall]<IXAudio2SourceVoice*, uint, uint, int>)(lpVtbl[3]))((IXAudio2SourceVoice*)Unsafe.AsPointer(ref this), EffectIndex, OperationSet);
#endif
	}

	/// <inheritdoc cref="IXAudio2Voice.DisableEffect" />
	[MethodImpl(MethodImplOptions.AggressiveInlining)]
	[VtblIndex(4)]
	public HResult DisableEffect(uint EffectIndex, uint OperationSet)
	{
#if NET6_0_OR_GREATER
		return ((delegate* unmanaged<IXAudio2SourceVoice*, uint, uint, int>)(lpVtbl[4]))((IXAudio2SourceVoice*)Unsafe.AsPointer(ref this), EffectIndex, OperationSet);
#else
		return ((delegate* unmanaged[Stdcall]<IXAudio2SourceVoice*, uint, uint, int>)(lpVtbl[4]))((IXAudio2SourceVoice*)Unsafe.AsPointer(ref this), EffectIndex, OperationSet);
#endif
	}

	/// <inheritdoc cref="IXAudio2Voice.GetEffectState" />
	[MethodImpl(MethodImplOptions.AggressiveInlining)]
	[VtblIndex(5)]
	public void GetEffectState(uint EffectIndex, Bool32* pEnabled)
	{
#if NET6_0_OR_GREATER
		((delegate* unmanaged<IXAudio2SourceVoice*, uint, Bool32*, void>)(lpVtbl[5]))((IXAudio2SourceVoice*)Unsafe.AsPointer(ref this), EffectIndex, pEnabled);
#else
		((delegate* unmanaged[Stdcall]<IXAudio2SourceVoice*, uint, Bool32*, void>)(lpVtbl[5]))((IXAudio2SourceVoice*)Unsafe.AsPointer(ref this), EffectIndex, pEnabled);
#endif
	}

	/// <inheritdoc cref="IXAudio2Voice.SetEffectParameters" />
	[MethodImpl(MethodImplOptions.AggressiveInlining)]
	[VtblIndex(6)]
	public HResult SetEffectParameters(uint EffectIndex, void* pParameters, uint ParametersByteSize, uint OperationSet)
	{
#if NET6_0_OR_GREATER
		return ((delegate* unmanaged<IXAudio2SourceVoice*, uint, void*, uint, uint, int>)(lpVtbl[6]))((IXAudio2SourceVoice*)Unsafe.AsPointer(ref this), EffectIndex, pParameters, ParametersByteSize, OperationSet);
#else
		return ((delegate* unmanaged[Stdcall]<IXAudio2SourceVoice*, uint, void*, uint, uint, int>)(lpVtbl[6]))((IXAudio2SourceVoice*)Unsafe.AsPointer(ref this), EffectIndex, pParameters, ParametersByteSize, OperationSet);
#endif
	}

	/// <inheritdoc cref="IXAudio2Voice.GetEffectParameters" />
	[MethodImpl(MethodImplOptions.AggressiveInlining)]
	[VtblIndex(7)]
	public HResult GetEffectParameters(uint EffectIndex, void* pParameters, uint ParametersByteSize)
	{
#if NET6_0_OR_GREATER
		return ((delegate* unmanaged<IXAudio2SourceVoice*, uint, void*, uint, int>)(lpVtbl[7]))((IXAudio2SourceVoice*)Unsafe.AsPointer(ref this), EffectIndex, pParameters, ParametersByteSize);
#else
		return ((delegate* unmanaged[Stdcall]<IXAudio2SourceVoice*, uint, void*, uint, int>)(lpVtbl[7]))((IXAudio2SourceVoice*)Unsafe.AsPointer(ref this), EffectIndex, pParameters, ParametersByteSize);
#endif
	}

	/// <inheritdoc cref="IXAudio2Voice.SetFilterParameters" />
	[MethodImpl(MethodImplOptions.AggressiveInlining)]
	[VtblIndex(8)]
	public HResult SetFilterParameters(FilterParameters* pParameters, uint OperationSet)
	{
#if NET6_0_OR_GREATER
		return ((delegate* unmanaged<IXAudio2SourceVoice*, FilterParameters*, uint, int>)(lpVtbl[8]))((IXAudio2SourceVoice*)Unsafe.AsPointer(ref this), pParameters, OperationSet);
#else
		return ((delegate* unmanaged[Stdcall]<IXAudio2SourceVoice*, FilterParameters*, uint, int>)(lpVtbl[8]))((IXAudio2SourceVoice*)Unsafe.AsPointer(ref this), pParameters, OperationSet);
#endif
	}

	/// <inheritdoc cref="IXAudio2Voice.GetFilterParameters" />
	[MethodImpl(MethodImplOptions.AggressiveInlining)]
	[VtblIndex(9)]
	public void GetFilterParameters(FilterParameters* pParameters)
	{
#if NET6_0_OR_GREATER
		((delegate* unmanaged<IXAudio2SourceVoice*, FilterParameters*, void>)(lpVtbl[9]))((IXAudio2SourceVoice*)Unsafe.AsPointer(ref this), pParameters);
#else
		((delegate* unmanaged[Stdcall]<IXAudio2SourceVoice*, FilterParameters*, void>)(lpVtbl[9]))((IXAudio2SourceVoice*)Unsafe.AsPointer(ref this), pParameters);
#endif
	}

	/// <inheritdoc cref="IXAudio2Voice.SetOutputFilterParameters" />
	[MethodImpl(MethodImplOptions.AggressiveInlining)]
	[VtblIndex(10)]
	public HResult SetOutputFilterParameters(IXAudio2Voice* pDestinationVoice, FilterParameters* pParameters, uint OperationSet)
	{
#if NET6_0_OR_GREATER
		return ((delegate* unmanaged<IXAudio2SourceVoice*, IXAudio2Voice*, FilterParameters*, uint, int>)(lpVtbl[10]))((IXAudio2SourceVoice*)Unsafe.AsPointer(ref this), pDestinationVoice, pParameters, OperationSet);
#else
		return ((delegate* unmanaged[Stdcall]<IXAudio2SourceVoice*, IXAudio2Voice*, FilterParameters*, uint, int>)(lpVtbl[10]))((IXAudio2SourceVoice*)Unsafe.AsPointer(ref this), pDestinationVoice, pParameters, OperationSet);
#endif
	}

	/// <inheritdoc cref="IXAudio2Voice.GetOutputFilterParameters" />
	[MethodImpl(MethodImplOptions.AggressiveInlining)]
	[VtblIndex(11)]
	public void GetOutputFilterParameters(IXAudio2Voice* pDestinationVoice, FilterParameters* pParameters)
	{
#if NET6_0_OR_GREATER
		((delegate* unmanaged<IXAudio2SourceVoice*, IXAudio2Voice*, FilterParameters*, void>)(lpVtbl[11]))((IXAudio2SourceVoice*)Unsafe.AsPointer(ref this), pDestinationVoice, pParameters);
#else
		((delegate* unmanaged[Stdcall]<IXAudio2SourceVoice*, IXAudio2Voice*, FilterParameters*, void>)(lpVtbl[11]))((IXAudio2SourceVoice*)Unsafe.AsPointer(ref this), pDestinationVoice, pParameters);
#endif
	}

	/// <inheritdoc cref="IXAudio2Voice.SetVolume" />
	[MethodImpl(MethodImplOptions.AggressiveInlining)]
	[VtblIndex(12)]
	public HResult SetVolume(float Volume, uint OperationSet)
	{
#if NET6_0_OR_GREATER
		return ((delegate* unmanaged<IXAudio2SourceVoice*, float, uint, int>)(lpVtbl[12]))((IXAudio2SourceVoice*)Unsafe.AsPointer(ref this), Volume, OperationSet);
#else
		return ((delegate* unmanaged[Stdcall]<IXAudio2SourceVoice*, float, uint, int>)(lpVtbl[12]))((IXAudio2SourceVoice*)Unsafe.AsPointer(ref this), Volume, OperationSet);
#endif
	}

	/// <inheritdoc cref="IXAudio2Voice.GetVolume" />
	[MethodImpl(MethodImplOptions.AggressiveInlining)]
	[VtblIndex(13)]
	public void GetVolume(float* pVolume)
	{
#if NET6_0_OR_GREATER
		((delegate* unmanaged<IXAudio2SourceVoice*, float*, void>)(lpVtbl[13]))((IXAudio2SourceVoice*)Unsafe.AsPointer(ref this), pVolume);
#else
		((delegate* unmanaged[Stdcall]<IXAudio2SourceVoice*, float*, void>)(lpVtbl[13]))((IXAudio2SourceVoice*)Unsafe.AsPointer(ref this), pVolume);
#endif
	}

	/// <inheritdoc cref="IXAudio2Voice.SetChannelVolumes" />
	[MethodImpl(MethodImplOptions.AggressiveInlining)]
	[VtblIndex(14)]
	public HResult SetChannelVolumes(uint Channels, float* pVolumes, uint OperationSet)
	{
#if NET6_0_OR_GREATER
		return ((delegate* unmanaged<IXAudio2SourceVoice*, uint, float*, uint, int>)(lpVtbl[14]))((IXAudio2SourceVoice*)Unsafe.AsPointer(ref this), Channels, pVolumes, OperationSet);
#else
		return ((delegate* unmanaged[Stdcall]<IXAudio2SourceVoice*, uint, float*, uint, int>)(lpVtbl[14]))((IXAudio2SourceVoice*)Unsafe.AsPointer(ref this), Channels, pVolumes, OperationSet);
#endif
	}

	/// <inheritdoc cref="IXAudio2Voice.GetChannelVolumes" />
	[MethodImpl(MethodImplOptions.AggressiveInlining)]
	[VtblIndex(15)]
	public void GetChannelVolumes(uint Channels, float* pVolumes)
	{
#if NET6_0_OR_GREATER
		((delegate* unmanaged<IXAudio2SourceVoice*, uint, float*, void>)(lpVtbl[15]))((IXAudio2SourceVoice*)Unsafe.AsPointer(ref this), Channels, pVolumes);
#else
		((delegate* unmanaged[Stdcall]<IXAudio2SourceVoice*, uint, float*, void>)(lpVtbl[15]))((IXAudio2SourceVoice*)Unsafe.AsPointer(ref this), Channels, pVolumes);
#endif
	}

	/// <inheritdoc cref="IXAudio2Voice.SetOutputMatrix" />
	[MethodImpl(MethodImplOptions.AggressiveInlining)]
	[VtblIndex(16)]
	public HResult SetOutputMatrix(IXAudio2Voice* pDestinationVoice, uint SourceChannels, uint DestinationChannels, float* pLevelMatrix, uint OperationSet)
	{
#if NET6_0_OR_GREATER
		return ((delegate* unmanaged<IXAudio2SourceVoice*, IXAudio2Voice*, uint, uint, float*, uint, int>)(lpVtbl[16]))((IXAudio2SourceVoice*)Unsafe.AsPointer(ref this), pDestinationVoice, SourceChannels, DestinationChannels, pLevelMatrix, OperationSet);
#else
		return ((delegate* unmanaged[Stdcall]<IXAudio2SourceVoice*, IXAudio2Voice*, uint, uint, float*, uint, int>)(lpVtbl[16]))((IXAudio2SourceVoice*)Unsafe.AsPointer(ref this), pDestinationVoice, SourceChannels, DestinationChannels, pLevelMatrix, OperationSet);
#endif
	}

	/// <inheritdoc cref="IXAudio2Voice.GetOutputMatrix" />
	[MethodImpl(MethodImplOptions.AggressiveInlining)]
	[VtblIndex(17)]
	public void GetOutputMatrix(IXAudio2Voice* pDestinationVoice, uint SourceChannels, uint DestinationChannels, float* pLevelMatrix)
	{
#if NET6_0_OR_GREATER
		((delegate* unmanaged<IXAudio2SourceVoice*, IXAudio2Voice*, uint, uint, float*, void>)(lpVtbl[17]))((IXAudio2SourceVoice*)Unsafe.AsPointer(ref this), pDestinationVoice, SourceChannels, DestinationChannels, pLevelMatrix);
#else
		((delegate* unmanaged[Stdcall]<IXAudio2SourceVoice*, IXAudio2Voice*, uint, uint, float*, void>)(lpVtbl[17]))((IXAudio2SourceVoice*)Unsafe.AsPointer(ref this), pDestinationVoice, SourceChannels, DestinationChannels, pLevelMatrix);
#endif
	}

	/// <inheritdoc cref="IXAudio2Voice.DestroyVoice" />
	[MethodImpl(MethodImplOptions.AggressiveInlining)]
	[VtblIndex(18)]
	public void DestroyVoice()
	{
#if NET6_0_OR_GREATER
		((delegate* unmanaged<IXAudio2SourceVoice*, void>)(lpVtbl[18]))((IXAudio2SourceVoice*)Unsafe.AsPointer(ref this));
#else
		((delegate* unmanaged[Stdcall]<IXAudio2SourceVoice*, void>)(lpVtbl[18]))((IXAudio2SourceVoice*)Unsafe.AsPointer(ref this));
#endif
	}

	/// <include file='../XAudio2.xml' path='doc/member[@name="IXAudio2SourceVoice::Start"]/*' />
	[MethodImpl(MethodImplOptions.AggressiveInlining)]
	[VtblIndex(19)]
	public HResult Start(uint Flags, uint OperationSet)
	{
#if NET6_0_OR_GREATER
		return ((delegate* unmanaged<IXAudio2SourceVoice*, uint, uint, int>)(lpVtbl[19]))((IXAudio2SourceVoice*)Unsafe.AsPointer(ref this), Flags, OperationSet);
#else
		return ((delegate* unmanaged[Stdcall]<IXAudio2SourceVoice*, uint, uint, int>)(lpVtbl[19]))((IXAudio2SourceVoice*)Unsafe.AsPointer(ref this), Flags, OperationSet);
#endif
	}

	/// <include file='../XAudio2.xml' path='doc/member[@name="IXAudio2SourceVoice::Stop"]/*' />
	[MethodImpl(MethodImplOptions.AggressiveInlining)]
	[VtblIndex(20)]
	public HResult Stop(uint Flags, uint OperationSet)
	{
#if NET6_0_OR_GREATER
		return ((delegate* unmanaged<IXAudio2SourceVoice*, uint, uint, int>)(lpVtbl[20]))((IXAudio2SourceVoice*)Unsafe.AsPointer(ref this), Flags, OperationSet);
#else
		return ((delegate* unmanaged[Stdcall]<IXAudio2SourceVoice*, uint, uint, int>)(lpVtbl[20]))((IXAudio2SourceVoice*)Unsafe.AsPointer(ref this), Flags, OperationSet);
#endif
	}

	/// <include file='../XAudio2.xml' path='doc/member[@name="IXAudio2SourceVoice::SubmitSourceBuffer"]/*' />
	[MethodImpl(MethodImplOptions.AggressiveInlining)]
	[VtblIndex(21)]
	public HResult SubmitSourceBuffer(Buffer* pBuffer, BufferWma* pBufferWMA)
	{
#if NET6_0_OR_GREATER
		return ((delegate* unmanaged<IXAudio2SourceVoice*, Buffer*, BufferWma*, int>)(lpVtbl[21]))((IXAudio2SourceVoice*)Unsafe.AsPointer(ref this), pBuffer, pBufferWMA);
#else
		return ((delegate* unmanaged[Stdcall]<IXAudio2SourceVoice*, Buffer*, BufferWma*, int>)(lpVtbl[21]))((IXAudio2SourceVoice*)Unsafe.AsPointer(ref this), pBuffer, pBufferWMA);
#endif
	}

	/// <include file='../XAudio2.xml' path='doc/member[@name="IXAudio2SourceVoice::FlushSourceBuffers"]/*' />
	[MethodImpl(MethodImplOptions.AggressiveInlining)]
	[VtblIndex(22)]
	public HResult FlushSourceBuffers()
	{
#if NET6_0_OR_GREATER
		return ((delegate* unmanaged<IXAudio2SourceVoice*, int>)(lpVtbl[22]))((IXAudio2SourceVoice*)Unsafe.AsPointer(ref this));
#else
		return ((delegate* unmanaged[Stdcall]<IXAudio2SourceVoice*, int>)(lpVtbl[22]))((IXAudio2SourceVoice*)Unsafe.AsPointer(ref this));
#endif
	}

	/// <include file='../XAudio2.xml' path='doc/member[@name="IXAudio2SourceVoice::Discontinuity"]/*' />
	[MethodImpl(MethodImplOptions.AggressiveInlining)]
	[VtblIndex(23)]
	public HResult Discontinuity()
	{
#if NET6_0_OR_GREATER
		return ((delegate* unmanaged<IXAudio2SourceVoice*, int>)(lpVtbl[23]))((IXAudio2SourceVoice*)Unsafe.AsPointer(ref this));
#else
		return ((delegate* unmanaged[Stdcall]<IXAudio2SourceVoice*, int>)(lpVtbl[23]))((IXAudio2SourceVoice*)Unsafe.AsPointer(ref this));
#endif
	}

	/// <include file='../XAudio2.xml' path='doc/member[@name="IXAudio2SourceVoice::ExitLoop"]/*' />
	[MethodImpl(MethodImplOptions.AggressiveInlining)]
	[VtblIndex(24)]
	public HResult ExitLoop(uint OperationSet)
	{
#if NET6_0_OR_GREATER
		return ((delegate* unmanaged<IXAudio2SourceVoice*, uint, int>)(lpVtbl[24]))((IXAudio2SourceVoice*)Unsafe.AsPointer(ref this), OperationSet);
#else
		return ((delegate* unmanaged[Stdcall]<IXAudio2SourceVoice*, uint, int>)(lpVtbl[24]))((IXAudio2SourceVoice*)Unsafe.AsPointer(ref this), OperationSet);
#endif
	}

	/// <include file='../XAudio2.xml' path='doc/member[@name="IXAudio2SourceVoice::GetState"]/*' />
	[MethodImpl(MethodImplOptions.AggressiveInlining)]
	[VtblIndex(25)]
	public void GetState(VoiceState* pVoiceState, uint Flags)
	{
#if NET6_0_OR_GREATER
		((delegate* unmanaged<IXAudio2SourceVoice*, VoiceState*, uint, void>)(lpVtbl[25]))((IXAudio2SourceVoice*)Unsafe.AsPointer(ref this), pVoiceState, Flags);
#else
		((delegate* unmanaged[Stdcall]<IXAudio2SourceVoice*, VoiceState*, uint, void>)(lpVtbl[25]))((IXAudio2SourceVoice*)Unsafe.AsPointer(ref this), pVoiceState, Flags);
#endif
	}

	/// <include file='../XAudio2.xml' path='doc/member[@name="IXAudio2SourceVoice::SetFrequencyRatio"]/*' />
	[MethodImpl(MethodImplOptions.AggressiveInlining)]
	[VtblIndex(26)]
	public HResult SetFrequencyRatio(float Ratio, uint OperationSet)
	{
#if NET6_0_OR_GREATER
		return ((delegate* unmanaged<IXAudio2SourceVoice*, float, uint, int>)(lpVtbl[26]))((IXAudio2SourceVoice*)Unsafe.AsPointer(ref this), Ratio, OperationSet);
#else
		return ((delegate* unmanaged[Stdcall]<IXAudio2SourceVoice*, float, uint, int>)(lpVtbl[26]))((IXAudio2SourceVoice*)Unsafe.AsPointer(ref this), Ratio, OperationSet);
#endif
	}

	/// <include file='../XAudio2.xml' path='doc/member[@name="IXAudio2SourceVoice::GetFrequencyRatio"]/*' />
	[MethodImpl(MethodImplOptions.AggressiveInlining)]
	[VtblIndex(27)]
	public void GetFrequencyRatio(float* pRatio)
	{
#if NET6_0_OR_GREATER
		((delegate* unmanaged<IXAudio2SourceVoice*, float*, void>)(lpVtbl[27]))((IXAudio2SourceVoice*)Unsafe.AsPointer(ref this), pRatio);
#else
		((delegate* unmanaged[Stdcall]<IXAudio2SourceVoice*, float*, void>)(lpVtbl[27]))((IXAudio2SourceVoice*)Unsafe.AsPointer(ref this), pRatio);
#endif
	}

	/// <include file='../XAudio2.xml' path='doc/member[@name="IXAudio2SourceVoice::SetSourceSampleRate"]/*' />
	[MethodImpl(MethodImplOptions.AggressiveInlining)]
	[VtblIndex(28)]
	public HResult SetSourceSampleRate(uint NewSourceSampleRate)
	{
#if NET6_0_OR_GREATER
		return ((delegate* unmanaged<IXAudio2SourceVoice*, uint, int>)(lpVtbl[28]))((IXAudio2SourceVoice*)Unsafe.AsPointer(ref this), NewSourceSampleRate);
#else
		return ((delegate* unmanaged[Stdcall]<IXAudio2SourceVoice*, uint, int>)(lpVtbl[28]))((IXAudio2SourceVoice*)Unsafe.AsPointer(ref this), NewSourceSampleRate);
#endif
	}

	public interface Interface : IXAudio2Voice.Interface
	{
		[VtblIndex(19)]
		HResult Start(uint Flags, uint OperationSet);

		[VtblIndex(20)]
		HResult Stop(uint Flags, uint OperationSet);

		[VtblIndex(21)]
		HResult SubmitSourceBuffer(Buffer* pBuffer, BufferWma* pBufferWMA);

		[VtblIndex(22)]
		HResult FlushSourceBuffers();

		[VtblIndex(23)]
		HResult Discontinuity();

		[VtblIndex(24)]
		HResult ExitLoop(uint OperationSet);

		[VtblIndex(25)]
		void GetState(VoiceState* pVoiceState, uint Flags);

		[VtblIndex(26)]
		HResult SetFrequencyRatio(float Ratio, uint OperationSet);

		[VtblIndex(27)]
		void GetFrequencyRatio(float* pRatio);

		[VtblIndex(28)]
		HResult SetSourceSampleRate(uint NewSourceSampleRate);
	}
}

